:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-list)).
:- modeb(*,f(+list,-list)).
:- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
:- determination(f/2,cons/3).
:-begin_bg.
%% SAME AS POPPER
body_pred(head/2).
body_pred(tail/2).
body_pred(geq/2).
body_pred(empty/1).
body_pred(even/1).
body_pred(odd/1).
body_pred(one/1).
body_pred(zero/1).
body_pred(decrement/2).

%% FOR METAGOL
body_pred(P/A):-
    current_predicate(modeb/2),
    modeb(P,A).

%% body_pred(P/A)

is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.


%% partition(Pivot,L1,Left,Right)


add_count(f(A),N-f(A)):-
    length(A,N).
add_count(f(A,B),N-f(A,B)):-
    length(A,N).
remove_k(_-V,V).

sort_examples(L1,L2):-
  maplist(add_count,L1,L3),
  keysort(L3,L4),
  maplist(remove_k,L4,L2).

run:-
    findall(A, pos(A), Pos0),
    findall(A, neg(A), Neg0),
    sort_examples(Pos0, Pos),
    sort_examples(Neg0, Neg),
    learn(Pos, Neg).



%% run:-
%%     findall(A, pos(A), Pos),
%%     findall(A, neg(A), Neg),
%%     learn(Pos, Neg).

test:-
    forall(pos(A),test_pos(A)),
    forall(neg(A),test_neg(A)),
    halt.

target(P/A):-
    pos(Atom),!,
    functor(Atom,P,A).

target_exists:-
    target(P/A),
    current_predicate(P/A).

test_pos(A):-
    target_exists,
    call(A),!,
    writeln('acc,1').
test_pos(_):-
    writeln('acc,0').

test_neg(A):-
    target_exists,
    call(A),!,
    writeln('acc,0').
test_neg(_):-
    writeln('acc,1').

:-end_bg.
:-begin_in_pos.
f([92, 12, 8, 29, 50, 13, 78, 29, 15, 2, 70, 10, 23, 5, 1, 2, 90, 14, 59, 37, 5, 19, 30],[92, 92, 92, 92, 12, 8, 29, 50, 13, 78, 29, 15, 2, 70, 10, 23, 5, 1, 2, 90, 14, 59, 37, 5, 19, 30]).
f([49, 3, 78, 40, 38, 64, 44, 51, 4, 50, 52, 39, 1, 95, 101, 85, 67, 57, 92, 62, 86, 16, 31, 24, 66, 72, 59, 91, 56, 71, 50, 42, 15, 56, 84, 17, 22, 63, 66, 84, 76],[49, 49, 49, 49, 3, 78, 40, 38, 64, 44, 51, 4, 50, 52, 39, 1, 95, 101, 85, 67, 57, 92, 62, 86, 16, 31, 24, 66, 72, 59, 91, 56, 71, 50, 42, 15, 56, 84, 17, 22, 63, 66, 84, 76]).
f([13, 69, 41, 17, 22, 18, 38, 74, 96, 88, 45, 12, 32, 81, 48, 59, 67, 4, 69, 67, 8, 72, 15, 14, 59, 79, 83, 26, 56, 32, 48, 69, 56, 38, 8, 6, 84],[13, 13, 13, 13, 69, 41, 17, 22, 18, 38, 74, 96, 88, 45, 12, 32, 81, 48, 59, 67, 4, 69, 67, 8, 72, 15, 14, 59, 79, 83, 26, 56, 32, 48, 69, 56, 38, 8, 6, 84]).
f([63, 31, 48, 68, 32, 68, 80, 92, 8, 58, 40, 72, 96, 84, 98, 76, 14, 38, 9, 34, 46, 47, 84, 26, 48, 6, 92],[63, 63, 63, 63, 31, 48, 68, 32, 68, 80, 92, 8, 58, 40, 72, 96, 84, 98, 76, 14, 38, 9, 34, 46, 47, 84, 26, 48, 6, 92]).
f([100, 63, 91, 16, 29, 16, 51, 9, 83, 73, 77, 38, 46, 47, 12, 58, 66, 36, 93, 39, 59, 97, 61, 30, 15, 77, 44, 77, 48, 57, 92, 22, 93, 33, 36, 39, 50, 49, 34, 21, 12, 17, 94, 77, 86, 74, 13, 49, 9],[100, 100, 100, 100, 63, 91, 16, 29, 16, 51, 9, 83, 73, 77, 38, 46, 47, 12, 58, 66, 36, 93, 39, 59, 97, 61, 30, 15, 77, 44, 77, 48, 57, 92, 22, 93, 33, 36, 39, 50, 49, 34, 21, 12, 17, 94, 77, 86, 74, 13, 49, 9]).
f([96, 15, 77, 73, 58, 60, 58, 74, 61, 35, 64, 79, 64, 90, 83, 53, 36, 25, 68, 48, 14, 64, 50, 77, 8, 21, 73, 85, 65, 62, 25, 50],[96, 96, 96, 96, 15, 77, 73, 58, 60, 58, 74, 61, 35, 64, 79, 64, 90, 83, 53, 36, 25, 68, 48, 14, 64, 50, 77, 8, 21, 73, 85, 65, 62, 25, 50]).
f([24, 11, 63, 69, 31, 11, 11, 29, 17, 93, 9, 90, 100, 68, 2, 79, 48, 52, 71, 75, 20],[24, 24, 24, 24, 11, 63, 69, 31, 11, 11, 29, 17, 93, 9, 90, 100, 68, 2, 79, 48, 52, 71, 75, 20]).
f([33, 30, 43, 95, 59, 68, 88, 13, 37, 93, 44, 34, 88, 29, 51, 28, 16, 29, 91, 72, 90, 42, 99, 65, 81, 97, 50, 100, 97, 75, 40, 31, 62, 71, 41, 65, 31, 85, 57, 33, 31, 90, 63, 4, 88, 63, 95],[33, 33, 33, 33, 30, 43, 95, 59, 68, 88, 13, 37, 93, 44, 34, 88, 29, 51, 28, 16, 29, 91, 72, 90, 42, 99, 65, 81, 97, 50, 100, 97, 75, 40, 31, 62, 71, 41, 65, 31, 85, 57, 33, 31, 90, 63, 4, 88, 63, 95]).
f([50, 6, 63, 78, 82, 40, 79, 42, 38, 52, 96, 74, 73, 27, 30, 22],[50, 50, 50, 50, 6, 63, 78, 82, 40, 79, 42, 38, 52, 96, 74, 73, 27, 30, 22]).
f([87, 37, 50, 15, 6, 11, 68, 100, 22, 47, 45, 20, 44, 9, 62, 58, 1, 77, 81, 59, 22, 1, 82, 82, 37, 59, 19, 63, 41, 11, 82, 9, 17, 18, 3, 19, 25, 93, 7, 69, 91, 49],[87, 87, 87, 87, 37, 50, 15, 6, 11, 68, 100, 22, 47, 45, 20, 44, 9, 62, 58, 1, 77, 81, 59, 22, 1, 82, 82, 37, 59, 19, 63, 41, 11, 82, 9, 17, 18, 3, 19, 25, 93, 7, 69, 91, 49]).
:-end_in_pos.
:-begin_in_neg.
f([20, 4, 1, 20, 18, 25, 97, 97, 68, 30, 74, 90, 99, 45, 45, 75, 85, 10, 71, 93, 36, 88, 74, 65, 31, 41, 101, 41, 61, 89, 25, 83, 37, 34, 11, 12],[20, 4, 1, 20, 18, 25, 97, 97, 68, 30, 74, 90, 99, 45, 45, 75, 85, 10, 71, 93, 36, 88, 74, 65, 31, 41, 101, 41, 61, 89, 25, 83, 37, 34, 11, 12]).
f([62, 13, 87, 23, 73, 52, 83, 36, 29, 57, 84, 33, 90, 87, 20, 86, 56, 32, 98, 12, 87, 74, 6, 88, 15, 63, 71, 28, 96, 33, 9, 10, 50, 74, 32, 32, 86, 16, 88, 76, 11, 13, 80, 6, 39, 46, 43],[62, 13, 87, 23, 73, 52, 83, 36, 29, 57, 84, 33, 90, 87, 20, 86, 56, 32, 98, 12, 87, 74, 6, 88, 15, 63, 71, 28, 96, 33, 9, 10, 50, 74, 32, 32, 86, 16, 88, 76, 11, 13, 80, 6, 39, 46, 43]).
f([100, 52, 3, 56, 63, 19, 67, 23, 22, 11, 85, 12, 51, 41, 100, 54],[100, 52, 3, 56, 63, 19, 67, 23, 22, 11, 85, 12, 51, 41, 100, 54]).
f([62, 91, 10, 29, 93, 47, 77, 73, 54, 33, 25, 31, 94, 19, 56, 91, 34, 20, 48, 54, 12, 29, 12, 32, 42, 29, 99, 74, 61, 80, 81, 25, 72, 20, 38, 7, 4, 24, 40, 78, 62, 23, 12, 29, 72, 92],[62, 91, 10, 29, 93, 47, 77, 73, 54, 33, 25, 31, 94, 19, 56, 91, 34, 20, 48, 54, 12, 29, 12, 32, 42, 29, 99, 74, 61, 80, 81, 25, 72, 20, 38, 7, 4, 24, 40, 78, 62, 23, 12, 29, 72, 92]).
f([73, 19, 5],[73, 19, 5]).
f([90, 81, 26, 75, 82, 81, 74, 21, 51, 38, 33, 100, 70, 95, 4, 21, 14, 65, 100, 83, 20, 96, 72, 31, 47, 82, 38, 88, 53, 96, 52, 8, 47, 49, 47, 30, 34, 78, 14, 68, 100, 73],[90, 81, 26, 75, 82, 81, 74, 21, 51, 38, 33, 100, 70, 95, 4, 21, 14, 65, 100, 83, 20, 96, 72, 31, 47, 82, 38, 88, 53, 96, 52, 8, 47, 49, 47, 30, 34, 78, 14, 68, 100, 73]).
f([57, 83, 38, 78, 49, 21, 23, 85, 101, 49, 90, 55, 48, 34, 64, 9, 69, 46, 80, 15, 24, 46, 54, 99, 52, 46, 60, 99, 75, 21, 40, 15, 23, 48, 91, 37, 62, 29, 2, 34, 53, 7, 73, 48, 44, 9, 50, 29],[57, 83, 38, 78, 49, 21, 23, 85, 101, 49, 90, 55, 48, 34, 64, 9, 69, 46, 80, 15, 24, 46, 54, 99, 52, 46, 60, 99, 75, 21, 40, 15, 23, 48, 91, 37, 62, 29, 2, 34, 53, 7, 73, 48, 44, 9, 50, 29]).
f([42, 38, 101, 89],[42, 38, 101, 89]).
f([64, 33, 1, 78, 49, 85, 53, 16, 58, 44, 56, 5, 73, 43, 3, 97, 8, 70, 68, 29],[64, 33, 1, 78, 49, 85, 53, 16, 58, 44, 56, 5, 73, 43, 3, 97, 8, 70, 68, 29]).
f([84, 20, 13, 50, 53, 82, 43, 68, 88, 35, 48, 10, 22, 55, 96, 89, 48, 76, 40, 92, 58, 82, 25, 15, 92, 26, 60, 58, 36, 85, 43, 94, 25, 73, 85, 33, 62, 38],[84, 20, 13, 50, 53, 82, 43, 68, 88, 35, 48, 10, 22, 55, 96, 89, 48, 76, 40, 92, 58, 82, 25, 15, 92, 26, 60, 58, 36, 85, 43, 94, 25, 73, 85, 33, 62, 38]).
:-end_in_neg.
