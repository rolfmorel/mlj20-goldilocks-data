<block>:54:5-12: info: atom does not occur in any rule head:
  size(N)

(   0.291) GENERATE: START SETTING PROGRAM SIZE (1)
(   0.291) GENERATE: START GROUNDING (set_program_size)
(   0.292) GENERATE: DONE GROUNDING (set_program_size)
(   0.292) GENERATE: DONE SETTING PROGRAM SIZE
(   0.292) LOOP: START GENERATING (program 1)
(   0.292) GENERATE: START SOLVING
(   0.295) GENERATE: DONE SOLVING
(   0.295) LOOP: NO MORE PROGRAMS (with 1 literals)
(   0.295) GENERATE: START SETTING PROGRAM SIZE (2)
(   0.295) GENERATE: START GROUNDING (set_program_size)
(   0.296) GENERATE: DONE GROUNDING (set_program_size)
(   0.296) GENERATE: DONE SETTING PROGRAM SIZE
(   0.296) LOOP: START GENERATING (program 1)
(   0.296) GENERATE: START SOLVING
(   0.296) GENERATE: DONE SOLVING
(   0.297) LOOP: DONE GENERATING (program 1)
PROGRAM:
  f(A,B) :- tail(A,B).
(   0.297) LOOP: START TESTING
(   0.320) LOOP: DONE TESTING ('none', 'none')
(   0.320) LOOP: START IMPOSING CONSTRAINTS
(   0.320) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   0.320) GENERATE: START GROUNDING (impose_constraints)
(   0.322) GENERATE: DONE GROUNDING (impose_constraints)
(   0.322) LOOP: DONE IMPOSING CONSTRAINTS
(   0.322) LOOP: START GENERATING (program 2)
(   0.322) GENERATE: START SOLVING
(   0.322) GENERATE: DONE SOLVING
(   0.322) LOOP: NO MORE PROGRAMS (with 2 literals)
(   0.322) GENERATE: START SETTING PROGRAM SIZE (3)
(   0.322) GENERATE: START GROUNDING (set_program_size)
(   0.323) GENERATE: DONE GROUNDING (set_program_size)
(   0.323) GENERATE: DONE SETTING PROGRAM SIZE
(   0.323) LOOP: START GENERATING (program 2)
(   0.323) GENERATE: START SOLVING
(   0.324) GENERATE: DONE SOLVING
(   0.324) LOOP: DONE GENERATING (program 2)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
(   0.324) LOOP: START TESTING
(   0.325) LOOP: DONE TESTING ('none', 'none')
(   0.325) LOOP: START IMPOSING CONSTRAINTS
(   0.325) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.325) GENERATE: START GROUNDING (impose_constraints)
(   0.327) GENERATE: DONE GROUNDING (impose_constraints)
(   0.327) LOOP: DONE IMPOSING CONSTRAINTS
(   0.327) LOOP: START GENERATING (program 3)
(   0.327) GENERATE: START SOLVING
(   0.327) GENERATE: DONE SOLVING
(   0.328) LOOP: NO MORE PROGRAMS (with 3 literals)
(   0.328) GENERATE: START SETTING PROGRAM SIZE (4)
(   0.328) GENERATE: START GROUNDING (set_program_size)
(   0.329) GENERATE: DONE GROUNDING (set_program_size)
(   0.329) GENERATE: DONE SETTING PROGRAM SIZE
(   0.329) LOOP: START GENERATING (program 3)
(   0.329) GENERATE: START SOLVING
(   0.329) GENERATE: DONE SOLVING
(   0.331) LOOP: DONE GENERATING (program 3)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
(   0.331) LOOP: START TESTING
(   0.332) LOOP: DONE TESTING ('none', 'none')
(   0.332) LOOP: START IMPOSING CONSTRAINTS
(   0.332) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.332) GENERATE: START GROUNDING (impose_constraints)
(   0.333) GENERATE: DONE GROUNDING (impose_constraints)
(   0.333) LOOP: DONE IMPOSING CONSTRAINTS
(   0.333) LOOP: START GENERATING (program 4)
(   0.333) GENERATE: START SOLVING
(   0.333) GENERATE: DONE SOLVING
(   0.337) LOOP: NO MORE PROGRAMS (with 4 literals)
(   0.337) GENERATE: START SETTING PROGRAM SIZE (5)
(   0.337) GENERATE: START GROUNDING (set_program_size)
(   0.338) GENERATE: DONE GROUNDING (set_program_size)
(   0.338) GENERATE: DONE SETTING PROGRAM SIZE
(   0.338) LOOP: START GENERATING (program 4)
(   0.338) GENERATE: START SOLVING
(   0.339) GENERATE: DONE SOLVING
(   0.342) LOOP: DONE GENERATING (program 4)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,E),tail(E,C),tail(C,B).
(   0.342) LOOP: START TESTING
(   0.343) LOOP: DONE TESTING ('none', 'none')
(   0.343) LOOP: START IMPOSING CONSTRAINTS
(   0.343) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
(   0.343) GENERATE: START GROUNDING (impose_constraints)
(   0.344) GENERATE: DONE GROUNDING (impose_constraints)
(   0.344) LOOP: DONE IMPOSING CONSTRAINTS
(   0.344) LOOP: START GENERATING (program 5)
(   0.344) GENERATE: START SOLVING
(   0.345) GENERATE: DONE SOLVING
(   0.354) LOOP: DONE GENERATING (program 5)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,B).
  f(A,B) :- tail(A,B).
(   0.354) LOOP: START TESTING
(   0.355) LOOP: DONE TESTING ('none', 'none')
(   0.355) LOOP: START IMPOSING CONSTRAINTS
(   0.355) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.355) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(   0.355) GENERATE: START GROUNDING (impose_constraints)
(   0.357) GENERATE: DONE GROUNDING (impose_constraints)
(   0.357) LOOP: DONE IMPOSING CONSTRAINTS
(   0.357) LOOP: START GENERATING (program 6)
(   0.357) GENERATE: START SOLVING
(   0.358) GENERATE: DONE SOLVING
(   0.368) LOOP: NO MORE PROGRAMS (with 5 literals)
(   0.368) GENERATE: START SETTING PROGRAM SIZE (6)
(   0.368) GENERATE: START GROUNDING (set_program_size)
(   0.369) GENERATE: DONE GROUNDING (set_program_size)
(   0.369) GENERATE: DONE SETTING PROGRAM SIZE
(   0.369) LOOP: START GENERATING (program 6)
(   0.369) GENERATE: START SOLVING
(   0.369) GENERATE: DONE SOLVING
(   0.372) LOOP: DONE GENERATING (program 6)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,A).
  f(A,B) :- tail(A,C),tail(C,B).
(   0.372) LOOP: START TESTING
(   0.373) LOOP: DONE TESTING ('none', 'none')
(   0.373) LOOP: START IMPOSING CONSTRAINTS
(   0.373) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   0.373) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   0.374) GENERATE: START GROUNDING (impose_constraints)
(   0.376) GENERATE: DONE GROUNDING (impose_constraints)
(   0.376) LOOP: DONE IMPOSING CONSTRAINTS
(   0.376) LOOP: START GENERATING (program 7)
(   0.376) GENERATE: START SOLVING
(   0.376) GENERATE: DONE SOLVING
(   0.377) LOOP: DONE GENERATING (program 7)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,B).
  f(A,B) :- tail(A,C),tail(C,B).
(   0.377) LOOP: START TESTING
(   0.379) LOOP: DONE TESTING ('none', 'none')
(   0.379) LOOP: START IMPOSING CONSTRAINTS
(   0.379) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   0.379) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   0.379) GENERATE: START GROUNDING (impose_constraints)
(   0.382) GENERATE: DONE GROUNDING (impose_constraints)
(   0.382) LOOP: DONE IMPOSING CONSTRAINTS
(   0.382) LOOP: START GENERATING (program 8)
(   0.382) GENERATE: START SOLVING
(   0.382) GENERATE: DONE SOLVING
(   0.384) LOOP: DONE GENERATING (program 8)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,B).
(   0.385) LOOP: START TESTING
(   0.386) LOOP: DONE TESTING ('none', 'none')
(   0.386) LOOP: START IMPOSING CONSTRAINTS
(   0.386) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.386) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   0.386) GENERATE: START GROUNDING (impose_constraints)
(   0.389) GENERATE: DONE GROUNDING (impose_constraints)
(   0.389) LOOP: DONE IMPOSING CONSTRAINTS
(   0.389) LOOP: START GENERATING (program 9)
(   0.389) GENERATE: START SOLVING
(   0.389) GENERATE: DONE SOLVING
(   0.415) LOOP: DONE GENERATING (program 9)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,A).
(   0.416) LOOP: START TESTING
(   0.417) LOOP: DONE TESTING ('none', 'none')
(   0.417) LOOP: START IMPOSING CONSTRAINTS
(   0.417) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(   0.417) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,not clause(2).
(   0.417) GENERATE: START GROUNDING (impose_constraints)
(   0.420) GENERATE: DONE GROUNDING (impose_constraints)
(   0.420) LOOP: DONE IMPOSING CONSTRAINTS
(   0.420) LOOP: START GENERATING (program 10)
(   0.420) GENERATE: START SOLVING
(   0.421) GENERATE: DONE SOLVING
(   0.423) LOOP: DONE GENERATING (program 10)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,C),f(C,D),tail(D,B).
(   0.423) LOOP: START TESTING
(   0.425) LOOP: DONE TESTING ('none', 'none')
(   0.425) LOOP: START IMPOSING CONSTRAINTS
(   0.425) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   0.425) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   0.425) GENERATE: START GROUNDING (impose_constraints)
(   0.428) GENERATE: DONE GROUNDING (impose_constraints)
(   0.428) LOOP: DONE IMPOSING CONSTRAINTS
(   0.428) LOOP: START GENERATING (program 11)
(   0.428) GENERATE: START SOLVING
(   0.429) GENERATE: DONE SOLVING
(   0.437) LOOP: DONE GENERATING (program 11)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
  f(A,B) :- tail(A,B).
(   0.437) LOOP: START TESTING
(   0.438) LOOP: DONE TESTING ('none', 'none')
(   0.438) LOOP: START IMPOSING CONSTRAINTS
(   0.438) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.438) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(   0.438) GENERATE: START GROUNDING (impose_constraints)
(   0.442) GENERATE: DONE GROUNDING (impose_constraints)
(   0.442) LOOP: DONE IMPOSING CONSTRAINTS
(   0.442) LOOP: START GENERATING (program 12)
(   0.442) GENERATE: START SOLVING
(   0.442) GENERATE: DONE SOLVING
(   0.476) LOOP: DONE GENERATING (program 12)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
(   0.476) LOOP: START TESTING
(   0.478) LOOP: DONE TESTING ('none', 'none')
(   0.478) LOOP: START IMPOSING CONSTRAINTS
(   0.478) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   0.478) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   0.478) GENERATE: START GROUNDING (impose_constraints)
(   0.482) GENERATE: DONE GROUNDING (impose_constraints)
(   0.482) LOOP: DONE IMPOSING CONSTRAINTS
(   0.482) LOOP: START GENERATING (program 13)
(   0.482) GENERATE: START SOLVING
(   0.483) GENERATE: DONE SOLVING
(   0.484) LOOP: DONE GENERATING (program 13)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
  f(A,B) :- tail(A,B).
(   0.484) LOOP: START TESTING
(   0.485) LOOP: DONE TESTING ('none', 'none')
(   0.485) LOOP: START IMPOSING CONSTRAINTS
(   0.485) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.485) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(   0.486) GENERATE: START GROUNDING (impose_constraints)
(   0.490) GENERATE: DONE GROUNDING (impose_constraints)
(   0.490) LOOP: DONE IMPOSING CONSTRAINTS
(   0.490) LOOP: START GENERATING (program 14)
(   0.490) GENERATE: START SOLVING
(   0.490) GENERATE: DONE SOLVING
(   0.493) LOOP: DONE GENERATING (program 14)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,A).
(   0.493) LOOP: START TESTING
(   0.494) LOOP: DONE TESTING ('none', 'none')
(   0.494) LOOP: START IMPOSING CONSTRAINTS
(   0.494) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   0.494) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,not clause(2).
(   0.494) GENERATE: START GROUNDING (impose_constraints)
(   0.499) GENERATE: DONE GROUNDING (impose_constraints)
(   0.499) LOOP: DONE IMPOSING CONSTRAINTS
(   0.499) LOOP: START GENERATING (program 15)
(   0.499) GENERATE: START SOLVING
(   0.499) GENERATE: DONE SOLVING
(   0.512) LOOP: NO MORE PROGRAMS (with 6 literals)
(   0.512) GENERATE: START SETTING PROGRAM SIZE (7)
(   0.512) GENERATE: START GROUNDING (set_program_size)
(   0.513) GENERATE: DONE GROUNDING (set_program_size)
(   0.513) GENERATE: DONE SETTING PROGRAM SIZE
(   0.513) LOOP: START GENERATING (program 15)
(   0.513) GENERATE: START SOLVING
(   0.513) GENERATE: DONE SOLVING
(   0.524) LOOP: DONE GENERATING (program 15)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,B).
(   0.524) LOOP: START TESTING
(   0.526) LOOP: DONE TESTING ('none', 'none')
(   0.526) LOOP: START IMPOSING CONSTRAINTS
(   0.526) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.526) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   0.526) GENERATE: START GROUNDING (impose_constraints)
(   0.531) GENERATE: DONE GROUNDING (impose_constraints)
(   0.531) LOOP: DONE IMPOSING CONSTRAINTS
(   0.531) LOOP: START GENERATING (program 16)
(   0.531) GENERATE: START SOLVING
(   0.531) GENERATE: DONE SOLVING
(   0.537) LOOP: DONE GENERATING (program 16)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B),f(C,D).
  f(A,B) :- tail(A,B).
(   0.537) LOOP: START TESTING
(   0.539) LOOP: DONE TESTING ('none', 'none')
(   0.539) LOOP: START IMPOSING CONSTRAINTS
(   0.539) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.539) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   0.539) GENERATE: START GROUNDING (impose_constraints)
(   0.544) GENERATE: DONE GROUNDING (impose_constraints)
(   0.544) LOOP: DONE IMPOSING CONSTRAINTS
(   0.544) LOOP: START GENERATING (program 17)
(   0.544) GENERATE: START SOLVING
(   0.544) GENERATE: DONE SOLVING
(   0.545) LOOP: DONE GENERATING (program 17)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),f(C,D).
  f(A,B) :- tail(A,B).
(   0.545) LOOP: START TESTING
(   0.547) LOOP: DONE TESTING ('none', 'none')
(   0.547) LOOP: START IMPOSING CONSTRAINTS
(   0.547) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.547) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   0.547) GENERATE: START GROUNDING (impose_constraints)
(   0.552) GENERATE: DONE GROUNDING (impose_constraints)
(   0.552) LOOP: DONE IMPOSING CONSTRAINTS
(   0.552) LOOP: START GENERATING (program 18)
(   0.552) GENERATE: START SOLVING
(   0.553) GENERATE: DONE SOLVING
(   0.556) LOOP: DONE GENERATING (program 18)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,D),tail(D,E),tail(E,B).
  f(A,B) :- tail(A,B).
(   0.556) LOOP: START TESTING
(   0.557) LOOP: DONE TESTING ('none', 'none')
(   0.557) LOOP: START IMPOSING CONSTRAINTS
(   0.557) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.557) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   0.557) GENERATE: START GROUNDING (impose_constraints)
(   0.563) GENERATE: DONE GROUNDING (impose_constraints)
(   0.563) LOOP: DONE IMPOSING CONSTRAINTS
(   0.563) LOOP: START GENERATING (program 19)
(   0.563) GENERATE: START SOLVING
(   0.564) GENERATE: DONE SOLVING
(   0.566) LOOP: DONE GENERATING (program 19)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,C),f(C,D),tail(D,B).
  f(A,B) :- tail(A,B).
(   0.566) LOOP: START TESTING
(   0.567) LOOP: DONE TESTING ('none', 'none')
(   0.567) LOOP: START IMPOSING CONSTRAINTS
(   0.567) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.567) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   0.567) GENERATE: START GROUNDING (impose_constraints)
(   0.573) GENERATE: DONE GROUNDING (impose_constraints)
(   0.573) LOOP: DONE IMPOSING CONSTRAINTS
(   0.573) LOOP: START GENERATING (program 20)
(   0.573) GENERATE: START SOLVING
(   0.574) GENERATE: DONE SOLVING
(   0.575) LOOP: DONE GENERATING (program 20)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,D),tail(D,B).
  f(A,B) :- tail(A,C),tail(C,B).
(   0.575) LOOP: START TESTING
(   0.577) LOOP: DONE TESTING ('none', 'none')
(   0.577) LOOP: START IMPOSING CONSTRAINTS
(   0.577) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   0.577) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   0.577) GENERATE: START GROUNDING (impose_constraints)
(   0.583) GENERATE: DONE GROUNDING (impose_constraints)
(   0.583) LOOP: DONE IMPOSING CONSTRAINTS
(   0.583) LOOP: START GENERATING (program 21)
(   0.583) GENERATE: START SOLVING
(   0.584) GENERATE: DONE SOLVING
(   0.585) LOOP: DONE GENERATING (program 21)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(C,D),tail(D,A).
  f(A,B) :- tail(A,B).
(   0.585) LOOP: START TESTING
(   0.586) LOOP: DONE TESTING ('none', 'none')
(   0.586) LOOP: START IMPOSING CONSTRAINTS
(   0.587) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.587) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V0)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   0.587) GENERATE: START GROUNDING (impose_constraints)
(   0.593) GENERATE: DONE GROUNDING (impose_constraints)
(   0.593) LOOP: DONE IMPOSING CONSTRAINTS
(   0.593) LOOP: START GENERATING (program 22)
(   0.593) GENERATE: START SOLVING
(   0.594) GENERATE: DONE SOLVING
(   0.599) LOOP: DONE GENERATING (program 22)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(C,D),empty(D).
  f(A,B) :- tail(A,B).
(   0.599) LOOP: START TESTING
(   0.601) LOOP: DONE TESTING ('none', 'none')
(   0.601) LOOP: START IMPOSING CONSTRAINTS
(   0.601) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.601) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V3,)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   0.601) GENERATE: START GROUNDING (impose_constraints)
(   0.608) GENERATE: DONE GROUNDING (impose_constraints)
(   0.608) LOOP: DONE IMPOSING CONSTRAINTS
(   0.608) LOOP: START GENERATING (program 23)
(   0.608) GENERATE: START SOLVING
(   0.608) GENERATE: DONE SOLVING
(   0.615) LOOP: DONE GENERATING (program 23)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(   0.615) LOOP: START TESTING
(   0.616) LOOP: DONE TESTING ('none', 'none')
(   0.616) LOOP: START IMPOSING CONSTRAINTS
(   0.616) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(   0.616) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   0.616) GENERATE: START GROUNDING (impose_constraints)
(   0.624) GENERATE: DONE GROUNDING (impose_constraints)
(   0.624) LOOP: DONE IMPOSING CONSTRAINTS
(   0.624) LOOP: START GENERATING (program 24)
(   0.624) GENERATE: START SOLVING
(   0.625) GENERATE: DONE SOLVING
(   0.628) LOOP: DONE GENERATING (program 24)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),f(C,A),tail(C,B).
  f(A,B) :- tail(A,B).
(   0.628) LOOP: START TESTING
(   0.629) LOOP: DONE TESTING ('none', 'none')
(   0.629) LOOP: START IMPOSING CONSTRAINTS
(   0.629) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.629) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   0.630) GENERATE: START GROUNDING (impose_constraints)
(   0.637) GENERATE: DONE GROUNDING (impose_constraints)
(   0.637) LOOP: DONE IMPOSING CONSTRAINTS
(   0.637) LOOP: START GENERATING (program 25)
(   0.637) GENERATE: START SOLVING
(   0.638) GENERATE: DONE SOLVING
(   0.641) LOOP: DONE GENERATING (program 25)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
  f(A,B) :- tail(A,B),empty(A).
(   0.641) LOOP: START TESTING
(   0.642) LOOP: DONE TESTING ('none', 'none')
(   0.642) LOOP: START IMPOSING CONSTRAINTS
(   0.642) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(   0.642) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(   0.642) GENERATE: START GROUNDING (impose_constraints)
(   0.650) GENERATE: DONE GROUNDING (impose_constraints)
(   0.650) LOOP: DONE IMPOSING CONSTRAINTS
(   0.650) LOOP: START GENERATING (program 26)
(   0.650) GENERATE: START SOLVING
(   0.651) GENERATE: DONE SOLVING
(   0.653) LOOP: DONE GENERATING (program 26)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),f(C,A).
  f(A,B) :- tail(A,B).
(   0.653) LOOP: START TESTING
(   0.654) LOOP: DONE TESTING ('none', 'none')
(   0.654) LOOP: START IMPOSING CONSTRAINTS
(   0.654) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.654) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   0.655) GENERATE: START GROUNDING (impose_constraints)
(   0.663) GENERATE: DONE GROUNDING (impose_constraints)
(   0.663) LOOP: DONE IMPOSING CONSTRAINTS
(   0.663) LOOP: START GENERATING (program 27)
(   0.663) GENERATE: START SOLVING
(   0.664) GENERATE: DONE SOLVING
(   0.669) LOOP: DONE GENERATING (program 27)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
  f(A,B) :- tail(A,B),empty(B).
(   0.669) LOOP: START TESTING
(   0.671) LOOP: DONE TESTING ('none', 'none')
(   0.671) LOOP: START IMPOSING CONSTRAINTS
(   0.671) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(   0.671) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(   0.671) GENERATE: START GROUNDING (impose_constraints)
(   0.679) GENERATE: DONE GROUNDING (impose_constraints)
(   0.679) LOOP: DONE IMPOSING CONSTRAINTS
(   0.679) LOOP: START GENERATING (program 28)
(   0.679) GENERATE: START SOLVING
(   0.680) GENERATE: DONE SOLVING
(   0.684) LOOP: DONE GENERATING (program 28)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),tail(C,A).
  f(A,B) :- tail(A,B).
(   0.684) LOOP: START TESTING
(   0.685) LOOP: DONE TESTING ('none', 'none')
(   0.685) LOOP: START IMPOSING CONSTRAINTS
(   0.685) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.685) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   0.685) GENERATE: START GROUNDING (impose_constraints)
(   0.694) GENERATE: DONE GROUNDING (impose_constraints)
(   0.694) LOOP: DONE IMPOSING CONSTRAINTS
(   0.694) LOOP: START GENERATING (program 29)
(   0.694) GENERATE: START SOLVING
(   0.695) GENERATE: DONE SOLVING
(   0.698) LOOP: DONE GENERATING (program 29)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),tail(C,D).
  f(A,B) :- tail(A,B).
(   0.698) LOOP: START TESTING
(   0.699) LOOP: DONE TESTING ('none', 'none')
(   0.699) LOOP: START IMPOSING CONSTRAINTS
(   0.699) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.699) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   0.699) GENERATE: START GROUNDING (impose_constraints)
(   0.709) GENERATE: DONE GROUNDING (impose_constraints)
(   0.709) LOOP: DONE IMPOSING CONSTRAINTS
(   0.709) LOOP: START GENERATING (program 30)
(   0.709) GENERATE: START SOLVING
(   0.710) GENERATE: DONE SOLVING
(   0.720) LOOP: DONE GENERATING (program 30)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B),f(B,A).
(   0.720) LOOP: START TESTING
(   0.722) LOOP: DONE TESTING ('none', 'none')
(   0.722) LOOP: START IMPOSING CONSTRAINTS
(   0.722) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   0.722) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   0.722) GENERATE: START GROUNDING (impose_constraints)
(   0.731) GENERATE: DONE GROUNDING (impose_constraints)
(   0.732) LOOP: DONE IMPOSING CONSTRAINTS
(   0.732) LOOP: START GENERATING (program 31)
(   0.732) GENERATE: START SOLVING
(   0.732) GENERATE: DONE SOLVING
(   0.736) LOOP: DONE GENERATING (program 31)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,A).
(   0.736) LOOP: START TESTING
(   0.737) LOOP: DONE TESTING ('none', 'none')
(   0.737) LOOP: START IMPOSING CONSTRAINTS
(   0.737) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.737) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   0.738) GENERATE: START GROUNDING (impose_constraints)
(   0.747) GENERATE: DONE GROUNDING (impose_constraints)
(   0.747) LOOP: DONE IMPOSING CONSTRAINTS
(   0.747) LOOP: START GENERATING (program 32)
(   0.747) GENERATE: START SOLVING
(   0.748) GENERATE: DONE SOLVING
(   0.750) LOOP: DONE GENERATING (program 32)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),f(B,A).
(   0.750) LOOP: START TESTING
(   0.751) LOOP: DONE TESTING ('none', 'none')
(   0.751) LOOP: START IMPOSING CONSTRAINTS
(   0.751) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.751) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(   0.751) GENERATE: START GROUNDING (impose_constraints)
(   0.762) GENERATE: DONE GROUNDING (impose_constraints)
(   0.762) LOOP: DONE IMPOSING CONSTRAINTS
(   0.762) LOOP: START GENERATING (program 33)
(   0.762) GENERATE: START SOLVING
(   0.763) GENERATE: DONE SOLVING
(   0.769) LOOP: DONE GENERATING (program 33)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),f(B,A).
(   0.769) LOOP: START TESTING
(   0.770) LOOP: DONE TESTING ('none', 'none')
(   0.770) LOOP: START IMPOSING CONSTRAINTS
(   0.770) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.771) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(   0.771) GENERATE: START GROUNDING (impose_constraints)
(   0.781) GENERATE: DONE GROUNDING (impose_constraints)
(   0.781) LOOP: DONE IMPOSING CONSTRAINTS
(   0.781) LOOP: START GENERATING (program 34)
(   0.781) GENERATE: START SOLVING
(   0.782) GENERATE: DONE SOLVING
(   0.783) LOOP: DONE GENERATING (program 34)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),f(B,A).
(   0.783) LOOP: START TESTING
(   0.785) LOOP: DONE TESTING ('none', 'none')
(   0.785) LOOP: START IMPOSING CONSTRAINTS
(   0.785) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.785) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(   0.785) GENERATE: START GROUNDING (impose_constraints)
(   0.796) GENERATE: DONE GROUNDING (impose_constraints)
(   0.796) LOOP: DONE IMPOSING CONSTRAINTS
(   0.796) LOOP: START GENERATING (program 35)
(   0.796) GENERATE: START SOLVING
(   0.797) GENERATE: DONE SOLVING
(   0.810) LOOP: DONE GENERATING (program 35)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
(   0.810) LOOP: START TESTING
(   0.811) LOOP: DONE TESTING ('none', 'none')
(   0.811) LOOP: START IMPOSING CONSTRAINTS
(   0.811) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.811) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   0.811) GENERATE: START GROUNDING (impose_constraints)
(   0.822) GENERATE: DONE GROUNDING (impose_constraints)
(   0.822) LOOP: DONE IMPOSING CONSTRAINTS
(   0.822) LOOP: START GENERATING (program 36)
(   0.822) GENERATE: START SOLVING
(   0.823) GENERATE: DONE SOLVING
(   0.828) LOOP: DONE GENERATING (program 36)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,C),tail(C,D),f(C,A),tail(D,B).
(   0.828) LOOP: START TESTING
(   0.830) LOOP: DONE TESTING ('none', 'none')
(   0.830) LOOP: START IMPOSING CONSTRAINTS
(   0.830) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   0.830) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   0.830) GENERATE: START GROUNDING (impose_constraints)
(   0.841) GENERATE: DONE GROUNDING (impose_constraints)
(   0.841) LOOP: DONE IMPOSING CONSTRAINTS
(   0.841) LOOP: START GENERATING (program 37)
(   0.841) GENERATE: START SOLVING
(   0.843) GENERATE: DONE SOLVING
(   0.864) LOOP: DONE GENERATING (program 37)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),f(D,C),tail(D,B),tail(B,C).
(   0.864) LOOP: START TESTING
(   0.865) LOOP: DONE TESTING ('none', 'none')
(   0.865) LOOP: START IMPOSING CONSTRAINTS
(   0.865) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   0.865) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   0.865) GENERATE: START GROUNDING (impose_constraints)
(   0.877) GENERATE: DONE GROUNDING (impose_constraints)
(   0.877) LOOP: DONE IMPOSING CONSTRAINTS
(   0.877) LOOP: START GENERATING (program 38)
(   0.877) GENERATE: START SOLVING
(   0.878) GENERATE: DONE SOLVING
(   0.882) LOOP: DONE GENERATING (program 38)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),f(D,C),tail(C,D),tail(D,B).
(   0.882) LOOP: START TESTING
(   0.883) LOOP: DONE TESTING ('none', 'none')
(   0.883) LOOP: START IMPOSING CONSTRAINTS
(   0.884) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   0.884) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   0.884) GENERATE: START GROUNDING (impose_constraints)
(   0.896) GENERATE: DONE GROUNDING (impose_constraints)
(   0.896) LOOP: DONE IMPOSING CONSTRAINTS
(   0.896) LOOP: START GENERATING (program 39)
(   0.896) GENERATE: START SOLVING
(   0.897) GENERATE: DONE SOLVING
(   0.940) LOOP: DONE GENERATING (program 39)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),f(D,B).
  f(A,B) :- tail(A,C),tail(C,B).
(   0.940) LOOP: START TESTING
(   0.941) LOOP: DONE TESTING ('none', 'none')
(   0.941) LOOP: START IMPOSING CONSTRAINTS
(   0.941) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   0.941) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,f,2,(ClId0V3,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   0.941) GENERATE: START GROUNDING (impose_constraints)
(   0.954) GENERATE: DONE GROUNDING (impose_constraints)
(   0.954) LOOP: DONE IMPOSING CONSTRAINTS
(   0.954) LOOP: START GENERATING (program 40)
(   0.954) GENERATE: START SOLVING
(   0.955) GENERATE: DONE SOLVING
(   0.987) LOOP: DONE GENERATING (program 40)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,D),tail(D,B).
  f(A,B) :- tail(A,B).
(   0.987) LOOP: START TESTING
(   0.988) LOOP: DONE TESTING ('none', 'none')
(   0.988) LOOP: START IMPOSING CONSTRAINTS
(   0.988) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   0.988) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   0.988) GENERATE: START GROUNDING (impose_constraints)
(   1.002) GENERATE: DONE GROUNDING (impose_constraints)
(   1.002) LOOP: DONE IMPOSING CONSTRAINTS
(   1.002) LOOP: START GENERATING (program 41)
(   1.002) GENERATE: START SOLVING
(   1.003) GENERATE: DONE SOLVING
(   1.003) LOOP: DONE GENERATING (program 41)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B),f(B,D).
  f(A,B) :- tail(A,B).
(   1.004) LOOP: START TESTING
(   1.005) LOOP: DONE TESTING ('none', 'none')
(   1.005) LOOP: START IMPOSING CONSTRAINTS
(   1.005) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   1.005) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   1.005) GENERATE: START GROUNDING (impose_constraints)
(   1.018) GENERATE: DONE GROUNDING (impose_constraints)
(   1.018) LOOP: DONE IMPOSING CONSTRAINTS
(   1.018) LOOP: START GENERATING (program 42)
(   1.018) GENERATE: START SOLVING
(   1.019) GENERATE: DONE SOLVING
(   1.021) LOOP: DONE GENERATING (program 42)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,D),empty(D).
  f(A,B) :- tail(A,B).
(   1.021) LOOP: START TESTING
(   1.023) LOOP: DONE TESTING ('none', 'none')
(   1.023) LOOP: START IMPOSING CONSTRAINTS
(   1.023) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   1.023) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V3,)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,f,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   1.023) GENERATE: START GROUNDING (impose_constraints)
(   1.036) GENERATE: DONE GROUNDING (impose_constraints)
(   1.036) LOOP: DONE IMPOSING CONSTRAINTS
(   1.036) LOOP: START GENERATING (program 43)
(   1.037) GENERATE: START SOLVING
(   1.038) GENERATE: DONE SOLVING
(   1.061) LOOP: DONE GENERATING (program 43)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
  f(A,B) :- tail(A,B),empty(A).
(   1.061) LOOP: START TESTING
(   1.063) LOOP: DONE TESTING ('none', 'none')
(   1.063) LOOP: START IMPOSING CONSTRAINTS
(   1.063) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(   1.063) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(   1.063) GENERATE: START GROUNDING (impose_constraints)
(   1.077) GENERATE: DONE GROUNDING (impose_constraints)
(   1.077) LOOP: DONE IMPOSING CONSTRAINTS
(   1.077) LOOP: START GENERATING (program 44)
(   1.077) GENERATE: START SOLVING
(   1.078) GENERATE: DONE SOLVING
(   1.084) LOOP: DONE GENERATING (program 44)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
(   1.084) LOOP: START TESTING
(   1.085) LOOP: DONE TESTING ('none', 'none')
(   1.085) LOOP: START IMPOSING CONSTRAINTS
(   1.085) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.085) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.086) GENERATE: START GROUNDING (impose_constraints)
(   1.100) GENERATE: DONE GROUNDING (impose_constraints)
(   1.100) LOOP: DONE IMPOSING CONSTRAINTS
(   1.100) LOOP: START GENERATING (program 45)
(   1.100) GENERATE: START SOLVING
(   1.101) GENERATE: DONE SOLVING
(   1.131) LOOP: DONE GENERATING (program 45)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),empty(C).
  f(A,B) :- tail(A,B),empty(A).
(   1.131) LOOP: START TESTING
(   1.132) LOOP: DONE TESTING ('none', 'none')
(   1.132) LOOP: START IMPOSING CONSTRAINTS
(   1.132) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(   1.132) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(   1.132) GENERATE: START GROUNDING (impose_constraints)
(   1.147) GENERATE: DONE GROUNDING (impose_constraints)
(   1.147) LOOP: DONE IMPOSING CONSTRAINTS
(   1.147) LOOP: START GENERATING (program 46)
(   1.147) GENERATE: START SOLVING
(   1.149) GENERATE: DONE SOLVING
(   1.162) LOOP: DONE GENERATING (program 46)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),empty(A).
(   1.162) LOOP: START TESTING
(   1.163) LOOP: DONE TESTING ('none', 'none')
(   1.163) LOOP: START IMPOSING CONSTRAINTS
(   1.163) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(   1.163) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(   1.163) GENERATE: START GROUNDING (impose_constraints)
(   1.179) GENERATE: DONE GROUNDING (impose_constraints)
(   1.179) LOOP: DONE IMPOSING CONSTRAINTS
(   1.179) LOOP: START GENERATING (program 47)
(   1.179) GENERATE: START SOLVING
(   1.180) GENERATE: DONE SOLVING
(   1.189) LOOP: DONE GENERATING (program 47)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,C),tail(C,B),tail(B,D),f(D,B).
(   1.189) LOOP: START TESTING
(   1.190) LOOP: DONE TESTING ('none', 'none')
(   1.190) LOOP: START IMPOSING CONSTRAINTS
(   1.190) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   1.190) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,f,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   1.191) GENERATE: START GROUNDING (impose_constraints)
(   1.206) GENERATE: DONE GROUNDING (impose_constraints)
(   1.206) LOOP: DONE IMPOSING CONSTRAINTS
(   1.206) LOOP: START GENERATING (program 48)
(   1.206) GENERATE: START SOLVING
(   1.207) GENERATE: DONE SOLVING
(   1.236) LOOP: DONE GENERATING (program 48)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B),f(B,D).
(   1.236) LOOP: START TESTING
(   1.237) LOOP: DONE TESTING ('none', 'none')
(   1.237) LOOP: START IMPOSING CONSTRAINTS
(   1.237) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   1.237) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   1.237) GENERATE: START GROUNDING (impose_constraints)
(   1.254) GENERATE: DONE GROUNDING (impose_constraints)
(   1.254) LOOP: DONE IMPOSING CONSTRAINTS
(   1.254) LOOP: START GENERATING (program 49)
(   1.254) GENERATE: START SOLVING
(   1.255) GENERATE: DONE SOLVING
(   1.310) LOOP: DONE GENERATING (program 49)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
  f(A,B) :- tail(A,C),tail(C,B).
(   1.310) LOOP: START TESTING
(   1.311) LOOP: DONE TESTING ('none', 'none')
(   1.311) LOOP: START IMPOSING CONSTRAINTS
(   1.311) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   1.311) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.312) GENERATE: START GROUNDING (impose_constraints)
(   1.328) GENERATE: DONE GROUNDING (impose_constraints)
(   1.328) LOOP: DONE IMPOSING CONSTRAINTS
(   1.328) LOOP: START GENERATING (program 50)
(   1.328) GENERATE: START SOLVING
(   1.329) GENERATE: DONE SOLVING
(   1.367) LOOP: DONE GENERATING (program 50)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),empty(C).
  f(A,B) :- tail(A,C),tail(C,B).
(   1.367) LOOP: START TESTING
(   1.369) LOOP: DONE TESTING ('none', 'none')
(   1.369) LOOP: START IMPOSING CONSTRAINTS
(   1.369) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   1.369) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.369) GENERATE: START GROUNDING (impose_constraints)
(   1.386) GENERATE: DONE GROUNDING (impose_constraints)
(   1.386) LOOP: DONE IMPOSING CONSTRAINTS
(   1.386) LOOP: START GENERATING (program 51)
(   1.386) GENERATE: START SOLVING
(   1.387) GENERATE: DONE SOLVING
(   1.389) LOOP: DONE GENERATING (program 51)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),tail(B,C).
  f(A,B) :- tail(A,B).
(   1.389) LOOP: START TESTING
(   1.391) LOOP: DONE TESTING ('none', 'none')
(   1.391) LOOP: START IMPOSING CONSTRAINTS
(   1.391) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   1.391) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   1.391) GENERATE: START GROUNDING (impose_constraints)
(   1.408) GENERATE: DONE GROUNDING (impose_constraints)
(   1.408) LOOP: DONE IMPOSING CONSTRAINTS
(   1.408) LOOP: START GENERATING (program 52)
(   1.408) GENERATE: START SOLVING
(   1.409) GENERATE: DONE SOLVING
(   1.415) LOOP: DONE GENERATING (program 52)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),empty(C).
  f(A,B) :- tail(A,B),empty(B).
(   1.415) LOOP: START TESTING
(   1.416) LOOP: DONE TESTING ('none', 'none')
(   1.416) LOOP: START IMPOSING CONSTRAINTS
(   1.416) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(   1.416) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(   1.416) GENERATE: START GROUNDING (impose_constraints)
(   1.433) GENERATE: DONE GROUNDING (impose_constraints)
(   1.433) LOOP: DONE IMPOSING CONSTRAINTS
(   1.433) LOOP: START GENERATING (program 53)
(   1.433) GENERATE: START SOLVING
(   1.435) GENERATE: DONE SOLVING
(   1.454) LOOP: DONE GENERATING (program 53)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
(   1.454) LOOP: START TESTING
(   1.455) LOOP: DONE TESTING ('none', 'none')
(   1.455) LOOP: START IMPOSING CONSTRAINTS
(   1.455) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.455) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.455) GENERATE: START GROUNDING (impose_constraints)
(   1.473) GENERATE: DONE GROUNDING (impose_constraints)
(   1.473) LOOP: DONE IMPOSING CONSTRAINTS
(   1.473) LOOP: START GENERATING (program 54)
(   1.473) GENERATE: START SOLVING
(   1.474) GENERATE: DONE SOLVING
(   1.485) LOOP: DONE GENERATING (program 54)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
(   1.485) LOOP: START TESTING
(   1.486) LOOP: DONE TESTING ('none', 'none')
(   1.486) LOOP: START IMPOSING CONSTRAINTS
(   1.486) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.486) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.487) GENERATE: START GROUNDING (impose_constraints)
(   1.504) GENERATE: DONE GROUNDING (impose_constraints)
(   1.504) LOOP: DONE IMPOSING CONSTRAINTS
(   1.504) LOOP: START GENERATING (program 55)
(   1.504) GENERATE: START SOLVING
(   1.506) GENERATE: DONE SOLVING
(   1.508) LOOP: DONE GENERATING (program 55)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
(   1.508) LOOP: START TESTING
(   1.510) LOOP: DONE TESTING ('none', 'none')
(   1.510) LOOP: START IMPOSING CONSTRAINTS
(   1.510) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(   1.510) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.510) GENERATE: START GROUNDING (impose_constraints)
(   1.529) GENERATE: DONE GROUNDING (impose_constraints)
(   1.529) LOOP: DONE IMPOSING CONSTRAINTS
(   1.529) LOOP: START GENERATING (program 56)
(   1.529) GENERATE: START SOLVING
(   1.530) GENERATE: DONE SOLVING
(   1.535) LOOP: DONE GENERATING (program 56)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
(   1.536) LOOP: START TESTING
(   1.537) LOOP: DONE TESTING ('none', 'none')
(   1.537) LOOP: START IMPOSING CONSTRAINTS
(   1.537) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   1.537) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.537) GENERATE: START GROUNDING (impose_constraints)
(   1.556) GENERATE: DONE GROUNDING (impose_constraints)
(   1.556) LOOP: DONE IMPOSING CONSTRAINTS
(   1.556) LOOP: START GENERATING (program 57)
(   1.556) GENERATE: START SOLVING
(   1.558) GENERATE: DONE SOLVING
(   1.560) LOOP: DONE GENERATING (program 57)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
(   1.560) LOOP: START TESTING
(   1.561) LOOP: DONE TESTING ('none', 'none')
(   1.561) LOOP: START IMPOSING CONSTRAINTS
(   1.561) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   1.562) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.562) GENERATE: START GROUNDING (impose_constraints)
(   1.580) GENERATE: DONE GROUNDING (impose_constraints)
(   1.580) LOOP: DONE IMPOSING CONSTRAINTS
(   1.580) LOOP: START GENERATING (program 58)
(   1.580) GENERATE: START SOLVING
(   1.582) GENERATE: DONE SOLVING
(   1.583) LOOP: DONE GENERATING (program 58)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
(   1.583) LOOP: START TESTING
(   1.584) LOOP: DONE TESTING ('none', 'none')
(   1.584) LOOP: START IMPOSING CONSTRAINTS
(   1.584) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   1.584) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.584) GENERATE: START GROUNDING (impose_constraints)
(   1.603) GENERATE: DONE GROUNDING (impose_constraints)
(   1.603) LOOP: DONE IMPOSING CONSTRAINTS
(   1.603) LOOP: START GENERATING (program 59)
(   1.603) GENERATE: START SOLVING
(   1.605) GENERATE: DONE SOLVING
(   1.606) LOOP: DONE GENERATING (program 59)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
(   1.606) LOOP: START TESTING
(   1.607) LOOP: DONE TESTING ('none', 'none')
(   1.607) LOOP: START IMPOSING CONSTRAINTS
(   1.607) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(   1.607) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.607) GENERATE: START GROUNDING (impose_constraints)
(   1.627) GENERATE: DONE GROUNDING (impose_constraints)
(   1.627) LOOP: DONE IMPOSING CONSTRAINTS
(   1.627) LOOP: START GENERATING (program 60)
(   1.627) GENERATE: START SOLVING
(   1.628) GENERATE: DONE SOLVING
(   1.748) LOOP: DONE GENERATING (program 60)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
(   1.748) LOOP: START TESTING
(   1.749) LOOP: DONE TESTING ('none', 'none')
(   1.749) LOOP: START IMPOSING CONSTRAINTS
(   1.749) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   1.749) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.750) GENERATE: START GROUNDING (impose_constraints)
(   1.769) GENERATE: DONE GROUNDING (impose_constraints)
(   1.769) LOOP: DONE IMPOSING CONSTRAINTS
(   1.769) LOOP: START GENERATING (program 61)
(   1.769) GENERATE: START SOLVING
(   1.770) GENERATE: DONE SOLVING
(   1.822) LOOP: NO MORE PROGRAMS (with 7 literals)
(   1.822) GENERATE: START SETTING PROGRAM SIZE (8)
(   1.824) GENERATE: START GROUNDING (set_program_size)
(   1.825) GENERATE: DONE GROUNDING (set_program_size)
(   1.825) GENERATE: DONE SETTING PROGRAM SIZE
(   1.825) LOOP: START GENERATING (program 61)
(   1.825) GENERATE: START SOLVING
(   1.827) GENERATE: DONE SOLVING
(   1.846) LOOP: DONE GENERATING (program 61)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(B,D).
  f(A,B) :- tail(A,C),tail(C,B).
(   1.846) LOOP: START TESTING
(   1.847) LOOP: DONE TESTING ('none', 'none')
(   1.847) LOOP: START IMPOSING CONSTRAINTS
(   1.847) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   1.847) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.848) GENERATE: START GROUNDING (impose_constraints)
(   1.868) GENERATE: DONE GROUNDING (impose_constraints)
(   1.868) LOOP: DONE IMPOSING CONSTRAINTS
(   1.868) LOOP: START GENERATING (program 62)
(   1.868) GENERATE: START SOLVING
(   1.869) GENERATE: DONE SOLVING
(   1.870) LOOP: DONE GENERATING (program 62)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,B),f(B,C),tail(C,D),tail(B,D).
  f(A,B) :- tail(A,B).
(   1.870) LOOP: START TESTING
(   1.872) LOOP: DONE TESTING ('none', 'none')
(   1.872) LOOP: START IMPOSING CONSTRAINTS
(   1.872) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   1.872) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   1.872) GENERATE: START GROUNDING (impose_constraints)
(   1.892) GENERATE: DONE GROUNDING (impose_constraints)
(   1.892) LOOP: DONE IMPOSING CONSTRAINTS
(   1.892) LOOP: START GENERATING (program 63)
(   1.892) GENERATE: START SOLVING
(   1.894) GENERATE: DONE SOLVING
(   1.897) LOOP: DONE GENERATING (program 63)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B),f(B,C).
  f(A,B) :- tail(A,C),tail(C,B).
(   1.897) LOOP: START TESTING
(   1.898) LOOP: DONE TESTING ('none', 'none')
(   1.898) LOOP: START IMPOSING CONSTRAINTS
(   1.898) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   1.898) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.898) GENERATE: START GROUNDING (impose_constraints)
(   1.919) GENERATE: DONE GROUNDING (impose_constraints)
(   1.919) LOOP: DONE IMPOSING CONSTRAINTS
(   1.919) LOOP: START GENERATING (program 64)
(   1.919) GENERATE: START SOLVING
(   1.921) GENERATE: DONE SOLVING
(   1.923) LOOP: DONE GENERATING (program 64)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B),f(B,C).
  f(A,B) :- tail(A,C),tail(C,B).
(   1.923) LOOP: START TESTING
(   1.924) LOOP: DONE TESTING ('none', 'none')
(   1.924) LOOP: START IMPOSING CONSTRAINTS
(   1.924) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   1.924) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.924) GENERATE: START GROUNDING (impose_constraints)
(   1.945) GENERATE: DONE GROUNDING (impose_constraints)
(   1.945) LOOP: DONE IMPOSING CONSTRAINTS
(   1.945) LOOP: START GENERATING (program 65)
(   1.945) GENERATE: START SOLVING
(   1.947) GENERATE: DONE SOLVING
(   1.949) LOOP: DONE GENERATING (program 65)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,B),f(B,C),tail(B,D),tail(D,C).
  f(A,B) :- tail(A,B).
(   1.950) LOOP: START TESTING
(   1.951) LOOP: DONE TESTING ('none', 'none')
(   1.951) LOOP: START IMPOSING CONSTRAINTS
(   1.951) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   1.951) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   1.951) GENERATE: START GROUNDING (impose_constraints)
(   1.973) GENERATE: DONE GROUNDING (impose_constraints)
(   1.973) LOOP: DONE IMPOSING CONSTRAINTS
(   1.973) LOOP: START GENERATING (program 66)
(   1.973) GENERATE: START SOLVING
(   1.975) GENERATE: DONE SOLVING
(   1.978) LOOP: DONE GENERATING (program 66)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),tail(C,D).
  f(A,B) :- tail(A,C),tail(C,B).
(   1.978) LOOP: START TESTING
(   1.979) LOOP: DONE TESTING ('none', 'none')
(   1.979) LOOP: START IMPOSING CONSTRAINTS
(   1.979) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   1.979) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   1.980) GENERATE: START GROUNDING (impose_constraints)
(   2.001) GENERATE: DONE GROUNDING (impose_constraints)
(   2.001) LOOP: DONE IMPOSING CONSTRAINTS
(   2.001) LOOP: START GENERATING (program 67)
(   2.001) GENERATE: START SOLVING
(   2.003) GENERATE: DONE SOLVING
(   2.006) LOOP: DONE GENERATING (program 67)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(   2.007) LOOP: START TESTING
(   2.008) LOOP: DONE TESTING ('none', 'none')
(   2.008) LOOP: START IMPOSING CONSTRAINTS
(   2.008) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(   2.008) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.008) GENERATE: START GROUNDING (impose_constraints)
(   2.031) GENERATE: DONE GROUNDING (impose_constraints)
(   2.031) LOOP: DONE IMPOSING CONSTRAINTS
(   2.031) LOOP: START GENERATING (program 68)
(   2.031) GENERATE: START SOLVING
(   2.033) GENERATE: DONE SOLVING
(   2.035) LOOP: DONE GENERATING (program 68)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),f(D,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(   2.035) LOOP: START TESTING
(   2.036) LOOP: DONE TESTING ('none', 'none')
(   2.036) LOOP: START IMPOSING CONSTRAINTS
(   2.036) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(   2.036) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,f,2,(ClId0V3,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.037) GENERATE: START GROUNDING (impose_constraints)
(   2.059) GENERATE: DONE GROUNDING (impose_constraints)
(   2.059) LOOP: DONE IMPOSING CONSTRAINTS
(   2.059) LOOP: START GENERATING (program 69)
(   2.059) GENERATE: START SOLVING
(   2.061) GENERATE: DONE SOLVING
(   2.080) LOOP: DONE GENERATING (program 69)
PROGRAM:
  f(A,B) :- tail(A,B),head(B,C),f(B,D),head(D,C).
  f(A,B) :- tail(A,B),empty(B).
(   2.080) LOOP: START TESTING
(   2.081) LOOP: DONE TESTING ('none', 'none')
(   2.081) LOOP: START IMPOSING CONSTRAINTS
(   2.081) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(   2.081) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   2.081) GENERATE: START GROUNDING (impose_constraints)
(   2.109) GENERATE: DONE GROUNDING (impose_constraints)
(   2.109) LOOP: DONE IMPOSING CONSTRAINTS
(   2.109) LOOP: START GENERATING (program 70)
(   2.109) GENERATE: START SOLVING
(   2.113) GENERATE: DONE SOLVING
(   2.157) LOOP: DONE GENERATING (program 70)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,B),f(B,D),tail(D,C),tail(C,A).
(   2.157) LOOP: START TESTING
(   2.158) LOOP: DONE TESTING ('none', 'none')
(   2.158) LOOP: START IMPOSING CONSTRAINTS
(   2.159) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   2.159) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   2.159) GENERATE: START GROUNDING (impose_constraints)
(   2.183) GENERATE: DONE GROUNDING (impose_constraints)
(   2.184) LOOP: DONE IMPOSING CONSTRAINTS
(   2.184) LOOP: START GENERATING (program 71)
(   2.184) GENERATE: START SOLVING
(   2.185) GENERATE: DONE SOLVING
(   2.188) LOOP: DONE GENERATING (program 71)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,D),tail(D,C),tail(C,A).
(   2.188) LOOP: START TESTING
(   2.189) LOOP: DONE TESTING ('none', 'none')
(   2.189) LOOP: START IMPOSING CONSTRAINTS
(   2.189) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   2.189) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.189) GENERATE: START GROUNDING (impose_constraints)
(   2.214) GENERATE: DONE GROUNDING (impose_constraints)
(   2.214) LOOP: DONE IMPOSING CONSTRAINTS
(   2.214) LOOP: START GENERATING (program 72)
(   2.214) GENERATE: START SOLVING
(   2.217) GENERATE: DONE SOLVING
(   2.219) LOOP: DONE GENERATING (program 72)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,D),tail(D,C),tail(C,A).
(   2.219) LOOP: START TESTING
(   2.221) LOOP: DONE TESTING ('none', 'none')
(   2.221) LOOP: START IMPOSING CONSTRAINTS
(   2.221) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(   2.221) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.221) GENERATE: START GROUNDING (impose_constraints)
(   2.248) GENERATE: DONE GROUNDING (impose_constraints)
(   2.248) LOOP: DONE IMPOSING CONSTRAINTS
(   2.248) LOOP: START GENERATING (program 73)
(   2.248) GENERATE: START SOLVING
(   2.251) GENERATE: DONE SOLVING
(   2.254) LOOP: DONE GENERATING (program 73)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,D),tail(D,C),tail(C,A).
(   2.254) LOOP: START TESTING
(   2.256) LOOP: DONE TESTING ('none', 'none')
(   2.256) LOOP: START IMPOSING CONSTRAINTS
(   2.256) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   2.256) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.256) GENERATE: START GROUNDING (impose_constraints)
(   2.282) GENERATE: DONE GROUNDING (impose_constraints)
(   2.282) LOOP: DONE IMPOSING CONSTRAINTS
(   2.282) LOOP: START GENERATING (program 74)
(   2.282) GENERATE: START SOLVING
(   2.284) GENERATE: DONE SOLVING
(   2.287) LOOP: DONE GENERATING (program 74)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,C),tail(C,E),tail(E,B),f(B,D),tail(D,C).
(   2.287) LOOP: START TESTING
(   2.289) LOOP: DONE TESTING ('none', 'none')
(   2.289) LOOP: START IMPOSING CONSTRAINTS
(   2.289) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   2.289) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   2.289) GENERATE: START GROUNDING (impose_constraints)
(   2.316) GENERATE: DONE GROUNDING (impose_constraints)
(   2.316) LOOP: DONE IMPOSING CONSTRAINTS
(   2.316) LOOP: START GENERATING (program 75)
(   2.316) GENERATE: START SOLVING
(   2.318) GENERATE: DONE SOLVING
(   2.324) LOOP: DONE GENERATING (program 75)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,D),tail(D,C),empty(C).
(   2.324) LOOP: START TESTING
(   2.325) LOOP: DONE TESTING ('none', 'none')
(   2.325) LOOP: START IMPOSING CONSTRAINTS
(   2.325) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   2.325) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.325) GENERATE: START GROUNDING (impose_constraints)
(   2.351) GENERATE: DONE GROUNDING (impose_constraints)
(   2.351) LOOP: DONE IMPOSING CONSTRAINTS
(   2.351) LOOP: START GENERATING (program 76)
(   2.351) GENERATE: START SOLVING
(   2.354) GENERATE: DONE SOLVING
(   2.357) LOOP: DONE GENERATING (program 76)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,E),tail(E,B),f(B,D).
(   2.357) LOOP: START TESTING
(   2.359) LOOP: DONE TESTING ('none', 'none')
(   2.359) LOOP: START IMPOSING CONSTRAINTS
(   2.359) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   2.359) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   2.359) GENERATE: START GROUNDING (impose_constraints)
(   2.385) GENERATE: DONE GROUNDING (impose_constraints)
(   2.385) LOOP: DONE IMPOSING CONSTRAINTS
(   2.385) LOOP: START GENERATING (program 77)
(   2.385) GENERATE: START SOLVING
(   2.388) GENERATE: DONE SOLVING
(   2.390) LOOP: DONE GENERATING (program 77)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,D),tail(D,C),tail(C,B).
(   2.390) LOOP: START TESTING
(   2.391) LOOP: DONE TESTING ('none', 'none')
(   2.391) LOOP: START IMPOSING CONSTRAINTS
(   2.391) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   2.391) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.391) GENERATE: START GROUNDING (impose_constraints)
(   2.418) GENERATE: DONE GROUNDING (impose_constraints)
(   2.418) LOOP: DONE IMPOSING CONSTRAINTS
(   2.418) LOOP: START GENERATING (program 78)
(   2.418) GENERATE: START SOLVING
(   2.421) GENERATE: DONE SOLVING
(   2.422) LOOP: DONE GENERATING (program 78)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,C),f(B,D),tail(D,C).
(   2.422) LOOP: START TESTING
(   2.424) LOOP: DONE TESTING ('none', 'none')
(   2.424) LOOP: START IMPOSING CONSTRAINTS
(   2.424) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   2.424) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.424) GENERATE: START GROUNDING (impose_constraints)
(   2.451) GENERATE: DONE GROUNDING (impose_constraints)
(   2.451) LOOP: DONE IMPOSING CONSTRAINTS
(   2.451) LOOP: START GENERATING (program 79)
(   2.451) GENERATE: START SOLVING
(   2.453) GENERATE: DONE SOLVING
(   2.455) LOOP: DONE GENERATING (program 79)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,D),tail(D,C),tail(C,B),f(B,D).
(   2.455) LOOP: START TESTING
(   2.457) LOOP: DONE TESTING ('none', 'none')
(   2.457) LOOP: START IMPOSING CONSTRAINTS
(   2.457) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   2.457) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   2.457) GENERATE: START GROUNDING (impose_constraints)
(   2.484) GENERATE: DONE GROUNDING (impose_constraints)
(   2.484) LOOP: DONE IMPOSING CONSTRAINTS
(   2.484) LOOP: START GENERATING (program 80)
(   2.484) GENERATE: START SOLVING
(   2.487) GENERATE: DONE SOLVING
(   2.488) LOOP: DONE GENERATING (program 80)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,C),tail(C,B),f(B,D),tail(D,C).
(   2.488) LOOP: START TESTING
(   2.490) LOOP: DONE TESTING ('none', 'none')
(   2.490) LOOP: START IMPOSING CONSTRAINTS
(   2.490) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   2.490) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   2.490) GENERATE: START GROUNDING (impose_constraints)
(   2.518) GENERATE: DONE GROUNDING (impose_constraints)
(   2.518) LOOP: DONE IMPOSING CONSTRAINTS
(   2.518) LOOP: START GENERATING (program 81)
(   2.518) GENERATE: START SOLVING
(   2.520) GENERATE: DONE SOLVING
(   2.521) LOOP: DONE GENERATING (program 81)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,C),f(B,D),tail(D,C).
(   2.521) LOOP: START TESTING
(   2.523) LOOP: DONE TESTING ('none', 'none')
(   2.523) LOOP: START IMPOSING CONSTRAINTS
(   2.523) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(   2.523) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.523) GENERATE: START GROUNDING (impose_constraints)
(   2.551) GENERATE: DONE GROUNDING (impose_constraints)
(   2.551) LOOP: DONE IMPOSING CONSTRAINTS
(   2.551) LOOP: START GENERATING (program 82)
(   2.551) GENERATE: START SOLVING
(   2.553) GENERATE: DONE SOLVING
(   2.554) LOOP: DONE GENERATING (program 82)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,D),tail(D,C),empty(C).
(   2.555) LOOP: START TESTING
(   2.556) LOOP: DONE TESTING ('none', 'none')
(   2.556) LOOP: START IMPOSING CONSTRAINTS
(   2.556) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   2.556) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.556) GENERATE: START GROUNDING (impose_constraints)
(   2.585) GENERATE: DONE GROUNDING (impose_constraints)
(   2.585) LOOP: DONE IMPOSING CONSTRAINTS
(   2.585) LOOP: START GENERATING (program 83)
(   2.585) GENERATE: START SOLVING
(   2.588) GENERATE: DONE SOLVING
(   2.589) LOOP: DONE GENERATING (program 83)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,D),tail(D,C),empty(C).
(   2.589) LOOP: START TESTING
(   2.590) LOOP: DONE TESTING ('none', 'none')
(   2.590) LOOP: START IMPOSING CONSTRAINTS
(   2.590) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(   2.590) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.590) GENERATE: START GROUNDING (impose_constraints)
(   2.620) GENERATE: DONE GROUNDING (impose_constraints)
(   2.620) LOOP: DONE IMPOSING CONSTRAINTS
(   2.620) LOOP: START GENERATING (program 84)
(   2.620) GENERATE: START SOLVING
(   2.623) GENERATE: DONE SOLVING
(   2.624) LOOP: DONE GENERATING (program 84)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,D),tail(D,C),tail(C,B).
(   2.624) LOOP: START TESTING
(   2.625) LOOP: DONE TESTING ('none', 'none')
(   2.625) LOOP: START IMPOSING CONSTRAINTS
(   2.626) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(   2.626) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.626) GENERATE: START GROUNDING (impose_constraints)
(   2.654) GENERATE: DONE GROUNDING (impose_constraints)
(   2.654) LOOP: DONE IMPOSING CONSTRAINTS
(   2.654) LOOP: START GENERATING (program 85)
(   2.654) GENERATE: START SOLVING
(   2.657) GENERATE: DONE SOLVING
(   2.658) LOOP: DONE GENERATING (program 85)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,B),f(B,D),tail(D,C),empty(C).
(   2.658) LOOP: START TESTING
(   2.660) LOOP: DONE TESTING ('none', 'none')
(   2.660) LOOP: START IMPOSING CONSTRAINTS
(   2.660) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   2.660) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   2.660) GENERATE: START GROUNDING (impose_constraints)
(   2.690) GENERATE: DONE GROUNDING (impose_constraints)
(   2.690) LOOP: DONE IMPOSING CONSTRAINTS
(   2.690) LOOP: START GENERATING (program 86)
(   2.690) GENERATE: START SOLVING
(   2.692) GENERATE: DONE SOLVING
(   2.694) LOOP: DONE GENERATING (program 86)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,D),tail(D,C),tail(C,B).
(   2.694) LOOP: START TESTING
(   2.695) LOOP: DONE TESTING ('none', 'none')
(   2.695) LOOP: START IMPOSING CONSTRAINTS
(   2.695) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   2.695) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.695) GENERATE: START GROUNDING (impose_constraints)
(   2.726) GENERATE: DONE GROUNDING (impose_constraints)
(   2.726) LOOP: DONE IMPOSING CONSTRAINTS
(   2.726) LOOP: START GENERATING (program 87)
(   2.726) GENERATE: START SOLVING
(   2.729) GENERATE: DONE SOLVING
(   2.730) LOOP: DONE GENERATING (program 87)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,B),f(B,D),tail(D,C),tail(C,E).
(   2.730) LOOP: START TESTING
(   2.732) LOOP: DONE TESTING ('none', 'none')
(   2.732) LOOP: START IMPOSING CONSTRAINTS
(   2.732) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   2.732) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   2.732) GENERATE: START GROUNDING (impose_constraints)
(   2.762) GENERATE: DONE GROUNDING (impose_constraints)
(   2.762) LOOP: DONE IMPOSING CONSTRAINTS
(   2.762) LOOP: START GENERATING (program 88)
(   2.762) GENERATE: START SOLVING
(   2.765) GENERATE: DONE SOLVING
(   2.766) LOOP: DONE GENERATING (program 88)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,B),f(B,D),tail(D,C),tail(C,B).
(   2.766) LOOP: START TESTING
(   2.767) LOOP: DONE TESTING ('none', 'none')
(   2.767) LOOP: START IMPOSING CONSTRAINTS
(   2.767) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   2.767) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   2.768) GENERATE: START GROUNDING (impose_constraints)
(   2.799) GENERATE: DONE GROUNDING (impose_constraints)
(   2.799) LOOP: DONE IMPOSING CONSTRAINTS
(   2.799) LOOP: START GENERATING (program 89)
(   2.799) GENERATE: START SOLVING
(   2.802) GENERATE: DONE SOLVING
(   2.830) LOOP: DONE GENERATING (program 89)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- head(A,C),tail(A,B),f(B,D),head(D,C).
(   2.830) LOOP: START TESTING
(   2.832) LOOP: DONE TESTING ('none', 'none')
(   2.832) LOOP: START IMPOSING CONSTRAINTS
(   2.832) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   2.832) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.832) GENERATE: START GROUNDING (impose_constraints)
(   2.867) GENERATE: DONE GROUNDING (impose_constraints)
(   2.867) LOOP: DONE IMPOSING CONSTRAINTS
(   2.867) LOOP: START GENERATING (program 90)
(   2.867) GENERATE: START SOLVING
(   2.870) GENERATE: DONE SOLVING
(   2.880) LOOP: DONE GENERATING (program 90)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),head(B,C),f(B,D),head(D,C).
(   2.880) LOOP: START TESTING
(   2.882) LOOP: DONE TESTING ('none', 'none')
(   2.882) LOOP: START IMPOSING CONSTRAINTS
(   2.882) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   2.882) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.882) GENERATE: START GROUNDING (impose_constraints)
(   2.915) GENERATE: DONE GROUNDING (impose_constraints)
(   2.915) LOOP: DONE IMPOSING CONSTRAINTS
(   2.915) LOOP: START GENERATING (program 91)
(   2.915) GENERATE: START SOLVING
(   2.918) GENERATE: DONE SOLVING
(   2.919) LOOP: DONE GENERATING (program 91)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- head(A,C),tail(A,E),tail(E,B),f(B,D),head(D,C).
(   2.919) LOOP: START TESTING
(   2.920) LOOP: DONE TESTING ('none', 'none')
(   2.920) LOOP: START IMPOSING CONSTRAINTS
(   2.920) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   2.920) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   2.921) GENERATE: START GROUNDING (impose_constraints)
(   2.953) GENERATE: DONE GROUNDING (impose_constraints)
(   2.953) LOOP: DONE IMPOSING CONSTRAINTS
(   2.953) LOOP: START GENERATING (program 92)
(   2.953) GENERATE: START SOLVING
(   2.955) GENERATE: DONE SOLVING
(   2.957) LOOP: DONE GENERATING (program 92)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- head(A,C),tail(A,B),f(B,D),head(D,C).
(   2.957) LOOP: START TESTING
(   2.959) LOOP: DONE TESTING ('none', 'none')
(   2.959) LOOP: START IMPOSING CONSTRAINTS
(   2.959) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   2.959) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.959) GENERATE: START GROUNDING (impose_constraints)
(   2.991) GENERATE: DONE GROUNDING (impose_constraints)
(   2.991) LOOP: DONE IMPOSING CONSTRAINTS
(   2.991) LOOP: START GENERATING (program 93)
(   2.991) GENERATE: START SOLVING
(   2.993) GENERATE: DONE SOLVING
(   2.995) LOOP: DONE GENERATING (program 93)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- head(A,C),tail(A,B),f(B,D),head(D,C).
(   2.995) LOOP: START TESTING
(   2.996) LOOP: DONE TESTING ('none', 'none')
(   2.996) LOOP: START IMPOSING CONSTRAINTS
(   2.996) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(   2.996) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   2.996) GENERATE: START GROUNDING (impose_constraints)
(   3.028) GENERATE: DONE GROUNDING (impose_constraints)
(   3.028) LOOP: DONE IMPOSING CONSTRAINTS
(   3.028) LOOP: START GENERATING (program 94)
(   3.028) GENERATE: START SOLVING
(   3.031) GENERATE: DONE SOLVING
(   3.034) LOOP: DONE GENERATING (program 94)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,B),f(B,D),head(D,C),head(E,C).
(   3.034) LOOP: START TESTING
(   3.036) LOOP: DONE TESTING ('none', 'none')
(   3.036) LOOP: START IMPOSING CONSTRAINTS
(   3.036) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   3.036) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   3.036) GENERATE: START GROUNDING (impose_constraints)
(   3.069) GENERATE: DONE GROUNDING (impose_constraints)
(   3.069) LOOP: DONE IMPOSING CONSTRAINTS
(   3.069) LOOP: START GENERATING (program 95)
(   3.069) GENERATE: START SOLVING
(   3.071) GENERATE: DONE SOLVING
(   3.075) LOOP: DONE GENERATING (program 95)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,C),tail(C,E),tail(E,B),f(B,D),tail(D,A).
(   3.075) LOOP: START TESTING
(   3.076) LOOP: DONE TESTING ('none', 'none')
(   3.076) LOOP: START IMPOSING CONSTRAINTS
(   3.076) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   3.076) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   3.077) GENERATE: START GROUNDING (impose_constraints)
(   3.114) GENERATE: DONE GROUNDING (impose_constraints)
(   3.114) LOOP: DONE IMPOSING CONSTRAINTS
(   3.114) LOOP: START GENERATING (program 96)
(   3.114) GENERATE: START SOLVING
(   3.117) GENERATE: DONE SOLVING
(   3.139) LOOP: DONE GENERATING (program 96)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,C),tail(C,B),f(B,D),empty(D).
(   3.139) LOOP: START TESTING
(   3.141) LOOP: DONE TESTING ('none', 'none')
(   3.141) LOOP: START IMPOSING CONSTRAINTS
(   3.141) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   3.141) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   3.141) GENERATE: START GROUNDING (impose_constraints)
(   3.180) GENERATE: DONE GROUNDING (impose_constraints)
(   3.180) LOOP: DONE IMPOSING CONSTRAINTS
(   3.180) LOOP: START GENERATING (program 97)
(   3.180) GENERATE: START SOLVING
(   3.183) GENERATE: DONE SOLVING
(   3.185) LOOP: DONE GENERATING (program 97)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(B,D).
(   3.185) LOOP: START TESTING
(   3.187) LOOP: DONE TESTING ('none', 'none')
(   3.187) LOOP: START IMPOSING CONSTRAINTS
(   3.187) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   3.187) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   3.187) GENERATE: START GROUNDING (impose_constraints)
(   3.221) GENERATE: DONE GROUNDING (impose_constraints)
(   3.221) LOOP: DONE IMPOSING CONSTRAINTS
(   3.221) LOOP: START GENERATING (program 98)
(   3.221) GENERATE: START SOLVING
(   3.224) GENERATE: DONE SOLVING
(   3.231) LOOP: DONE GENERATING (program 98)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,C),tail(C,B),tail(B,D),f(B,D).
(   3.231) LOOP: START TESTING
(   3.233) LOOP: DONE TESTING ('none', 'none')
(   3.233) LOOP: START IMPOSING CONSTRAINTS
(   3.233) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   3.233) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   3.233) GENERATE: START GROUNDING (impose_constraints)
(   3.268) GENERATE: DONE GROUNDING (impose_constraints)
(   3.268) LOOP: DONE IMPOSING CONSTRAINTS
(   3.268) LOOP: START GENERATING (program 99)
(   3.268) GENERATE: START SOLVING
(   3.271) GENERATE: DONE SOLVING
(   3.275) LOOP: DONE GENERATING (program 99)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,C),tail(C,D),tail(D,B),f(B,D).
(   3.275) LOOP: START TESTING
(   3.276) LOOP: DONE TESTING ('none', 'none')
(   3.276) LOOP: START IMPOSING CONSTRAINTS
(   3.276) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   3.276) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   3.276) GENERATE: START GROUNDING (impose_constraints)
(   3.311) GENERATE: DONE GROUNDING (impose_constraints)
(   3.311) LOOP: DONE IMPOSING CONSTRAINTS
(   3.311) LOOP: START GENERATING (program 100)
(   3.311) GENERATE: START SOLVING
(   3.313) GENERATE: DONE SOLVING
(   3.317) LOOP: DONE GENERATING (program 100)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,B),head(B,C),f(B,D),head(D,C).
(   3.317) LOOP: START TESTING
(   3.318) LOOP: DONE TESTING ('none', 'none')
(   3.318) LOOP: START IMPOSING CONSTRAINTS
(   3.318) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   3.318) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   3.318) GENERATE: START GROUNDING (impose_constraints)
(   3.355) GENERATE: DONE GROUNDING (impose_constraints)
(   3.355) LOOP: DONE IMPOSING CONSTRAINTS
(   3.355) LOOP: START GENERATING (program 101)
(   3.355) GENERATE: START SOLVING
(   3.358) GENERATE: DONE SOLVING
(   3.360) LOOP: DONE GENERATING (program 101)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),head(B,C),f(B,D),head(D,C).
(   3.361) LOOP: START TESTING
(   3.362) LOOP: DONE TESTING ('none', 'none')
(   3.362) LOOP: START IMPOSING CONSTRAINTS
(   3.362) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(   3.362) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   3.362) GENERATE: START GROUNDING (impose_constraints)
(   3.398) GENERATE: DONE GROUNDING (impose_constraints)
(   3.398) LOOP: DONE IMPOSING CONSTRAINTS
(   3.398) LOOP: START GENERATING (program 102)
(   3.398) GENERATE: START SOLVING
(   3.401) GENERATE: DONE SOLVING
(   3.406) LOOP: DONE GENERATING (program 102)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,C),tail(C,E),tail(E,B),f(B,D),tail(D,B).
(   3.406) LOOP: START TESTING
(   3.408) LOOP: DONE TESTING ('none', 'none')
(   3.408) LOOP: START IMPOSING CONSTRAINTS
(   3.408) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   3.408) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   3.408) GENERATE: START GROUNDING (impose_constraints)
(   3.444) GENERATE: DONE GROUNDING (impose_constraints)
(   3.444) LOOP: DONE IMPOSING CONSTRAINTS
(   3.444) LOOP: START GENERATING (program 103)
(   3.444) GENERATE: START SOLVING
(   3.447) GENERATE: DONE SOLVING
(   3.449) LOOP: DONE GENERATING (program 103)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(B,D).
(   3.449) LOOP: START TESTING
(   3.451) LOOP: DONE TESTING ('none', 'none')
(   3.451) LOOP: START IMPOSING CONSTRAINTS
(   3.451) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   3.451) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   3.451) GENERATE: START GROUNDING (impose_constraints)
(   3.488) GENERATE: DONE GROUNDING (impose_constraints)
(   3.488) LOOP: DONE IMPOSING CONSTRAINTS
(   3.488) LOOP: START GENERATING (program 104)
(   3.488) GENERATE: START SOLVING
(   3.491) GENERATE: DONE SOLVING
(   3.495) LOOP: DONE GENERATING (program 104)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(B,D).
(   3.495) LOOP: START TESTING
(   3.496) LOOP: DONE TESTING ('none', 'none')
(   3.496) LOOP: START IMPOSING CONSTRAINTS
(   3.496) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(   3.496) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   3.496) GENERATE: START GROUNDING (impose_constraints)
(   3.533) GENERATE: DONE GROUNDING (impose_constraints)
(   3.533) LOOP: DONE IMPOSING CONSTRAINTS
(   3.533) LOOP: START GENERATING (program 105)
(   3.533) GENERATE: START SOLVING
(   3.536) GENERATE: DONE SOLVING
(   3.616) LOOP: DONE GENERATING (program 105)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,B),f(E,D),tail(D,C),tail(C,A).
(   3.616) LOOP: START TESTING
(   3.618) LOOP: DONE TESTING ('none', 'none')
(   3.618) LOOP: START IMPOSING CONSTRAINTS
(   3.618) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   3.618) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,f,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   3.618) GENERATE: START GROUNDING (impose_constraints)
(   3.655) GENERATE: DONE GROUNDING (impose_constraints)
(   3.655) LOOP: DONE IMPOSING CONSTRAINTS
(   3.655) LOOP: START GENERATING (program 106)
(   3.655) GENERATE: START SOLVING
(   3.658) GENERATE: DONE SOLVING
(   3.665) LOOP: DONE GENERATING (program 106)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B),tail(B,E),f(E,D).
(   3.665) LOOP: START TESTING
(   3.666) LOOP: DONE TESTING ('none', 'none')
(   3.666) LOOP: START IMPOSING CONSTRAINTS
(   3.666) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   3.666) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,f,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   3.666) GENERATE: START GROUNDING (impose_constraints)
(   3.704) GENERATE: DONE GROUNDING (impose_constraints)
(   3.704) LOOP: DONE IMPOSING CONSTRAINTS
(   3.704) LOOP: START GENERATING (program 107)
(   3.704) GENERATE: START SOLVING
(   3.707) GENERATE: DONE SOLVING
(   3.714) LOOP: DONE GENERATING (program 107)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),f(E,D),tail(D,C),tail(C,B).
(   3.714) LOOP: START TESTING
(   3.716) LOOP: DONE TESTING ('none', 'none')
(   3.716) LOOP: START IMPOSING CONSTRAINTS
(   3.716) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   3.716) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,f,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   3.716) GENERATE: START GROUNDING (impose_constraints)
(   3.754) GENERATE: DONE GROUNDING (impose_constraints)
(   3.754) LOOP: DONE IMPOSING CONSTRAINTS
(   3.754) LOOP: START GENERATING (program 108)
(   3.754) GENERATE: START SOLVING
(   3.757) GENERATE: DONE SOLVING
(   3.766) LOOP: DONE GENERATING (program 108)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,E),tail(E,C),tail(C,B),f(E,D).
(   3.766) LOOP: START TESTING
(   3.768) LOOP: DONE TESTING ('none', 'none')
(   3.768) LOOP: START IMPOSING CONSTRAINTS
(   3.768) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   3.768) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,f,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   3.768) GENERATE: START GROUNDING (impose_constraints)
(   3.811) GENERATE: DONE GROUNDING (impose_constraints)
(   3.811) LOOP: DONE IMPOSING CONSTRAINTS
(   3.811) LOOP: START GENERATING (program 109)
(   3.811) GENERATE: START SOLVING
(   3.815) GENERATE: DONE SOLVING
(   3.855) LOOP: DONE GENERATING (program 109)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,E),f(E,B).
  f(A,B) :- tail(A,C),tail(C,B).
(   3.855) LOOP: START TESTING
(   3.857) LOOP: DONE TESTING ('none', 'none')
(   3.857) LOOP: START IMPOSING CONSTRAINTS
(   3.857) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   3.857) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,f,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V4)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   3.857) GENERATE: START GROUNDING (impose_constraints)
(   3.896) GENERATE: DONE GROUNDING (impose_constraints)
(   3.896) LOOP: DONE IMPOSING CONSTRAINTS
(   3.896) LOOP: START GENERATING (program 110)
(   3.896) GENERATE: START SOLVING
(   3.900) GENERATE: DONE SOLVING
(   3.912) LOOP: DONE GENERATING (program 110)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B),f(C,D).
  f(A,B) :- tail(A,C),tail(C,B).
(   3.912) LOOP: START TESTING
(   3.913) LOOP: DONE TESTING ('none', 'none')
(   3.913) LOOP: START IMPOSING CONSTRAINTS
(   3.913) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   3.913) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   3.913) GENERATE: START GROUNDING (impose_constraints)
(   3.953) GENERATE: DONE GROUNDING (impose_constraints)
(   3.953) LOOP: DONE IMPOSING CONSTRAINTS
(   3.953) LOOP: START GENERATING (program 111)
(   3.954) GENERATE: START SOLVING
(   3.957) GENERATE: DONE SOLVING
(   3.962) LOOP: DONE GENERATING (program 111)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,E),tail(E,C),f(C,D).
  f(A,B) :- tail(A,B).
(   3.962) LOOP: START TESTING
(   3.963) LOOP: DONE TESTING ('none', 'none')
(   3.963) LOOP: START IMPOSING CONSTRAINTS
(   3.963) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   3.963) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   3.964) GENERATE: START GROUNDING (impose_constraints)
(   4.004) GENERATE: DONE GROUNDING (impose_constraints)
(   4.004) LOOP: DONE IMPOSING CONSTRAINTS
(   4.004) LOOP: START GENERATING (program 112)
(   4.004) GENERATE: START SOLVING
(   4.007) GENERATE: DONE SOLVING
(   4.011) LOOP: DONE GENERATING (program 112)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,E),tail(E,C),tail(C,B),f(C,D).
  f(A,B) :- tail(A,B).
(   4.011) LOOP: START TESTING
(   4.012) LOOP: DONE TESTING ('none', 'none')
(   4.012) LOOP: START IMPOSING CONSTRAINTS
(   4.012) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   4.012) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   4.012) GENERATE: START GROUNDING (impose_constraints)
(   4.053) GENERATE: DONE GROUNDING (impose_constraints)
(   4.053) LOOP: DONE IMPOSING CONSTRAINTS
(   4.053) LOOP: START GENERATING (program 113)
(   4.053) GENERATE: START SOLVING
(   4.057) GENERATE: DONE SOLVING
(   4.064) LOOP: DONE GENERATING (program 113)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),tail(B,E),f(C,D),tail(D,E).
  f(A,B) :- tail(A,B).
(   4.064) LOOP: START TESTING
(   4.066) LOOP: DONE TESTING ('none', 'none')
(   4.066) LOOP: START IMPOSING CONSTRAINTS
(   4.066) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   4.066) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   4.066) GENERATE: START GROUNDING (impose_constraints)
(   4.107) GENERATE: DONE GROUNDING (impose_constraints)
(   4.107) LOOP: DONE IMPOSING CONSTRAINTS
(   4.107) LOOP: START GENERATING (program 114)
(   4.107) GENERATE: START SOLVING
(   4.110) GENERATE: DONE SOLVING
(   4.126) LOOP: DONE GENERATING (program 114)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,D),tail(D,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(   4.127) LOOP: START TESTING
(   4.128) LOOP: DONE TESTING ('none', 'none')
(   4.128) LOOP: START IMPOSING CONSTRAINTS
(   4.128) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(   4.128) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   4.128) GENERATE: START GROUNDING (impose_constraints)
(   4.170) GENERATE: DONE GROUNDING (impose_constraints)
(   4.170) LOOP: DONE IMPOSING CONSTRAINTS
(   4.170) LOOP: START GENERATING (program 115)
(   4.170) GENERATE: START SOLVING
(   4.173) GENERATE: DONE SOLVING
(   4.183) LOOP: DONE GENERATING (program 115)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(C,D).
  f(A,B) :- tail(A,C),tail(C,B).
(   4.183) LOOP: START TESTING
(   4.184) LOOP: DONE TESTING ('none', 'none')
(   4.184) LOOP: START IMPOSING CONSTRAINTS
(   4.184) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   4.184) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   4.184) GENERATE: START GROUNDING (impose_constraints)
(   4.227) GENERATE: DONE GROUNDING (impose_constraints)
(   4.227) LOOP: DONE IMPOSING CONSTRAINTS
(   4.227) LOOP: START GENERATING (program 116)
(   4.227) GENERATE: START SOLVING
(   4.230) GENERATE: DONE SOLVING
(   4.233) LOOP: DONE GENERATING (program 116)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),head(C,E),f(C,D),head(D,E).
  f(A,B) :- tail(A,B).
(   4.233) LOOP: START TESTING
(   4.235) LOOP: DONE TESTING ('none', 'none')
(   4.235) LOOP: START IMPOSING CONSTRAINTS
(   4.235) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   4.235) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V2,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,head,2,(ClId0V3,ClId0V4)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   4.235) GENERATE: START GROUNDING (impose_constraints)
(   4.278) GENERATE: DONE GROUNDING (impose_constraints)
(   4.278) LOOP: DONE IMPOSING CONSTRAINTS
(   4.278) LOOP: START GENERATING (program 117)
(   4.278) GENERATE: START SOLVING
(   4.281) GENERATE: DONE SOLVING
(   4.285) LOOP: DONE GENERATING (program 117)
PROGRAM:
  f(A,B) :- head(A,E),tail(A,C),tail(C,B),f(C,D),head(D,E).
  f(A,B) :- tail(A,B).
(   4.286) LOOP: START TESTING
(   4.287) LOOP: DONE TESTING ('none', 'none')
(   4.287) LOOP: START IMPOSING CONSTRAINTS
(   4.287) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   4.287) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,head,2,(ClId0V3,ClId0V4)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   4.287) GENERATE: START GROUNDING (impose_constraints)
(   4.330) GENERATE: DONE GROUNDING (impose_constraints)
(   4.330) LOOP: DONE IMPOSING CONSTRAINTS
(   4.330) LOOP: START GENERATING (program 118)
(   4.330) GENERATE: START SOLVING
(   4.333) GENERATE: DONE SOLVING
(   4.340) LOOP: DONE GENERATING (program 118)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,D),tail(C,B),head(D,E),head(B,E).
  f(A,B) :- tail(A,B).
(   4.340) LOOP: START TESTING
(   4.342) LOOP: DONE TESTING ('none', 'none')
(   4.342) LOOP: START IMPOSING CONSTRAINTS
(   4.342) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   4.342) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,head,2,(ClId0V3,ClId0V4)),body_literal(ClId0,head,2,(ClId0V1,ClId0V4)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   4.342) GENERATE: START GROUNDING (impose_constraints)
(   4.390) GENERATE: DONE GROUNDING (impose_constraints)
(   4.390) LOOP: DONE IMPOSING CONSTRAINTS
(   4.390) LOOP: START GENERATING (program 119)
(   4.390) GENERATE: START SOLVING
(   4.394) GENERATE: DONE SOLVING
(   4.409) LOOP: DONE GENERATING (program 119)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,B),tail(B,D),tail(D,C),f(C,D).
  f(A,B) :- tail(A,B).
(   4.409) LOOP: START TESTING
(   4.411) LOOP: DONE TESTING ('none', 'none')
(   4.411) LOOP: START IMPOSING CONSTRAINTS
(   4.411) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   4.411) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   4.411) GENERATE: START GROUNDING (impose_constraints)
(   4.462) GENERATE: DONE GROUNDING (impose_constraints)
(   4.462) LOOP: DONE IMPOSING CONSTRAINTS
(   4.462) LOOP: START GENERATING (program 120)
(   4.462) GENERATE: START SOLVING
(   4.466) GENERATE: DONE SOLVING
(   4.472) LOOP: DONE GENERATING (program 120)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,B),tail(B,C),f(C,D),tail(D,E).
  f(A,B) :- tail(A,B).
(   4.472) LOOP: START TESTING
(   4.474) LOOP: DONE TESTING ('none', 'none')
(   4.474) LOOP: START IMPOSING CONSTRAINTS
(   4.474) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   4.474) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   4.474) GENERATE: START GROUNDING (impose_constraints)
(   4.519) GENERATE: DONE GROUNDING (impose_constraints)
(   4.519) LOOP: DONE IMPOSING CONSTRAINTS
(   4.519) LOOP: START GENERATING (program 121)
(   4.519) GENERATE: START SOLVING
(   4.522) GENERATE: DONE SOLVING
(   4.527) LOOP: DONE GENERATING (program 121)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),f(C,D).
  f(A,B) :- tail(A,C),tail(C,B).
(   4.527) LOOP: START TESTING
(   4.528) LOOP: DONE TESTING ('none', 'none')
(   4.528) LOOP: START IMPOSING CONSTRAINTS
(   4.528) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   4.528) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   4.528) GENERATE: START GROUNDING (impose_constraints)
(   4.573) GENERATE: DONE GROUNDING (impose_constraints)
(   4.573) LOOP: DONE IMPOSING CONSTRAINTS
(   4.573) LOOP: START GENERATING (program 122)
(   4.573) GENERATE: START SOLVING
(   4.577) GENERATE: DONE SOLVING
(   4.586) LOOP: DONE GENERATING (program 122)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,D),empty(D),tail(C,E),tail(E,B).
  f(A,B) :- tail(A,B).
(   4.586) LOOP: START TESTING
(   4.588) LOOP: DONE TESTING ('none', 'none')
(   4.588) LOOP: START IMPOSING CONSTRAINTS
(   4.588) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   4.588) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V3,)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   4.588) GENERATE: START GROUNDING (impose_constraints)
(   4.634) GENERATE: DONE GROUNDING (impose_constraints)
(   4.634) LOOP: DONE IMPOSING CONSTRAINTS
(   4.634) LOOP: START GENERATING (program 123)
(   4.634) GENERATE: START SOLVING
(   4.638) GENERATE: DONE SOLVING
(   4.654) LOOP: DONE GENERATING (program 123)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,B).
  f(A,B) :- tail(A,B),empty(B).
(   4.655) LOOP: START TESTING
(   4.656) LOOP: DONE TESTING ('none', 'none')
(   4.656) LOOP: START IMPOSING CONSTRAINTS
(   4.656) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(   4.656) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   4.656) GENERATE: START GROUNDING (impose_constraints)
(   4.702) GENERATE: DONE GROUNDING (impose_constraints)
(   4.702) LOOP: DONE IMPOSING CONSTRAINTS
(   4.702) LOOP: START GENERATING (program 124)
(   4.702) GENERATE: START SOLVING
(   4.706) GENERATE: DONE SOLVING
(   4.709) LOOP: DONE GENERATING (program 124)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,D).
  f(A,B) :- tail(A,C),tail(C,B).
(   4.709) LOOP: START TESTING
(   4.711) LOOP: DONE TESTING ('none', 'none')
(   4.711) LOOP: START IMPOSING CONSTRAINTS
(   4.711) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   4.711) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   4.711) GENERATE: START GROUNDING (impose_constraints)
(   4.757) GENERATE: DONE GROUNDING (impose_constraints)
(   4.757) LOOP: DONE IMPOSING CONSTRAINTS
(   4.757) LOOP: START GENERATING (program 125)
(   4.757) GENERATE: START SOLVING
(   4.761) GENERATE: DONE SOLVING
(   4.764) LOOP: DONE GENERATING (program 125)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,D),tail(D,A),tail(C,E),tail(E,B).
  f(A,B) :- tail(A,B).
(   4.764) LOOP: START TESTING
(   4.765) LOOP: DONE TESTING ('none', 'none')
(   4.765) LOOP: START IMPOSING CONSTRAINTS
(   4.765) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   4.765) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V0)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   4.766) GENERATE: START GROUNDING (impose_constraints)
(   4.812) GENERATE: DONE GROUNDING (impose_constraints)
(   4.812) LOOP: DONE IMPOSING CONSTRAINTS
(   4.812) LOOP: START GENERATING (program 126)
(   4.812) GENERATE: START SOLVING
(   4.815) GENERATE: DONE SOLVING
(   4.817) LOOP: DONE GENERATING (program 126)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,C),f(C,D),tail(D,B).
  f(A,B) :- tail(A,C),tail(C,B).
(   4.817) LOOP: START TESTING
(   4.819) LOOP: DONE TESTING ('none', 'none')
(   4.819) LOOP: START IMPOSING CONSTRAINTS
(   4.819) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   4.819) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   4.819) GENERATE: START GROUNDING (impose_constraints)
(   4.865) GENERATE: DONE GROUNDING (impose_constraints)
(   4.865) LOOP: DONE IMPOSING CONSTRAINTS
(   4.865) LOOP: START GENERATING (program 127)
(   4.865) GENERATE: START SOLVING
(   4.869) GENERATE: DONE SOLVING
(   4.873) LOOP: DONE GENERATING (program 127)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,D),tail(C,E),tail(E,B),tail(B,D).
  f(A,B) :- tail(A,B).
(   4.873) LOOP: START TESTING
(   4.875) LOOP: DONE TESTING ('none', 'none')
(   4.875) LOOP: START IMPOSING CONSTRAINTS
(   4.875) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   4.875) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   4.875) GENERATE: START GROUNDING (impose_constraints)
(   4.922) GENERATE: DONE GROUNDING (impose_constraints)
(   4.922) LOOP: DONE IMPOSING CONSTRAINTS
(   4.922) LOOP: START GENERATING (program 128)
(   4.922) GENERATE: START SOLVING
(   4.926) GENERATE: DONE SOLVING
(   4.939) LOOP: DONE GENERATING (program 128)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(C,D),tail(D,E),empty(E).
  f(A,B) :- tail(A,B).
(   4.939) LOOP: START TESTING
(   4.940) LOOP: DONE TESTING ('none', 'none')
(   4.940) LOOP: START IMPOSING CONSTRAINTS
(   4.941) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   4.941) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V4,)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   4.941) GENERATE: START GROUNDING (impose_constraints)
(   4.991) GENERATE: DONE GROUNDING (impose_constraints)
(   4.991) LOOP: DONE IMPOSING CONSTRAINTS
(   4.991) LOOP: START GENERATING (program 129)
(   4.991) GENERATE: START SOLVING
(   4.996) GENERATE: DONE SOLVING
(   5.001) LOOP: DONE GENERATING (program 129)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,C),tail(C,B),f(C,D),tail(D,E).
  f(A,B) :- tail(A,B).
(   5.001) LOOP: START TESTING
(   5.003) LOOP: DONE TESTING ('none', 'none')
(   5.003) LOOP: START IMPOSING CONSTRAINTS
(   5.003) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   5.003) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   5.003) GENERATE: START GROUNDING (impose_constraints)
(   5.054) GENERATE: DONE GROUNDING (impose_constraints)
(   5.054) LOOP: DONE IMPOSING CONSTRAINTS
(   5.054) LOOP: START GENERATING (program 130)
(   5.054) GENERATE: START SOLVING
(   5.058) GENERATE: DONE SOLVING
(   5.072) LOOP: DONE GENERATING (program 130)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,D),tail(D,C),tail(C,E),tail(E,B).
  f(A,B) :- tail(A,B).
(   5.072) LOOP: START TESTING
(   5.074) LOOP: DONE TESTING ('none', 'none')
(   5.074) LOOP: START IMPOSING CONSTRAINTS
(   5.074) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   5.074) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   5.074) GENERATE: START GROUNDING (impose_constraints)
(   5.122) GENERATE: DONE GROUNDING (impose_constraints)
(   5.122) LOOP: DONE IMPOSING CONSTRAINTS
(   5.122) LOOP: START GENERATING (program 131)
(   5.122) GENERATE: START SOLVING
(   5.126) GENERATE: DONE SOLVING
(   5.130) LOOP: DONE GENERATING (program 131)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(C,D),tail(D,E),tail(E,C).
  f(A,B) :- tail(A,B).
(   5.130) LOOP: START TESTING
(   5.132) LOOP: DONE TESTING ('none', 'none')
(   5.132) LOOP: START IMPOSING CONSTRAINTS
(   5.132) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   5.132) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   5.132) GENERATE: START GROUNDING (impose_constraints)
(   5.182) GENERATE: DONE GROUNDING (impose_constraints)
(   5.182) LOOP: DONE IMPOSING CONSTRAINTS
(   5.182) LOOP: START GENERATING (program 132)
(   5.182) GENERATE: START SOLVING
(   5.186) GENERATE: DONE SOLVING
(   5.203) LOOP: DONE GENERATING (program 132)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),empty(D).
  f(A,B) :- tail(A,C),tail(C,B).
(   5.203) LOOP: START TESTING
(   5.204) LOOP: DONE TESTING ('none', 'none')
(   5.204) LOOP: START IMPOSING CONSTRAINTS
(   5.204) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(   5.204) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V3,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   5.204) GENERATE: START GROUNDING (impose_constraints)
(   5.255) GENERATE: DONE GROUNDING (impose_constraints)
(   5.255) LOOP: DONE IMPOSING CONSTRAINTS
(   5.255) LOOP: START GENERATING (program 133)
(   5.255) GENERATE: START SOLVING
(   5.259) GENERATE: DONE SOLVING
(   5.270) LOOP: DONE GENERATING (program 133)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
(   5.270) LOOP: START TESTING
(   5.272) LOOP: DONE TESTING ('none', 'none')
(   5.272) LOOP: START IMPOSING CONSTRAINTS
(   5.272) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.272) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   5.272) GENERATE: START GROUNDING (impose_constraints)
(   5.323) GENERATE: DONE GROUNDING (impose_constraints)
(   5.323) LOOP: DONE IMPOSING CONSTRAINTS
(   5.323) LOOP: START GENERATING (program 134)
(   5.323) GENERATE: START SOLVING
(   5.327) GENERATE: DONE SOLVING
(   5.338) LOOP: DONE GENERATING (program 134)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,B).
(   5.338) LOOP: START TESTING
(   5.340) LOOP: DONE TESTING ('none', 'none')
(   5.340) LOOP: START IMPOSING CONSTRAINTS
(   5.340) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(   5.340) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   5.340) GENERATE: START GROUNDING (impose_constraints)
(   5.389) GENERATE: DONE GROUNDING (impose_constraints)
(   5.389) LOOP: DONE IMPOSING CONSTRAINTS
(   5.389) LOOP: START GENERATING (program 135)
(   5.389) GENERATE: START SOLVING
(   5.393) GENERATE: DONE SOLVING
(   5.427) LOOP: DONE GENERATING (program 135)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,C),tail(C,B),tail(B,D),f(D,B).
(   5.427) LOOP: START TESTING
(   5.429) LOOP: DONE TESTING ('none', 'none')
(   5.429) LOOP: START IMPOSING CONSTRAINTS
(   5.429) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   5.429) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,f,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   5.429) GENERATE: START GROUNDING (impose_constraints)
(   5.479) GENERATE: DONE GROUNDING (impose_constraints)
(   5.479) LOOP: DONE IMPOSING CONSTRAINTS
(   5.479) LOOP: START GENERATING (program 136)
(   5.479) GENERATE: START SOLVING
(   5.483) GENERATE: DONE SOLVING
(   5.531) LOOP: DONE GENERATING (program 136)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(   5.531) LOOP: START TESTING
(   5.533) LOOP: DONE TESTING ('none', 'none')
(   5.533) LOOP: START IMPOSING CONSTRAINTS
(   5.533) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(   5.533) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   5.533) GENERATE: START GROUNDING (impose_constraints)
(   5.585) GENERATE: DONE GROUNDING (impose_constraints)
(   5.585) LOOP: DONE IMPOSING CONSTRAINTS
(   5.585) LOOP: START GENERATING (program 137)
(   5.585) GENERATE: START SOLVING
(   5.589) GENERATE: DONE SOLVING
(   5.600) LOOP: DONE GENERATING (program 137)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,B),tail(B,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,B).
(   5.600) LOOP: START TESTING
(   5.602) LOOP: DONE TESTING ('none', 'none')
(   5.602) LOOP: START IMPOSING CONSTRAINTS
(   5.602) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(   5.602) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   5.602) GENERATE: START GROUNDING (impose_constraints)
(   5.653) GENERATE: DONE GROUNDING (impose_constraints)
(   5.653) LOOP: DONE IMPOSING CONSTRAINTS
(   5.653) LOOP: START GENERATING (program 138)
(   5.653) GENERATE: START SOLVING
(   5.657) GENERATE: DONE SOLVING
(   5.718) LOOP: DONE GENERATING (program 138)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,D),tail(D,C),f(C,A),tail(C,B).
(   5.718) LOOP: START TESTING
(   5.720) LOOP: DONE TESTING ('none', 'none')
(   5.720) LOOP: START IMPOSING CONSTRAINTS
(   5.720) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   5.720) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   5.720) GENERATE: START GROUNDING (impose_constraints)
(   5.781) GENERATE: DONE GROUNDING (impose_constraints)
(   5.781) LOOP: DONE IMPOSING CONSTRAINTS
(   5.781) LOOP: START GENERATING (program 139)
(   5.781) GENERATE: START SOLVING
(   5.786) GENERATE: DONE SOLVING
(   5.790) LOOP: DONE GENERATING (program 139)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,C),tail(C,D),f(C,A),tail(D,E),tail(E,B).
(   5.790) LOOP: START TESTING
(   5.792) LOOP: DONE TESTING ('none', 'none')
(   5.792) LOOP: START IMPOSING CONSTRAINTS
(   5.792) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   5.792) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   5.792) GENERATE: START GROUNDING (impose_constraints)
(   5.845) GENERATE: DONE GROUNDING (impose_constraints)
(   5.845) LOOP: DONE IMPOSING CONSTRAINTS
(   5.845) LOOP: START GENERATING (program 140)
(   5.845) GENERATE: START SOLVING
(   5.850) GENERATE: DONE SOLVING
(   5.869) LOOP: DONE GENERATING (program 140)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,C),tail(C,D),f(C,A),tail(D,B).
(   5.869) LOOP: START TESTING
(   5.871) LOOP: DONE TESTING ('none', 'none')
(   5.871) LOOP: START IMPOSING CONSTRAINTS
(   5.871) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   5.871) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   5.871) GENERATE: START GROUNDING (impose_constraints)
(   5.923) GENERATE: DONE GROUNDING (impose_constraints)
(   5.923) LOOP: DONE IMPOSING CONSTRAINTS
(   5.923) LOOP: START GENERATING (program 141)
(   5.923) GENERATE: START SOLVING
(   5.927) GENERATE: DONE SOLVING
(   5.931) LOOP: DONE GENERATING (program 141)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,B),tail(B,D),tail(D,C),f(C,A).
(   5.931) LOOP: START TESTING
(   5.933) LOOP: DONE TESTING ('none', 'none')
(   5.933) LOOP: START IMPOSING CONSTRAINTS
(   5.933) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   5.933) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   5.933) GENERATE: START GROUNDING (impose_constraints)
(   5.986) GENERATE: DONE GROUNDING (impose_constraints)
(   5.986) LOOP: DONE IMPOSING CONSTRAINTS
(   5.986) LOOP: START GENERATING (program 142)
(   5.986) GENERATE: START SOLVING
(   5.990) GENERATE: DONE SOLVING
(   5.992) LOOP: DONE GENERATING (program 142)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
(   5.992) LOOP: START TESTING
(   5.994) LOOP: DONE TESTING ('none', 'none')
(   5.994) LOOP: START IMPOSING CONSTRAINTS
(   5.994) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   5.994) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   5.994) GENERATE: START GROUNDING (impose_constraints)
(   6.049) GENERATE: DONE GROUNDING (impose_constraints)
(   6.049) LOOP: DONE IMPOSING CONSTRAINTS
(   6.049) LOOP: START GENERATING (program 143)
(   6.049) GENERATE: START SOLVING
(   6.053) GENERATE: DONE SOLVING
(   6.066) LOOP: DONE GENERATING (program 143)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,E),tail(E,B),tail(B,C),f(C,A).
(   6.066) LOOP: START TESTING
(   6.067) LOOP: DONE TESTING ('none', 'none')
(   6.067) LOOP: START IMPOSING CONSTRAINTS
(   6.067) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   6.067) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   6.067) GENERATE: START GROUNDING (impose_constraints)
(   6.122) GENERATE: DONE GROUNDING (impose_constraints)
(   6.122) LOOP: DONE IMPOSING CONSTRAINTS
(   6.122) LOOP: START GENERATING (program 144)
(   6.122) GENERATE: START SOLVING
(   6.126) GENERATE: DONE SOLVING
(   6.132) LOOP: DONE GENERATING (program 144)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,C),f(C,A),tail(C,B).
(   6.133) LOOP: START TESTING
(   6.134) LOOP: DONE TESTING ('none', 'none')
(   6.134) LOOP: START IMPOSING CONSTRAINTS
(   6.134) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   6.134) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   6.134) GENERATE: START GROUNDING (impose_constraints)
(   6.189) GENERATE: DONE GROUNDING (impose_constraints)
(   6.189) LOOP: DONE IMPOSING CONSTRAINTS
(   6.189) LOOP: START GENERATING (program 145)
(   6.189) GENERATE: START SOLVING
(   6.193) GENERATE: DONE SOLVING
(   6.198) LOOP: DONE GENERATING (program 145)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,A).
(   6.198) LOOP: START TESTING
(   6.199) LOOP: DONE TESTING ('none', 'none')
(   6.199) LOOP: START IMPOSING CONSTRAINTS
(   6.199) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   6.199) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   6.200) GENERATE: START GROUNDING (impose_constraints)
(   6.255) GENERATE: DONE GROUNDING (impose_constraints)
(   6.255) LOOP: DONE IMPOSING CONSTRAINTS
(   6.255) LOOP: START GENERATING (program 146)
(   6.255) GENERATE: START SOLVING
(   6.259) GENERATE: DONE SOLVING
(   6.266) LOOP: DONE GENERATING (program 146)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,A).
(   6.266) LOOP: START TESTING
(   6.267) LOOP: DONE TESTING ('none', 'none')
(   6.267) LOOP: START IMPOSING CONSTRAINTS
(   6.267) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   6.267) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   6.268) GENERATE: START GROUNDING (impose_constraints)
(   6.329) GENERATE: DONE GROUNDING (impose_constraints)
(   6.329) LOOP: DONE IMPOSING CONSTRAINTS
(   6.329) LOOP: START GENERATING (program 147)
(   6.329) GENERATE: START SOLVING
(   6.335) GENERATE: DONE SOLVING
(   6.346) LOOP: DONE GENERATING (program 147)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),f(C,A).
(   6.346) LOOP: START TESTING
(   6.347) LOOP: DONE TESTING ('none', 'none')
(   6.347) LOOP: START IMPOSING CONSTRAINTS
(   6.347) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   6.347) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   6.348) GENERATE: START GROUNDING (impose_constraints)
(   6.409) GENERATE: DONE GROUNDING (impose_constraints)
(   6.409) LOOP: DONE IMPOSING CONSTRAINTS
(   6.409) LOOP: START GENERATING (program 148)
(   6.409) GENERATE: START SOLVING
(   6.416) GENERATE: DONE SOLVING
(   6.437) LOOP: DONE GENERATING (program 148)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
(   6.437) LOOP: START TESTING
(   6.439) LOOP: DONE TESTING ('none', 'none')
(   6.439) LOOP: START IMPOSING CONSTRAINTS
(   6.439) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   6.439) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   6.439) GENERATE: START GROUNDING (impose_constraints)
(   6.495) GENERATE: DONE GROUNDING (impose_constraints)
(   6.495) LOOP: DONE IMPOSING CONSTRAINTS
(   6.495) LOOP: START GENERATING (program 149)
(   6.495) GENERATE: START SOLVING
(   6.500) GENERATE: DONE SOLVING
(   6.507) LOOP: DONE GENERATING (program 149)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,D),f(C,A),tail(D,B).
(   6.507) LOOP: START TESTING
(   6.508) LOOP: DONE TESTING ('none', 'none')
(   6.508) LOOP: START IMPOSING CONSTRAINTS
(   6.508) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   6.508) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   6.509) GENERATE: START GROUNDING (impose_constraints)
(   6.565) GENERATE: DONE GROUNDING (impose_constraints)
(   6.565) LOOP: DONE IMPOSING CONSTRAINTS
(   6.565) LOOP: START GENERATING (program 150)
(   6.565) GENERATE: START SOLVING
(   6.570) GENERATE: DONE SOLVING
(   6.593) LOOP: DONE GENERATING (program 150)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,A).
(   6.594) LOOP: START TESTING
(   6.595) LOOP: DONE TESTING ('none', 'none')
(   6.595) LOOP: START IMPOSING CONSTRAINTS
(   6.595) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(   6.595) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   6.595) GENERATE: START GROUNDING (impose_constraints)
(   6.652) GENERATE: DONE GROUNDING (impose_constraints)
(   6.652) LOOP: DONE IMPOSING CONSTRAINTS
(   6.652) LOOP: START GENERATING (program 151)
(   6.652) GENERATE: START SOLVING
(   6.657) GENERATE: DONE SOLVING
(   6.664) LOOP: DONE GENERATING (program 151)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
(   6.664) LOOP: START TESTING
(   6.665) LOOP: DONE TESTING ('none', 'none')
(   6.665) LOOP: START IMPOSING CONSTRAINTS
(   6.665) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   6.665) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   6.665) GENERATE: START GROUNDING (impose_constraints)
(   6.723) GENERATE: DONE GROUNDING (impose_constraints)
(   6.723) LOOP: DONE IMPOSING CONSTRAINTS
(   6.723) LOOP: START GENERATING (program 152)
(   6.723) GENERATE: START SOLVING
(   6.728) GENERATE: DONE SOLVING
(   6.748) LOOP: DONE GENERATING (program 152)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),empty(B).
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
(   6.748) LOOP: START TESTING
(   6.749) LOOP: DONE TESTING ('none', 'none')
(   6.749) LOOP: START IMPOSING CONSTRAINTS
(   6.749) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   6.749) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   6.749) GENERATE: START GROUNDING (impose_constraints)
(   6.808) GENERATE: DONE GROUNDING (impose_constraints)
(   6.808) LOOP: DONE IMPOSING CONSTRAINTS
(   6.808) LOOP: START GENERATING (program 153)
(   6.808) GENERATE: START SOLVING
(   6.813) GENERATE: DONE SOLVING
(   6.823) LOOP: DONE GENERATING (program 153)
PROGRAM:
  f(A,B) :- empty(A),tail(A,C),tail(C,B).
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
(   6.823) LOOP: START TESTING
(   6.824) LOOP: DONE TESTING ('none', 'none')
(   6.824) LOOP: START IMPOSING CONSTRAINTS
(   6.824) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   6.824) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   6.825) GENERATE: START GROUNDING (impose_constraints)
(   6.883) GENERATE: DONE GROUNDING (impose_constraints)
(   6.883) LOOP: DONE IMPOSING CONSTRAINTS
(   6.883) LOOP: START GENERATING (program 154)
(   6.883) GENERATE: START SOLVING
(   6.888) GENERATE: DONE SOLVING
(   6.894) LOOP: DONE GENERATING (program 154)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
(   6.894) LOOP: START TESTING
(   6.896) LOOP: DONE TESTING ('none', 'none')
(   6.896) LOOP: START IMPOSING CONSTRAINTS
(   6.896) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.896) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   6.896) GENERATE: START GROUNDING (impose_constraints)
(   6.960) GENERATE: DONE GROUNDING (impose_constraints)
(   6.960) LOOP: DONE IMPOSING CONSTRAINTS
(   6.960) LOOP: START GENERATING (program 155)
(   6.960) GENERATE: START SOLVING
(   6.966) GENERATE: DONE SOLVING
(   6.969) LOOP: DONE GENERATING (program 155)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),tail(B,A).
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
(   6.969) LOOP: START TESTING
(   6.971) LOOP: DONE TESTING ('none', 'none')
(   6.971) LOOP: START IMPOSING CONSTRAINTS
(   6.971) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   6.971) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   6.971) GENERATE: START GROUNDING (impose_constraints)
(   7.035) GENERATE: DONE GROUNDING (impose_constraints)
(   7.035) LOOP: DONE IMPOSING CONSTRAINTS
(   7.035) LOOP: START GENERATING (program 156)
(   7.035) GENERATE: START SOLVING
(   7.040) GENERATE: DONE SOLVING
(   7.042) LOOP: DONE GENERATING (program 156)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),empty(C).
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
(   7.042) LOOP: START TESTING
(   7.043) LOOP: DONE TESTING ('none', 'none')
(   7.043) LOOP: START IMPOSING CONSTRAINTS
(   7.044) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   7.044) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   7.044) GENERATE: START GROUNDING (impose_constraints)
(   7.104) GENERATE: DONE GROUNDING (impose_constraints)
(   7.104) LOOP: DONE IMPOSING CONSTRAINTS
(   7.104) LOOP: START GENERATING (program 157)
(   7.104) GENERATE: START SOLVING
(   7.109) GENERATE: DONE SOLVING
(   7.327) LOOP: DONE GENERATING (program 157)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),tail(B,C).
(   7.328) LOOP: START TESTING
(   7.329) LOOP: DONE TESTING ('none', 'none')
(   7.329) LOOP: START IMPOSING CONSTRAINTS
(   7.329) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   7.329) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   7.329) GENERATE: START GROUNDING (impose_constraints)
(   7.389) GENERATE: DONE GROUNDING (impose_constraints)
(   7.390) LOOP: DONE IMPOSING CONSTRAINTS
(   7.390) LOOP: START GENERATING (program 158)
(   7.390) GENERATE: START SOLVING
(   7.395) GENERATE: DONE SOLVING
(   7.435) LOOP: DONE GENERATING (program 158)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
(   7.435) LOOP: START TESTING
(   7.437) LOOP: DONE TESTING ('none', 'none')
(   7.437) LOOP: START IMPOSING CONSTRAINTS
(   7.437) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.437) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   7.437) GENERATE: START GROUNDING (impose_constraints)
(   7.497) GENERATE: DONE GROUNDING (impose_constraints)
(   7.497) LOOP: DONE IMPOSING CONSTRAINTS
(   7.497) LOOP: START GENERATING (program 159)
(   7.497) GENERATE: START SOLVING
(   7.502) GENERATE: DONE SOLVING
(   7.542) LOOP: DONE GENERATING (program 159)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),tail(C,A).
(   7.543) LOOP: START TESTING
(   7.544) LOOP: DONE TESTING ('none', 'none')
(   7.544) LOOP: START IMPOSING CONSTRAINTS
(   7.544) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   7.544) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   7.544) GENERATE: START GROUNDING (impose_constraints)
(   7.604) GENERATE: DONE GROUNDING (impose_constraints)
(   7.604) LOOP: DONE IMPOSING CONSTRAINTS
(   7.604) LOOP: START GENERATING (program 160)
(   7.604) GENERATE: START SOLVING
(   7.609) GENERATE: DONE SOLVING
(   7.648) LOOP: DONE GENERATING (program 160)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),empty(C).
(   7.648) LOOP: START TESTING
(   7.649) LOOP: DONE TESTING ('none', 'none')
(   7.649) LOOP: START IMPOSING CONSTRAINTS
(   7.649) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   7.649) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   7.649) GENERATE: START GROUNDING (impose_constraints)
(   7.712) GENERATE: DONE GROUNDING (impose_constraints)
(   7.712) LOOP: DONE IMPOSING CONSTRAINTS
(   7.712) LOOP: START GENERATING (program 161)
(   7.712) GENERATE: START SOLVING
(   7.717) GENERATE: DONE SOLVING
(   7.799) LOOP: DONE GENERATING (program 161)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
(   7.799) LOOP: START TESTING
(   7.801) LOOP: DONE TESTING ('none', 'none')
(   7.801) LOOP: START IMPOSING CONSTRAINTS
(   7.801) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.801) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   7.801) GENERATE: START GROUNDING (impose_constraints)
(   7.865) GENERATE: DONE GROUNDING (impose_constraints)
(   7.865) LOOP: DONE IMPOSING CONSTRAINTS
(   7.865) LOOP: START GENERATING (program 162)
(   7.865) GENERATE: START SOLVING
(   7.871) GENERATE: DONE SOLVING
(   8.238) LOOP: DONE GENERATING (program 162)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,B),empty(B).
(   8.238) LOOP: START TESTING
(   8.240) LOOP: DONE TESTING ('none', 'none')
(   8.240) LOOP: START IMPOSING CONSTRAINTS
(   8.240) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(   8.240) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   8.240) GENERATE: START GROUNDING (impose_constraints)
(   8.303) GENERATE: DONE GROUNDING (impose_constraints)
(   8.303) LOOP: DONE IMPOSING CONSTRAINTS
(   8.303) LOOP: START GENERATING (program 163)
(   8.303) GENERATE: START SOLVING
(   8.309) GENERATE: DONE SOLVING
(   8.331) LOOP: DONE GENERATING (program 163)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,B).
  f(A,B) :- tail(A,D),tail(D,E),tail(E,C),tail(C,B).
(   8.331) LOOP: START TESTING
(   8.333) LOOP: DONE TESTING ('none', 'none')
(   8.333) LOOP: START IMPOSING CONSTRAINTS
(   8.333) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
(   8.333) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   8.333) GENERATE: START GROUNDING (impose_constraints)
(   8.398) GENERATE: DONE GROUNDING (impose_constraints)
(   8.398) LOOP: DONE IMPOSING CONSTRAINTS
(   8.398) LOOP: START GENERATING (program 164)
(   8.398) GENERATE: START SOLVING
(   8.403) GENERATE: DONE SOLVING
(   8.484) LOOP: DONE GENERATING (program 164)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,E),tail(E,B).
  f(A,B) :- tail(A,B),f(B,A).
(   8.484) LOOP: START TESTING
(   8.486) LOOP: DONE TESTING ('none', 'none')
(   8.486) LOOP: START IMPOSING CONSTRAINTS
(   8.486) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
(   8.486) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V4)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(   8.486) GENERATE: START GROUNDING (impose_constraints)
(   8.550) GENERATE: DONE GROUNDING (impose_constraints)
(   8.550) LOOP: DONE IMPOSING CONSTRAINTS
(   8.550) LOOP: START GENERATING (program 165)
(   8.550) GENERATE: START SOLVING
(   8.555) GENERATE: DONE SOLVING
(   8.560) LOOP: DONE GENERATING (program 165)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
(   8.560) LOOP: START TESTING
(   8.561) LOOP: DONE TESTING ('none', 'none')
(   8.561) LOOP: START IMPOSING CONSTRAINTS
(   8.561) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.561) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   8.562) GENERATE: START GROUNDING (impose_constraints)
(   8.626) GENERATE: DONE GROUNDING (impose_constraints)
(   8.626) LOOP: DONE IMPOSING CONSTRAINTS
(   8.626) LOOP: START GENERATING (program 166)
(   8.626) GENERATE: START SOLVING
(   8.632) GENERATE: DONE SOLVING
(   8.671) LOOP: DONE GENERATING (program 166)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,C),tail(C,E),tail(E,D),tail(D,B),f(B,A).
(   8.671) LOOP: START TESTING
(   8.672) LOOP: DONE TESTING ('none', 'none')
(   8.672) LOOP: START IMPOSING CONSTRAINTS
(   8.672) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   8.672) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   8.673) GENERATE: START GROUNDING (impose_constraints)
(   8.737) GENERATE: DONE GROUNDING (impose_constraints)
(   8.737) LOOP: DONE IMPOSING CONSTRAINTS
(   8.737) LOOP: START GENERATING (program 167)
(   8.737) GENERATE: START SOLVING
(   8.743) GENERATE: DONE SOLVING
(   8.749) LOOP: DONE GENERATING (program 167)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B),f(B,A).
(   8.749) LOOP: START TESTING
(   8.750) LOOP: DONE TESTING ('none', 'none')
(   8.750) LOOP: START IMPOSING CONSTRAINTS
(   8.751) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   8.751) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   8.751) GENERATE: START GROUNDING (impose_constraints)
(   8.824) GENERATE: DONE GROUNDING (impose_constraints)
(   8.824) LOOP: DONE IMPOSING CONSTRAINTS
(   8.824) LOOP: START GENERATING (program 168)
(   8.824) GENERATE: START SOLVING
(   8.830) GENERATE: DONE SOLVING
(   8.898) LOOP: DONE GENERATING (program 168)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),empty(C).
  f(A,B) :- tail(A,B),f(B,A).
(   8.898) LOOP: START TESTING
(   8.899) LOOP: DONE TESTING ('none', 'none')
(   8.899) LOOP: START IMPOSING CONSTRAINTS
(   8.899) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.899) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   8.899) GENERATE: START GROUNDING (impose_constraints)
(   8.966) GENERATE: DONE GROUNDING (impose_constraints)
(   8.966) LOOP: DONE IMPOSING CONSTRAINTS
(   8.966) LOOP: START GENERATING (program 169)
(   8.966) GENERATE: START SOLVING
(   8.972) GENERATE: DONE SOLVING
(   9.014) LOOP: DONE GENERATING (program 169)
PROGRAM:
  f(A,B) :- tail(A,B),head(B,D),tail(B,C),head(C,D).
  f(A,B) :- tail(A,B),f(B,A).
(   9.015) LOOP: START TESTING
(   9.016) LOOP: DONE TESTING ('none', 'none')
(   9.016) LOOP: START IMPOSING CONSTRAINTS
(   9.016) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.016) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   9.016) GENERATE: START GROUNDING (impose_constraints)
(   9.082) GENERATE: DONE GROUNDING (impose_constraints)
(   9.082) LOOP: DONE IMPOSING CONSTRAINTS
(   9.082) LOOP: START GENERATING (program 170)
(   9.082) GENERATE: START SOLVING
(   9.088) GENERATE: DONE SOLVING
(   9.093) LOOP: DONE GENERATING (program 170)
PROGRAM:
  f(A,B) :- head(A,D),tail(A,B),tail(B,C),head(C,D).
  f(A,B) :- tail(A,B),f(B,A).
(   9.093) LOOP: START TESTING
(   9.095) LOOP: DONE TESTING ('none', 'none')
(   9.095) LOOP: START IMPOSING CONSTRAINTS
(   9.095) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.095) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   9.095) GENERATE: START GROUNDING (impose_constraints)
(   9.162) GENERATE: DONE GROUNDING (impose_constraints)
(   9.162) LOOP: DONE IMPOSING CONSTRAINTS
(   9.162) LOOP: START GENERATING (program 171)
(   9.162) GENERATE: START SOLVING
(   9.167) GENERATE: DONE SOLVING
(   9.177) LOOP: DONE GENERATING (program 171)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,A).
  f(A,B) :- tail(A,B),f(B,A).
(   9.177) LOOP: START TESTING
(   9.179) LOOP: DONE TESTING ('none', 'none')
(   9.179) LOOP: START IMPOSING CONSTRAINTS
(   9.179) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.179) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   9.179) GENERATE: START GROUNDING (impose_constraints)
(   9.246) GENERATE: DONE GROUNDING (impose_constraints)
(   9.246) LOOP: DONE IMPOSING CONSTRAINTS
(   9.246) LOOP: START GENERATING (program 172)
(   9.246) GENERATE: START SOLVING
(   9.252) GENERATE: DONE SOLVING
(   9.257) LOOP: DONE GENERATING (program 172)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),tail(D,B).
  f(A,B) :- tail(A,B),f(B,A).
(   9.257) LOOP: START TESTING
(   9.258) LOOP: DONE TESTING ('none', 'none')
(   9.258) LOOP: START IMPOSING CONSTRAINTS
(   9.258) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.258) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(   9.258) GENERATE: START GROUNDING (impose_constraints)
(   9.327) GENERATE: DONE GROUNDING (impose_constraints)
(   9.327) LOOP: DONE IMPOSING CONSTRAINTS
(   9.327) LOOP: START GENERATING (program 173)
(   9.327) GENERATE: START SOLVING
(   9.333) GENERATE: DONE SOLVING
(   9.351) LOOP: DONE GENERATING (program 173)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),tail(B,A).
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
(   9.351) LOOP: START TESTING
(   9.353) LOOP: DONE TESTING ('none', 'none')
(   9.353) LOOP: START IMPOSING CONSTRAINTS
(   9.353) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   9.353) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   9.353) GENERATE: START GROUNDING (impose_constraints)
(   9.421) GENERATE: DONE GROUNDING (impose_constraints)
(   9.421) LOOP: DONE IMPOSING CONSTRAINTS
(   9.421) LOOP: START GENERATING (program 174)
(   9.421) GENERATE: START SOLVING
(   9.426) GENERATE: DONE SOLVING
(   9.452) LOOP: DONE GENERATING (program 174)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),tail(C,B).
(   9.452) LOOP: START TESTING
(   9.453) LOOP: DONE TESTING ('none', 'none')
(   9.453) LOOP: START IMPOSING CONSTRAINTS
(   9.453) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   9.453) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   9.454) GENERATE: START GROUNDING (impose_constraints)
(   9.522) GENERATE: DONE GROUNDING (impose_constraints)
(   9.522) LOOP: DONE IMPOSING CONSTRAINTS
(   9.522) LOOP: START GENERATING (program 175)
(   9.522) GENERATE: START SOLVING
(   9.528) GENERATE: DONE SOLVING
(   9.539) LOOP: DONE GENERATING (program 175)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
(   9.539) LOOP: START TESTING
(   9.540) LOOP: DONE TESTING ('none', 'none')
(   9.540) LOOP: START IMPOSING CONSTRAINTS
(   9.540) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.540) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   9.540) GENERATE: START GROUNDING (impose_constraints)
(   9.609) GENERATE: DONE GROUNDING (impose_constraints)
(   9.610) LOOP: DONE IMPOSING CONSTRAINTS
(   9.610) LOOP: START GENERATING (program 176)
(   9.610) GENERATE: START SOLVING
(   9.616) GENERATE: DONE SOLVING
(   9.631) LOOP: DONE GENERATING (program 176)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
(   9.631) LOOP: START TESTING
(   9.632) LOOP: DONE TESTING ('none', 'none')
(   9.632) LOOP: START IMPOSING CONSTRAINTS
(   9.632) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   9.632) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(   9.632) GENERATE: START GROUNDING (impose_constraints)
(   9.702) GENERATE: DONE GROUNDING (impose_constraints)
(   9.702) LOOP: DONE IMPOSING CONSTRAINTS
(   9.702) LOOP: START GENERATING (program 177)
(   9.702) GENERATE: START SOLVING
(   9.709) GENERATE: DONE SOLVING
(   9.723) LOOP: DONE GENERATING (program 177)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,B),tail(B,C),tail(C,D),f(C,D).
(   9.723) LOOP: START TESTING
(   9.724) LOOP: DONE TESTING ('none', 'none')
(   9.724) LOOP: START IMPOSING CONSTRAINTS
(   9.724) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   9.724) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   9.724) GENERATE: START GROUNDING (impose_constraints)
(   9.794) GENERATE: DONE GROUNDING (impose_constraints)
(   9.794) LOOP: DONE IMPOSING CONSTRAINTS
(   9.794) LOOP: START GENERATING (program 178)
(   9.794) GENERATE: START SOLVING
(   9.800) GENERATE: DONE SOLVING
(   9.836) LOOP: DONE GENERATING (program 178)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,B),tail(B,D),f(D,C),tail(C,D).
(   9.836) LOOP: START TESTING
(   9.838) LOOP: DONE TESTING ('none', 'none')
(   9.838) LOOP: START IMPOSING CONSTRAINTS
(   9.838) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(   9.838) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(   9.838) GENERATE: START GROUNDING (impose_constraints)
(   9.908) GENERATE: DONE GROUNDING (impose_constraints)
(   9.908) LOOP: DONE IMPOSING CONSTRAINTS
(   9.908) LOOP: START GENERATING (program 179)
(   9.908) GENERATE: START SOLVING
(   9.914) GENERATE: DONE SOLVING
(   9.928) LOOP: DONE GENERATING (program 179)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,C).
(   9.928) LOOP: START TESTING
(   9.929) LOOP: DONE TESTING ('none', 'none')
(   9.929) LOOP: START IMPOSING CONSTRAINTS
(   9.929) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(   9.929) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(   9.929) GENERATE: START GROUNDING (impose_constraints)
(  10.001) GENERATE: DONE GROUNDING (impose_constraints)
(  10.001) LOOP: DONE IMPOSING CONSTRAINTS
(  10.001) LOOP: START GENERATING (program 180)
(  10.001) GENERATE: START SOLVING
(  10.006) GENERATE: DONE SOLVING
(  10.025) LOOP: DONE GENERATING (program 180)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(C,A),tail(D,B).
(  10.025) LOOP: START TESTING
(  10.027) LOOP: DONE TESTING ('none', 'none')
(  10.027) LOOP: START IMPOSING CONSTRAINTS
(  10.027) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  10.027) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  10.027) GENERATE: START GROUNDING (impose_constraints)
(  10.098) GENERATE: DONE GROUNDING (impose_constraints)
(  10.098) LOOP: DONE IMPOSING CONSTRAINTS
(  10.098) LOOP: START GENERATING (program 181)
(  10.098) GENERATE: START SOLVING
(  10.104) GENERATE: DONE SOLVING
(  10.166) LOOP: DONE GENERATING (program 181)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,B),tail(B,D),f(D,C),empty(C).
(  10.166) LOOP: START TESTING
(  10.168) LOOP: DONE TESTING ('none', 'none')
(  10.168) LOOP: START IMPOSING CONSTRAINTS
(  10.168) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(  10.168) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  10.168) GENERATE: START GROUNDING (impose_constraints)
(  10.240) GENERATE: DONE GROUNDING (impose_constraints)
(  10.240) LOOP: DONE IMPOSING CONSTRAINTS
(  10.240) LOOP: START GENERATING (program 182)
(  10.240) GENERATE: START SOLVING
(  10.246) GENERATE: DONE SOLVING
(  10.305) LOOP: DONE GENERATING (program 182)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(D,B),tail(B,C).
(  10.305) LOOP: START TESTING
(  10.307) LOOP: DONE TESTING ('none', 'none')
(  10.307) LOOP: START IMPOSING CONSTRAINTS
(  10.307) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  10.307) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  10.307) GENERATE: START GROUNDING (impose_constraints)
(  10.380) GENERATE: DONE GROUNDING (impose_constraints)
(  10.380) LOOP: DONE IMPOSING CONSTRAINTS
(  10.380) LOOP: START GENERATING (program 183)
(  10.380) GENERATE: START SOLVING
(  10.386) GENERATE: DONE SOLVING
(  10.516) LOOP: DONE GENERATING (program 183)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,E),tail(E,B),f(E,D).
(  10.516) LOOP: START TESTING
(  10.518) LOOP: DONE TESTING ('none', 'none')
(  10.518) LOOP: START IMPOSING CONSTRAINTS
(  10.518) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(  10.518) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,f,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  10.518) GENERATE: START GROUNDING (impose_constraints)
(  10.592) GENERATE: DONE GROUNDING (impose_constraints)
(  10.592) LOOP: DONE IMPOSING CONSTRAINTS
(  10.592) LOOP: START GENERATING (program 184)
(  10.592) GENERATE: START SOLVING
(  10.598) GENERATE: DONE SOLVING
(  10.805) LOOP: DONE GENERATING (program 184)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,E),tail(E,B),f(E,C),tail(B,D),tail(D,C).
(  10.805) LOOP: START TESTING
(  10.807) LOOP: DONE TESTING ('none', 'none')
(  10.807) LOOP: START IMPOSING CONSTRAINTS
(  10.807) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(  10.807) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  10.807) GENERATE: START GROUNDING (impose_constraints)
(  10.881) GENERATE: DONE GROUNDING (impose_constraints)
(  10.881) LOOP: DONE IMPOSING CONSTRAINTS
(  10.881) LOOP: START GENERATING (program 185)
(  10.881) GENERATE: START SOLVING
(  10.888) GENERATE: DONE SOLVING
(  10.976) LOOP: DONE GENERATING (program 185)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,E),tail(E,B),f(E,C),empty(C).
(  10.977) LOOP: START TESTING
(  10.978) LOOP: DONE TESTING ('none', 'none')
(  10.978) LOOP: START IMPOSING CONSTRAINTS
(  10.978) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(  10.978) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  10.978) GENERATE: START GROUNDING (impose_constraints)
(  11.051) GENERATE: DONE GROUNDING (impose_constraints)
(  11.051) LOOP: DONE IMPOSING CONSTRAINTS
(  11.051) LOOP: START GENERATING (program 186)
(  11.051) GENERATE: START SOLVING
(  11.057) GENERATE: DONE SOLVING
(  11.062) LOOP: DONE GENERATING (program 186)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,E),tail(E,B),f(E,C),tail(B,C).
(  11.062) LOOP: START TESTING
(  11.063) LOOP: DONE TESTING ('none', 'none')
(  11.063) LOOP: START IMPOSING CONSTRAINTS
(  11.063) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(  11.063) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  11.064) GENERATE: START GROUNDING (impose_constraints)
(  11.138) GENERATE: DONE GROUNDING (impose_constraints)
(  11.138) LOOP: DONE IMPOSING CONSTRAINTS
(  11.138) LOOP: START GENERATING (program 187)
(  11.138) GENERATE: START SOLVING
(  11.145) GENERATE: DONE SOLVING
(  11.148) LOOP: DONE GENERATING (program 187)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,E),tail(E,B),f(E,C),tail(C,A).
(  11.148) LOOP: START TESTING
(  11.149) LOOP: DONE TESTING ('none', 'none')
(  11.149) LOOP: START IMPOSING CONSTRAINTS
(  11.149) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(  11.149) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  11.150) GENERATE: START GROUNDING (impose_constraints)
(  11.224) GENERATE: DONE GROUNDING (impose_constraints)
(  11.224) LOOP: DONE IMPOSING CONSTRAINTS
(  11.224) LOOP: START GENERATING (program 188)
(  11.224) GENERATE: START SOLVING
(  11.230) GENERATE: DONE SOLVING
(  11.233) LOOP: DONE GENERATING (program 188)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,E),tail(E,B),f(E,C),tail(C,E).
(  11.233) LOOP: START TESTING
(  11.235) LOOP: DONE TESTING ('none', 'none')
(  11.235) LOOP: START IMPOSING CONSTRAINTS
(  11.235) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(  11.235) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  11.235) GENERATE: START GROUNDING (impose_constraints)
(  11.315) GENERATE: DONE GROUNDING (impose_constraints)
(  11.315) LOOP: DONE IMPOSING CONSTRAINTS
(  11.315) LOOP: START GENERATING (program 189)
(  11.315) GENERATE: START SOLVING
(  11.322) GENERATE: DONE SOLVING
(  11.327) LOOP: DONE GENERATING (program 189)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B),tail(B,E),f(E,C).
(  11.327) LOOP: START TESTING
(  11.328) LOOP: DONE TESTING ('none', 'none')
(  11.328) LOOP: START IMPOSING CONSTRAINTS
(  11.328) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(  11.328) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  11.329) GENERATE: START GROUNDING (impose_constraints)
(  11.406) GENERATE: DONE GROUNDING (impose_constraints)
(  11.406) LOOP: DONE IMPOSING CONSTRAINTS
(  11.406) LOOP: START GENERATING (program 190)
(  11.406) GENERATE: START SOLVING
(  11.412) GENERATE: DONE SOLVING
(  11.440) LOOP: DONE GENERATING (program 190)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,B),tail(B,E),f(E,C),tail(C,A).
(  11.440) LOOP: START TESTING
(  11.441) LOOP: DONE TESTING ('none', 'none')
(  11.441) LOOP: START IMPOSING CONSTRAINTS
(  11.441) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(  11.441) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  11.441) GENERATE: START GROUNDING (impose_constraints)
(  11.518) GENERATE: DONE GROUNDING (impose_constraints)
(  11.518) LOOP: DONE IMPOSING CONSTRAINTS
(  11.518) LOOP: START GENERATING (program 191)
(  11.518) GENERATE: START SOLVING
(  11.524) GENERATE: DONE SOLVING
(  11.546) LOOP: DONE GENERATING (program 191)
PROGRAM:
  f(A,B) :- tail(A,B).
  f(A,B) :- tail(A,D),tail(D,B),tail(B,E),f(E,C),tail(C,B).
(  11.546) LOOP: START TESTING
(  11.548) LOOP: DONE TESTING ('none', 'none')
(  11.548) LOOP: START IMPOSING CONSTRAINTS
(  11.548) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(  11.548) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  11.548) GENERATE: START GROUNDING (impose_constraints)
(  11.625) GENERATE: DONE GROUNDING (impose_constraints)
(  11.625) LOOP: DONE IMPOSING CONSTRAINTS
(  11.625) LOOP: START GENERATING (program 192)
(  11.625) GENERATE: START SOLVING
(  11.632) GENERATE: DONE SOLVING
(  11.683) LOOP: DONE GENERATING (program 192)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(D,B),empty(C).
(  11.683) LOOP: START TESTING
(  11.685) LOOP: DONE TESTING ('none', 'none')
(  11.685) LOOP: START IMPOSING CONSTRAINTS
(  11.685) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  11.685) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  11.685) GENERATE: START GROUNDING (impose_constraints)
(  11.763) GENERATE: DONE GROUNDING (impose_constraints)
(  11.763) LOOP: DONE IMPOSING CONSTRAINTS
(  11.763) LOOP: START GENERATING (program 193)
(  11.763) GENERATE: START SOLVING
(  11.770) GENERATE: DONE SOLVING
(  11.783) LOOP: DONE GENERATING (program 193)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(C,D),tail(D,B).
(  11.783) LOOP: START TESTING
(  11.785) LOOP: DONE TESTING ('none', 'none')
(  11.785) LOOP: START IMPOSING CONSTRAINTS
(  11.785) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  11.785) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  11.785) GENERATE: START GROUNDING (impose_constraints)
(  11.861) GENERATE: DONE GROUNDING (impose_constraints)
(  11.861) LOOP: DONE IMPOSING CONSTRAINTS
(  11.861) LOOP: START GENERATING (program 194)
(  11.861) GENERATE: START SOLVING
(  11.868) GENERATE: DONE SOLVING
(  11.878) LOOP: DONE GENERATING (program 194)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(C,D).
(  11.879) LOOP: START TESTING
(  11.880) LOOP: DONE TESTING ('none', 'none')
(  11.880) LOOP: START IMPOSING CONSTRAINTS
(  11.880) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  11.880) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  11.880) GENERATE: START GROUNDING (impose_constraints)
(  11.957) GENERATE: DONE GROUNDING (impose_constraints)
(  11.957) LOOP: DONE IMPOSING CONSTRAINTS
(  11.957) LOOP: START GENERATING (program 195)
(  11.957) GENERATE: START SOLVING
(  11.964) GENERATE: DONE SOLVING
(  12.039) LOOP: DONE GENERATING (program 195)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(D,C).
(  12.039) LOOP: START TESTING
(  12.041) LOOP: DONE TESTING ('none', 'none')
(  12.041) LOOP: START IMPOSING CONSTRAINTS
(  12.041) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  12.041) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  12.041) GENERATE: START GROUNDING (impose_constraints)
(  12.119) GENERATE: DONE GROUNDING (impose_constraints)
(  12.119) LOOP: DONE IMPOSING CONSTRAINTS
(  12.119) LOOP: START GENERATING (program 196)
(  12.119) GENERATE: START SOLVING
(  12.126) GENERATE: DONE SOLVING
(  12.137) LOOP: DONE GENERATING (program 196)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,C).
(  12.137) LOOP: START TESTING
(  12.139) LOOP: DONE TESTING ('none', 'none')
(  12.139) LOOP: START IMPOSING CONSTRAINTS
(  12.139) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  12.139) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  12.139) GENERATE: START GROUNDING (impose_constraints)
(  12.219) GENERATE: DONE GROUNDING (impose_constraints)
(  12.219) LOOP: DONE IMPOSING CONSTRAINTS
(  12.219) LOOP: START GENERATING (program 197)
(  12.219) GENERATE: START SOLVING
(  12.226) GENERATE: DONE SOLVING
(  12.232) LOOP: DONE GENERATING (program 197)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(C,A).
(  12.232) LOOP: START TESTING
(  12.233) LOOP: DONE TESTING ('none', 'none')
(  12.233) LOOP: START IMPOSING CONSTRAINTS
(  12.233) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  12.233) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  12.234) GENERATE: START GROUNDING (impose_constraints)
(  12.312) GENERATE: DONE GROUNDING (impose_constraints)
(  12.312) LOOP: DONE IMPOSING CONSTRAINTS
(  12.312) LOOP: START GENERATING (program 198)
(  12.312) GENERATE: START SOLVING
(  12.318) GENERATE: DONE SOLVING
(  12.335) LOOP: DONE GENERATING (program 198)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(C,B).
(  12.335) LOOP: START TESTING
(  12.337) LOOP: DONE TESTING ('none', 'none')
(  12.337) LOOP: START IMPOSING CONSTRAINTS
(  12.337) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  12.337) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  12.337) GENERATE: START GROUNDING (impose_constraints)
(  12.415) GENERATE: DONE GROUNDING (impose_constraints)
(  12.415) LOOP: DONE IMPOSING CONSTRAINTS
(  12.415) LOOP: START GENERATING (program 199)
(  12.415) GENERATE: START SOLVING
(  12.422) GENERATE: DONE SOLVING
(  12.426) LOOP: DONE GENERATING (program 199)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(C,A).
(  12.426) LOOP: START TESTING
(  12.428) LOOP: DONE TESTING ('none', 'none')
(  12.428) LOOP: START IMPOSING CONSTRAINTS
(  12.428) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  12.428) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  12.428) GENERATE: START GROUNDING (impose_constraints)
(  12.507) GENERATE: DONE GROUNDING (impose_constraints)
(  12.507) LOOP: DONE IMPOSING CONSTRAINTS
(  12.507) LOOP: START GENERATING (program 200)
(  12.507) GENERATE: START SOLVING
(  12.514) GENERATE: DONE SOLVING
(  12.521) LOOP: DONE GENERATING (program 200)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),empty(C).
(  12.521) LOOP: START TESTING
(  12.522) LOOP: DONE TESTING ('none', 'none')
(  12.522) LOOP: START IMPOSING CONSTRAINTS
(  12.522) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  12.522) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  12.523) GENERATE: START GROUNDING (impose_constraints)
(  12.602) GENERATE: DONE GROUNDING (impose_constraints)
(  12.602) LOOP: DONE IMPOSING CONSTRAINTS
(  12.602) LOOP: START GENERATING (program 201)
(  12.602) GENERATE: START SOLVING
(  12.609) GENERATE: DONE SOLVING
(  12.613) LOOP: DONE GENERATING (program 201)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(C,A).
(  12.613) LOOP: START TESTING
(  12.614) LOOP: DONE TESTING ('none', 'none')
(  12.614) LOOP: START IMPOSING CONSTRAINTS
(  12.614) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  12.614) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  12.615) GENERATE: START GROUNDING (impose_constraints)
(  12.694) GENERATE: DONE GROUNDING (impose_constraints)
(  12.694) LOOP: DONE IMPOSING CONSTRAINTS
(  12.694) LOOP: START GENERATING (program 202)
(  12.694) GENERATE: START SOLVING
(  12.701) GENERATE: DONE SOLVING
(  12.706) LOOP: DONE GENERATING (program 202)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(D,C).
(  12.707) LOOP: START TESTING
(  12.708) LOOP: DONE TESTING ('none', 'none')
(  12.708) LOOP: START IMPOSING CONSTRAINTS
(  12.708) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  12.708) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  12.708) GENERATE: START GROUNDING (impose_constraints)
(  12.791) GENERATE: DONE GROUNDING (impose_constraints)
(  12.791) LOOP: DONE IMPOSING CONSTRAINTS
(  12.791) LOOP: START GENERATING (program 203)
(  12.791) GENERATE: START SOLVING
(  12.799) GENERATE: DONE SOLVING
(  12.803) LOOP: DONE GENERATING (program 203)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(C,D).
(  12.803) LOOP: START TESTING
(  12.804) LOOP: DONE TESTING ('none', 'none')
(  12.804) LOOP: START IMPOSING CONSTRAINTS
(  12.804) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  12.804) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  12.804) GENERATE: START GROUNDING (impose_constraints)
(  12.885) GENERATE: DONE GROUNDING (impose_constraints)
(  12.885) LOOP: DONE IMPOSING CONSTRAINTS
(  12.885) LOOP: START GENERATING (program 204)
(  12.885) GENERATE: START SOLVING
(  12.892) GENERATE: DONE SOLVING
(  12.896) LOOP: DONE GENERATING (program 204)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(C,B).
(  12.896) LOOP: START TESTING
(  12.897) LOOP: DONE TESTING ('none', 'none')
(  12.897) LOOP: START IMPOSING CONSTRAINTS
(  12.897) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  12.897) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  12.897) GENERATE: START GROUNDING (impose_constraints)
(  12.979) GENERATE: DONE GROUNDING (impose_constraints)
(  12.979) LOOP: DONE IMPOSING CONSTRAINTS
(  12.979) LOOP: START GENERATING (program 205)
(  12.979) GENERATE: START SOLVING
(  12.987) GENERATE: DONE SOLVING
(  12.990) LOOP: DONE GENERATING (program 205)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),empty(C).
(  12.990) LOOP: START TESTING
(  12.991) LOOP: DONE TESTING ('none', 'none')
(  12.991) LOOP: START IMPOSING CONSTRAINTS
(  12.991) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  12.991) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  12.991) GENERATE: START GROUNDING (impose_constraints)
(  13.074) GENERATE: DONE GROUNDING (impose_constraints)
(  13.074) LOOP: DONE IMPOSING CONSTRAINTS
(  13.074) LOOP: START GENERATING (program 206)
(  13.074) GENERATE: START SOLVING
(  13.081) GENERATE: DONE SOLVING
(  13.085) LOOP: DONE GENERATING (program 206)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(C,D).
(  13.085) LOOP: START TESTING
(  13.086) LOOP: DONE TESTING ('none', 'none')
(  13.086) LOOP: START IMPOSING CONSTRAINTS
(  13.086) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  13.086) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  13.086) GENERATE: START GROUNDING (impose_constraints)
(  13.168) GENERATE: DONE GROUNDING (impose_constraints)
(  13.168) LOOP: DONE IMPOSING CONSTRAINTS
(  13.168) LOOP: START GENERATING (program 207)
(  13.168) GENERATE: START SOLVING
(  13.176) GENERATE: DONE SOLVING
(  14.117) LOOP: DONE GENERATING (program 207)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),f(C,B).
(  14.117) LOOP: START TESTING
(  14.118) LOOP: DONE TESTING ('none', 'none')
(  14.118) LOOP: START IMPOSING CONSTRAINTS
(  14.118) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  14.118) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  14.119) GENERATE: START GROUNDING (impose_constraints)
(  14.201) GENERATE: DONE GROUNDING (impose_constraints)
(  14.201) LOOP: DONE IMPOSING CONSTRAINTS
(  14.201) LOOP: START GENERATING (program 208)
(  14.201) GENERATE: START SOLVING
(  14.209) GENERATE: DONE SOLVING
(  14.219) LOOP: DONE GENERATING (program 208)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,B).
  f(A,B) :- tail(A,C),tail(C,B).
(  14.219) LOOP: START TESTING
(  14.221) LOOP: DONE TESTING ('none', 'none')
(  14.221) LOOP: START IMPOSING CONSTRAINTS
(  14.221) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  14.221) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  14.221) GENERATE: START GROUNDING (impose_constraints)
(  14.304) GENERATE: DONE GROUNDING (impose_constraints)
(  14.304) LOOP: DONE IMPOSING CONSTRAINTS
(  14.304) LOOP: START GENERATING (program 209)
(  14.304) GENERATE: START SOLVING
(  14.312) GENERATE: DONE SOLVING
(  14.819) LOOP: DONE GENERATING (program 209)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
(  14.819) LOOP: START TESTING
(  14.821) LOOP: DONE TESTING ('none', 'none')
(  14.821) LOOP: START IMPOSING CONSTRAINTS
(  14.821) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  14.821) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  14.821) GENERATE: START GROUNDING (impose_constraints)
(  14.905) GENERATE: DONE GROUNDING (impose_constraints)
(  14.905) LOOP: DONE IMPOSING CONSTRAINTS
(  14.905) LOOP: START GENERATING (program 210)
(  14.905) GENERATE: START SOLVING
(  14.912) GENERATE: DONE SOLVING
(  15.621) LOOP: DONE GENERATING (program 210)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),empty(C).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  15.621) LOOP: START TESTING
(  15.623) LOOP: DONE TESTING ('none', 'none')
(  15.623) LOOP: START IMPOSING CONSTRAINTS
(  15.623) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  15.623) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  15.623) GENERATE: START GROUNDING (impose_constraints)
(  15.712) GENERATE: DONE GROUNDING (impose_constraints)
(  15.712) LOOP: DONE IMPOSING CONSTRAINTS
(  15.712) LOOP: START GENERATING (program 211)
(  15.712) GENERATE: START SOLVING
(  15.719) GENERATE: DONE SOLVING
(  16.236) LOOP: DONE GENERATING (program 211)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
  f(A,B) :- tail(A,C),tail(C,B),tail(B,A).
(  16.236) LOOP: START TESTING
(  16.237) LOOP: DONE TESTING ('none', 'none')
(  16.237) LOOP: START IMPOSING CONSTRAINTS
(  16.237) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  16.237) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  16.238) GENERATE: START GROUNDING (impose_constraints)
(  16.329) GENERATE: DONE GROUNDING (impose_constraints)
(  16.329) LOOP: DONE IMPOSING CONSTRAINTS
(  16.329) LOOP: START GENERATING (program 212)
(  16.329) GENERATE: START SOLVING
(  16.338) GENERATE: DONE SOLVING
(  20.542) LOOP: DONE GENERATING (program 212)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
(  20.542) LOOP: START TESTING
(  20.543) LOOP: DONE TESTING ('none', 'none')
(  20.543) LOOP: START IMPOSING CONSTRAINTS
(  20.543) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  20.543) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  20.543) GENERATE: START GROUNDING (impose_constraints)
(  20.628) GENERATE: DONE GROUNDING (impose_constraints)
(  20.628) LOOP: DONE IMPOSING CONSTRAINTS
(  20.628) LOOP: START GENERATING (program 213)
(  20.628) GENERATE: START SOLVING
(  20.637) GENERATE: DONE SOLVING
(  24.472) LOOP: DONE GENERATING (program 213)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),empty(B).
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
(  24.472) LOOP: START TESTING
(  24.473) LOOP: DONE TESTING ('none', 'none')
(  24.473) LOOP: START IMPOSING CONSTRAINTS
(  24.473) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  24.473) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  24.474) GENERATE: START GROUNDING (impose_constraints)
(  24.563) GENERATE: DONE GROUNDING (impose_constraints)
(  24.563) LOOP: DONE IMPOSING CONSTRAINTS
(  24.563) LOOP: START GENERATING (program 214)
(  24.563) GENERATE: START SOLVING
(  24.573) GENERATE: DONE SOLVING
(  24.578) LOOP: DONE GENERATING (program 214)
PROGRAM:
  f(A,B) :- empty(A),tail(A,C),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
(  24.578) LOOP: START TESTING
(  24.579) LOOP: DONE TESTING ('none', 'none')
(  24.579) LOOP: START IMPOSING CONSTRAINTS
(  24.579) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  24.579) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  24.579) GENERATE: START GROUNDING (impose_constraints)
(  24.670) GENERATE: DONE GROUNDING (impose_constraints)
(  24.670) LOOP: DONE IMPOSING CONSTRAINTS
(  24.670) LOOP: START GENERATING (program 215)
(  24.670) GENERATE: START SOLVING
(  24.678) GENERATE: DONE SOLVING
(  24.682) LOOP: DONE GENERATING (program 215)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),empty(C).
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
(  24.682) LOOP: START TESTING
(  24.684) LOOP: DONE TESTING ('none', 'none')
(  24.684) LOOP: START IMPOSING CONSTRAINTS
(  24.684) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  24.684) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  24.684) GENERATE: START GROUNDING (impose_constraints)
(  24.776) GENERATE: DONE GROUNDING (impose_constraints)
(  24.776) LOOP: DONE IMPOSING CONSTRAINTS
(  24.776) LOOP: START GENERATING (program 216)
(  24.776) GENERATE: START SOLVING
(  24.784) GENERATE: DONE SOLVING
(  24.792) LOOP: DONE GENERATING (program 216)
PROGRAM:
  f(A,B) :- empty(A),tail(A,C),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
(  24.792) LOOP: START TESTING
(  24.795) LOOP: DONE TESTING ('none', 'none')
(  24.795) LOOP: START IMPOSING CONSTRAINTS
(  24.796) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  24.796) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  24.796) GENERATE: START GROUNDING (impose_constraints)
(  24.891) GENERATE: DONE GROUNDING (impose_constraints)
(  24.891) LOOP: DONE IMPOSING CONSTRAINTS
(  24.891) LOOP: START GENERATING (program 217)
(  24.891) GENERATE: START SOLVING
(  24.898) GENERATE: DONE SOLVING
(  24.903) LOOP: DONE GENERATING (program 217)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
  f(A,B) :- tail(A,C),tail(C,B),empty(C).
(  24.904) LOOP: START TESTING
(  24.905) LOOP: DONE TESTING ('none', 'none')
(  24.905) LOOP: START IMPOSING CONSTRAINTS
(  24.905) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  24.905) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  24.905) GENERATE: START GROUNDING (impose_constraints)
(  24.994) GENERATE: DONE GROUNDING (impose_constraints)
(  24.994) LOOP: DONE IMPOSING CONSTRAINTS
(  24.994) LOOP: START GENERATING (program 218)
(  24.994) GENERATE: START SOLVING
(  25.002) GENERATE: DONE SOLVING
(  25.007) LOOP: DONE GENERATING (program 218)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
  f(A,B) :- tail(A,C),tail(C,B),empty(B).
(  25.007) LOOP: START TESTING
(  25.009) LOOP: DONE TESTING ('none', 'none')
(  25.009) LOOP: START IMPOSING CONSTRAINTS
(  25.009) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  25.009) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  25.009) GENERATE: START GROUNDING (impose_constraints)
(  25.099) GENERATE: DONE GROUNDING (impose_constraints)
(  25.099) LOOP: DONE IMPOSING CONSTRAINTS
(  25.099) LOOP: START GENERATING (program 219)
(  25.099) GENERATE: START SOLVING
(  25.108) GENERATE: DONE SOLVING
(  26.374) LOOP: DONE GENERATING (program 219)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),f(B,C),empty(C).
(  26.375) LOOP: START TESTING
(  26.376) LOOP: DONE TESTING ('none', 'none')
(  26.376) LOOP: START IMPOSING CONSTRAINTS
(  26.376) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  26.376) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  26.376) GENERATE: START GROUNDING (impose_constraints)
(  26.464) GENERATE: DONE GROUNDING (impose_constraints)
(  26.464) LOOP: DONE IMPOSING CONSTRAINTS
(  26.464) LOOP: START GENERATING (program 220)
(  26.464) GENERATE: START SOLVING
(  26.471) GENERATE: DONE SOLVING
(  26.710) LOOP: DONE GENERATING (program 220)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
(  26.710) LOOP: START TESTING
(  26.712) LOOP: DONE TESTING ('none', 'none')
(  26.712) LOOP: START IMPOSING CONSTRAINTS
(  26.712) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  26.712) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  26.712) GENERATE: START GROUNDING (impose_constraints)
(  26.803) GENERATE: DONE GROUNDING (impose_constraints)
(  26.803) LOOP: DONE IMPOSING CONSTRAINTS
(  26.803) LOOP: START GENERATING (program 221)
(  26.803) GENERATE: START SOLVING
(  26.811) GENERATE: DONE SOLVING
(  26.907) LOOP: DONE GENERATING (program 221)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
(  26.907) LOOP: START TESTING
(  26.908) LOOP: DONE TESTING ('none', 'none')
(  26.908) LOOP: START IMPOSING CONSTRAINTS
(  26.909) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  26.909) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  26.909) GENERATE: START GROUNDING (impose_constraints)
(  27.000) GENERATE: DONE GROUNDING (impose_constraints)
(  27.000) LOOP: DONE IMPOSING CONSTRAINTS
(  27.000) LOOP: START GENERATING (program 222)
(  27.000) GENERATE: START SOLVING
(  27.008) GENERATE: DONE SOLVING
(  27.043) LOOP: DONE GENERATING (program 222)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
(  27.043) LOOP: START TESTING
(  27.045) LOOP: DONE TESTING ('none', 'none')
(  27.045) LOOP: START IMPOSING CONSTRAINTS
(  27.045) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  27.045) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  27.045) GENERATE: START GROUNDING (impose_constraints)
(  27.138) GENERATE: DONE GROUNDING (impose_constraints)
(  27.138) LOOP: DONE IMPOSING CONSTRAINTS
(  27.138) LOOP: START GENERATING (program 223)
(  27.138) GENERATE: START SOLVING
(  27.146) GENERATE: DONE SOLVING
(  27.149) LOOP: DONE GENERATING (program 223)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),empty(C).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
(  27.149) LOOP: START TESTING
(  27.151) LOOP: DONE TESTING ('none', 'none')
(  27.151) LOOP: START IMPOSING CONSTRAINTS
(  27.151) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  27.151) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  27.151) GENERATE: START GROUNDING (impose_constraints)
(  27.242) GENERATE: DONE GROUNDING (impose_constraints)
(  27.242) LOOP: DONE IMPOSING CONSTRAINTS
(  27.242) LOOP: START GENERATING (program 224)
(  27.242) GENERATE: START SOLVING
(  27.250) GENERATE: DONE SOLVING
(  27.253) LOOP: DONE GENERATING (program 224)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),empty(C).
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
(  27.253) LOOP: START TESTING
(  27.254) LOOP: DONE TESTING ('none', 'none')
(  27.254) LOOP: START IMPOSING CONSTRAINTS
(  27.254) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  27.254) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  27.254) GENERATE: START GROUNDING (impose_constraints)
(  27.345) GENERATE: DONE GROUNDING (impose_constraints)
(  27.345) LOOP: DONE IMPOSING CONSTRAINTS
(  27.345) LOOP: START GENERATING (program 225)
(  27.345) GENERATE: START SOLVING
(  27.354) GENERATE: DONE SOLVING
(  27.357) LOOP: DONE GENERATING (program 225)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
(  27.357) LOOP: START TESTING
(  27.359) LOOP: DONE TESTING ('none', 'none')
(  27.359) LOOP: START IMPOSING CONSTRAINTS
(  27.359) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  27.359) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  27.359) GENERATE: START GROUNDING (impose_constraints)
(  27.451) GENERATE: DONE GROUNDING (impose_constraints)
(  27.451) LOOP: DONE IMPOSING CONSTRAINTS
(  27.451) LOOP: START GENERATING (program 226)
(  27.451) GENERATE: START SOLVING
(  27.459) GENERATE: DONE SOLVING
(  27.462) LOOP: DONE GENERATING (program 226)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
(  27.462) LOOP: START TESTING
(  27.463) LOOP: DONE TESTING ('none', 'none')
(  27.463) LOOP: START IMPOSING CONSTRAINTS
(  27.463) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  27.463) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  27.464) GENERATE: START GROUNDING (impose_constraints)
(  27.556) GENERATE: DONE GROUNDING (impose_constraints)
(  27.556) LOOP: DONE IMPOSING CONSTRAINTS
(  27.556) LOOP: START GENERATING (program 227)
(  27.556) GENERATE: START SOLVING
(  27.565) GENERATE: DONE SOLVING
(  27.571) LOOP: DONE GENERATING (program 227)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
(  27.572) LOOP: START TESTING
(  27.573) LOOP: DONE TESTING ('none', 'none')
(  27.573) LOOP: START IMPOSING CONSTRAINTS
(  27.573) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  27.573) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  27.573) GENERATE: START GROUNDING (impose_constraints)
(  27.667) GENERATE: DONE GROUNDING (impose_constraints)
(  27.667) LOOP: DONE IMPOSING CONSTRAINTS
(  27.667) LOOP: START GENERATING (program 228)
(  27.667) GENERATE: START SOLVING
(  27.675) GENERATE: DONE SOLVING
(  27.678) LOOP: DONE GENERATING (program 228)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
(  27.679) LOOP: START TESTING
(  27.680) LOOP: DONE TESTING ('none', 'none')
(  27.680) LOOP: START IMPOSING CONSTRAINTS
(  27.680) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  27.680) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  27.680) GENERATE: START GROUNDING (impose_constraints)
(  27.774) GENERATE: DONE GROUNDING (impose_constraints)
(  27.774) LOOP: DONE IMPOSING CONSTRAINTS
(  27.774) LOOP: START GENERATING (program 229)
(  27.774) GENERATE: START SOLVING
(  27.782) GENERATE: DONE SOLVING
(  28.087) LOOP: DONE GENERATING (program 229)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
(  28.088) LOOP: START TESTING
(  28.089) LOOP: DONE TESTING ('none', 'none')
(  28.089) LOOP: START IMPOSING CONSTRAINTS
(  28.089) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  28.089) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  28.089) GENERATE: START GROUNDING (impose_constraints)
(  28.184) GENERATE: DONE GROUNDING (impose_constraints)
(  28.184) LOOP: DONE IMPOSING CONSTRAINTS
(  28.184) LOOP: START GENERATING (program 230)
(  28.184) GENERATE: START SOLVING
(  28.195) GENERATE: DONE SOLVING
(  28.196) LOOP: DONE GENERATING (program 230)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
(  28.196) LOOP: START TESTING
(  28.197) LOOP: DONE TESTING ('none', 'none')
(  28.197) LOOP: START IMPOSING CONSTRAINTS
(  28.197) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  28.197) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  28.198) GENERATE: START GROUNDING (impose_constraints)
(  28.293) GENERATE: DONE GROUNDING (impose_constraints)
(  28.293) LOOP: DONE IMPOSING CONSTRAINTS
(  28.293) LOOP: START GENERATING (program 231)
(  28.293) GENERATE: START SOLVING
(  28.303) GENERATE: DONE SOLVING
(  28.307) LOOP: NO MORE PROGRAMS (with 8 literals)
(  28.307) GENERATE: START SETTING PROGRAM SIZE (9)
(  28.317) GENERATE: START GROUNDING (set_program_size)
(  28.318) GENERATE: DONE GROUNDING (set_program_size)
(  28.318) GENERATE: DONE SETTING PROGRAM SIZE
(  28.318) LOOP: START GENERATING (program 231)
(  28.318) GENERATE: START SOLVING
(  28.332) GENERATE: DONE SOLVING
(  28.361) LOOP: DONE GENERATING (program 231)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,B),head(B,D),head(C,D).
(  28.361) LOOP: START TESTING
(  28.362) LOOP: DONE TESTING ('none', 'none')
(  28.362) LOOP: START IMPOSING CONSTRAINTS
(  28.362) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V2,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  28.362) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,head,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  28.362) GENERATE: START GROUNDING (impose_constraints)
(  28.458) GENERATE: DONE GROUNDING (impose_constraints)
(  28.458) LOOP: DONE IMPOSING CONSTRAINTS
(  28.458) LOOP: START GENERATING (program 232)
(  28.458) GENERATE: START SOLVING
(  28.466) GENERATE: DONE SOLVING
(  28.482) LOOP: DONE GENERATING (program 232)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,A),tail(C,E),tail(E,D),tail(D,B).
  f(A,B) :- tail(A,C),tail(C,B).
(  28.482) LOOP: START TESTING
(  28.483) LOOP: DONE TESTING ('none', 'none')
(  28.483) LOOP: START IMPOSING CONSTRAINTS
(  28.483) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  28.483) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  28.484) GENERATE: START GROUNDING (impose_constraints)
(  28.580) GENERATE: DONE GROUNDING (impose_constraints)
(  28.580) LOOP: DONE IMPOSING CONSTRAINTS
(  28.580) LOOP: START GENERATING (program 233)
(  28.580) GENERATE: START SOLVING
(  28.589) GENERATE: DONE SOLVING
(  28.593) LOOP: DONE GENERATING (program 233)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,C),tail(C,D),f(C,A),tail(D,B).
  f(A,B) :- tail(A,C),tail(C,B).
(  28.593) LOOP: START TESTING
(  28.595) LOOP: DONE TESTING ('none', 'none')
(  28.595) LOOP: START IMPOSING CONSTRAINTS
(  28.595) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  28.595) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  28.595) GENERATE: START GROUNDING (impose_constraints)
(  28.690) GENERATE: DONE GROUNDING (impose_constraints)
(  28.690) LOOP: DONE IMPOSING CONSTRAINTS
(  28.690) LOOP: START GENERATING (program 234)
(  28.690) GENERATE: START SOLVING
(  28.698) GENERATE: DONE SOLVING
(  28.721) LOOP: DONE GENERATING (program 234)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,E),tail(E,C),f(C,A).
  f(A,B) :- tail(A,C),tail(C,B).
(  28.721) LOOP: START TESTING
(  28.723) LOOP: DONE TESTING ('none', 'none')
(  28.723) LOOP: START IMPOSING CONSTRAINTS
(  28.723) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  28.723) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  28.723) GENERATE: START GROUNDING (impose_constraints)
(  28.819) GENERATE: DONE GROUNDING (impose_constraints)
(  28.819) LOOP: DONE IMPOSING CONSTRAINTS
(  28.819) LOOP: START GENERATING (program 235)
(  28.819) GENERATE: START SOLVING
(  28.828) GENERATE: DONE SOLVING
(  28.834) LOOP: DONE GENERATING (program 235)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),f(C,A).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  28.834) LOOP: START TESTING
(  28.836) LOOP: DONE TESTING ('none', 'none')
(  28.836) LOOP: START IMPOSING CONSTRAINTS
(  28.836) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  28.836) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  28.836) GENERATE: START GROUNDING (impose_constraints)
(  28.933) GENERATE: DONE GROUNDING (impose_constraints)
(  28.933) LOOP: DONE IMPOSING CONSTRAINTS
(  28.933) LOOP: START GENERATING (program 236)
(  28.933) GENERATE: START SOLVING
(  28.941) GENERATE: DONE SOLVING
(  28.971) LOOP: DONE GENERATING (program 236)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,D),tail(D,B),tail(B,C),f(C,A).
  f(A,B) :- tail(A,C),tail(C,B).
(  28.971) LOOP: START TESTING
(  28.972) LOOP: DONE TESTING ('none', 'none')
(  28.972) LOOP: START IMPOSING CONSTRAINTS
(  28.972) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  28.972) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  28.973) GENERATE: START GROUNDING (impose_constraints)
(  29.070) GENERATE: DONE GROUNDING (impose_constraints)
(  29.070) LOOP: DONE IMPOSING CONSTRAINTS
(  29.070) LOOP: START GENERATING (program 237)
(  29.070) GENERATE: START SOLVING
(  29.080) GENERATE: DONE SOLVING
(  29.100) LOOP: DONE GENERATING (program 237)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,E),tail(E,B).
(  29.100) LOOP: START TESTING
(  29.102) LOOP: DONE TESTING ('none', 'none')
(  29.102) LOOP: START IMPOSING CONSTRAINTS
(  29.102) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
(  29.102) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  29.102) GENERATE: START GROUNDING (impose_constraints)
(  29.199) GENERATE: DONE GROUNDING (impose_constraints)
(  29.199) LOOP: DONE IMPOSING CONSTRAINTS
(  29.199) LOOP: START GENERATING (program 238)
(  29.199) GENERATE: START SOLVING
(  29.208) GENERATE: DONE SOLVING
(  29.217) LOOP: DONE GENERATING (program 238)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),f(C,A),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  29.217) LOOP: START TESTING
(  29.219) LOOP: DONE TESTING ('none', 'none')
(  29.219) LOOP: START IMPOSING CONSTRAINTS
(  29.219) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  29.219) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  29.219) GENERATE: START GROUNDING (impose_constraints)
(  29.317) GENERATE: DONE GROUNDING (impose_constraints)
(  29.317) LOOP: DONE IMPOSING CONSTRAINTS
(  29.317) LOOP: START GENERATING (program 239)
(  29.317) GENERATE: START SOLVING
(  29.326) GENERATE: DONE SOLVING
(  29.336) LOOP: DONE GENERATING (program 239)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,E),tail(E,C),f(C,A),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,B).
(  29.336) LOOP: START TESTING
(  29.338) LOOP: DONE TESTING ('none', 'none')
(  29.338) LOOP: START IMPOSING CONSTRAINTS
(  29.338) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  29.338) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  29.338) GENERATE: START GROUNDING (impose_constraints)
(  29.436) GENERATE: DONE GROUNDING (impose_constraints)
(  29.436) LOOP: DONE IMPOSING CONSTRAINTS
(  29.436) LOOP: START GENERATING (program 240)
(  29.436) GENERATE: START SOLVING
(  29.445) GENERATE: DONE SOLVING
(  29.472) LOOP: DONE GENERATING (program 240)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,B),tail(B,D),tail(D,C).
(  29.472) LOOP: START TESTING
(  29.474) LOOP: DONE TESTING ('none', 'none')
(  29.474) LOOP: START IMPOSING CONSTRAINTS
(  29.474) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  29.474) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  29.474) GENERATE: START GROUNDING (impose_constraints)
(  29.575) GENERATE: DONE GROUNDING (impose_constraints)
(  29.575) LOOP: DONE IMPOSING CONSTRAINTS
(  29.575) LOOP: START GENERATING (program 241)
(  29.575) GENERATE: START SOLVING
(  29.585) GENERATE: DONE SOLVING
(  29.604) LOOP: DONE GENERATING (program 241)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,A).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  29.604) LOOP: START TESTING
(  29.606) LOOP: DONE TESTING ('none', 'none')
(  29.606) LOOP: START IMPOSING CONSTRAINTS
(  29.606) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  29.606) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  29.606) GENERATE: START GROUNDING (impose_constraints)
(  29.707) GENERATE: DONE GROUNDING (impose_constraints)
(  29.707) LOOP: DONE IMPOSING CONSTRAINTS
(  29.707) LOOP: START GENERATING (program 242)
(  29.707) GENERATE: START SOLVING
(  29.716) GENERATE: DONE SOLVING
(  29.726) LOOP: DONE GENERATING (program 242)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),tail(D,C),f(C,A).
  f(A,B) :- tail(A,C),tail(C,B).
(  29.726) LOOP: START TESTING
(  29.728) LOOP: DONE TESTING ('none', 'none')
(  29.728) LOOP: START IMPOSING CONSTRAINTS
(  29.728) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  29.728) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  29.728) GENERATE: START GROUNDING (impose_constraints)
(  29.833) GENERATE: DONE GROUNDING (impose_constraints)
(  29.833) LOOP: DONE IMPOSING CONSTRAINTS
(  29.833) LOOP: START GENERATING (program 243)
(  29.833) GENERATE: START SOLVING
(  29.842) GENERATE: DONE SOLVING
(  29.953) LOOP: DONE GENERATING (program 243)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),f(C,A),tail(D,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
(  29.953) LOOP: START TESTING
(  29.954) LOOP: DONE TESTING ('none', 'none')
(  29.954) LOOP: START IMPOSING CONSTRAINTS
(  29.954) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  29.954) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  29.955) GENERATE: START GROUNDING (impose_constraints)
(  30.056) GENERATE: DONE GROUNDING (impose_constraints)
(  30.056) LOOP: DONE IMPOSING CONSTRAINTS
(  30.056) LOOP: START GENERATING (program 244)
(  30.056) GENERATE: START SOLVING
(  30.067) GENERATE: DONE SOLVING
(  30.146) LOOP: DONE GENERATING (program 244)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
  f(A,B) :- head(A,C),tail(A,D),head(D,C),tail(D,B).
(  30.146) LOOP: START TESTING
(  30.148) LOOP: DONE TESTING ('none', 'none')
(  30.148) LOOP: START IMPOSING CONSTRAINTS
(  30.148) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  30.148) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  30.148) GENERATE: START GROUNDING (impose_constraints)
(  30.252) GENERATE: DONE GROUNDING (impose_constraints)
(  30.252) LOOP: DONE IMPOSING CONSTRAINTS
(  30.253) LOOP: START GENERATING (program 245)
(  30.253) GENERATE: START SOLVING
(  30.262) GENERATE: DONE SOLVING
(  30.352) LOOP: DONE GENERATING (program 245)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,B),tail(B,D),tail(D,A).
(  30.352) LOOP: START TESTING
(  30.353) LOOP: DONE TESTING ('none', 'none')
(  30.353) LOOP: START IMPOSING CONSTRAINTS
(  30.354) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  30.354) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  30.354) GENERATE: START GROUNDING (impose_constraints)
(  30.458) GENERATE: DONE GROUNDING (impose_constraints)
(  30.458) LOOP: DONE IMPOSING CONSTRAINTS
(  30.458) LOOP: START GENERATING (program 246)
(  30.458) GENERATE: START SOLVING
(  30.467) GENERATE: DONE SOLVING
(  30.478) LOOP: DONE GENERATING (program 246)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,E),tail(E,B).
(  30.478) LOOP: START TESTING
(  30.480) LOOP: DONE TESTING ('none', 'none')
(  30.480) LOOP: START IMPOSING CONSTRAINTS
(  30.480) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
(  30.480) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  30.480) GENERATE: START GROUNDING (impose_constraints)
(  30.584) GENERATE: DONE GROUNDING (impose_constraints)
(  30.584) LOOP: DONE IMPOSING CONSTRAINTS
(  30.584) LOOP: START GENERATING (program 247)
(  30.584) GENERATE: START SOLVING
(  30.594) GENERATE: DONE SOLVING
(  30.616) LOOP: DONE GENERATING (program 247)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,B),tail(B,D),empty(D).
(  30.616) LOOP: START TESTING
(  30.618) LOOP: DONE TESTING ('none', 'none')
(  30.618) LOOP: START IMPOSING CONSTRAINTS
(  30.618) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  30.618) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V3,)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  30.618) GENERATE: START GROUNDING (impose_constraints)
(  30.722) GENERATE: DONE GROUNDING (impose_constraints)
(  30.722) LOOP: DONE IMPOSING CONSTRAINTS
(  30.722) LOOP: START GENERATING (program 248)
(  30.722) GENERATE: START SOLVING
(  30.732) GENERATE: DONE SOLVING
(  30.739) LOOP: DONE GENERATING (program 248)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,A),tail(C,B).
  f(A,B) :- head(A,D),tail(A,C),tail(C,B),head(B,D).
(  30.739) LOOP: START TESTING
(  30.741) LOOP: DONE TESTING ('none', 'none')
(  30.741) LOOP: START IMPOSING CONSTRAINTS
(  30.741) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  30.741) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  30.741) GENERATE: START GROUNDING (impose_constraints)
(  30.847) GENERATE: DONE GROUNDING (impose_constraints)
(  30.847) LOOP: DONE IMPOSING CONSTRAINTS
(  30.847) LOOP: START GENERATING (program 249)
(  30.847) GENERATE: START SOLVING
(  30.857) GENERATE: DONE SOLVING
(  31.063) LOOP: DONE GENERATING (program 249)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),tail(D,C),f(C,A).
  f(A,B) :- tail(A,B),empty(B).
(  31.063) LOOP: START TESTING
(  31.064) LOOP: DONE TESTING ('none', 'none')
(  31.064) LOOP: START IMPOSING CONSTRAINTS
(  31.064) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  31.064) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  31.065) GENERATE: START GROUNDING (impose_constraints)
(  31.171) GENERATE: DONE GROUNDING (impose_constraints)
(  31.171) LOOP: DONE IMPOSING CONSTRAINTS
(  31.171) LOOP: START GENERATING (program 250)
(  31.171) GENERATE: START SOLVING
(  31.181) GENERATE: DONE SOLVING
(  31.290) LOOP: DONE GENERATING (program 250)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,A).
(  31.291) LOOP: START TESTING
(  31.292) LOOP: DONE TESTING ('none', 'none')
(  31.292) LOOP: START IMPOSING CONSTRAINTS
(  31.292) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  31.292) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  31.292) GENERATE: START GROUNDING (impose_constraints)
(  31.400) GENERATE: DONE GROUNDING (impose_constraints)
(  31.400) LOOP: DONE IMPOSING CONSTRAINTS
(  31.400) LOOP: START GENERATING (program 251)
(  31.400) GENERATE: START SOLVING
(  31.409) GENERATE: DONE SOLVING
(  31.444) LOOP: DONE GENERATING (program 251)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),tail(D,C),f(C,A).
  f(A,B) :- tail(A,B),empty(A).
(  31.444) LOOP: START TESTING
(  31.445) LOOP: DONE TESTING ('none', 'none')
(  31.445) LOOP: START IMPOSING CONSTRAINTS
(  31.445) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  31.445) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  31.445) GENERATE: START GROUNDING (impose_constraints)
(  31.551) GENERATE: DONE GROUNDING (impose_constraints)
(  31.551) LOOP: DONE IMPOSING CONSTRAINTS
(  31.551) LOOP: START GENERATING (program 252)
(  31.551) GENERATE: START SOLVING
(  31.562) GENERATE: DONE SOLVING
(  31.654) LOOP: DONE GENERATING (program 252)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,A).
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
(  31.654) LOOP: START TESTING
(  31.655) LOOP: DONE TESTING ('none', 'none')
(  31.655) LOOP: START IMPOSING CONSTRAINTS
(  31.655) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  31.655) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  31.655) GENERATE: START GROUNDING (impose_constraints)
(  31.767) GENERATE: DONE GROUNDING (impose_constraints)
(  31.767) LOOP: DONE IMPOSING CONSTRAINTS
(  31.767) LOOP: START GENERATING (program 253)
(  31.767) GENERATE: START SOLVING
(  31.781) GENERATE: DONE SOLVING
(  31.789) LOOP: DONE GENERATING (program 253)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,A).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
(  31.789) LOOP: START TESTING
(  31.791) LOOP: DONE TESTING ('none', 'none')
(  31.791) LOOP: START IMPOSING CONSTRAINTS
(  31.791) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  31.791) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  31.791) GENERATE: START GROUNDING (impose_constraints)
(  31.912) GENERATE: DONE GROUNDING (impose_constraints)
(  31.912) LOOP: DONE IMPOSING CONSTRAINTS
(  31.912) LOOP: START GENERATING (program 254)
(  31.912) GENERATE: START SOLVING
(  31.922) GENERATE: DONE SOLVING
(  31.926) LOOP: DONE GENERATING (program 254)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,A).
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
(  31.926) LOOP: START TESTING
(  31.927) LOOP: DONE TESTING ('none', 'none')
(  31.927) LOOP: START IMPOSING CONSTRAINTS
(  31.927) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  31.927) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  31.928) GENERATE: START GROUNDING (impose_constraints)
(  32.038) GENERATE: DONE GROUNDING (impose_constraints)
(  32.039) LOOP: DONE IMPOSING CONSTRAINTS
(  32.039) LOOP: START GENERATING (program 255)
(  32.039) GENERATE: START SOLVING
(  32.050) GENERATE: DONE SOLVING
(  32.059) LOOP: DONE GENERATING (program 255)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
  f(A,B) :- tail(A,B),head(B,C),tail(B,D),head(D,C).
(  32.059) LOOP: START TESTING
(  32.060) LOOP: DONE TESTING ('none', 'none')
(  32.060) LOOP: START IMPOSING CONSTRAINTS
(  32.060) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  32.060) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  32.060) GENERATE: START GROUNDING (impose_constraints)
(  32.173) GENERATE: DONE GROUNDING (impose_constraints)
(  32.173) LOOP: DONE IMPOSING CONSTRAINTS
(  32.173) LOOP: START GENERATING (program 256)
(  32.173) GENERATE: START SOLVING
(  32.185) GENERATE: DONE SOLVING
(  32.189) LOOP: DONE GENERATING (program 256)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
  f(A,B) :- head(A,C),tail(A,B),tail(B,D),head(D,C).
(  32.189) LOOP: START TESTING
(  32.191) LOOP: DONE TESTING ('none', 'none')
(  32.191) LOOP: START IMPOSING CONSTRAINTS
(  32.191) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  32.191) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  32.191) GENERATE: START GROUNDING (impose_constraints)
(  32.305) GENERATE: DONE GROUNDING (impose_constraints)
(  32.305) LOOP: DONE IMPOSING CONSTRAINTS
(  32.305) LOOP: START GENERATING (program 257)
(  32.305) GENERATE: START SOLVING
(  32.315) GENERATE: DONE SOLVING
(  32.319) LOOP: DONE GENERATING (program 257)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),empty(C).
(  32.319) LOOP: START TESTING
(  32.321) LOOP: DONE TESTING ('none', 'none')
(  32.321) LOOP: START IMPOSING CONSTRAINTS
(  32.321) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  32.321) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  32.322) GENERATE: START GROUNDING (impose_constraints)
(  32.437) GENERATE: DONE GROUNDING (impose_constraints)
(  32.437) LOOP: DONE IMPOSING CONSTRAINTS
(  32.437) LOOP: START GENERATING (program 258)
(  32.438) GENERATE: START SOLVING
(  32.449) GENERATE: DONE SOLVING
(  32.453) LOOP: DONE GENERATING (program 258)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,A).
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,B).
(  32.453) LOOP: START TESTING
(  32.455) LOOP: DONE TESTING ('none', 'none')
(  32.455) LOOP: START IMPOSING CONSTRAINTS
(  32.455) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  32.455) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  32.455) GENERATE: START GROUNDING (impose_constraints)
(  32.567) GENERATE: DONE GROUNDING (impose_constraints)
(  32.567) LOOP: DONE IMPOSING CONSTRAINTS
(  32.567) LOOP: START GENERATING (program 259)
(  32.567) GENERATE: START SOLVING
(  32.578) GENERATE: DONE SOLVING
(  32.714) LOOP: DONE GENERATING (program 259)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,C),tail(C,D),tail(D,B).
  f(A,B) :- tail(A,C),tail(C,D),f(D,B).
(  32.714) LOOP: START TESTING
(  32.716) LOOP: DONE TESTING ('none', 'none')
(  32.716) LOOP: START IMPOSING CONSTRAINTS
(  32.716) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
(  32.716) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,f,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  32.716) GENERATE: START GROUNDING (impose_constraints)
(  32.833) GENERATE: DONE GROUNDING (impose_constraints)
(  32.833) LOOP: DONE IMPOSING CONSTRAINTS
(  32.833) LOOP: START GENERATING (program 260)
(  32.833) GENERATE: START SOLVING
(  32.844) GENERATE: DONE SOLVING
(  32.933) LOOP: DONE GENERATING (program 260)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,C),f(C,D),tail(D,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  32.934) LOOP: START TESTING
(  32.935) LOOP: DONE TESTING ('none', 'none')
(  32.935) LOOP: START IMPOSING CONSTRAINTS
(  32.935) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  32.935) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  32.936) GENERATE: START GROUNDING (impose_constraints)
(  33.051) GENERATE: DONE GROUNDING (impose_constraints)
(  33.051) LOOP: DONE IMPOSING CONSTRAINTS
(  33.051) LOOP: START GENERATING (program 261)
(  33.051) GENERATE: START SOLVING
(  33.064) GENERATE: DONE SOLVING
(  33.071) LOOP: DONE GENERATING (program 261)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,D),tail(D,E),tail(E,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  33.072) LOOP: START TESTING
(  33.073) LOOP: DONE TESTING ('none', 'none')
(  33.073) LOOP: START IMPOSING CONSTRAINTS
(  33.073) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  33.073) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  33.073) GENERATE: START GROUNDING (impose_constraints)
(  33.193) GENERATE: DONE GROUNDING (impose_constraints)
(  33.193) LOOP: DONE IMPOSING CONSTRAINTS
(  33.193) LOOP: START GENERATING (program 262)
(  33.193) GENERATE: START SOLVING
(  33.205) GENERATE: DONE SOLVING
(  33.214) LOOP: DONE GENERATING (program 262)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,D),tail(D,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,E),tail(E,B).
(  33.214) LOOP: START TESTING
(  33.215) LOOP: DONE TESTING ('none', 'none')
(  33.215) LOOP: START IMPOSING CONSTRAINTS
(  33.215) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
(  33.215) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  33.216) GENERATE: START GROUNDING (impose_constraints)
(  33.337) GENERATE: DONE GROUNDING (impose_constraints)
(  33.337) LOOP: DONE IMPOSING CONSTRAINTS
(  33.337) LOOP: START GENERATING (program 263)
(  33.337) GENERATE: START SOLVING
(  33.350) GENERATE: DONE SOLVING
(  33.363) LOOP: DONE GENERATING (program 263)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(C,D),tail(D,A).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  33.363) LOOP: START TESTING
(  33.366) LOOP: DONE TESTING ('none', 'none')
(  33.366) LOOP: START IMPOSING CONSTRAINTS
(  33.366) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  33.366) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V0)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  33.366) GENERATE: START GROUNDING (impose_constraints)
(  33.485) GENERATE: DONE GROUNDING (impose_constraints)
(  33.485) LOOP: DONE IMPOSING CONSTRAINTS
(  33.485) LOOP: START GENERATING (program 264)
(  33.485) GENERATE: START SOLVING
(  33.496) GENERATE: DONE SOLVING
(  33.517) LOOP: DONE GENERATING (program 264)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,A).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  33.517) LOOP: START TESTING
(  33.518) LOOP: DONE TESTING ('none', 'none')
(  33.518) LOOP: START IMPOSING CONSTRAINTS
(  33.518) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  33.518) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  33.519) GENERATE: START GROUNDING (impose_constraints)
(  33.637) GENERATE: DONE GROUNDING (impose_constraints)
(  33.637) LOOP: DONE IMPOSING CONSTRAINTS
(  33.637) LOOP: START GENERATING (program 265)
(  33.637) GENERATE: START SOLVING
(  33.649) GENERATE: DONE SOLVING
(  33.654) LOOP: DONE GENERATING (program 265)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B),f(C,D).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  33.654) LOOP: START TESTING
(  33.656) LOOP: DONE TESTING ('none', 'none')
(  33.656) LOOP: START IMPOSING CONSTRAINTS
(  33.656) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  33.656) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  33.656) GENERATE: START GROUNDING (impose_constraints)
(  33.781) GENERATE: DONE GROUNDING (impose_constraints)
(  33.781) LOOP: DONE IMPOSING CONSTRAINTS
(  33.781) LOOP: START GENERATING (program 266)
(  33.781) GENERATE: START SOLVING
(  33.796) GENERATE: DONE SOLVING
(  33.801) LOOP: DONE GENERATING (program 266)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),f(C,D).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  33.801) LOOP: START TESTING
(  33.803) LOOP: DONE TESTING ('none', 'none')
(  33.803) LOOP: START IMPOSING CONSTRAINTS
(  33.803) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  33.803) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  33.804) GENERATE: START GROUNDING (impose_constraints)
(  33.930) GENERATE: DONE GROUNDING (impose_constraints)
(  33.930) LOOP: DONE IMPOSING CONSTRAINTS
(  33.930) LOOP: START GENERATING (program 267)
(  33.930) GENERATE: START SOLVING
(  33.941) GENERATE: DONE SOLVING
(  33.951) LOOP: DONE GENERATING (program 267)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(C,D),empty(D).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  33.951) LOOP: START TESTING
(  33.953) LOOP: DONE TESTING ('none', 'none')
(  33.953) LOOP: START IMPOSING CONSTRAINTS
(  33.953) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  33.953) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V3,)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  33.953) GENERATE: START GROUNDING (impose_constraints)
(  34.073) GENERATE: DONE GROUNDING (impose_constraints)
(  34.073) LOOP: DONE IMPOSING CONSTRAINTS
(  34.073) LOOP: START GENERATING (program 268)
(  34.073) GENERATE: START SOLVING
(  34.086) GENERATE: DONE SOLVING
(  34.092) LOOP: DONE GENERATING (program 268)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),tail(B,D),f(C,D).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  34.092) LOOP: START TESTING
(  34.093) LOOP: DONE TESTING ('none', 'none')
(  34.093) LOOP: START IMPOSING CONSTRAINTS
(  34.093) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  34.093) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  34.094) GENERATE: START GROUNDING (impose_constraints)
(  34.213) GENERATE: DONE GROUNDING (impose_constraints)
(  34.213) LOOP: DONE IMPOSING CONSTRAINTS
(  34.213) LOOP: START GENERATING (program 269)
(  34.213) GENERATE: START SOLVING
(  34.224) GENERATE: DONE SOLVING
(  34.229) LOOP: DONE GENERATING (program 269)
PROGRAM:
  f(A,B) :- tail(A,C),f(C,D),tail(C,B),tail(D,C).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  34.229) LOOP: START TESTING
(  34.230) LOOP: DONE TESTING ('none', 'none')
(  34.230) LOOP: START IMPOSING CONSTRAINTS
(  34.230) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  34.230) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  34.231) GENERATE: START GROUNDING (impose_constraints)
(  34.353) GENERATE: DONE GROUNDING (impose_constraints)
(  34.353) LOOP: DONE IMPOSING CONSTRAINTS
(  34.353) LOOP: START GENERATING (program 270)
(  34.353) GENERATE: START SOLVING
(  34.365) GENERATE: DONE SOLVING
(  34.371) LOOP: DONE GENERATING (program 270)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(C,D).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  34.372) LOOP: START TESTING
(  34.373) LOOP: DONE TESTING ('none', 'none')
(  34.373) LOOP: START IMPOSING CONSTRAINTS
(  34.373) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  34.373) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  34.373) GENERATE: START GROUNDING (impose_constraints)
(  34.494) GENERATE: DONE GROUNDING (impose_constraints)
(  34.494) LOOP: DONE IMPOSING CONSTRAINTS
(  34.494) LOOP: START GENERATING (program 271)
(  34.494) GENERATE: START SOLVING
(  34.506) GENERATE: DONE SOLVING
(  34.511) LOOP: DONE GENERATING (program 271)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),empty(D).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  34.511) LOOP: START TESTING
(  34.512) LOOP: DONE TESTING ('none', 'none')
(  34.512) LOOP: START IMPOSING CONSTRAINTS
(  34.512) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  34.512) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V3,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  34.513) GENERATE: START GROUNDING (impose_constraints)
(  34.634) GENERATE: DONE GROUNDING (impose_constraints)
(  34.634) LOOP: DONE IMPOSING CONSTRAINTS
(  34.634) LOOP: START GENERATING (program 272)
(  34.634) GENERATE: START SOLVING
(  34.646) GENERATE: DONE SOLVING
(  34.650) LOOP: DONE GENERATING (program 272)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  34.650) LOOP: START TESTING
(  34.651) LOOP: DONE TESTING ('none', 'none')
(  34.651) LOOP: START IMPOSING CONSTRAINTS
(  34.652) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  34.652) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  34.652) GENERATE: START GROUNDING (impose_constraints)
(  34.772) GENERATE: DONE GROUNDING (impose_constraints)
(  34.772) LOOP: DONE IMPOSING CONSTRAINTS
(  34.772) LOOP: START GENERATING (program 273)
(  34.772) GENERATE: START SOLVING
(  34.784) GENERATE: DONE SOLVING
(  34.788) LOOP: DONE GENERATING (program 273)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,C).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  34.788) LOOP: START TESTING
(  34.790) LOOP: DONE TESTING ('none', 'none')
(  34.790) LOOP: START IMPOSING CONSTRAINTS
(  34.790) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  34.790) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  34.790) GENERATE: START GROUNDING (impose_constraints)
(  34.913) GENERATE: DONE GROUNDING (impose_constraints)
(  34.913) LOOP: DONE IMPOSING CONSTRAINTS
(  34.913) LOOP: START GENERATING (program 274)
(  34.913) GENERATE: START SOLVING
(  34.925) GENERATE: DONE SOLVING
(  34.931) LOOP: DONE GENERATING (program 274)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,D).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  34.932) LOOP: START TESTING
(  34.933) LOOP: DONE TESTING ('none', 'none')
(  34.933) LOOP: START IMPOSING CONSTRAINTS
(  34.933) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  34.933) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  34.933) GENERATE: START GROUNDING (impose_constraints)
(  35.058) GENERATE: DONE GROUNDING (impose_constraints)
(  35.058) LOOP: DONE IMPOSING CONSTRAINTS
(  35.058) LOOP: START GENERATING (program 275)
(  35.058) GENERATE: START SOLVING
(  35.071) GENERATE: DONE SOLVING
(  35.315) LOOP: DONE GENERATING (program 275)
PROGRAM:
  f(A,B) :- head(A,E),tail(A,D),f(D,C),head(C,E),tail(D,B).
  f(A,B) :- tail(A,C),tail(C,B).
(  35.315) LOOP: START TESTING
(  35.316) LOOP: DONE TESTING ('none', 'none')
(  35.316) LOOP: START IMPOSING CONSTRAINTS
(  35.316) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  35.316) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V2)),body_literal(ClId0,head,2,(ClId0V2,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  35.317) GENERATE: START GROUNDING (impose_constraints)
(  35.461) GENERATE: DONE GROUNDING (impose_constraints)
(  35.461) LOOP: DONE IMPOSING CONSTRAINTS
(  35.461) LOOP: START GENERATING (program 276)
(  35.461) GENERATE: START SOLVING
(  35.477) GENERATE: DONE SOLVING
(  35.628) LOOP: DONE GENERATING (program 276)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  35.629) LOOP: START TESTING
(  35.630) LOOP: DONE TESTING ('none', 'none')
(  35.630) LOOP: START IMPOSING CONSTRAINTS
(  35.630) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  35.630) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  35.630) GENERATE: START GROUNDING (impose_constraints)
(  35.758) GENERATE: DONE GROUNDING (impose_constraints)
(  35.758) LOOP: DONE IMPOSING CONSTRAINTS
(  35.758) LOOP: START GENERATING (program 277)
(  35.758) GENERATE: START SOLVING
(  35.770) GENERATE: DONE SOLVING
(  35.785) LOOP: DONE GENERATING (program 277)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,C),tail(C,B).
(  35.786) LOOP: START TESTING
(  35.787) LOOP: DONE TESTING ('none', 'none')
(  35.787) LOOP: START IMPOSING CONSTRAINTS
(  35.787) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  35.787) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  35.787) GENERATE: START GROUNDING (impose_constraints)
(  35.911) GENERATE: DONE GROUNDING (impose_constraints)
(  35.911) LOOP: DONE IMPOSING CONSTRAINTS
(  35.911) LOOP: START GENERATING (program 278)
(  35.911) GENERATE: START SOLVING
(  35.923) GENERATE: DONE SOLVING
(  36.010) LOOP: DONE GENERATING (program 278)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,B),tail(B,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,C),tail(C,B).
(  36.010) LOOP: START TESTING
(  36.011) LOOP: DONE TESTING ('none', 'none')
(  36.011) LOOP: START IMPOSING CONSTRAINTS
(  36.012) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  36.012) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  36.012) GENERATE: START GROUNDING (impose_constraints)
(  36.135) GENERATE: DONE GROUNDING (impose_constraints)
(  36.135) LOOP: DONE IMPOSING CONSTRAINTS
(  36.135) LOOP: START GENERATING (program 279)
(  36.135) GENERATE: START SOLVING
(  36.148) GENERATE: DONE SOLVING
(  36.225) LOOP: DONE GENERATING (program 279)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- head(A,C),tail(A,B),tail(B,D),head(D,C).
(  36.225) LOOP: START TESTING
(  36.227) LOOP: DONE TESTING ('none', 'none')
(  36.227) LOOP: START IMPOSING CONSTRAINTS
(  36.227) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  36.227) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  36.227) GENERATE: START GROUNDING (impose_constraints)
(  36.355) GENERATE: DONE GROUNDING (impose_constraints)
(  36.355) LOOP: DONE IMPOSING CONSTRAINTS
(  36.355) LOOP: START GENERATING (program 280)
(  36.355) GENERATE: START SOLVING
(  36.368) GENERATE: DONE SOLVING
(  36.529) LOOP: DONE GENERATING (program 280)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  36.529) LOOP: START TESTING
(  36.531) LOOP: DONE TESTING ('none', 'none')
(  36.531) LOOP: START IMPOSING CONSTRAINTS
(  36.531) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  36.531) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  36.531) GENERATE: START GROUNDING (impose_constraints)
(  36.665) GENERATE: DONE GROUNDING (impose_constraints)
(  36.665) LOOP: DONE IMPOSING CONSTRAINTS
(  36.665) LOOP: START GENERATING (program 281)
(  36.665) GENERATE: START SOLVING
(  36.679) GENERATE: DONE SOLVING
(  36.691) LOOP: DONE GENERATING (program 281)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,E),tail(E,B).
(  36.691) LOOP: START TESTING
(  36.693) LOOP: DONE TESTING ('none', 'none')
(  36.693) LOOP: START IMPOSING CONSTRAINTS
(  36.693) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
(  36.693) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  36.693) GENERATE: START GROUNDING (impose_constraints)
(  36.828) GENERATE: DONE GROUNDING (impose_constraints)
(  36.828) LOOP: DONE IMPOSING CONSTRAINTS
(  36.828) LOOP: START GENERATING (program 282)
(  36.828) GENERATE: START SOLVING
(  36.841) GENERATE: DONE SOLVING
(  36.858) LOOP: DONE GENERATING (program 282)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,E),tail(E,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,C),tail(C,B).
(  36.858) LOOP: START TESTING
(  36.859) LOOP: DONE TESTING ('none', 'none')
(  36.859) LOOP: START IMPOSING CONSTRAINTS
(  36.859) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  36.859) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  36.860) GENERATE: START GROUNDING (impose_constraints)
(  36.994) GENERATE: DONE GROUNDING (impose_constraints)
(  36.994) LOOP: DONE IMPOSING CONSTRAINTS
(  36.994) LOOP: START GENERATING (program 283)
(  36.994) GENERATE: START SOLVING
(  37.008) GENERATE: DONE SOLVING
(  37.038) LOOP: DONE GENERATING (program 283)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
(  37.038) LOOP: START TESTING
(  37.040) LOOP: DONE TESTING ('none', 'none')
(  37.040) LOOP: START IMPOSING CONSTRAINTS
(  37.040) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  37.040) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  37.040) GENERATE: START GROUNDING (impose_constraints)
(  37.175) GENERATE: DONE GROUNDING (impose_constraints)
(  37.175) LOOP: DONE IMPOSING CONSTRAINTS
(  37.175) LOOP: START GENERATING (program 284)
(  37.175) GENERATE: START SOLVING
(  37.189) GENERATE: DONE SOLVING
(  37.482) LOOP: DONE GENERATING (program 284)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,A).
(  37.482) LOOP: START TESTING
(  37.483) LOOP: DONE TESTING ('none', 'none')
(  37.483) LOOP: START IMPOSING CONSTRAINTS
(  37.483) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  37.483) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  37.483) GENERATE: START GROUNDING (impose_constraints)
(  37.614) GENERATE: DONE GROUNDING (impose_constraints)
(  37.614) LOOP: DONE IMPOSING CONSTRAINTS
(  37.614) LOOP: START GENERATING (program 285)
(  37.614) GENERATE: START SOLVING
(  37.627) GENERATE: DONE SOLVING
(  37.683) LOOP: DONE GENERATING (program 285)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),empty(C).
(  37.683) LOOP: START TESTING
(  37.684) LOOP: DONE TESTING ('none', 'none')
(  37.684) LOOP: START IMPOSING CONSTRAINTS
(  37.684) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  37.684) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  37.684) GENERATE: START GROUNDING (impose_constraints)
(  37.816) GENERATE: DONE GROUNDING (impose_constraints)
(  37.816) LOOP: DONE IMPOSING CONSTRAINTS
(  37.816) LOOP: START GENERATING (program 286)
(  37.816) GENERATE: START SOLVING
(  37.829) GENERATE: DONE SOLVING
(  37.835) LOOP: DONE GENERATING (program 286)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,B).
(  37.835) LOOP: START TESTING
(  37.837) LOOP: DONE TESTING ('none', 'none')
(  37.837) LOOP: START IMPOSING CONSTRAINTS
(  37.837) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  37.837) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  37.837) GENERATE: START GROUNDING (impose_constraints)
(  37.965) GENERATE: DONE GROUNDING (impose_constraints)
(  37.965) LOOP: DONE IMPOSING CONSTRAINTS
(  37.966) LOOP: START GENERATING (program 287)
(  37.966) GENERATE: START SOLVING
(  37.979) GENERATE: DONE SOLVING
(  38.021) LOOP: DONE GENERATING (program 287)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,E),tail(E,C),f(C,B).
  f(A,B) :- tail(A,B),empty(B).
(  38.021) LOOP: START TESTING
(  38.023) LOOP: DONE TESTING ('none', 'none')
(  38.023) LOOP: START IMPOSING CONSTRAINTS
(  38.023) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  38.023) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  38.023) GENERATE: START GROUNDING (impose_constraints)
(  38.157) GENERATE: DONE GROUNDING (impose_constraints)
(  38.157) LOOP: DONE IMPOSING CONSTRAINTS
(  38.157) LOOP: START GENERATING (program 288)
(  38.157) GENERATE: START SOLVING
(  38.170) GENERATE: DONE SOLVING
(  38.241) LOOP: DONE GENERATING (program 288)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,B).
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
(  38.241) LOOP: START TESTING
(  38.242) LOOP: DONE TESTING ('none', 'none')
(  38.242) LOOP: START IMPOSING CONSTRAINTS
(  38.242) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  38.242) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  38.242) GENERATE: START GROUNDING (impose_constraints)
(  38.373) GENERATE: DONE GROUNDING (impose_constraints)
(  38.373) LOOP: DONE IMPOSING CONSTRAINTS
(  38.373) LOOP: START GENERATING (program 289)
(  38.373) GENERATE: START SOLVING
(  38.386) GENERATE: DONE SOLVING
(  38.403) LOOP: DONE GENERATING (program 289)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
(  38.403) LOOP: START TESTING
(  38.404) LOOP: DONE TESTING ('none', 'none')
(  38.404) LOOP: START IMPOSING CONSTRAINTS
(  38.404) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  38.404) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  38.405) GENERATE: START GROUNDING (impose_constraints)
(  38.534) GENERATE: DONE GROUNDING (impose_constraints)
(  38.534) LOOP: DONE IMPOSING CONSTRAINTS
(  38.534) LOOP: START GENERATING (program 290)
(  38.534) GENERATE: START SOLVING
(  38.548) GENERATE: DONE SOLVING
(  38.560) LOOP: DONE GENERATING (program 290)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),head(B,C),tail(B,D),head(D,C).
(  38.561) LOOP: START TESTING
(  38.562) LOOP: DONE TESTING ('none', 'none')
(  38.562) LOOP: START IMPOSING CONSTRAINTS
(  38.562) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  38.562) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  38.562) GENERATE: START GROUNDING (impose_constraints)
(  38.694) GENERATE: DONE GROUNDING (impose_constraints)
(  38.694) LOOP: DONE IMPOSING CONSTRAINTS
(  38.694) LOOP: START GENERATING (program 291)
(  38.694) GENERATE: START SOLVING
(  38.707) GENERATE: DONE SOLVING
(  38.739) LOOP: DONE GENERATING (program 291)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,E),tail(E,C),f(C,B).
  f(A,B) :- tail(A,B),empty(A).
(  38.739) LOOP: START TESTING
(  38.740) LOOP: DONE TESTING ('none', 'none')
(  38.740) LOOP: START IMPOSING CONSTRAINTS
(  38.740) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  38.740) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  38.740) GENERATE: START GROUNDING (impose_constraints)
(  38.876) GENERATE: DONE GROUNDING (impose_constraints)
(  38.876) LOOP: DONE IMPOSING CONSTRAINTS
(  38.876) LOOP: START GENERATING (program 292)
(  38.876) GENERATE: START SOLVING
(  38.890) GENERATE: DONE SOLVING
(  39.042) LOOP: DONE GENERATING (program 292)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,D),tail(D,E),head(D,C),head(E,C).
(  39.042) LOOP: START TESTING
(  39.044) LOOP: DONE TESTING ('none', 'none')
(  39.044) LOOP: START IMPOSING CONSTRAINTS
(  39.044) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  39.044) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  39.044) GENERATE: START GROUNDING (impose_constraints)
(  39.178) GENERATE: DONE GROUNDING (impose_constraints)
(  39.178) LOOP: DONE IMPOSING CONSTRAINTS
(  39.178) LOOP: START GENERATING (program 293)
(  39.178) GENERATE: START SOLVING
(  39.192) GENERATE: DONE SOLVING
(  39.313) LOOP: DONE GENERATING (program 293)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- head(A,C),tail(A,D),head(D,C),tail(D,B),f(B,D).
(  39.313) LOOP: START TESTING
(  39.314) LOOP: DONE TESTING ('none', 'none')
(  39.314) LOOP: START IMPOSING CONSTRAINTS
(  39.314) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  39.314) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  39.315) GENERATE: START GROUNDING (impose_constraints)
(  39.447) GENERATE: DONE GROUNDING (impose_constraints)
(  39.448) LOOP: DONE IMPOSING CONSTRAINTS
(  39.448) LOOP: START GENERATING (program 294)
(  39.448) GENERATE: START SOLVING
(  39.461) GENERATE: DONE SOLVING
(  39.472) LOOP: DONE GENERATING (program 294)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- head(A,C),tail(A,E),tail(E,B),f(B,D),head(D,C).
(  39.472) LOOP: START TESTING
(  39.474) LOOP: DONE TESTING ('none', 'none')
(  39.474) LOOP: START IMPOSING CONSTRAINTS
(  39.474) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  39.474) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  39.474) GENERATE: START GROUNDING (impose_constraints)
(  39.612) GENERATE: DONE GROUNDING (impose_constraints)
(  39.612) LOOP: DONE IMPOSING CONSTRAINTS
(  39.612) LOOP: START GENERATING (program 295)
(  39.612) GENERATE: START SOLVING
(  39.626) GENERATE: DONE SOLVING
(  39.640) LOOP: DONE GENERATING (program 295)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,E),f(B,D),head(D,C),head(E,C).
(  39.640) LOOP: START TESTING
(  39.641) LOOP: DONE TESTING ('none', 'none')
(  39.641) LOOP: START IMPOSING CONSTRAINTS
(  39.641) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  39.641) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V4,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  39.641) GENERATE: START GROUNDING (impose_constraints)
(  39.797) GENERATE: DONE GROUNDING (impose_constraints)
(  39.797) LOOP: DONE IMPOSING CONSTRAINTS
(  39.797) LOOP: START GENERATING (program 296)
(  39.797) GENERATE: START SOLVING
(  39.815) GENERATE: DONE SOLVING
(  39.834) LOOP: DONE GENERATING (program 296)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
  f(A,B) :- tail(A,B),head(B,C),f(B,D),head(D,C).
(  39.835) LOOP: START TESTING
(  39.836) LOOP: DONE TESTING ('none', 'none')
(  39.836) LOOP: START IMPOSING CONSTRAINTS
(  39.836) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  39.836) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  39.836) GENERATE: START GROUNDING (impose_constraints)
(  39.979) GENERATE: DONE GROUNDING (impose_constraints)
(  39.979) LOOP: DONE IMPOSING CONSTRAINTS
(  39.979) LOOP: START GENERATING (program 297)
(  39.979) GENERATE: START SOLVING
(  39.996) GENERATE: DONE SOLVING
(  40.014) LOOP: DONE GENERATING (program 297)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,D),tail(D,E),head(D,C),head(E,C).
(  40.015) LOOP: START TESTING
(  40.016) LOOP: DONE TESTING ('none', 'none')
(  40.016) LOOP: START IMPOSING CONSTRAINTS
(  40.016) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  40.016) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  40.016) GENERATE: START GROUNDING (impose_constraints)
(  40.159) GENERATE: DONE GROUNDING (impose_constraints)
(  40.159) LOOP: DONE IMPOSING CONSTRAINTS
(  40.159) LOOP: START GENERATING (program 298)
(  40.159) GENERATE: START SOLVING
(  40.173) GENERATE: DONE SOLVING
(  40.202) LOOP: DONE GENERATING (program 298)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- head(A,C),tail(A,B),f(B,D),head(D,C).
(  40.202) LOOP: START TESTING
(  40.204) LOOP: DONE TESTING ('none', 'none')
(  40.204) LOOP: START IMPOSING CONSTRAINTS
(  40.204) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  40.204) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  40.204) GENERATE: START GROUNDING (impose_constraints)
(  40.340) GENERATE: DONE GROUNDING (impose_constraints)
(  40.340) LOOP: DONE IMPOSING CONSTRAINTS
(  40.340) LOOP: START GENERATING (program 299)
(  40.340) GENERATE: START SOLVING
(  40.355) GENERATE: DONE SOLVING
(  40.363) LOOP: DONE GENERATING (program 299)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,B),head(B,C),f(B,D),head(D,C).
(  40.363) LOOP: START TESTING
(  40.365) LOOP: DONE TESTING ('none', 'none')
(  40.365) LOOP: START IMPOSING CONSTRAINTS
(  40.365) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  40.365) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  40.365) GENERATE: START GROUNDING (impose_constraints)
(  40.504) GENERATE: DONE GROUNDING (impose_constraints)
(  40.504) LOOP: DONE IMPOSING CONSTRAINTS
(  40.504) LOOP: START GENERATING (program 300)
(  40.504) GENERATE: START SOLVING
(  40.519) GENERATE: DONE SOLVING
(  40.527) LOOP: DONE GENERATING (program 300)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,B),f(B,D),head(D,C),head(E,C).
(  40.527) LOOP: START TESTING
(  40.528) LOOP: DONE TESTING ('none', 'none')
(  40.528) LOOP: START IMPOSING CONSTRAINTS
(  40.528) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  40.528) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  40.529) GENERATE: START GROUNDING (impose_constraints)
(  40.671) GENERATE: DONE GROUNDING (impose_constraints)
(  40.671) LOOP: DONE IMPOSING CONSTRAINTS
(  40.671) LOOP: START GENERATING (program 301)
(  40.671) GENERATE: START SOLVING
(  40.686) GENERATE: DONE SOLVING
(  40.691) LOOP: DONE GENERATING (program 301)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),head(D,C),tail(D,B),head(B,C),f(B,D).
(  40.691) LOOP: START TESTING
(  40.693) LOOP: DONE TESTING ('none', 'none')
(  40.693) LOOP: START IMPOSING CONSTRAINTS
(  40.693) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  40.693) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  40.693) GENERATE: START GROUNDING (impose_constraints)
(  40.858) GENERATE: DONE GROUNDING (impose_constraints)
(  40.858) LOOP: DONE IMPOSING CONSTRAINTS
(  40.858) LOOP: START GENERATING (program 302)
(  40.858) GENERATE: START SOLVING
(  40.872) GENERATE: DONE SOLVING
(  40.926) LOOP: DONE GENERATING (program 302)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),head(B,C),f(B,D),head(D,C).
(  40.926) LOOP: START TESTING
(  40.928) LOOP: DONE TESTING ('none', 'none')
(  40.928) LOOP: START IMPOSING CONSTRAINTS
(  40.928) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  40.928) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  40.928) GENERATE: START GROUNDING (impose_constraints)
(  41.075) GENERATE: DONE GROUNDING (impose_constraints)
(  41.075) LOOP: DONE IMPOSING CONSTRAINTS
(  41.075) LOOP: START GENERATING (program 303)
(  41.075) GENERATE: START SOLVING
(  41.089) GENERATE: DONE SOLVING
(  41.153) LOOP: DONE GENERATING (program 303)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- head(A,C),tail(A,B),f(B,D),head(D,C).
(  41.153) LOOP: START TESTING
(  41.154) LOOP: DONE TESTING ('none', 'none')
(  41.154) LOOP: START IMPOSING CONSTRAINTS
(  41.154) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  41.154) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  41.155) GENERATE: START GROUNDING (impose_constraints)
(  41.297) GENERATE: DONE GROUNDING (impose_constraints)
(  41.297) LOOP: DONE IMPOSING CONSTRAINTS
(  41.297) LOOP: START GENERATING (program 304)
(  41.297) GENERATE: START SOLVING
(  41.312) GENERATE: DONE SOLVING
(  41.405) LOOP: DONE GENERATING (program 304)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),head(B,C),f(B,D),head(D,C).
(  41.405) LOOP: START TESTING
(  41.406) LOOP: DONE TESTING ('none', 'none')
(  41.406) LOOP: START IMPOSING CONSTRAINTS
(  41.407) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  41.407) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  41.407) GENERATE: START GROUNDING (impose_constraints)
(  41.554) GENERATE: DONE GROUNDING (impose_constraints)
(  41.554) LOOP: DONE IMPOSING CONSTRAINTS
(  41.554) LOOP: START GENERATING (program 305)
(  41.554) GENERATE: START SOLVING
(  41.572) GENERATE: DONE SOLVING
(  41.613) LOOP: DONE GENERATING (program 305)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),head(B,C),f(B,D),head(D,C).
(  41.613) LOOP: START TESTING
(  41.614) LOOP: DONE TESTING ('none', 'none')
(  41.614) LOOP: START IMPOSING CONSTRAINTS
(  41.615) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  41.615) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  41.615) GENERATE: START GROUNDING (impose_constraints)
(  41.767) GENERATE: DONE GROUNDING (impose_constraints)
(  41.767) LOOP: DONE IMPOSING CONSTRAINTS
(  41.767) LOOP: START GENERATING (program 306)
(  41.767) GENERATE: START SOLVING
(  41.783) GENERATE: DONE SOLVING
(  41.789) LOOP: DONE GENERATING (program 306)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- head(A,C),tail(A,B),f(B,D),head(D,C).
(  41.789) LOOP: START TESTING
(  41.791) LOOP: DONE TESTING ('none', 'none')
(  41.791) LOOP: START IMPOSING CONSTRAINTS
(  41.791) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  41.791) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  41.791) GENERATE: START GROUNDING (impose_constraints)
(  41.937) GENERATE: DONE GROUNDING (impose_constraints)
(  41.937) LOOP: DONE IMPOSING CONSTRAINTS
(  41.937) LOOP: START GENERATING (program 307)
(  41.937) GENERATE: START SOLVING
(  41.957) GENERATE: DONE SOLVING
(  41.964) LOOP: DONE GENERATING (program 307)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- head(A,C),tail(A,B),f(B,D),head(D,C).
(  41.964) LOOP: START TESTING
(  41.966) LOOP: DONE TESTING ('none', 'none')
(  41.966) LOOP: START IMPOSING CONSTRAINTS
(  41.966) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  41.966) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  41.966) GENERATE: START GROUNDING (impose_constraints)
(  42.112) GENERATE: DONE GROUNDING (impose_constraints)
(  42.112) LOOP: DONE IMPOSING CONSTRAINTS
(  42.112) LOOP: START GENERATING (program 308)
(  42.112) GENERATE: START SOLVING
(  42.127) GENERATE: DONE SOLVING
(  42.157) LOOP: DONE GENERATING (program 308)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,E),f(B,D),head(D,C),head(E,C).
(  42.157) LOOP: START TESTING
(  42.159) LOOP: DONE TESTING ('none', 'none')
(  42.159) LOOP: START IMPOSING CONSTRAINTS
(  42.159) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  42.159) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V4,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  42.159) GENERATE: START GROUNDING (impose_constraints)
(  42.306) GENERATE: DONE GROUNDING (impose_constraints)
(  42.306) LOOP: DONE IMPOSING CONSTRAINTS
(  42.306) LOOP: START GENERATING (program 309)
(  42.306) GENERATE: START SOLVING
(  42.321) GENERATE: DONE SOLVING
(  42.328) LOOP: DONE GENERATING (program 309)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,E),f(B,D),head(D,C),head(E,C).
(  42.328) LOOP: START TESTING
(  42.330) LOOP: DONE TESTING ('none', 'none')
(  42.330) LOOP: START IMPOSING CONSTRAINTS
(  42.330) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  42.330) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V4,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  42.330) GENERATE: START GROUNDING (impose_constraints)
(  42.482) GENERATE: DONE GROUNDING (impose_constraints)
(  42.482) LOOP: DONE IMPOSING CONSTRAINTS
(  42.482) LOOP: START GENERATING (program 310)
(  42.482) GENERATE: START SOLVING
(  42.497) GENERATE: DONE SOLVING
(  42.504) LOOP: DONE GENERATING (program 310)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,D),tail(D,E),head(D,C),head(E,C).
(  42.504) LOOP: START TESTING
(  42.506) LOOP: DONE TESTING ('none', 'none')
(  42.506) LOOP: START IMPOSING CONSTRAINTS
(  42.506) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  42.506) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  42.506) GENERATE: START GROUNDING (impose_constraints)
(  42.659) GENERATE: DONE GROUNDING (impose_constraints)
(  42.659) LOOP: DONE IMPOSING CONSTRAINTS
(  42.659) LOOP: START GENERATING (program 311)
(  42.659) GENERATE: START SOLVING
(  42.676) GENERATE: DONE SOLVING
(  43.276) LOOP: DONE GENERATING (program 311)
PROGRAM:
  f(A,B) :- tail(A,B),head(B,C),tail(B,D),tail(D,E),head(E,C).
  f(A,B) :- tail(A,B),f(B,A).
(  43.277) LOOP: START TESTING
(  43.278) LOOP: DONE TESTING ('none', 'none')
(  43.278) LOOP: START IMPOSING CONSTRAINTS
(  43.278) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
(  43.278) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  43.278) GENERATE: START GROUNDING (impose_constraints)
(  43.431) GENERATE: DONE GROUNDING (impose_constraints)
(  43.431) LOOP: DONE IMPOSING CONSTRAINTS
(  43.431) LOOP: START GENERATING (program 312)
(  43.431) GENERATE: START SOLVING
(  43.448) GENERATE: DONE SOLVING
(  43.524) LOOP: DONE GENERATING (program 312)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),tail(B,D),tail(D,E),head(E,C).
  f(A,B) :- tail(A,B),f(B,A).
(  43.524) LOOP: START TESTING
(  43.526) LOOP: DONE TESTING ('none', 'none')
(  43.526) LOOP: START IMPOSING CONSTRAINTS
(  43.526) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
(  43.526) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  43.526) GENERATE: START GROUNDING (impose_constraints)
(  43.677) GENERATE: DONE GROUNDING (impose_constraints)
(  43.677) LOOP: DONE IMPOSING CONSTRAINTS
(  43.677) LOOP: START GENERATING (program 313)
(  43.677) GENERATE: START SOLVING
(  43.693) GENERATE: DONE SOLVING
(  43.712) LOOP: DONE GENERATING (program 313)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),head(D,C),head(E,C).
  f(A,B) :- tail(A,B),f(B,A).
(  43.712) LOOP: START TESTING
(  43.713) LOOP: DONE TESTING ('none', 'none')
(  43.713) LOOP: START IMPOSING CONSTRAINTS
(  43.713) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
(  43.713) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  43.713) GENERATE: START GROUNDING (impose_constraints)
(  43.865) GENERATE: DONE GROUNDING (impose_constraints)
(  43.865) LOOP: DONE IMPOSING CONSTRAINTS
(  43.865) LOOP: START GENERATING (program 314)
(  43.865) GENERATE: START SOLVING
(  43.881) GENERATE: DONE SOLVING
(  43.983) LOOP: DONE GENERATING (program 314)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,C),tail(C,D),f(D,C).
(  43.983) LOOP: START TESTING
(  43.985) LOOP: DONE TESTING ('none', 'none')
(  43.985) LOOP: START IMPOSING CONSTRAINTS
(  43.985) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  43.985) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  43.985) GENERATE: START GROUNDING (impose_constraints)
(  44.136) GENERATE: DONE GROUNDING (impose_constraints)
(  44.136) LOOP: DONE IMPOSING CONSTRAINTS
(  44.136) LOOP: START GENERATING (program 315)
(  44.136) GENERATE: START SOLVING
(  44.151) GENERATE: DONE SOLVING
(  44.178) LOOP: DONE GENERATING (program 315)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,D),f(D,C),tail(C,D),tail(D,B).
(  44.178) LOOP: START TESTING
(  44.179) LOOP: DONE TESTING ('none', 'none')
(  44.179) LOOP: START IMPOSING CONSTRAINTS
(  44.179) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  44.179) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  44.180) GENERATE: START GROUNDING (impose_constraints)
(  44.332) GENERATE: DONE GROUNDING (impose_constraints)
(  44.332) LOOP: DONE IMPOSING CONSTRAINTS
(  44.332) LOOP: START GENERATING (program 316)
(  44.332) GENERATE: START SOLVING
(  44.350) GENERATE: DONE SOLVING
(  44.370) LOOP: DONE GENERATING (program 316)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(C,D),tail(D,E),tail(E,B).
(  44.370) LOOP: START TESTING
(  44.371) LOOP: DONE TESTING ('none', 'none')
(  44.372) LOOP: START IMPOSING CONSTRAINTS
(  44.372) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  44.372) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  44.372) GENERATE: START GROUNDING (impose_constraints)
(  44.521) GENERATE: DONE GROUNDING (impose_constraints)
(  44.521) LOOP: DONE IMPOSING CONSTRAINTS
(  44.521) LOOP: START GENERATING (program 317)
(  44.521) GENERATE: START SOLVING
(  44.538) GENERATE: DONE SOLVING
(  44.624) LOOP: DONE GENERATING (program 317)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(D,C),tail(C,D).
(  44.624) LOOP: START TESTING
(  44.625) LOOP: DONE TESTING ('none', 'none')
(  44.625) LOOP: START IMPOSING CONSTRAINTS
(  44.625) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  44.625) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  44.626) GENERATE: START GROUNDING (impose_constraints)
(  44.778) GENERATE: DONE GROUNDING (impose_constraints)
(  44.778) LOOP: DONE IMPOSING CONSTRAINTS
(  44.778) LOOP: START GENERATING (program 318)
(  44.778) GENERATE: START SOLVING
(  44.794) GENERATE: DONE SOLVING
(  44.813) LOOP: DONE GENERATING (program 318)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,D),f(D,C),tail(D,E),tail(E,B).
(  44.813) LOOP: START TESTING
(  44.814) LOOP: DONE TESTING ('none', 'none')
(  44.814) LOOP: START IMPOSING CONSTRAINTS
(  44.814) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  44.814) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  44.814) GENERATE: START GROUNDING (impose_constraints)
(  44.965) GENERATE: DONE GROUNDING (impose_constraints)
(  44.965) LOOP: DONE IMPOSING CONSTRAINTS
(  44.965) LOOP: START GENERATING (program 319)
(  44.965) GENERATE: START SOLVING
(  44.981) GENERATE: DONE SOLVING
(  45.501) LOOP: DONE GENERATING (program 319)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),head(C,E),head(D,E),tail(D,B).
(  45.501) LOOP: START TESTING
(  45.503) LOOP: DONE TESTING ('none', 'none')
(  45.503) LOOP: START IMPOSING CONSTRAINTS
(  45.503) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  45.503) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  45.503) GENERATE: START GROUNDING (impose_constraints)
(  45.656) GENERATE: DONE GROUNDING (impose_constraints)
(  45.656) LOOP: DONE IMPOSING CONSTRAINTS
(  45.656) LOOP: START GENERATING (program 320)
(  45.656) GENERATE: START SOLVING
(  45.672) GENERATE: DONE SOLVING
(  45.687) LOOP: DONE GENERATING (program 320)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(D,E),tail(E,B),tail(C,A).
(  45.687) LOOP: START TESTING
(  45.689) LOOP: DONE TESTING ('none', 'none')
(  45.689) LOOP: START IMPOSING CONSTRAINTS
(  45.689) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  45.689) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  45.689) GENERATE: START GROUNDING (impose_constraints)
(  45.842) GENERATE: DONE GROUNDING (impose_constraints)
(  45.842) LOOP: DONE IMPOSING CONSTRAINTS
(  45.842) LOOP: START GENERATING (program 321)
(  45.842) GENERATE: START SOLVING
(  45.859) GENERATE: DONE SOLVING
(  45.869) LOOP: DONE GENERATING (program 321)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),head(C,E),tail(D,B),head(B,E).
(  45.869) LOOP: START TESTING
(  45.871) LOOP: DONE TESTING ('none', 'none')
(  45.871) LOOP: START IMPOSING CONSTRAINTS
(  45.871) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  45.871) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,head,2,(ClId1V1,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  45.871) GENERATE: START GROUNDING (impose_constraints)
(  46.023) GENERATE: DONE GROUNDING (impose_constraints)
(  46.023) LOOP: DONE IMPOSING CONSTRAINTS
(  46.023) LOOP: START GENERATING (program 322)
(  46.023) GENERATE: START SOLVING
(  46.040) GENERATE: DONE SOLVING
(  46.057) LOOP: DONE GENERATING (program 322)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(D,E),tail(E,B),empty(C).
(  46.057) LOOP: START TESTING
(  46.059) LOOP: DONE TESTING ('none', 'none')
(  46.059) LOOP: START IMPOSING CONSTRAINTS
(  46.059) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  46.059) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  46.059) GENERATE: START GROUNDING (impose_constraints)
(  46.216) GENERATE: DONE GROUNDING (impose_constraints)
(  46.216) LOOP: DONE IMPOSING CONSTRAINTS
(  46.216) LOOP: START GENERATING (program 323)
(  46.216) GENERATE: START SOLVING
(  46.231) GENERATE: DONE SOLVING
(  46.239) LOOP: DONE GENERATING (program 323)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(D,E),tail(E,B),tail(B,C).
(  46.239) LOOP: START TESTING
(  46.240) LOOP: DONE TESTING ('none', 'none')
(  46.240) LOOP: START IMPOSING CONSTRAINTS
(  46.240) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  46.240) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  46.241) GENERATE: START GROUNDING (impose_constraints)
(  46.399) GENERATE: DONE GROUNDING (impose_constraints)
(  46.399) LOOP: DONE IMPOSING CONSTRAINTS
(  46.399) LOOP: START GENERATING (program 324)
(  46.399) GENERATE: START SOLVING
(  46.415) GENERATE: DONE SOLVING
(  46.424) LOOP: DONE GENERATING (program 324)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(D,B),tail(B,E),tail(E,C).
(  46.424) LOOP: START TESTING
(  46.426) LOOP: DONE TESTING ('none', 'none')
(  46.426) LOOP: START IMPOSING CONSTRAINTS
(  46.426) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  46.426) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  46.426) GENERATE: START GROUNDING (impose_constraints)
(  46.583) GENERATE: DONE GROUNDING (impose_constraints)
(  46.583) LOOP: DONE IMPOSING CONSTRAINTS
(  46.583) LOOP: START GENERATING (program 325)
(  46.583) GENERATE: START SOLVING
(  46.599) GENERATE: DONE SOLVING
(  46.616) LOOP: DONE GENERATING (program 325)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(D,B),tail(C,E),empty(E).
(  46.616) LOOP: START TESTING
(  46.617) LOOP: DONE TESTING ('none', 'none')
(  46.617) LOOP: START IMPOSING CONSTRAINTS
(  46.617) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  46.617) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V4,)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  46.617) GENERATE: START GROUNDING (impose_constraints)
(  46.773) GENERATE: DONE GROUNDING (impose_constraints)
(  46.773) LOOP: DONE IMPOSING CONSTRAINTS
(  46.773) LOOP: START GENERATING (program 326)
(  46.773) GENERATE: START SOLVING
(  46.791) GENERATE: DONE SOLVING
(  46.817) LOOP: DONE GENERATING (program 326)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,E),tail(E,B),tail(B,D),f(D,C).
(  46.817) LOOP: START TESTING
(  46.819) LOOP: DONE TESTING ('none', 'none')
(  46.819) LOOP: START IMPOSING CONSTRAINTS
(  46.819) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  46.819) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  46.819) GENERATE: START GROUNDING (impose_constraints)
(  46.977) GENERATE: DONE GROUNDING (impose_constraints)
(  46.977) LOOP: DONE IMPOSING CONSTRAINTS
(  46.977) LOOP: START GENERATING (program 327)
(  46.977) GENERATE: START SOLVING
(  46.994) GENERATE: DONE SOLVING
(  47.020) LOOP: DONE GENERATING (program 327)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,C),tail(C,B),tail(B,D),f(D,C).
(  47.021) LOOP: START TESTING
(  47.022) LOOP: DONE TESTING ('none', 'none')
(  47.022) LOOP: START IMPOSING CONSTRAINTS
(  47.022) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  47.022) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  47.022) GENERATE: START GROUNDING (impose_constraints)
(  47.179) GENERATE: DONE GROUNDING (impose_constraints)
(  47.179) LOOP: DONE IMPOSING CONSTRAINTS
(  47.179) LOOP: START GENERATING (program 328)
(  47.179) GENERATE: START SOLVING
(  47.196) GENERATE: DONE SOLVING
(  47.320) LOOP: DONE GENERATING (program 328)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(C,E),tail(E,B).
(  47.320) LOOP: START TESTING
(  47.321) LOOP: DONE TESTING ('none', 'none')
(  47.321) LOOP: START IMPOSING CONSTRAINTS
(  47.321) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  47.321) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  47.322) GENERATE: START GROUNDING (impose_constraints)
(  47.484) GENERATE: DONE GROUNDING (impose_constraints)
(  47.484) LOOP: DONE IMPOSING CONSTRAINTS
(  47.484) LOOP: START GENERATING (program 329)
(  47.484) GENERATE: START SOLVING
(  47.502) GENERATE: DONE SOLVING
(  47.553) LOOP: DONE GENERATING (program 329)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,B),tail(B,C),tail(C,D),f(D,C).
(  47.553) LOOP: START TESTING
(  47.554) LOOP: DONE TESTING ('none', 'none')
(  47.554) LOOP: START IMPOSING CONSTRAINTS
(  47.554) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  47.554) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  47.555) GENERATE: START GROUNDING (impose_constraints)
(  47.716) GENERATE: DONE GROUNDING (impose_constraints)
(  47.716) LOOP: DONE IMPOSING CONSTRAINTS
(  47.716) LOOP: START GENERATING (program 330)
(  47.716) GENERATE: START SOLVING
(  47.733) GENERATE: DONE SOLVING
(  47.750) LOOP: DONE GENERATING (program 330)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(D,B),tail(C,E),tail(E,D).
(  47.750) LOOP: START TESTING
(  47.751) LOOP: DONE TESTING ('none', 'none')
(  47.751) LOOP: START IMPOSING CONSTRAINTS
(  47.751) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  47.751) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  47.752) GENERATE: START GROUNDING (impose_constraints)
(  47.916) GENERATE: DONE GROUNDING (impose_constraints)
(  47.916) LOOP: DONE IMPOSING CONSTRAINTS
(  47.916) LOOP: START GENERATING (program 331)
(  47.916) GENERATE: START SOLVING
(  47.932) GENERATE: DONE SOLVING
(  47.996) LOOP: DONE GENERATING (program 331)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,B),tail(B,D),f(D,C),tail(C,A).
(  47.996) LOOP: START TESTING
(  47.997) LOOP: DONE TESTING ('none', 'none')
(  47.997) LOOP: START IMPOSING CONSTRAINTS
(  47.997) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  47.997) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  47.997) GENERATE: START GROUNDING (impose_constraints)
(  48.158) GENERATE: DONE GROUNDING (impose_constraints)
(  48.158) LOOP: DONE IMPOSING CONSTRAINTS
(  48.158) LOOP: START GENERATING (program 332)
(  48.158) GENERATE: START SOLVING
(  48.176) GENERATE: DONE SOLVING
(  48.284) LOOP: DONE GENERATING (program 332)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(D,C),tail(C,A).
(  48.284) LOOP: START TESTING
(  48.286) LOOP: DONE TESTING ('none', 'none')
(  48.286) LOOP: START IMPOSING CONSTRAINTS
(  48.286) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  48.286) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  48.286) GENERATE: START GROUNDING (impose_constraints)
(  48.448) GENERATE: DONE GROUNDING (impose_constraints)
(  48.448) LOOP: DONE IMPOSING CONSTRAINTS
(  48.448) LOOP: START GENERATING (program 333)
(  48.448) GENERATE: START SOLVING
(  48.466) GENERATE: DONE SOLVING
(  48.473) LOOP: DONE GENERATING (program 333)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,E),tail(E,D),f(D,C),tail(D,B).
(  48.473) LOOP: START TESTING
(  48.474) LOOP: DONE TESTING ('none', 'none')
(  48.474) LOOP: START IMPOSING CONSTRAINTS
(  48.474) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  48.474) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  48.474) GENERATE: START GROUNDING (impose_constraints)
(  48.637) GENERATE: DONE GROUNDING (impose_constraints)
(  48.637) LOOP: DONE IMPOSING CONSTRAINTS
(  48.637) LOOP: START GENERATING (program 334)
(  48.637) GENERATE: START SOLVING
(  48.655) GENERATE: DONE SOLVING
(  48.666) LOOP: DONE GENERATING (program 334)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,B),tail(B,D),f(D,C),tail(D,C).
(  48.667) LOOP: START TESTING
(  48.668) LOOP: DONE TESTING ('none', 'none')
(  48.668) LOOP: START IMPOSING CONSTRAINTS
(  48.668) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  48.668) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  48.668) GENERATE: START GROUNDING (impose_constraints)
(  48.831) GENERATE: DONE GROUNDING (impose_constraints)
(  48.831) LOOP: DONE IMPOSING CONSTRAINTS
(  48.831) LOOP: START GENERATING (program 335)
(  48.831) GENERATE: START SOLVING
(  48.850) GENERATE: DONE SOLVING
(  48.868) LOOP: DONE GENERATING (program 335)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(D,B),tail(C,E),tail(E,A).
(  48.868) LOOP: START TESTING
(  48.870) LOOP: DONE TESTING ('none', 'none')
(  48.870) LOOP: START IMPOSING CONSTRAINTS
(  48.870) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  48.870) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  48.870) GENERATE: START GROUNDING (impose_constraints)
(  49.040) GENERATE: DONE GROUNDING (impose_constraints)
(  49.040) LOOP: DONE IMPOSING CONSTRAINTS
(  49.040) LOOP: START GENERATING (program 336)
(  49.040) GENERATE: START SOLVING
(  49.057) GENERATE: DONE SOLVING
(  49.072) LOOP: DONE GENERATING (program 336)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(D,C),tail(D,C).
(  49.072) LOOP: START TESTING
(  49.074) LOOP: DONE TESTING ('none', 'none')
(  49.074) LOOP: START IMPOSING CONSTRAINTS
(  49.074) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  49.074) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  49.074) GENERATE: START GROUNDING (impose_constraints)
(  49.240) GENERATE: DONE GROUNDING (impose_constraints)
(  49.240) LOOP: DONE IMPOSING CONSTRAINTS
(  49.240) LOOP: START GENERATING (program 337)
(  49.240) GENERATE: START SOLVING
(  49.258) GENERATE: DONE SOLVING
(  49.267) LOOP: DONE GENERATING (program 337)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,C),tail(C,D),f(D,C),tail(D,B).
(  49.267) LOOP: START TESTING
(  49.268) LOOP: DONE TESTING ('none', 'none')
(  49.268) LOOP: START IMPOSING CONSTRAINTS
(  49.268) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  49.268) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  49.268) GENERATE: START GROUNDING (impose_constraints)
(  49.435) GENERATE: DONE GROUNDING (impose_constraints)
(  49.435) LOOP: DONE IMPOSING CONSTRAINTS
(  49.435) LOOP: START GENERATING (program 338)
(  49.435) GENERATE: START SOLVING
(  49.453) GENERATE: DONE SOLVING
(  49.463) LOOP: DONE GENERATING (program 338)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,B),tail(B,D),f(D,C),tail(C,D).
(  49.463) LOOP: START TESTING
(  49.465) LOOP: DONE TESTING ('none', 'none')
(  49.465) LOOP: START IMPOSING CONSTRAINTS
(  49.465) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  49.465) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  49.465) GENERATE: START GROUNDING (impose_constraints)
(  49.631) GENERATE: DONE GROUNDING (impose_constraints)
(  49.631) LOOP: DONE IMPOSING CONSTRAINTS
(  49.631) LOOP: START GENERATING (program 339)
(  49.631) GENERATE: START SOLVING
(  49.648) GENERATE: DONE SOLVING
(  49.662) LOOP: DONE GENERATING (program 339)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(D,C),tail(C,D).
(  49.662) LOOP: START TESTING
(  49.664) LOOP: DONE TESTING ('none', 'none')
(  49.664) LOOP: START IMPOSING CONSTRAINTS
(  49.664) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  49.664) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  49.664) GENERATE: START GROUNDING (impose_constraints)
(  49.834) GENERATE: DONE GROUNDING (impose_constraints)
(  49.834) LOOP: DONE IMPOSING CONSTRAINTS
(  49.834) LOOP: START GENERATING (program 340)
(  49.834) GENERATE: START SOLVING
(  49.852) GENERATE: DONE SOLVING
(  49.876) LOOP: DONE GENERATING (program 340)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,C),tail(D,B),tail(B,E),tail(C,E).
(  49.876) LOOP: START TESTING
(  49.878) LOOP: DONE TESTING ('none', 'none')
(  49.878) LOOP: START IMPOSING CONSTRAINTS
(  49.878) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  49.878) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  49.878) GENERATE: START GROUNDING (impose_constraints)
(  50.051) GENERATE: DONE GROUNDING (impose_constraints)
(  50.051) LOOP: DONE IMPOSING CONSTRAINTS
(  50.051) LOOP: START GENERATING (program 341)
(  50.051) GENERATE: START SOLVING
(  50.069) GENERATE: DONE SOLVING
(  50.133) LOOP: DONE GENERATING (program 341)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(D,C),tail(C,D).
(  50.133) LOOP: START TESTING
(  50.134) LOOP: DONE TESTING ('none', 'none')
(  50.134) LOOP: START IMPOSING CONSTRAINTS
(  50.135) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  50.135) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  50.135) GENERATE: START GROUNDING (impose_constraints)
(  50.302) GENERATE: DONE GROUNDING (impose_constraints)
(  50.302) LOOP: DONE IMPOSING CONSTRAINTS
(  50.302) LOOP: START GENERATING (program 342)
(  50.302) GENERATE: START SOLVING
(  50.320) GENERATE: DONE SOLVING
(  50.439) LOOP: DONE GENERATING (program 342)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,B),tail(B,D),f(D,C),empty(C).
(  50.439) LOOP: START TESTING
(  50.441) LOOP: DONE TESTING ('none', 'none')
(  50.441) LOOP: START IMPOSING CONSTRAINTS
(  50.441) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  50.441) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  50.441) GENERATE: START GROUNDING (impose_constraints)
(  50.611) GENERATE: DONE GROUNDING (impose_constraints)
(  50.611) LOOP: DONE IMPOSING CONSTRAINTS
(  50.611) LOOP: START GENERATING (program 343)
(  50.611) GENERATE: START SOLVING
(  50.630) GENERATE: DONE SOLVING
(  50.996) LOOP: DONE GENERATING (program 343)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(D,C),tail(D,C).
(  50.996) LOOP: START TESTING
(  50.997) LOOP: DONE TESTING ('none', 'none')
(  50.997) LOOP: START IMPOSING CONSTRAINTS
(  50.997) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  50.997) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  50.997) GENERATE: START GROUNDING (impose_constraints)
(  51.165) GENERATE: DONE GROUNDING (impose_constraints)
(  51.165) LOOP: DONE IMPOSING CONSTRAINTS
(  51.165) LOOP: START GENERATING (program 344)
(  51.165) GENERATE: START SOLVING
(  51.184) GENERATE: DONE SOLVING
(  51.245) LOOP: DONE GENERATING (program 344)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(D,C).
(  51.245) LOOP: START TESTING
(  51.247) LOOP: DONE TESTING ('none', 'none')
(  51.247) LOOP: START IMPOSING CONSTRAINTS
(  51.247) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  51.247) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  51.247) GENERATE: START GROUNDING (impose_constraints)
(  51.423) GENERATE: DONE GROUNDING (impose_constraints)
(  51.423) LOOP: DONE IMPOSING CONSTRAINTS
(  51.423) LOOP: START GENERATING (program 345)
(  51.423) GENERATE: START SOLVING
(  51.443) GENERATE: DONE SOLVING
(  51.513) LOOP: DONE GENERATING (program 345)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(D,C).
(  51.513) LOOP: START TESTING
(  51.515) LOOP: DONE TESTING ('none', 'none')
(  51.515) LOOP: START IMPOSING CONSTRAINTS
(  51.515) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  51.515) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  51.515) GENERATE: START GROUNDING (impose_constraints)
(  51.693) GENERATE: DONE GROUNDING (impose_constraints)
(  51.693) LOOP: DONE IMPOSING CONSTRAINTS
(  51.693) LOOP: START GENERATING (program 346)
(  51.693) GENERATE: START SOLVING
(  51.713) GENERATE: DONE SOLVING
(  51.745) LOOP: DONE GENERATING (program 346)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(D,C),tail(D,C).
(  51.745) LOOP: START TESTING
(  51.746) LOOP: DONE TESTING ('none', 'none')
(  51.746) LOOP: START IMPOSING CONSTRAINTS
(  51.746) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  51.746) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  51.746) GENERATE: START GROUNDING (impose_constraints)
(  51.926) GENERATE: DONE GROUNDING (impose_constraints)
(  51.926) LOOP: DONE IMPOSING CONSTRAINTS
(  51.926) LOOP: START GENERATING (program 347)
(  51.926) GENERATE: START SOLVING
(  51.951) GENERATE: DONE SOLVING
(  51.996) LOOP: DONE GENERATING (program 347)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),tail(B,D),f(D,C),tail(D,C).
(  51.996) LOOP: START TESTING
(  51.998) LOOP: DONE TESTING ('none', 'none')
(  51.998) LOOP: START IMPOSING CONSTRAINTS
(  51.998) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  51.998) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  51.998) GENERATE: START GROUNDING (impose_constraints)
(  52.184) GENERATE: DONE GROUNDING (impose_constraints)
(  52.184) LOOP: DONE IMPOSING CONSTRAINTS
(  52.184) LOOP: START GENERATING (program 348)
(  52.184) GENERATE: START SOLVING
(  52.204) GENERATE: DONE SOLVING
(  52.296) LOOP: DONE GENERATING (program 348)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,C),tail(C,D),f(D,C).
(  52.296) LOOP: START TESTING
(  52.298) LOOP: DONE TESTING ('none', 'none')
(  52.298) LOOP: START IMPOSING CONSTRAINTS
(  52.298) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  52.298) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  52.298) GENERATE: START GROUNDING (impose_constraints)
(  52.479) GENERATE: DONE GROUNDING (impose_constraints)
(  52.479) LOOP: DONE IMPOSING CONSTRAINTS
(  52.479) LOOP: START GENERATING (program 349)
(  52.479) GENERATE: START SOLVING
(  52.500) GENERATE: DONE SOLVING
(  53.414) LOOP: DONE GENERATING (program 349)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B),f(B,D).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
(  53.415) LOOP: START TESTING
(  53.416) LOOP: DONE TESTING ('none', 'none')
(  53.416) LOOP: START IMPOSING CONSTRAINTS
(  53.416) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  53.416) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  53.416) GENERATE: START GROUNDING (impose_constraints)
(  53.589) GENERATE: DONE GROUNDING (impose_constraints)
(  53.589) LOOP: DONE IMPOSING CONSTRAINTS
(  53.589) LOOP: START GENERATING (program 350)
(  53.589) GENERATE: START SOLVING
(  53.608) GENERATE: DONE SOLVING
(  54.181) LOOP: DONE GENERATING (program 350)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),tail(D,C).
  f(A,B) :- tail(A,C),tail(C,B).
(  54.181) LOOP: START TESTING
(  54.182) LOOP: DONE TESTING ('none', 'none')
(  54.182) LOOP: START IMPOSING CONSTRAINTS
(  54.182) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  54.182) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  54.183) GENERATE: START GROUNDING (impose_constraints)
(  54.354) GENERATE: DONE GROUNDING (impose_constraints)
(  54.354) LOOP: DONE IMPOSING CONSTRAINTS
(  54.354) LOOP: START GENERATING (program 351)
(  54.354) GENERATE: START SOLVING
(  54.374) GENERATE: DONE SOLVING
(  55.071) LOOP: DONE GENERATING (program 351)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),tail(D,C).
  f(A,B) :- tail(A,B),empty(B).
(  55.071) LOOP: START TESTING
(  55.072) LOOP: DONE TESTING ('none', 'none')
(  55.072) LOOP: START IMPOSING CONSTRAINTS
(  55.072) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  55.072) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  55.073) GENERATE: START GROUNDING (impose_constraints)
(  55.249) GENERATE: DONE GROUNDING (impose_constraints)
(  55.249) LOOP: DONE IMPOSING CONSTRAINTS
(  55.249) LOOP: START GENERATING (program 352)
(  55.249) GENERATE: START SOLVING
(  55.268) GENERATE: DONE SOLVING
(  55.337) LOOP: DONE GENERATING (program 352)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),tail(D,C).
  f(A,B) :- tail(A,B),empty(A).
(  55.337) LOOP: START TESTING
(  55.338) LOOP: DONE TESTING ('none', 'none')
(  55.338) LOOP: START IMPOSING CONSTRAINTS
(  55.338) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  55.338) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  55.338) GENERATE: START GROUNDING (impose_constraints)
(  55.515) GENERATE: DONE GROUNDING (impose_constraints)
(  55.515) LOOP: DONE IMPOSING CONSTRAINTS
(  55.515) LOOP: START GENERATING (program 353)
(  55.515) GENERATE: START SOLVING
(  55.535) GENERATE: DONE SOLVING
(  55.662) LOOP: DONE GENERATING (program 353)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,E),tail(E,C),tail(C,D),f(D,E).
  f(A,B) :- tail(A,B),empty(B).
(  55.662) LOOP: START TESTING
(  55.663) LOOP: DONE TESTING ('none', 'none')
(  55.663) LOOP: START IMPOSING CONSTRAINTS
(  55.663) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  55.663) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  55.664) GENERATE: START GROUNDING (impose_constraints)
(  55.840) GENERATE: DONE GROUNDING (impose_constraints)
(  55.840) LOOP: DONE IMPOSING CONSTRAINTS
(  55.840) LOOP: START GENERATING (program 354)
(  55.840) GENERATE: START SOLVING
(  55.860) GENERATE: DONE SOLVING
(  56.073) LOOP: DONE GENERATING (program 354)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B),f(D,E),tail(E,C).
  f(A,B) :- tail(A,C),tail(C,B).
(  56.073) LOOP: START TESTING
(  56.075) LOOP: DONE TESTING ('none', 'none')
(  56.075) LOOP: START IMPOSING CONSTRAINTS
(  56.075) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  56.075) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  56.075) GENERATE: START GROUNDING (impose_constraints)
(  56.251) GENERATE: DONE GROUNDING (impose_constraints)
(  56.251) LOOP: DONE IMPOSING CONSTRAINTS
(  56.251) LOOP: START GENERATING (program 355)
(  56.251) GENERATE: START SOLVING
(  56.271) GENERATE: DONE SOLVING
(  56.303) LOOP: DONE GENERATING (program 355)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,E),tail(E,C),tail(C,D),f(D,E).
  f(A,B) :- tail(A,C),tail(C,B).
(  56.303) LOOP: START TESTING
(  56.305) LOOP: DONE TESTING ('none', 'none')
(  56.305) LOOP: START IMPOSING CONSTRAINTS
(  56.305) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  56.305) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  56.305) GENERATE: START GROUNDING (impose_constraints)
(  56.485) GENERATE: DONE GROUNDING (impose_constraints)
(  56.485) LOOP: DONE IMPOSING CONSTRAINTS
(  56.485) LOOP: START GENERATING (program 356)
(  56.485) GENERATE: START SOLVING
(  56.505) GENERATE: DONE SOLVING
(  56.515) LOOP: DONE GENERATING (program 356)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),tail(C,D).
  f(A,B) :- tail(A,C),tail(C,B).
(  56.515) LOOP: START TESTING
(  56.516) LOOP: DONE TESTING ('none', 'none')
(  56.516) LOOP: START IMPOSING CONSTRAINTS
(  56.516) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  56.516) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  56.517) GENERATE: START GROUNDING (impose_constraints)
(  56.695) GENERATE: DONE GROUNDING (impose_constraints)
(  56.695) LOOP: DONE IMPOSING CONSTRAINTS
(  56.695) LOOP: START GENERATING (program 357)
(  56.695) GENERATE: START SOLVING
(  56.716) GENERATE: DONE SOLVING
(  56.726) LOOP: DONE GENERATING (program 357)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,E),tail(E,C).
  f(A,B) :- tail(A,C),tail(C,B).
(  56.726) LOOP: START TESTING
(  56.728) LOOP: DONE TESTING ('none', 'none')
(  56.728) LOOP: START IMPOSING CONSTRAINTS
(  56.728) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  56.728) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  56.728) GENERATE: START GROUNDING (impose_constraints)
(  56.908) GENERATE: DONE GROUNDING (impose_constraints)
(  56.908) LOOP: DONE IMPOSING CONSTRAINTS
(  56.908) LOOP: START GENERATING (program 358)
(  56.908) GENERATE: START SOLVING
(  56.928) GENERATE: DONE SOLVING
(  56.944) LOOP: DONE GENERATING (program 358)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,B),tail(B,C),tail(C,D),f(D,E).
  f(A,B) :- tail(A,C),tail(C,B).
(  56.944) LOOP: START TESTING
(  56.945) LOOP: DONE TESTING ('none', 'none')
(  56.946) LOOP: START IMPOSING CONSTRAINTS
(  56.946) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  56.946) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  56.946) GENERATE: START GROUNDING (impose_constraints)
(  57.131) GENERATE: DONE GROUNDING (impose_constraints)
(  57.131) LOOP: DONE IMPOSING CONSTRAINTS
(  57.131) LOOP: START GENERATING (program 359)
(  57.131) GENERATE: START SOLVING
(  57.151) GENERATE: DONE SOLVING
(  57.186) LOOP: DONE GENERATING (program 359)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),tail(C,D).
  f(A,B) :- tail(A,B),empty(B).
(  57.186) LOOP: START TESTING
(  57.187) LOOP: DONE TESTING ('none', 'none')
(  57.187) LOOP: START IMPOSING CONSTRAINTS
(  57.187) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  57.187) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  57.187) GENERATE: START GROUNDING (impose_constraints)
(  57.374) GENERATE: DONE GROUNDING (impose_constraints)
(  57.374) LOOP: DONE IMPOSING CONSTRAINTS
(  57.374) LOOP: START GENERATING (program 360)
(  57.374) GENERATE: START SOLVING
(  57.394) GENERATE: DONE SOLVING
(  57.581) LOOP: DONE GENERATING (program 360)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B),f(D,E),empty(E).
  f(A,B) :- tail(A,C),tail(C,B).
(  57.581) LOOP: START TESTING
(  57.583) LOOP: DONE TESTING ('none', 'none')
(  57.583) LOOP: START IMPOSING CONSTRAINTS
(  57.583) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  57.583) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V4,)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  57.583) GENERATE: START GROUNDING (impose_constraints)
(  57.772) GENERATE: DONE GROUNDING (impose_constraints)
(  57.772) LOOP: DONE IMPOSING CONSTRAINTS
(  57.772) LOOP: START GENERATING (program 361)
(  57.772) GENERATE: START SOLVING
(  57.794) GENERATE: DONE SOLVING
(  57.807) LOOP: DONE GENERATING (program 361)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B),tail(B,E),f(D,E).
  f(A,B) :- tail(A,C),tail(C,B).
(  57.808) LOOP: START TESTING
(  57.809) LOOP: DONE TESTING ('none', 'none')
(  57.809) LOOP: START IMPOSING CONSTRAINTS
(  57.809) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  57.809) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  57.809) GENERATE: START GROUNDING (impose_constraints)
(  57.996) GENERATE: DONE GROUNDING (impose_constraints)
(  57.996) LOOP: DONE IMPOSING CONSTRAINTS
(  57.996) LOOP: START GENERATING (program 362)
(  57.996) GENERATE: START SOLVING
(  58.018) GENERATE: DONE SOLVING
(  58.027) LOOP: DONE GENERATING (program 362)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B),f(D,E),tail(E,A).
  f(A,B) :- tail(A,C),tail(C,B).
(  58.027) LOOP: START TESTING
(  58.028) LOOP: DONE TESTING ('none', 'none')
(  58.028) LOOP: START IMPOSING CONSTRAINTS
(  58.028) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  58.028) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  58.028) GENERATE: START GROUNDING (impose_constraints)
(  58.210) GENERATE: DONE GROUNDING (impose_constraints)
(  58.210) LOOP: DONE IMPOSING CONSTRAINTS
(  58.210) LOOP: START GENERATING (program 363)
(  58.210) GENERATE: START SOLVING
(  58.230) GENERATE: DONE SOLVING
(  58.292) LOOP: DONE GENERATING (program 363)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),tail(C,D).
  f(A,B) :- tail(A,B),empty(A).
(  58.293) LOOP: START TESTING
(  58.294) LOOP: DONE TESTING ('none', 'none')
(  58.294) LOOP: START IMPOSING CONSTRAINTS
(  58.294) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  58.294) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  58.294) GENERATE: START GROUNDING (impose_constraints)
(  58.478) GENERATE: DONE GROUNDING (impose_constraints)
(  58.478) LOOP: DONE IMPOSING CONSTRAINTS
(  58.478) LOOP: START GENERATING (program 364)
(  58.478) GENERATE: START SOLVING
(  58.500) GENERATE: DONE SOLVING
(  58.693) LOOP: DONE GENERATING (program 364)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,E),empty(E).
  f(A,B) :- tail(A,C),tail(C,B).
(  58.693) LOOP: START TESTING
(  58.695) LOOP: DONE TESTING ('none', 'none')
(  58.695) LOOP: START IMPOSING CONSTRAINTS
(  58.695) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  58.695) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V4,)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  58.695) GENERATE: START GROUNDING (impose_constraints)
(  58.882) GENERATE: DONE GROUNDING (impose_constraints)
(  58.882) LOOP: DONE IMPOSING CONSTRAINTS
(  58.882) LOOP: START GENERATING (program 365)
(  58.882) GENERATE: START SOLVING
(  58.903) GENERATE: DONE SOLVING
(  58.933) LOOP: DONE GENERATING (program 365)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,E),tail(E,C),tail(C,D),f(D,E).
  f(A,B) :- tail(A,B),empty(A).
(  58.934) LOOP: START TESTING
(  58.935) LOOP: DONE TESTING ('none', 'none')
(  58.935) LOOP: START IMPOSING CONSTRAINTS
(  58.935) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  58.935) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  58.935) GENERATE: START GROUNDING (impose_constraints)
(  59.121) GENERATE: DONE GROUNDING (impose_constraints)
(  59.121) LOOP: DONE IMPOSING CONSTRAINTS
(  59.121) LOOP: START GENERATING (program 366)
(  59.121) GENERATE: START SOLVING
(  59.142) GENERATE: DONE SOLVING
(  59.159) LOOP: DONE GENERATING (program 366)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,E),tail(E,C).
  f(A,B) :- tail(A,B),empty(B).
(  59.159) LOOP: START TESTING
(  59.160) LOOP: DONE TESTING ('none', 'none')
(  59.160) LOOP: START IMPOSING CONSTRAINTS
(  59.160) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  59.161) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  59.161) GENERATE: START GROUNDING (impose_constraints)
(  59.346) GENERATE: DONE GROUNDING (impose_constraints)
(  59.346) LOOP: DONE IMPOSING CONSTRAINTS
(  59.346) LOOP: START GENERATING (program 367)
(  59.346) GENERATE: START SOLVING
(  59.370) GENERATE: DONE SOLVING
(  59.411) LOOP: DONE GENERATING (program 367)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,E),tail(E,B).
  f(A,B) :- tail(A,C),tail(C,B).
(  59.411) LOOP: START TESTING
(  59.412) LOOP: DONE TESTING ('none', 'none')
(  59.412) LOOP: START IMPOSING CONSTRAINTS
(  59.413) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  59.413) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  59.413) GENERATE: START GROUNDING (impose_constraints)
(  59.601) GENERATE: DONE GROUNDING (impose_constraints)
(  59.601) LOOP: DONE IMPOSING CONSTRAINTS
(  59.601) LOOP: START GENERATING (program 368)
(  59.601) GENERATE: START SOLVING
(  59.622) GENERATE: DONE SOLVING
(  59.713) LOOP: DONE GENERATING (program 368)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),head(D,C),f(D,E),head(E,C).
  f(A,B) :- tail(A,B),empty(B).
(  59.713) LOOP: START TESTING
(  59.715) LOOP: DONE TESTING ('none', 'none')
(  59.715) LOOP: START IMPOSING CONSTRAINTS
(  59.715) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  59.715) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  59.715) GENERATE: START GROUNDING (impose_constraints)
(  59.902) GENERATE: DONE GROUNDING (impose_constraints)
(  59.902) LOOP: DONE IMPOSING CONSTRAINTS
(  59.902) LOOP: START GENERATING (program 369)
(  59.902) GENERATE: START SOLVING
(  59.923) GENERATE: DONE SOLVING
(  59.945) LOOP: DONE GENERATING (program 369)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(D,C),tail(C,E).
  f(A,B) :- tail(A,C),tail(C,B).
(  59.945) LOOP: START TESTING
(  59.947) LOOP: DONE TESTING ('none', 'none')
(  59.947) LOOP: START IMPOSING CONSTRAINTS
(  59.947) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  59.947) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  59.947) GENERATE: START GROUNDING (impose_constraints)
(  60.136) GENERATE: DONE GROUNDING (impose_constraints)
(  60.136) LOOP: DONE IMPOSING CONSTRAINTS
(  60.136) LOOP: START GENERATING (program 370)
(  60.136) GENERATE: START SOLVING
(  60.160) GENERATE: DONE SOLVING
(  60.184) LOOP: DONE GENERATING (program 370)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),tail(C,A).
  f(A,B) :- tail(A,C),tail(C,B).
(  60.184) LOOP: START TESTING
(  60.186) LOOP: DONE TESTING ('none', 'none')
(  60.186) LOOP: START IMPOSING CONSTRAINTS
(  60.186) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  60.186) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  60.186) GENERATE: START GROUNDING (impose_constraints)
(  60.374) GENERATE: DONE GROUNDING (impose_constraints)
(  60.374) LOOP: DONE IMPOSING CONSTRAINTS
(  60.374) LOOP: START GENERATING (program 371)
(  60.374) GENERATE: START SOLVING
(  60.396) GENERATE: DONE SOLVING
(  60.408) LOOP: DONE GENERATING (program 371)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(D,C),tail(C,E).
  f(A,B) :- tail(A,B),empty(B).
(  60.408) LOOP: START TESTING
(  60.409) LOOP: DONE TESTING ('none', 'none')
(  60.409) LOOP: START IMPOSING CONSTRAINTS
(  60.409) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  60.409) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  60.410) GENERATE: START GROUNDING (impose_constraints)
(  60.601) GENERATE: DONE GROUNDING (impose_constraints)
(  60.601) LOOP: DONE IMPOSING CONSTRAINTS
(  60.601) LOOP: START GENERATING (program 372)
(  60.601) GENERATE: START SOLVING
(  60.622) GENERATE: DONE SOLVING
(  60.632) LOOP: DONE GENERATING (program 372)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(D,C),tail(C,E).
  f(A,B) :- tail(A,B),empty(A).
(  60.632) LOOP: START TESTING
(  60.634) LOOP: DONE TESTING ('none', 'none')
(  60.634) LOOP: START IMPOSING CONSTRAINTS
(  60.634) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  60.634) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  60.634) GENERATE: START GROUNDING (impose_constraints)
(  60.825) GENERATE: DONE GROUNDING (impose_constraints)
(  60.825) LOOP: DONE IMPOSING CONSTRAINTS
(  60.825) LOOP: START GENERATING (program 373)
(  60.825) GENERATE: START SOLVING
(  60.848) GENERATE: DONE SOLVING
(  60.883) LOOP: DONE GENERATING (program 373)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,E),tail(E,D),f(D,E).
  f(A,B) :- tail(A,B),empty(B).
(  60.883) LOOP: START TESTING
(  60.884) LOOP: DONE TESTING ('none', 'none')
(  60.884) LOOP: START IMPOSING CONSTRAINTS
(  60.885) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  60.885) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  60.885) GENERATE: START GROUNDING (impose_constraints)
(  61.084) GENERATE: DONE GROUNDING (impose_constraints)
(  61.084) LOOP: DONE IMPOSING CONSTRAINTS
(  61.084) LOOP: START GENERATING (program 374)
(  61.084) GENERATE: START SOLVING
(  61.105) GENERATE: DONE SOLVING
(  61.207) LOOP: DONE GENERATING (program 374)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,E),tail(E,C).
  f(A,B) :- tail(A,B),empty(A).
(  61.207) LOOP: START TESTING
(  61.208) LOOP: DONE TESTING ('none', 'none')
(  61.208) LOOP: START IMPOSING CONSTRAINTS
(  61.208) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  61.208) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  61.208) GENERATE: START GROUNDING (impose_constraints)
(  61.400) GENERATE: DONE GROUNDING (impose_constraints)
(  61.400) LOOP: DONE IMPOSING CONSTRAINTS
(  61.400) LOOP: START GENERATING (program 375)
(  61.400) GENERATE: START SOLVING
(  61.422) GENERATE: DONE SOLVING
(  61.447) LOOP: DONE GENERATING (program 375)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,E),tail(E,A).
  f(A,B) :- tail(A,B),empty(A).
(  61.447) LOOP: START TESTING
(  61.449) LOOP: DONE TESTING ('none', 'none')
(  61.449) LOOP: START IMPOSING CONSTRAINTS
(  61.449) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  61.449) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  61.449) GENERATE: START GROUNDING (impose_constraints)
(  61.643) GENERATE: DONE GROUNDING (impose_constraints)
(  61.643) LOOP: DONE IMPOSING CONSTRAINTS
(  61.643) LOOP: START GENERATING (program 376)
(  61.643) GENERATE: START SOLVING
(  61.665) GENERATE: DONE SOLVING
(  61.684) LOOP: DONE GENERATING (program 376)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),empty(C).
  f(A,B) :- tail(A,C),tail(C,B).
(  61.684) LOOP: START TESTING
(  61.685) LOOP: DONE TESTING ('none', 'none')
(  61.685) LOOP: START IMPOSING CONSTRAINTS
(  61.685) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  61.685) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  61.686) GENERATE: START GROUNDING (impose_constraints)
(  61.880) GENERATE: DONE GROUNDING (impose_constraints)
(  61.880) LOOP: DONE IMPOSING CONSTRAINTS
(  61.880) LOOP: START GENERATING (program 377)
(  61.880) GENERATE: START SOLVING
(  61.903) GENERATE: DONE SOLVING
(  61.916) LOOP: DONE GENERATING (program 377)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,E),empty(E).
  f(A,B) :- tail(A,B),empty(A).
(  61.917) LOOP: START TESTING
(  61.918) LOOP: DONE TESTING ('none', 'none')
(  61.918) LOOP: START IMPOSING CONSTRAINTS
(  61.918) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  61.918) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V4,)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  61.918) GENERATE: START GROUNDING (impose_constraints)
(  62.111) GENERATE: DONE GROUNDING (impose_constraints)
(  62.111) LOOP: DONE IMPOSING CONSTRAINTS
(  62.111) LOOP: START GENERATING (program 378)
(  62.111) GENERATE: START SOLVING
(  62.132) GENERATE: DONE SOLVING
(  62.145) LOOP: DONE GENERATING (program 378)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),tail(B,D),f(D,E),head(E,C).
  f(A,B) :- tail(A,C),tail(C,B).
(  62.145) LOOP: START TESTING
(  62.147) LOOP: DONE TESTING ('none', 'none')
(  62.147) LOOP: START IMPOSING CONSTRAINTS
(  62.147) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  62.147) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  62.147) GENERATE: START GROUNDING (impose_constraints)
(  62.343) GENERATE: DONE GROUNDING (impose_constraints)
(  62.343) LOOP: DONE IMPOSING CONSTRAINTS
(  62.344) LOOP: START GENERATING (program 379)
(  62.344) GENERATE: START SOLVING
(  62.366) GENERATE: DONE SOLVING
(  62.385) LOOP: DONE GENERATING (program 379)
PROGRAM:
  f(A,B) :- tail(A,B),head(B,C),tail(B,D),f(D,E),head(E,C).
  f(A,B) :- tail(A,C),tail(C,B).
(  62.385) LOOP: START TESTING
(  62.387) LOOP: DONE TESTING ('none', 'none')
(  62.387) LOOP: START IMPOSING CONSTRAINTS
(  62.387) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  62.387) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  62.387) GENERATE: START GROUNDING (impose_constraints)
(  62.586) GENERATE: DONE GROUNDING (impose_constraints)
(  62.586) LOOP: DONE IMPOSING CONSTRAINTS
(  62.586) LOOP: START GENERATING (program 380)
(  62.586) GENERATE: START SOLVING
(  62.608) GENERATE: DONE SOLVING
(  62.620) LOOP: DONE GENERATING (program 380)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),head(D,C),f(D,E),head(E,C).
  f(A,B) :- tail(A,C),tail(C,B).
(  62.621) LOOP: START TESTING
(  62.622) LOOP: DONE TESTING ('none', 'none')
(  62.622) LOOP: START IMPOSING CONSTRAINTS
(  62.622) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  62.622) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  62.622) GENERATE: START GROUNDING (impose_constraints)
(  62.815) GENERATE: DONE GROUNDING (impose_constraints)
(  62.815) LOOP: DONE IMPOSING CONSTRAINTS
(  62.815) LOOP: START GENERATING (program 381)
(  62.815) GENERATE: START SOLVING
(  62.837) GENERATE: DONE SOLVING
(  62.863) LOOP: DONE GENERATING (program 381)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),tail(C,A).
  f(A,B) :- tail(A,B),empty(A).
(  62.863) LOOP: START TESTING
(  62.865) LOOP: DONE TESTING ('none', 'none')
(  62.865) LOOP: START IMPOSING CONSTRAINTS
(  62.865) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  62.865) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  62.865) GENERATE: START GROUNDING (impose_constraints)
(  63.060) GENERATE: DONE GROUNDING (impose_constraints)
(  63.060) LOOP: DONE IMPOSING CONSTRAINTS
(  63.060) LOOP: START GENERATING (program 382)
(  63.060) GENERATE: START SOLVING
(  63.082) GENERATE: DONE SOLVING
(  63.098) LOOP: DONE GENERATING (program 382)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),tail(C,A).
  f(A,B) :- tail(A,B),empty(B).
(  63.098) LOOP: START TESTING
(  63.099) LOOP: DONE TESTING ('none', 'none')
(  63.099) LOOP: START IMPOSING CONSTRAINTS
(  63.099) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  63.099) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  63.099) GENERATE: START GROUNDING (impose_constraints)
(  63.299) GENERATE: DONE GROUNDING (impose_constraints)
(  63.299) LOOP: DONE IMPOSING CONSTRAINTS
(  63.299) LOOP: START GENERATING (program 383)
(  63.299) GENERATE: START SOLVING
(  63.322) GENERATE: DONE SOLVING
(  63.423) LOOP: DONE GENERATING (program 383)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),head(D,C),f(D,E),head(E,C).
  f(A,B) :- tail(A,B),empty(A).
(  63.423) LOOP: START TESTING
(  63.425) LOOP: DONE TESTING ('none', 'none')
(  63.425) LOOP: START IMPOSING CONSTRAINTS
(  63.425) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  63.425) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  63.425) GENERATE: START GROUNDING (impose_constraints)
(  63.625) GENERATE: DONE GROUNDING (impose_constraints)
(  63.625) LOOP: DONE IMPOSING CONSTRAINTS
(  63.625) LOOP: START GENERATING (program 384)
(  63.625) GENERATE: START SOLVING
(  63.649) GENERATE: DONE SOLVING
(  63.674) LOOP: DONE GENERATING (program 384)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),empty(C).
  f(A,B) :- tail(A,B),empty(B).
(  63.674) LOOP: START TESTING
(  63.675) LOOP: DONE TESTING ('none', 'none')
(  63.675) LOOP: START IMPOSING CONSTRAINTS
(  63.676) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  63.676) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  63.676) GENERATE: START GROUNDING (impose_constraints)
(  63.874) GENERATE: DONE GROUNDING (impose_constraints)
(  63.874) LOOP: DONE IMPOSING CONSTRAINTS
(  63.874) LOOP: START GENERATING (program 385)
(  63.874) GENERATE: START SOLVING
(  63.897) GENERATE: DONE SOLVING
(  63.906) LOOP: DONE GENERATING (program 385)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),empty(C).
  f(A,B) :- tail(A,B),empty(A).
(  63.906) LOOP: START TESTING
(  63.908) LOOP: DONE TESTING ('none', 'none')
(  63.908) LOOP: START IMPOSING CONSTRAINTS
(  63.908) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  63.908) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  63.908) GENERATE: START GROUNDING (impose_constraints)
(  64.109) GENERATE: DONE GROUNDING (impose_constraints)
(  64.109) LOOP: DONE IMPOSING CONSTRAINTS
(  64.109) LOOP: START GENERATING (program 386)
(  64.109) GENERATE: START SOLVING
(  64.133) GENERATE: DONE SOLVING
(  64.144) LOOP: DONE GENERATING (program 386)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),tail(C,B).
  f(A,B) :- tail(A,B),empty(B).
(  64.144) LOOP: START TESTING
(  64.146) LOOP: DONE TESTING ('none', 'none')
(  64.146) LOOP: START IMPOSING CONSTRAINTS
(  64.146) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  64.146) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  64.146) GENERATE: START GROUNDING (impose_constraints)
(  64.342) GENERATE: DONE GROUNDING (impose_constraints)
(  64.342) LOOP: DONE IMPOSING CONSTRAINTS
(  64.342) LOOP: START GENERATING (program 387)
(  64.342) GENERATE: START SOLVING
(  64.366) GENERATE: DONE SOLVING
(  64.377) LOOP: DONE GENERATING (program 387)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),f(D,E),tail(E,C),tail(C,B).
  f(A,B) :- tail(A,B),empty(A).
(  64.377) LOOP: START TESTING
(  64.378) LOOP: DONE TESTING ('none', 'none')
(  64.378) LOOP: START IMPOSING CONSTRAINTS
(  64.378) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  64.378) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  64.379) GENERATE: START GROUNDING (impose_constraints)
(  64.584) GENERATE: DONE GROUNDING (impose_constraints)
(  64.584) LOOP: DONE IMPOSING CONSTRAINTS
(  64.584) LOOP: START GENERATING (program 388)
(  64.584) GENERATE: START SOLVING
(  64.607) GENERATE: DONE SOLVING
(  64.656) LOOP: DONE GENERATING (program 388)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),tail(B,D),f(D,E),head(E,C).
  f(A,B) :- tail(A,B),empty(B).
(  64.656) LOOP: START TESTING
(  64.657) LOOP: DONE TESTING ('none', 'none')
(  64.657) LOOP: START IMPOSING CONSTRAINTS
(  64.657) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  64.657) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  64.658) GENERATE: START GROUNDING (impose_constraints)
(  64.859) GENERATE: DONE GROUNDING (impose_constraints)
(  64.859) LOOP: DONE IMPOSING CONSTRAINTS
(  64.859) LOOP: START GENERATING (program 389)
(  64.859) GENERATE: START SOLVING
(  64.882) GENERATE: DONE SOLVING
(  64.906) LOOP: DONE GENERATING (program 389)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),tail(B,D),f(D,E),head(E,C).
  f(A,B) :- tail(A,B),empty(A).
(  64.906) LOOP: START TESTING
(  64.907) LOOP: DONE TESTING ('none', 'none')
(  64.907) LOOP: START IMPOSING CONSTRAINTS
(  64.907) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  64.907) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  64.908) GENERATE: START GROUNDING (impose_constraints)
(  65.111) GENERATE: DONE GROUNDING (impose_constraints)
(  65.111) LOOP: DONE IMPOSING CONSTRAINTS
(  65.111) LOOP: START GENERATING (program 390)
(  65.111) GENERATE: START SOLVING
(  65.134) GENERATE: DONE SOLVING
(  65.189) LOOP: DONE GENERATING (program 390)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,E),empty(E).
  f(A,B) :- tail(A,B),empty(B).
(  65.189) LOOP: START TESTING
(  65.190) LOOP: DONE TESTING ('none', 'none')
(  65.190) LOOP: START IMPOSING CONSTRAINTS
(  65.190) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  65.190) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V4,)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  65.191) GENERATE: START GROUNDING (impose_constraints)
(  65.390) GENERATE: DONE GROUNDING (impose_constraints)
(  65.390) LOOP: DONE IMPOSING CONSTRAINTS
(  65.390) LOOP: START GENERATING (program 391)
(  65.390) GENERATE: START SOLVING
(  65.415) GENERATE: DONE SOLVING
(  65.428) LOOP: DONE GENERATING (program 391)
PROGRAM:
  f(A,B) :- tail(A,B),head(B,C),tail(B,D),f(D,E),head(E,C).
  f(A,B) :- tail(A,B),empty(B).
(  65.428) LOOP: START TESTING
(  65.430) LOOP: DONE TESTING ('none', 'none')
(  65.430) LOOP: START IMPOSING CONSTRAINTS
(  65.430) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  65.430) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  65.430) GENERATE: START GROUNDING (impose_constraints)
(  65.631) GENERATE: DONE GROUNDING (impose_constraints)
(  65.631) LOOP: DONE IMPOSING CONSTRAINTS
(  65.631) LOOP: START GENERATING (program 392)
(  65.631) GENERATE: START SOLVING
(  65.654) GENERATE: DONE SOLVING
(  65.663) LOOP: DONE GENERATING (program 392)
PROGRAM:
  f(A,B) :- tail(A,B),head(B,C),tail(B,D),f(D,E),head(E,C).
  f(A,B) :- tail(A,B),empty(A).
(  65.663) LOOP: START TESTING
(  65.664) LOOP: DONE TESTING ('none', 'none')
(  65.664) LOOP: START IMPOSING CONSTRAINTS
(  65.664) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  65.664) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V4,ClId0V2)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  65.664) GENERATE: START GROUNDING (impose_constraints)
(  65.867) GENERATE: DONE GROUNDING (impose_constraints)
(  65.868) LOOP: DONE IMPOSING CONSTRAINTS
(  65.868) LOOP: START GENERATING (program 393)
(  65.868) GENERATE: START SOLVING
(  65.891) GENERATE: DONE SOLVING
(  65.936) LOOP: DONE GENERATING (program 393)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,E),tail(E,A).
  f(A,B) :- tail(A,B),empty(B).
(  65.936) LOOP: START TESTING
(  65.938) LOOP: DONE TESTING ('none', 'none')
(  65.938) LOOP: START IMPOSING CONSTRAINTS
(  65.938) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  65.938) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  65.938) GENERATE: START GROUNDING (impose_constraints)
(  66.140) GENERATE: DONE GROUNDING (impose_constraints)
(  66.140) LOOP: DONE IMPOSING CONSTRAINTS
(  66.140) LOOP: START GENERATING (program 394)
(  66.140) GENERATE: START SOLVING
(  66.163) GENERATE: DONE SOLVING
(  66.176) LOOP: DONE GENERATING (program 394)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,E),tail(E,B).
  f(A,B) :- tail(A,B),empty(B).
(  66.177) LOOP: START TESTING
(  66.178) LOOP: DONE TESTING ('none', 'none')
(  66.178) LOOP: START IMPOSING CONSTRAINTS
(  66.178) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1V1!=ClId1V0,not recursive.
(  66.178) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  66.178) GENERATE: START GROUNDING (impose_constraints)
(  66.380) GENERATE: DONE GROUNDING (impose_constraints)
(  66.380) LOOP: DONE IMPOSING CONSTRAINTS
(  66.380) LOOP: START GENERATING (program 395)
(  66.380) GENERATE: START SOLVING
(  66.403) GENERATE: DONE SOLVING
(  66.411) LOOP: DONE GENERATING (program 395)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,E),tail(E,B).
  f(A,B) :- tail(A,B),empty(A).
(  66.412) LOOP: START TESTING
(  66.413) LOOP: DONE TESTING ('none', 'none')
(  66.413) LOOP: START IMPOSING CONSTRAINTS
(  66.413) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1V1!=ClId1V0,not recursive.
(  66.413) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V0,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
(  66.413) GENERATE: START GROUNDING (impose_constraints)
(  66.618) GENERATE: DONE GROUNDING (impose_constraints)
(  66.618) LOOP: DONE IMPOSING CONSTRAINTS
(  66.618) LOOP: START GENERATING (program 396)
(  66.618) GENERATE: START SOLVING
(  66.642) GENERATE: DONE SOLVING
(  67.698) LOOP: DONE GENERATING (program 396)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),f(C,E),tail(E,D).
(  67.698) LOOP: START TESTING
(  67.699) LOOP: DONE TESTING ('none', 'none')
(  67.700) LOOP: START IMPOSING CONSTRAINTS
(  67.700) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  67.700) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V2,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  67.700) GENERATE: START GROUNDING (impose_constraints)
(  67.907) GENERATE: DONE GROUNDING (impose_constraints)
(  67.907) LOOP: DONE IMPOSING CONSTRAINTS
(  67.907) LOOP: START GENERATING (program 397)
(  67.907) GENERATE: START SOLVING
(  67.930) GENERATE: DONE SOLVING
(  68.193) LOOP: DONE GENERATING (program 397)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),f(C,E),tail(E,B).
(  68.193) LOOP: START TESTING
(  68.195) LOOP: DONE TESTING ('none', 'none')
(  68.195) LOOP: START IMPOSING CONSTRAINTS
(  68.195) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  68.195) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V2,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  68.195) GENERATE: START GROUNDING (impose_constraints)
(  68.406) GENERATE: DONE GROUNDING (impose_constraints)
(  68.406) LOOP: DONE IMPOSING CONSTRAINTS
(  68.406) LOOP: START GENERATING (program 398)
(  68.406) GENERATE: START SOLVING
(  68.430) GENERATE: DONE SOLVING
(  73.138) LOOP: DONE GENERATING (program 398)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
  f(A,B) :- tail(A,C),tail(C,B),tail(B,D),tail(D,C).
(  73.138) LOOP: START TESTING
(  73.140) LOOP: DONE TESTING ('none', 'none')
(  73.140) LOOP: START IMPOSING CONSTRAINTS
(  73.140) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  73.140) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  73.140) GENERATE: START GROUNDING (impose_constraints)
(  73.351) GENERATE: DONE GROUNDING (impose_constraints)
(  73.351) LOOP: DONE IMPOSING CONSTRAINTS
(  73.351) LOOP: START GENERATING (program 399)
(  73.351) GENERATE: START SOLVING
(  73.376) GENERATE: DONE SOLVING
(  76.351) LOOP: DONE GENERATING (program 399)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,E),tail(E,B),f(B,C),tail(C,D).
(  76.352) LOOP: START TESTING
(  76.353) LOOP: DONE TESTING ('none', 'none')
(  76.353) LOOP: START IMPOSING CONSTRAINTS
(  76.353) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  76.353) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  76.353) GENERATE: START GROUNDING (impose_constraints)
(  76.558) GENERATE: DONE GROUNDING (impose_constraints)
(  76.558) LOOP: DONE IMPOSING CONSTRAINTS
(  76.558) LOOP: START GENERATING (program 400)
(  76.558) GENERATE: START SOLVING
(  76.582) GENERATE: DONE SOLVING
(  76.641) LOOP: DONE GENERATING (program 400)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),tail(C,D).
(  76.641) LOOP: START TESTING
(  76.643) LOOP: DONE TESTING ('none', 'none')
(  76.643) LOOP: START IMPOSING CONSTRAINTS
(  76.643) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  76.643) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  76.643) GENERATE: START GROUNDING (impose_constraints)
(  76.850) GENERATE: DONE GROUNDING (impose_constraints)
(  76.850) LOOP: DONE IMPOSING CONSTRAINTS
(  76.850) LOOP: START GENERATING (program 401)
(  76.850) GENERATE: START SOLVING
(  76.873) GENERATE: DONE SOLVING
(  77.094) LOOP: DONE GENERATING (program 401)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,E),tail(E,B),f(B,C).
(  77.094) LOOP: START TESTING
(  77.096) LOOP: DONE TESTING ('none', 'none')
(  77.096) LOOP: START IMPOSING CONSTRAINTS
(  77.096) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  77.096) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  77.096) GENERATE: START GROUNDING (impose_constraints)
(  77.312) GENERATE: DONE GROUNDING (impose_constraints)
(  77.312) LOOP: DONE IMPOSING CONSTRAINTS
(  77.312) LOOP: START GENERATING (program 402)
(  77.312) GENERATE: START SOLVING
(  77.338) GENERATE: DONE SOLVING
(  77.455) LOOP: DONE GENERATING (program 402)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,D),tail(D,B),head(B,C).
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
(  77.455) LOOP: START TESTING
(  77.457) LOOP: DONE TESTING ('none', 'none')
(  77.457) LOOP: START IMPOSING CONSTRAINTS
(  77.457) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  77.457) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  77.457) GENERATE: START GROUNDING (impose_constraints)
(  77.665) GENERATE: DONE GROUNDING (impose_constraints)
(  77.665) LOOP: DONE IMPOSING CONSTRAINTS
(  77.665) LOOP: START GENERATING (program 403)
(  77.665) GENERATE: START SOLVING
(  77.691) GENERATE: DONE SOLVING
(  77.732) LOOP: DONE GENERATING (program 403)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,E),tail(E,B),f(B,C).
(  77.732) LOOP: START TESTING
(  77.734) LOOP: DONE TESTING ('none', 'none')
(  77.734) LOOP: START IMPOSING CONSTRAINTS
(  77.734) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  77.734) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  77.734) GENERATE: START GROUNDING (impose_constraints)
(  77.942) GENERATE: DONE GROUNDING (impose_constraints)
(  77.942) LOOP: DONE IMPOSING CONSTRAINTS
(  77.942) LOOP: START GENERATING (program 404)
(  77.942) GENERATE: START SOLVING
(  77.966) GENERATE: DONE SOLVING
(  78.121) LOOP: DONE GENERATING (program 404)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,E),tail(E,B),f(B,C),tail(C,A).
(  78.121) LOOP: START TESTING
(  78.122) LOOP: DONE TESTING ('none', 'none')
(  78.122) LOOP: START IMPOSING CONSTRAINTS
(  78.122) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  78.122) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  78.123) GENERATE: START GROUNDING (impose_constraints)
(  78.335) GENERATE: DONE GROUNDING (impose_constraints)
(  78.335) LOOP: DONE IMPOSING CONSTRAINTS
(  78.335) LOOP: START GENERATING (program 405)
(  78.335) GENERATE: START SOLVING
(  78.360) GENERATE: DONE SOLVING
(  78.402) LOOP: DONE GENERATING (program 405)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),tail(C,A).
(  78.403) LOOP: START TESTING
(  78.404) LOOP: DONE TESTING ('none', 'none')
(  78.404) LOOP: START IMPOSING CONSTRAINTS
(  78.404) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  78.404) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  78.405) GENERATE: START GROUNDING (impose_constraints)
(  78.617) GENERATE: DONE GROUNDING (impose_constraints)
(  78.617) LOOP: DONE IMPOSING CONSTRAINTS
(  78.617) LOOP: START GENERATING (program 406)
(  78.617) GENERATE: START SOLVING
(  78.642) GENERATE: DONE SOLVING
(  78.663) LOOP: DONE GENERATING (program 406)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(B,D),tail(D,C).
(  78.664) LOOP: START TESTING
(  78.665) LOOP: DONE TESTING ('none', 'none')
(  78.665) LOOP: START IMPOSING CONSTRAINTS
(  78.665) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  78.665) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  78.665) GENERATE: START GROUNDING (impose_constraints)
(  78.876) GENERATE: DONE GROUNDING (impose_constraints)
(  78.876) LOOP: DONE IMPOSING CONSTRAINTS
(  78.877) LOOP: START GENERATING (program 407)
(  78.877) GENERATE: START SOLVING
(  78.902) GENERATE: DONE SOLVING
(  78.973) LOOP: DONE GENERATING (program 407)
PROGRAM:
  f(A,B) :- tail(A,E),tail(E,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
(  78.973) LOOP: START TESTING
(  78.975) LOOP: DONE TESTING ('none', 'none')
(  78.975) LOOP: START IMPOSING CONSTRAINTS
(  78.975) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
(  78.975) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  78.975) GENERATE: START GROUNDING (impose_constraints)
(  79.191) GENERATE: DONE GROUNDING (impose_constraints)
(  79.191) LOOP: DONE IMPOSING CONSTRAINTS
(  79.191) LOOP: START GENERATING (program 408)
(  79.191) GENERATE: START SOLVING
(  79.216) GENERATE: DONE SOLVING
(  79.367) LOOP: DONE GENERATING (program 408)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(B,D).
(  79.367) LOOP: START TESTING
(  79.368) LOOP: DONE TESTING ('none', 'none')
(  79.368) LOOP: START IMPOSING CONSTRAINTS
(  79.368) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  79.368) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  79.369) GENERATE: START GROUNDING (impose_constraints)
(  79.586) GENERATE: DONE GROUNDING (impose_constraints)
(  79.586) LOOP: DONE IMPOSING CONSTRAINTS
(  79.586) LOOP: START GENERATING (program 409)
(  79.586) GENERATE: START SOLVING
(  79.611) GENERATE: DONE SOLVING
(  79.663) LOOP: DONE GENERATING (program 409)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),head(D,E),head(A,E).
(  79.663) LOOP: START TESTING
(  79.664) LOOP: DONE TESTING ('none', 'none')
(  79.664) LOOP: START IMPOSING CONSTRAINTS
(  79.664) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  79.664) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  79.664) GENERATE: START GROUNDING (impose_constraints)
(  79.883) GENERATE: DONE GROUNDING (impose_constraints)
(  79.883) LOOP: DONE IMPOSING CONSTRAINTS
(  79.883) LOOP: START GENERATING (program 410)
(  79.883) GENERATE: START SOLVING
(  79.917) GENERATE: DONE SOLVING
(  79.953) LOOP: DONE GENERATING (program 410)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,E),tail(E,B).
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
(  79.954) LOOP: START TESTING
(  79.955) LOOP: DONE TESTING ('none', 'none')
(  79.955) LOOP: START IMPOSING CONSTRAINTS
(  79.955) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
(  79.955) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  79.955) GENERATE: START GROUNDING (impose_constraints)
(  80.177) GENERATE: DONE GROUNDING (impose_constraints)
(  80.177) LOOP: DONE IMPOSING CONSTRAINTS
(  80.177) LOOP: START GENERATING (program 411)
(  80.177) GENERATE: START SOLVING
(  80.205) GENERATE: DONE SOLVING
(  80.247) LOOP: DONE GENERATING (program 411)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(B,D).
(  80.247) LOOP: START TESTING
(  80.248) LOOP: DONE TESTING ('none', 'none')
(  80.248) LOOP: START IMPOSING CONSTRAINTS
(  80.248) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  80.248) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  80.248) GENERATE: START GROUNDING (impose_constraints)
(  80.467) GENERATE: DONE GROUNDING (impose_constraints)
(  80.467) LOOP: DONE IMPOSING CONSTRAINTS
(  80.467) LOOP: START GENERATING (program 412)
(  80.467) GENERATE: START SOLVING
(  80.492) GENERATE: DONE SOLVING
(  80.556) LOOP: DONE GENERATING (program 412)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,B),f(B,C),tail(B,D),tail(D,C).
(  80.556) LOOP: START TESTING
(  80.558) LOOP: DONE TESTING ('none', 'none')
(  80.558) LOOP: START IMPOSING CONSTRAINTS
(  80.558) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  80.558) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  80.558) GENERATE: START GROUNDING (impose_constraints)
(  80.777) GENERATE: DONE GROUNDING (impose_constraints)
(  80.777) LOOP: DONE IMPOSING CONSTRAINTS
(  80.777) LOOP: START GENERATING (program 413)
(  80.777) GENERATE: START SOLVING
(  80.802) GENERATE: DONE SOLVING
(  80.827) LOOP: DONE GENERATING (program 413)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,D),f(B,C),tail(C,E),tail(E,D).
(  80.827) LOOP: START TESTING
(  80.828) LOOP: DONE TESTING ('none', 'none')
(  80.828) LOOP: START IMPOSING CONSTRAINTS
(  80.828) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  80.828) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  80.828) GENERATE: START GROUNDING (impose_constraints)
(  81.051) GENERATE: DONE GROUNDING (impose_constraints)
(  81.051) LOOP: DONE IMPOSING CONSTRAINTS
(  81.051) LOOP: START GENERATING (program 414)
(  81.051) GENERATE: START SOLVING
(  81.077) GENERATE: DONE SOLVING
(  81.102) LOOP: DONE GENERATING (program 414)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,D),head(D,C),tail(D,B).
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
(  81.102) LOOP: START TESTING
(  81.103) LOOP: DONE TESTING ('none', 'none')
(  81.103) LOOP: START IMPOSING CONSTRAINTS
(  81.104) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  81.104) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  81.104) GENERATE: START GROUNDING (impose_constraints)
(  81.327) GENERATE: DONE GROUNDING (impose_constraints)
(  81.327) LOOP: DONE IMPOSING CONSTRAINTS
(  81.327) LOOP: START GENERATING (program 415)
(  81.327) GENERATE: START SOLVING
(  81.353) GENERATE: DONE SOLVING
(  81.518) LOOP: DONE GENERATING (program 415)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),tail(B,D),head(D,C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
(  81.518) LOOP: START TESTING
(  81.519) LOOP: DONE TESTING ('none', 'none')
(  81.519) LOOP: START IMPOSING CONSTRAINTS
(  81.519) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  81.519) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  81.519) GENERATE: START GROUNDING (impose_constraints)
(  81.754) GENERATE: DONE GROUNDING (impose_constraints)
(  81.754) LOOP: DONE IMPOSING CONSTRAINTS
(  81.754) LOOP: START GENERATING (program 416)
(  81.754) GENERATE: START SOLVING
(  81.781) GENERATE: DONE SOLVING
(  81.831) LOOP: DONE GENERATING (program 416)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,D),tail(D,C),tail(C,B),f(B,C).
(  81.831) LOOP: START TESTING
(  81.833) LOOP: DONE TESTING ('none', 'none')
(  81.833) LOOP: START IMPOSING CONSTRAINTS
(  81.833) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  81.833) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  81.833) GENERATE: START GROUNDING (impose_constraints)
(  82.062) GENERATE: DONE GROUNDING (impose_constraints)
(  82.062) LOOP: DONE IMPOSING CONSTRAINTS
(  82.062) LOOP: START GENERATING (program 417)
(  82.062) GENERATE: START SOLVING
(  82.089) GENERATE: DONE SOLVING
(  82.151) LOOP: DONE GENERATING (program 417)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,E),tail(E,D),tail(D,C).
(  82.151) LOOP: START TESTING
(  82.153) LOOP: DONE TESTING ('none', 'none')
(  82.153) LOOP: START IMPOSING CONSTRAINTS
(  82.153) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  82.153) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  82.153) GENERATE: START GROUNDING (impose_constraints)
(  82.382) GENERATE: DONE GROUNDING (impose_constraints)
(  82.382) LOOP: DONE IMPOSING CONSTRAINTS
(  82.382) LOOP: START GENERATING (program 418)
(  82.382) GENERATE: START SOLVING
(  82.409) GENERATE: DONE SOLVING
(  82.622) LOOP: DONE GENERATING (program 418)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),tail(C,E),tail(E,D).
(  82.622) LOOP: START TESTING
(  82.624) LOOP: DONE TESTING ('none', 'none')
(  82.624) LOOP: START IMPOSING CONSTRAINTS
(  82.624) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  82.624) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  82.624) GENERATE: START GROUNDING (impose_constraints)
(  82.854) GENERATE: DONE GROUNDING (impose_constraints)
(  82.854) LOOP: DONE IMPOSING CONSTRAINTS
(  82.854) LOOP: START GENERATING (program 419)
(  82.854) GENERATE: START SOLVING
(  82.881) GENERATE: DONE SOLVING
(  83.004) LOOP: DONE GENERATING (program 419)
PROGRAM:
  f(A,B) :- tail(A,B),head(B,C),tail(B,D),head(D,C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
(  83.004) LOOP: START TESTING
(  83.005) LOOP: DONE TESTING ('none', 'none')
(  83.005) LOOP: START IMPOSING CONSTRAINTS
(  83.006) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  83.006) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  83.006) GENERATE: START GROUNDING (impose_constraints)
(  83.234) GENERATE: DONE GROUNDING (impose_constraints)
(  83.234) LOOP: DONE IMPOSING CONSTRAINTS
(  83.234) LOOP: START GENERATING (program 420)
(  83.234) GENERATE: START SOLVING
(  83.262) GENERATE: DONE SOLVING
(  83.284) LOOP: DONE GENERATING (program 420)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,B),f(B,C),tail(C,D),tail(D,A).
(  83.285) LOOP: START TESTING
(  83.286) LOOP: DONE TESTING ('none', 'none')
(  83.286) LOOP: START IMPOSING CONSTRAINTS
(  83.286) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  83.286) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  83.286) GENERATE: START GROUNDING (impose_constraints)
(  83.516) GENERATE: DONE GROUNDING (impose_constraints)
(  83.516) LOOP: DONE IMPOSING CONSTRAINTS
(  83.516) LOOP: START GENERATING (program 421)
(  83.516) GENERATE: START SOLVING
(  83.542) GENERATE: DONE SOLVING
(  83.606) LOOP: DONE GENERATING (program 421)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B),f(B,C).
(  83.606) LOOP: START TESTING
(  83.608) LOOP: DONE TESTING ('none', 'none')
(  83.608) LOOP: START IMPOSING CONSTRAINTS
(  83.608) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  83.608) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  83.608) GENERATE: START GROUNDING (impose_constraints)
(  83.839) GENERATE: DONE GROUNDING (impose_constraints)
(  83.839) LOOP: DONE IMPOSING CONSTRAINTS
(  83.839) LOOP: START GENERATING (program 422)
(  83.839) GENERATE: START SOLVING
(  83.866) GENERATE: DONE SOLVING
(  83.884) LOOP: DONE GENERATING (program 422)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,B),f(B,C),tail(C,D),empty(D).
(  83.884) LOOP: START TESTING
(  83.886) LOOP: DONE TESTING ('none', 'none')
(  83.886) LOOP: START IMPOSING CONSTRAINTS
(  83.886) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  83.886) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  83.887) GENERATE: START GROUNDING (impose_constraints)
(  84.119) GENERATE: DONE GROUNDING (impose_constraints)
(  84.119) LOOP: DONE IMPOSING CONSTRAINTS
(  84.119) LOOP: START GENERATING (program 423)
(  84.119) GENERATE: START SOLVING
(  84.147) GENERATE: DONE SOLVING
(  84.182) LOOP: DONE GENERATING (program 423)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,E),f(B,C),tail(C,D),tail(D,E).
(  84.182) LOOP: START TESTING
(  84.183) LOOP: DONE TESTING ('none', 'none')
(  84.183) LOOP: START IMPOSING CONSTRAINTS
(  84.183) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  84.184) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  84.184) GENERATE: START GROUNDING (impose_constraints)
(  84.418) GENERATE: DONE GROUNDING (impose_constraints)
(  84.418) LOOP: DONE IMPOSING CONSTRAINTS
(  84.418) LOOP: START GENERATING (program 424)
(  84.418) GENERATE: START SOLVING
(  84.446) GENERATE: DONE SOLVING
(  84.649) LOOP: DONE GENERATING (program 424)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
(  84.649) LOOP: START TESTING
(  84.651) LOOP: DONE TESTING ('none', 'none')
(  84.651) LOOP: START IMPOSING CONSTRAINTS
(  84.651) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  84.651) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  84.651) GENERATE: START GROUNDING (impose_constraints)
(  84.888) GENERATE: DONE GROUNDING (impose_constraints)
(  84.888) LOOP: DONE IMPOSING CONSTRAINTS
(  84.888) LOOP: START GENERATING (program 425)
(  84.888) GENERATE: START SOLVING
(  84.917) GENERATE: DONE SOLVING
(  84.948) LOOP: DONE GENERATING (program 425)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,E),tail(E,B).
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
(  84.948) LOOP: START TESTING
(  84.950) LOOP: DONE TESTING ('none', 'none')
(  84.950) LOOP: START IMPOSING CONSTRAINTS
(  84.950) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
(  84.950) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  84.950) GENERATE: START GROUNDING (impose_constraints)
(  85.185) GENERATE: DONE GROUNDING (impose_constraints)
(  85.185) LOOP: DONE IMPOSING CONSTRAINTS
(  85.185) LOOP: START GENERATING (program 426)
(  85.185) GENERATE: START SOLVING
(  85.213) GENERATE: DONE SOLVING
(  85.231) LOOP: DONE GENERATING (program 426)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,B),f(B,C),tail(C,D),tail(D,B).
(  85.231) LOOP: START TESTING
(  85.233) LOOP: DONE TESTING ('none', 'none')
(  85.233) LOOP: START IMPOSING CONSTRAINTS
(  85.233) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  85.233) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  85.233) GENERATE: START GROUNDING (impose_constraints)
(  85.474) GENERATE: DONE GROUNDING (impose_constraints)
(  85.474) LOOP: DONE IMPOSING CONSTRAINTS
(  85.474) LOOP: START GENERATING (program 427)
(  85.474) GENERATE: START SOLVING
(  85.502) GENERATE: DONE SOLVING
(  85.520) LOOP: DONE GENERATING (program 427)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,D),tail(D,B),f(B,C),tail(C,D).
(  85.521) LOOP: START TESTING
(  85.522) LOOP: DONE TESTING ('none', 'none')
(  85.522) LOOP: START IMPOSING CONSTRAINTS
(  85.522) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  85.522) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  85.522) GENERATE: START GROUNDING (impose_constraints)
(  85.762) GENERATE: DONE GROUNDING (impose_constraints)
(  85.762) LOOP: DONE IMPOSING CONSTRAINTS
(  85.762) LOOP: START GENERATING (program 428)
(  85.762) GENERATE: START SOLVING
(  85.790) GENERATE: DONE SOLVING
(  85.806) LOOP: DONE GENERATING (program 428)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,B),f(B,C),tail(C,D),tail(B,D).
(  85.806) LOOP: START TESTING
(  85.808) LOOP: DONE TESTING ('none', 'none')
(  85.808) LOOP: START IMPOSING CONSTRAINTS
(  85.808) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  85.808) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  85.808) GENERATE: START GROUNDING (impose_constraints)
(  86.051) GENERATE: DONE GROUNDING (impose_constraints)
(  86.051) LOOP: DONE IMPOSING CONSTRAINTS
(  86.051) LOOP: START GENERATING (program 429)
(  86.051) GENERATE: START SOLVING
(  86.080) GENERATE: DONE SOLVING
(  86.101) LOOP: DONE GENERATING (program 429)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,E),tail(E,B).
(  86.101) LOOP: START TESTING
(  86.102) LOOP: DONE TESTING ('none', 'none')
(  86.102) LOOP: START IMPOSING CONSTRAINTS
(  86.103) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  86.103) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  86.103) GENERATE: START GROUNDING (impose_constraints)
(  86.344) GENERATE: DONE GROUNDING (impose_constraints)
(  86.344) LOOP: DONE IMPOSING CONSTRAINTS
(  86.344) LOOP: START GENERATING (program 430)
(  86.344) GENERATE: START SOLVING
(  86.379) GENERATE: DONE SOLVING
(  86.420) LOOP: DONE GENERATING (program 430)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,E),tail(E,B).
(  86.420) LOOP: START TESTING
(  86.422) LOOP: DONE TESTING ('none', 'none')
(  86.422) LOOP: START IMPOSING CONSTRAINTS
(  86.422) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  86.422) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  86.422) GENERATE: START GROUNDING (impose_constraints)
(  86.668) GENERATE: DONE GROUNDING (impose_constraints)
(  86.668) LOOP: DONE IMPOSING CONSTRAINTS
(  86.668) LOOP: START GENERATING (program 431)
(  86.668) GENERATE: START SOLVING
(  86.697) GENERATE: DONE SOLVING
(  86.757) LOOP: DONE GENERATING (program 431)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),head(D,E),head(B,E).
(  86.757) LOOP: START TESTING
(  86.759) LOOP: DONE TESTING ('none', 'none')
(  86.759) LOOP: START IMPOSING CONSTRAINTS
(  86.759) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  86.759) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  86.759) GENERATE: START GROUNDING (impose_constraints)
(  86.999) GENERATE: DONE GROUNDING (impose_constraints)
(  86.999) LOOP: DONE IMPOSING CONSTRAINTS
(  86.999) LOOP: START GENERATING (program 432)
(  86.999) GENERATE: START SOLVING
(  87.028) GENERATE: DONE SOLVING
(  87.045) LOOP: DONE GENERATING (program 432)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,A).
(  87.045) LOOP: START TESTING
(  87.047) LOOP: DONE TESTING ('none', 'none')
(  87.047) LOOP: START IMPOSING CONSTRAINTS
(  87.047) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  87.047) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  87.047) GENERATE: START GROUNDING (impose_constraints)
(  87.299) GENERATE: DONE GROUNDING (impose_constraints)
(  87.299) LOOP: DONE IMPOSING CONSTRAINTS
(  87.299) LOOP: START GENERATING (program 433)
(  87.299) GENERATE: START SOLVING
(  87.329) GENERATE: DONE SOLVING
(  87.341) LOOP: DONE GENERATING (program 433)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),empty(D).
(  87.341) LOOP: START TESTING
(  87.343) LOOP: DONE TESTING ('none', 'none')
(  87.343) LOOP: START IMPOSING CONSTRAINTS
(  87.343) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  87.343) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V3,)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  87.343) GENERATE: START GROUNDING (impose_constraints)
(  87.585) GENERATE: DONE GROUNDING (impose_constraints)
(  87.585) LOOP: DONE IMPOSING CONSTRAINTS
(  87.585) LOOP: START GENERATING (program 434)
(  87.585) GENERATE: START SOLVING
(  87.615) GENERATE: DONE SOLVING
(  87.672) LOOP: DONE GENERATING (program 434)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),head(D,E),head(B,E).
(  87.672) LOOP: START TESTING
(  87.673) LOOP: DONE TESTING ('none', 'none')
(  87.673) LOOP: START IMPOSING CONSTRAINTS
(  87.673) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  87.673) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  87.674) GENERATE: START GROUNDING (impose_constraints)
(  87.933) GENERATE: DONE GROUNDING (impose_constraints)
(  87.933) LOOP: DONE IMPOSING CONSTRAINTS
(  87.933) LOOP: START GENERATING (program 435)
(  87.933) GENERATE: START SOLVING
(  87.969) GENERATE: DONE SOLVING
(  88.076) LOOP: DONE GENERATING (program 435)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,E),tail(E,B),f(B,C),tail(B,C).
(  88.076) LOOP: START TESTING
(  88.078) LOOP: DONE TESTING ('none', 'none')
(  88.078) LOOP: START IMPOSING CONSTRAINTS
(  88.078) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  88.078) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  88.078) GENERATE: START GROUNDING (impose_constraints)
(  88.331) GENERATE: DONE GROUNDING (impose_constraints)
(  88.331) LOOP: DONE IMPOSING CONSTRAINTS
(  88.331) LOOP: START GENERATING (program 436)
(  88.331) GENERATE: START SOLVING
(  88.361) GENERATE: DONE SOLVING
(  88.409) LOOP: DONE GENERATING (program 436)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),empty(C).
(  88.409) LOOP: START TESTING
(  88.410) LOOP: DONE TESTING ('none', 'none')
(  88.410) LOOP: START IMPOSING CONSTRAINTS
(  88.410) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  88.410) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  88.410) GENERATE: START GROUNDING (impose_constraints)
(  88.663) GENERATE: DONE GROUNDING (impose_constraints)
(  88.663) LOOP: DONE IMPOSING CONSTRAINTS
(  88.663) LOOP: START GENERATING (program 437)
(  88.663) GENERATE: START SOLVING
(  88.694) GENERATE: DONE SOLVING
(  88.792) LOOP: DONE GENERATING (program 437)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),tail(B,C).
(  88.792) LOOP: START TESTING
(  88.793) LOOP: DONE TESTING ('none', 'none')
(  88.793) LOOP: START IMPOSING CONSTRAINTS
(  88.793) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  88.793) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  88.794) GENERATE: START GROUNDING (impose_constraints)
(  89.041) GENERATE: DONE GROUNDING (impose_constraints)
(  89.041) LOOP: DONE IMPOSING CONSTRAINTS
(  89.041) LOOP: START GENERATING (program 438)
(  89.041) GENERATE: START SOLVING
(  89.071) GENERATE: DONE SOLVING
(  89.141) LOOP: DONE GENERATING (program 438)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
(  89.141) LOOP: START TESTING
(  89.142) LOOP: DONE TESTING ('none', 'none')
(  89.142) LOOP: START IMPOSING CONSTRAINTS
(  89.142) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  89.142) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  89.143) GENERATE: START GROUNDING (impose_constraints)
(  89.401) GENERATE: DONE GROUNDING (impose_constraints)
(  89.401) LOOP: DONE IMPOSING CONSTRAINTS
(  89.401) LOOP: START GENERATING (program 439)
(  89.401) GENERATE: START SOLVING
(  89.431) GENERATE: DONE SOLVING
(  89.664) LOOP: DONE GENERATING (program 439)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,D),tail(D,B),f(B,C),empty(C).
(  89.664) LOOP: START TESTING
(  89.666) LOOP: DONE TESTING ('none', 'none')
(  89.666) LOOP: START IMPOSING CONSTRAINTS
(  89.666) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  89.666) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  89.666) GENERATE: START GROUNDING (impose_constraints)
(  89.918) GENERATE: DONE GROUNDING (impose_constraints)
(  89.918) LOOP: DONE IMPOSING CONSTRAINTS
(  89.918) LOOP: START GENERATING (program 440)
(  89.918) GENERATE: START SOLVING
(  89.947) GENERATE: DONE SOLVING
(  89.967) LOOP: DONE GENERATING (program 440)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,E),tail(E,B).
  f(A,B) :- tail(A,B),f(B,C),empty(C).
(  89.967) LOOP: START TESTING
(  89.969) LOOP: DONE TESTING ('none', 'none')
(  89.969) LOOP: START IMPOSING CONSTRAINTS
(  89.969) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
(  89.969) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  89.969) GENERATE: START GROUNDING (impose_constraints)
(  90.222) GENERATE: DONE GROUNDING (impose_constraints)
(  90.222) LOOP: DONE IMPOSING CONSTRAINTS
(  90.222) LOOP: START GENERATING (program 441)
(  90.222) GENERATE: START SOLVING
(  90.253) GENERATE: DONE SOLVING
(  90.459) LOOP: DONE GENERATING (program 441)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,A).
(  90.459) LOOP: START TESTING
(  90.460) LOOP: DONE TESTING ('none', 'none')
(  90.460) LOOP: START IMPOSING CONSTRAINTS
(  90.460) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  90.460) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  90.461) GENERATE: START GROUNDING (impose_constraints)
(  90.714) GENERATE: DONE GROUNDING (impose_constraints)
(  90.714) LOOP: DONE IMPOSING CONSTRAINTS
(  90.714) LOOP: START GENERATING (program 442)
(  90.714) GENERATE: START SOLVING
(  90.745) GENERATE: DONE SOLVING
(  91.360) LOOP: DONE GENERATING (program 442)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,D),tail(D,B),f(B,C),tail(C,B).
(  91.360) LOOP: START TESTING
(  91.361) LOOP: DONE TESTING ('none', 'none')
(  91.361) LOOP: START IMPOSING CONSTRAINTS
(  91.361) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  91.361) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  91.361) GENERATE: START GROUNDING (impose_constraints)
(  91.628) GENERATE: DONE GROUNDING (impose_constraints)
(  91.629) LOOP: DONE IMPOSING CONSTRAINTS
(  91.629) LOOP: START GENERATING (program 443)
(  91.629) GENERATE: START SOLVING
(  91.664) GENERATE: DONE SOLVING
(  91.766) LOOP: DONE GENERATING (program 443)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),head(B,D),head(C,D).
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
(  91.766) LOOP: START TESTING
(  91.767) LOOP: DONE TESTING ('none', 'none')
(  91.767) LOOP: START IMPOSING CONSTRAINTS
(  91.768) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V3)),body_literal(ClId0,head,2,(ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  91.768) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,head,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  91.768) GENERATE: START GROUNDING (impose_constraints)
(  92.022) GENERATE: DONE GROUNDING (impose_constraints)
(  92.022) LOOP: DONE IMPOSING CONSTRAINTS
(  92.022) LOOP: START GENERATING (program 444)
(  92.022) GENERATE: START SOLVING
(  92.054) GENERATE: DONE SOLVING
(  92.228) LOOP: DONE GENERATING (program 444)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),empty(C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
(  92.228) LOOP: START TESTING
(  92.229) LOOP: DONE TESTING ('none', 'none')
(  92.229) LOOP: START IMPOSING CONSTRAINTS
(  92.229) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  92.229) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  92.229) GENERATE: START GROUNDING (impose_constraints)
(  92.483) GENERATE: DONE GROUNDING (impose_constraints)
(  92.483) LOOP: DONE IMPOSING CONSTRAINTS
(  92.483) LOOP: START GENERATING (program 445)
(  92.483) GENERATE: START SOLVING
(  92.522) GENERATE: DONE SOLVING
(  92.631) LOOP: DONE GENERATING (program 445)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
  f(A,B) :- tail(A,D),tail(D,B),f(B,C),tail(C,B).
(  92.631) LOOP: START TESTING
(  92.633) LOOP: DONE TESTING ('none', 'none')
(  92.633) LOOP: START IMPOSING CONSTRAINTS
(  92.633) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  92.633) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  92.633) GENERATE: START GROUNDING (impose_constraints)
(  92.887) GENERATE: DONE GROUNDING (impose_constraints)
(  92.887) LOOP: DONE IMPOSING CONSTRAINTS
(  92.887) LOOP: START GENERATING (program 446)
(  92.887) GENERATE: START SOLVING
(  92.918) GENERATE: DONE SOLVING
(  92.949) LOOP: DONE GENERATING (program 446)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(B,C),tail(C,D).
(  92.949) LOOP: START TESTING
(  92.950) LOOP: DONE TESTING ('none', 'none')
(  92.950) LOOP: START IMPOSING CONSTRAINTS
(  92.950) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  92.950) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  92.951) GENERATE: START GROUNDING (impose_constraints)
(  93.204) GENERATE: DONE GROUNDING (impose_constraints)
(  93.204) LOOP: DONE IMPOSING CONSTRAINTS
(  93.204) LOOP: START GENERATING (program 447)
(  93.204) GENERATE: START SOLVING
(  93.235) GENERATE: DONE SOLVING
(  93.252) LOOP: DONE GENERATING (program 447)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),tail(B,D),empty(D).
  f(A,B) :- tail(A,C),tail(C,B),f(B,C).
(  93.252) LOOP: START TESTING
(  93.253) LOOP: DONE TESTING ('none', 'none')
(  93.253) LOOP: START IMPOSING CONSTRAINTS
(  93.253) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,empty,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  93.253) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V3,)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  93.253) GENERATE: START GROUNDING (impose_constraints)
(  93.502) GENERATE: DONE GROUNDING (impose_constraints)
(  93.502) LOOP: DONE IMPOSING CONSTRAINTS
(  93.502) LOOP: START GENERATING (program 448)
(  93.502) GENERATE: START SOLVING
(  93.535) GENERATE: DONE SOLVING
(  93.549) LOOP: DONE GENERATING (program 448)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),head(D,E),head(A,E).
(  93.549) LOOP: START TESTING
(  93.550) LOOP: DONE TESTING ('none', 'none')
(  93.550) LOOP: START IMPOSING CONSTRAINTS
(  93.550) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  93.550) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  93.550) GENERATE: START GROUNDING (impose_constraints)
(  93.821) GENERATE: DONE GROUNDING (impose_constraints)
(  93.821) LOOP: DONE IMPOSING CONSTRAINTS
(  93.821) LOOP: START GENERATING (program 449)
(  93.821) GENERATE: START SOLVING
(  93.853) GENERATE: DONE SOLVING
(  93.880) LOOP: DONE GENERATING (program 449)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,E),empty(E).
(  93.881) LOOP: START TESTING
(  93.882) LOOP: DONE TESTING ('none', 'none')
(  93.882) LOOP: START IMPOSING CONSTRAINTS
(  93.882) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  93.882) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V4,)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  93.882) GENERATE: START GROUNDING (impose_constraints)
(  94.138) GENERATE: DONE GROUNDING (impose_constraints)
(  94.138) LOOP: DONE IMPOSING CONSTRAINTS
(  94.138) LOOP: START GENERATING (program 450)
(  94.138) GENERATE: START SOLVING
(  94.169) GENERATE: DONE SOLVING
(  94.182) LOOP: DONE GENERATING (program 450)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,E),tail(E,A).
(  94.182) LOOP: START TESTING
(  94.184) LOOP: DONE TESTING ('none', 'none')
(  94.184) LOOP: START IMPOSING CONSTRAINTS
(  94.184) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  94.184) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  94.184) GENERATE: START GROUNDING (impose_constraints)
(  94.436) GENERATE: DONE GROUNDING (impose_constraints)
(  94.436) LOOP: DONE IMPOSING CONSTRAINTS
(  94.436) LOOP: START GENERATING (program 451)
(  94.436) GENERATE: START SOLVING
(  94.467) GENERATE: DONE SOLVING
(  94.482) LOOP: DONE GENERATING (program 451)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,E),tail(E,C).
(  94.482) LOOP: START TESTING
(  94.483) LOOP: DONE TESTING ('none', 'none')
(  94.483) LOOP: START IMPOSING CONSTRAINTS
(  94.483) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  94.483) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  94.484) GENERATE: START GROUNDING (impose_constraints)
(  94.739) GENERATE: DONE GROUNDING (impose_constraints)
(  94.739) LOOP: DONE IMPOSING CONSTRAINTS
(  94.739) LOOP: START GENERATING (program 452)
(  94.739) GENERATE: START SOLVING
(  94.769) GENERATE: DONE SOLVING
(  94.864) LOOP: DONE GENERATING (program 452)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),empty(D).
(  94.864) LOOP: START TESTING
(  94.866) LOOP: DONE TESTING ('none', 'none')
(  94.866) LOOP: START IMPOSING CONSTRAINTS
(  94.866) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  94.866) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V3,)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  94.866) GENERATE: START GROUNDING (impose_constraints)
(  95.131) GENERATE: DONE GROUNDING (impose_constraints)
(  95.131) LOOP: DONE IMPOSING CONSTRAINTS
(  95.131) LOOP: START GENERATING (program 453)
(  95.131) GENERATE: START SOLVING
(  95.163) GENERATE: DONE SOLVING
(  95.457) LOOP: DONE GENERATING (program 453)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(B,C),tail(D,C).
(  95.457) LOOP: START TESTING
(  95.459) LOOP: DONE TESTING ('none', 'none')
(  95.459) LOOP: START IMPOSING CONSTRAINTS
(  95.459) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  95.459) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  95.459) GENERATE: START GROUNDING (impose_constraints)
(  95.713) GENERATE: DONE GROUNDING (impose_constraints)
(  95.713) LOOP: DONE IMPOSING CONSTRAINTS
(  95.713) LOOP: START GENERATING (program 454)
(  95.713) GENERATE: START SOLVING
(  95.744) GENERATE: DONE SOLVING
(  95.799) LOOP: DONE GENERATING (program 454)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,B).
(  95.799) LOOP: START TESTING
(  95.800) LOOP: DONE TESTING ('none', 'none')
(  95.800) LOOP: START IMPOSING CONSTRAINTS
(  95.800) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  95.800) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  95.800) GENERATE: START GROUNDING (impose_constraints)
(  96.057) GENERATE: DONE GROUNDING (impose_constraints)
(  96.057) LOOP: DONE IMPOSING CONSTRAINTS
(  96.057) LOOP: START GENERATING (program 455)
(  96.057) GENERATE: START SOLVING
(  96.091) GENERATE: DONE SOLVING
(  96.106) LOOP: DONE GENERATING (program 455)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(B,C),tail(C,D).
(  96.106) LOOP: START TESTING
(  96.108) LOOP: DONE TESTING ('none', 'none')
(  96.108) LOOP: START IMPOSING CONSTRAINTS
(  96.108) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  96.108) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  96.108) GENERATE: START GROUNDING (impose_constraints)
(  96.366) GENERATE: DONE GROUNDING (impose_constraints)
(  96.366) LOOP: DONE IMPOSING CONSTRAINTS
(  96.366) LOOP: START GENERATING (program 456)
(  96.366) GENERATE: START SOLVING
(  96.401) GENERATE: DONE SOLVING
(  96.450) LOOP: DONE GENERATING (program 456)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,D),tail(D,E),tail(E,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
(  96.450) LOOP: START TESTING
(  96.452) LOOP: DONE TESTING ('none', 'none')
(  96.452) LOOP: START IMPOSING CONSTRAINTS
(  96.452) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
(  96.452) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  96.452) GENERATE: START GROUNDING (impose_constraints)
(  96.711) GENERATE: DONE GROUNDING (impose_constraints)
(  96.711) LOOP: DONE IMPOSING CONSTRAINTS
(  96.711) LOOP: START GENERATING (program 457)
(  96.711) GENERATE: START SOLVING
(  96.742) GENERATE: DONE SOLVING
(  96.754) LOOP: DONE GENERATING (program 457)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),head(D,E),head(B,E).
(  96.754) LOOP: START TESTING
(  96.756) LOOP: DONE TESTING ('none', 'none')
(  96.756) LOOP: START IMPOSING CONSTRAINTS
(  96.756) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  96.756) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  96.756) GENERATE: START GROUNDING (impose_constraints)
(  97.014) GENERATE: DONE GROUNDING (impose_constraints)
(  97.014) LOOP: DONE IMPOSING CONSTRAINTS
(  97.014) LOOP: START GENERATING (program 458)
(  97.014) GENERATE: START SOLVING
(  97.047) GENERATE: DONE SOLVING
(  97.056) LOOP: DONE GENERATING (program 458)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),head(D,E),head(A,E).
(  97.056) LOOP: START TESTING
(  97.058) LOOP: DONE TESTING ('none', 'none')
(  97.058) LOOP: START IMPOSING CONSTRAINTS
(  97.058) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  97.058) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  97.058) GENERATE: START GROUNDING (impose_constraints)
(  97.318) GENERATE: DONE GROUNDING (impose_constraints)
(  97.318) LOOP: DONE IMPOSING CONSTRAINTS
(  97.318) LOOP: START GENERATING (program 459)
(  97.318) GENERATE: START SOLVING
(  97.351) GENERATE: DONE SOLVING
(  97.426) LOOP: DONE GENERATING (program 459)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(B,C),tail(C,D).
(  97.426) LOOP: START TESTING
(  97.427) LOOP: DONE TESTING ('none', 'none')
(  97.427) LOOP: START IMPOSING CONSTRAINTS
(  97.427) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  97.427) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  97.428) GENERATE: START GROUNDING (impose_constraints)
(  97.712) GENERATE: DONE GROUNDING (impose_constraints)
(  97.712) LOOP: DONE IMPOSING CONSTRAINTS
(  97.712) LOOP: START GENERATING (program 460)
(  97.712) GENERATE: START SOLVING
(  97.745) GENERATE: DONE SOLVING
(  97.817) LOOP: DONE GENERATING (program 460)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,E),tail(E,A).
(  97.817) LOOP: START TESTING
(  97.818) LOOP: DONE TESTING ('none', 'none')
(  97.818) LOOP: START IMPOSING CONSTRAINTS
(  97.818) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  97.818) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  97.818) GENERATE: START GROUNDING (impose_constraints)
(  98.084) GENERATE: DONE GROUNDING (impose_constraints)
(  98.084) LOOP: DONE IMPOSING CONSTRAINTS
(  98.084) LOOP: START GENERATING (program 461)
(  98.084) GENERATE: START SOLVING
(  98.117) GENERATE: DONE SOLVING
(  98.465) LOOP: DONE GENERATING (program 461)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(B,C),tail(D,C).
(  98.465) LOOP: START TESTING
(  98.467) LOOP: DONE TESTING ('none', 'none')
(  98.467) LOOP: START IMPOSING CONSTRAINTS
(  98.467) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  98.467) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  98.467) GENERATE: START GROUNDING (impose_constraints)
(  98.734) GENERATE: DONE GROUNDING (impose_constraints)
(  98.734) LOOP: DONE IMPOSING CONSTRAINTS
(  98.734) LOOP: START GENERATING (program 462)
(  98.734) GENERATE: START SOLVING
(  98.766) GENERATE: DONE SOLVING
(  98.811) LOOP: DONE GENERATING (program 462)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),f(B,C),tail(D,C).
(  98.811) LOOP: START TESTING
(  98.812) LOOP: DONE TESTING ('none', 'none')
(  98.812) LOOP: START IMPOSING CONSTRAINTS
(  98.812) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  98.812) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  98.812) GENERATE: START GROUNDING (impose_constraints)
(  99.078) GENERATE: DONE GROUNDING (impose_constraints)
(  99.078) LOOP: DONE IMPOSING CONSTRAINTS
(  99.078) LOOP: START GENERATING (program 463)
(  99.078) GENERATE: START SOLVING
(  99.112) GENERATE: DONE SOLVING
(  99.152) LOOP: DONE GENERATING (program 463)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,E),tail(E,D),tail(D,C).
(  99.153) LOOP: START TESTING
(  99.154) LOOP: DONE TESTING ('none', 'none')
(  99.154) LOOP: START IMPOSING CONSTRAINTS
(  99.154) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
(  99.154) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
(  99.154) GENERATE: START GROUNDING (impose_constraints)
(  99.425) GENERATE: DONE GROUNDING (impose_constraints)
(  99.425) LOOP: DONE IMPOSING CONSTRAINTS
(  99.425) LOOP: START GENERATING (program 464)
(  99.425) GENERATE: START SOLVING
(  99.459) GENERATE: DONE SOLVING
(  99.470) LOOP: DONE GENERATING (program 464)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),f(B,C),tail(B,D),tail(D,C).
(  99.470) LOOP: START TESTING
(  99.472) LOOP: DONE TESTING ('none', 'none')
(  99.472) LOOP: START IMPOSING CONSTRAINTS
(  99.472) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  99.472) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  99.472) GENERATE: START GROUNDING (impose_constraints)
(  99.742) GENERATE: DONE GROUNDING (impose_constraints)
(  99.742) LOOP: DONE IMPOSING CONSTRAINTS
(  99.742) LOOP: START GENERATING (program 465)
(  99.742) GENERATE: START SOLVING
(  99.776) GENERATE: DONE SOLVING
(  99.831) LOOP: DONE GENERATING (program 465)
PROGRAM:
  f(A,B) :- tail(A,B),head(B,C),tail(B,D),head(D,C).
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
(  99.831) LOOP: START TESTING
(  99.833) LOOP: DONE TESTING ('none', 'none')
(  99.833) LOOP: START IMPOSING CONSTRAINTS
(  99.833) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  99.833) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  99.833) GENERATE: START GROUNDING (impose_constraints)
( 100.098) GENERATE: DONE GROUNDING (impose_constraints)
( 100.098) LOOP: DONE IMPOSING CONSTRAINTS
( 100.098) LOOP: START GENERATING (program 466)
( 100.098) GENERATE: START SOLVING
( 100.132) GENERATE: DONE SOLVING
( 100.151) LOOP: DONE GENERATING (program 466)
PROGRAM:
  f(A,B) :- tail(A,B),head(B,C),tail(B,D),head(D,C).
  f(A,B) :- tail(A,B),f(B,C),empty(C).
( 100.151) LOOP: START TESTING
( 100.152) LOOP: DONE TESTING ('none', 'none')
( 100.152) LOOP: START IMPOSING CONSTRAINTS
( 100.152) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 100.152) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 100.152) GENERATE: START GROUNDING (impose_constraints)
( 100.417) GENERATE: DONE GROUNDING (impose_constraints)
( 100.417) LOOP: DONE IMPOSING CONSTRAINTS
( 100.417) LOOP: START GENERATING (program 467)
( 100.417) GENERATE: START SOLVING
( 100.451) GENERATE: DONE SOLVING
( 100.464) LOOP: DONE GENERATING (program 467)
PROGRAM:
  f(A,B) :- tail(A,B),head(B,C),tail(B,D),head(D,C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
( 100.464) LOOP: START TESTING
( 100.465) LOOP: DONE TESTING ('none', 'none')
( 100.465) LOOP: START IMPOSING CONSTRAINTS
( 100.465) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 100.465) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 100.465) GENERATE: START GROUNDING (impose_constraints)
( 100.735) GENERATE: DONE GROUNDING (impose_constraints)
( 100.735) LOOP: DONE IMPOSING CONSTRAINTS
( 100.735) LOOP: START GENERATING (program 468)
( 100.735) GENERATE: START SOLVING
( 100.768) GENERATE: DONE SOLVING
( 100.785) LOOP: DONE GENERATING (program 468)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),tail(B,D),head(D,C).
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
( 100.785) LOOP: START TESTING
( 100.786) LOOP: DONE TESTING ('none', 'none')
( 100.786) LOOP: START IMPOSING CONSTRAINTS
( 100.786) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 100.786) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 100.786) GENERATE: START GROUNDING (impose_constraints)
( 101.050) GENERATE: DONE GROUNDING (impose_constraints)
( 101.050) LOOP: DONE IMPOSING CONSTRAINTS
( 101.050) LOOP: START GENERATING (program 469)
( 101.050) GENERATE: START SOLVING
( 101.084) GENERATE: DONE SOLVING
( 101.095) LOOP: DONE GENERATING (program 469)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),tail(B,D),head(D,C).
  f(A,B) :- tail(A,B),f(B,C),empty(C).
( 101.095) LOOP: START TESTING
( 101.097) LOOP: DONE TESTING ('none', 'none')
( 101.097) LOOP: START IMPOSING CONSTRAINTS
( 101.097) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 101.097) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 101.097) GENERATE: START GROUNDING (impose_constraints)
( 101.370) GENERATE: DONE GROUNDING (impose_constraints)
( 101.370) LOOP: DONE IMPOSING CONSTRAINTS
( 101.370) LOOP: START GENERATING (program 470)
( 101.370) GENERATE: START SOLVING
( 101.405) GENERATE: DONE SOLVING
( 101.415) LOOP: DONE GENERATING (program 470)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),tail(B,D),head(D,C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
( 101.416) LOOP: START TESTING
( 101.417) LOOP: DONE TESTING ('none', 'none')
( 101.417) LOOP: START IMPOSING CONSTRAINTS
( 101.417) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 101.417) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V3,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 101.417) GENERATE: START GROUNDING (impose_constraints)
( 101.693) GENERATE: DONE GROUNDING (impose_constraints)
( 101.693) LOOP: DONE IMPOSING CONSTRAINTS
( 101.693) LOOP: START GENERATING (program 471)
( 101.693) GENERATE: START SOLVING
( 101.727) GENERATE: DONE SOLVING
( 101.775) LOOP: DONE GENERATING (program 471)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,E),empty(E).
( 101.775) LOOP: START TESTING
( 101.777) LOOP: DONE TESTING ('none', 'none')
( 101.777) LOOP: START IMPOSING CONSTRAINTS
( 101.777) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
( 101.777) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V4,)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 101.777) GENERATE: START GROUNDING (impose_constraints)
( 102.042) GENERATE: DONE GROUNDING (impose_constraints)
( 102.042) LOOP: DONE IMPOSING CONSTRAINTS
( 102.042) LOOP: START GENERATING (program 472)
( 102.042) GENERATE: START SOLVING
( 102.076) GENERATE: DONE SOLVING
( 102.087) LOOP: DONE GENERATING (program 472)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,B).
( 102.087) LOOP: START TESTING
( 102.088) LOOP: DONE TESTING ('none', 'none')
( 102.088) LOOP: START IMPOSING CONSTRAINTS
( 102.088) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 102.088) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 102.089) GENERATE: START GROUNDING (impose_constraints)
( 102.356) GENERATE: DONE GROUNDING (impose_constraints)
( 102.356) LOOP: DONE IMPOSING CONSTRAINTS
( 102.356) LOOP: START GENERATING (program 473)
( 102.356) GENERATE: START SOLVING
( 102.392) GENERATE: DONE SOLVING
( 102.430) LOOP: DONE GENERATING (program 473)
PROGRAM:
  f(A,B) :- tail(A,B),empty(A).
  f(A,B) :- tail(A,B),tail(B,E),f(B,C),tail(C,D),tail(D,E).
( 102.430) LOOP: START TESTING
( 102.431) LOOP: DONE TESTING ('none', 'none')
( 102.431) LOOP: START IMPOSING CONSTRAINTS
( 102.431) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),ClId0V1!=ClId0V0,not recursive.
( 102.431) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V0,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 102.432) GENERATE: START GROUNDING (impose_constraints)
( 102.703) GENERATE: DONE GROUNDING (impose_constraints)
( 102.703) LOOP: DONE IMPOSING CONSTRAINTS
( 102.703) LOOP: START GENERATING (program 474)
( 102.703) GENERATE: START SOLVING
( 102.736) GENERATE: DONE SOLVING
( 102.748) LOOP: DONE GENERATING (program 474)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,E),tail(E,A).
( 102.748) LOOP: START TESTING
( 102.749) LOOP: DONE TESTING ('none', 'none')
( 102.749) LOOP: START IMPOSING CONSTRAINTS
( 102.750) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
( 102.750) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 102.750) GENERATE: START GROUNDING (impose_constraints)
( 103.028) GENERATE: DONE GROUNDING (impose_constraints)
( 103.028) LOOP: DONE IMPOSING CONSTRAINTS
( 103.028) LOOP: START GENERATING (program 475)
( 103.028) GENERATE: START SOLVING
( 103.062) GENERATE: DONE SOLVING
( 103.074) LOOP: DONE GENERATING (program 475)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,E),empty(E).
( 103.074) LOOP: START TESTING
( 103.076) LOOP: DONE TESTING ('none', 'none')
( 103.076) LOOP: START IMPOSING CONSTRAINTS
( 103.076) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
( 103.076) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V4,)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 103.076) GENERATE: START GROUNDING (impose_constraints)
( 103.351) GENERATE: DONE GROUNDING (impose_constraints)
( 103.351) LOOP: DONE IMPOSING CONSTRAINTS
( 103.351) LOOP: START GENERATING (program 476)
( 103.351) GENERATE: START SOLVING
( 103.385) GENERATE: DONE SOLVING
( 103.397) LOOP: DONE GENERATING (program 476)
PROGRAM:
  f(A,B) :- tail(A,B),empty(B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,E),tail(E,B).
( 103.397) LOOP: START TESTING
( 103.398) LOOP: DONE TESTING ('none', 'none')
( 103.398) LOOP: START IMPOSING CONSTRAINTS
( 103.398) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
( 103.398) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V1,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 103.399) GENERATE: START GROUNDING (impose_constraints)
( 103.672) GENERATE: DONE GROUNDING (impose_constraints)
( 103.672) LOOP: DONE IMPOSING CONSTRAINTS
( 103.672) LOOP: START GENERATING (program 477)
( 103.672) GENERATE: START SOLVING
( 103.706) GENERATE: DONE SOLVING
( 103.733) LOOP: DONE GENERATING (program 477)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,A).
( 103.733) LOOP: START TESTING
( 103.734) LOOP: DONE TESTING ('none', 'none')
( 103.734) LOOP: START IMPOSING CONSTRAINTS
( 103.734) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 103.734) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 103.735) GENERATE: START GROUNDING (impose_constraints)
( 104.004) GENERATE: DONE GROUNDING (impose_constraints)
( 104.004) LOOP: DONE IMPOSING CONSTRAINTS
( 104.004) LOOP: START GENERATING (program 478)
( 104.004) GENERATE: START SOLVING
( 104.039) GENERATE: DONE SOLVING
( 104.080) LOOP: DONE GENERATING (program 478)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,A).
( 104.080) LOOP: START TESTING
( 104.082) LOOP: DONE TESTING ('none', 'none')
( 104.082) LOOP: START IMPOSING CONSTRAINTS
( 104.082) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 104.082) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 104.082) GENERATE: START GROUNDING (impose_constraints)
( 104.363) GENERATE: DONE GROUNDING (impose_constraints)
( 104.363) LOOP: DONE IMPOSING CONSTRAINTS
( 104.363) LOOP: START GENERATING (program 479)
( 104.363) GENERATE: START SOLVING
( 104.399) GENERATE: DONE SOLVING
( 104.411) LOOP: DONE GENERATING (program 479)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),empty(D).
( 104.411) LOOP: START TESTING
( 104.412) LOOP: DONE TESTING ('none', 'none')
( 104.412) LOOP: START IMPOSING CONSTRAINTS
( 104.413) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 104.413) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V3,)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 104.413) GENERATE: START GROUNDING (impose_constraints)
( 104.689) GENERATE: DONE GROUNDING (impose_constraints)
( 104.689) LOOP: DONE IMPOSING CONSTRAINTS
( 104.689) LOOP: START GENERATING (program 480)
( 104.689) GENERATE: START SOLVING
( 104.724) GENERATE: DONE SOLVING
( 104.735) LOOP: DONE GENERATING (program 480)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),empty(D).
( 104.735) LOOP: START TESTING
( 104.737) LOOP: DONE TESTING ('none', 'none')
( 104.737) LOOP: START IMPOSING CONSTRAINTS
( 104.737) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 104.737) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V3,)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 104.737) GENERATE: START GROUNDING (impose_constraints)
( 105.022) GENERATE: DONE GROUNDING (impose_constraints)
( 105.022) LOOP: DONE IMPOSING CONSTRAINTS
( 105.022) LOOP: START GENERATING (program 481)
( 105.022) GENERATE: START SOLVING
( 105.057) GENERATE: DONE SOLVING
( 105.070) LOOP: DONE GENERATING (program 481)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(B,D).
( 105.070) LOOP: START TESTING
( 105.071) LOOP: DONE TESTING ('none', 'none')
( 105.071) LOOP: START IMPOSING CONSTRAINTS
( 105.072) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 105.072) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 105.072) GENERATE: START GROUNDING (impose_constraints)
( 105.345) GENERATE: DONE GROUNDING (impose_constraints)
( 105.345) LOOP: DONE IMPOSING CONSTRAINTS
( 105.345) LOOP: START GENERATING (program 482)
( 105.345) GENERATE: START SOLVING
( 105.381) GENERATE: DONE SOLVING
( 105.399) LOOP: DONE GENERATING (program 482)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(B,D).
( 105.400) LOOP: START TESTING
( 105.401) LOOP: DONE TESTING ('none', 'none')
( 105.401) LOOP: START IMPOSING CONSTRAINTS
( 105.401) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 105.401) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 105.401) GENERATE: START GROUNDING (impose_constraints)
( 105.685) GENERATE: DONE GROUNDING (impose_constraints)
( 105.685) LOOP: DONE IMPOSING CONSTRAINTS
( 105.685) LOOP: START GENERATING (program 483)
( 105.685) GENERATE: START SOLVING
( 105.721) GENERATE: DONE SOLVING
( 105.950) LOOP: DONE GENERATING (program 483)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,A).
( 105.950) LOOP: START TESTING
( 105.951) LOOP: DONE TESTING ('none', 'none')
( 105.951) LOOP: START IMPOSING CONSTRAINTS
( 105.951) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 105.951) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 105.952) GENERATE: START GROUNDING (impose_constraints)
( 106.229) GENERATE: DONE GROUNDING (impose_constraints)
( 106.229) LOOP: DONE IMPOSING CONSTRAINTS
( 106.229) LOOP: START GENERATING (program 484)
( 106.229) GENERATE: START SOLVING
( 106.264) GENERATE: DONE SOLVING
( 106.448) LOOP: DONE GENERATING (program 484)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),f(B,C),tail(B,D),tail(D,C).
( 106.448) LOOP: START TESTING
( 106.450) LOOP: DONE TESTING ('none', 'none')
( 106.450) LOOP: START IMPOSING CONSTRAINTS
( 106.450) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 106.450) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 106.450) GENERATE: START GROUNDING (impose_constraints)
( 106.732) GENERATE: DONE GROUNDING (impose_constraints)
( 106.732) LOOP: DONE IMPOSING CONSTRAINTS
( 106.732) LOOP: START GENERATING (program 485)
( 106.732) GENERATE: START SOLVING
( 106.768) GENERATE: DONE SOLVING
( 106.821) LOOP: DONE GENERATING (program 485)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
( 106.821) LOOP: START TESTING
( 106.823) LOOP: DONE TESTING ('none', 'none')
( 106.823) LOOP: START IMPOSING CONSTRAINTS
( 106.823) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 106.823) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 106.823) GENERATE: START GROUNDING (impose_constraints)
( 107.101) GENERATE: DONE GROUNDING (impose_constraints)
( 107.101) LOOP: DONE IMPOSING CONSTRAINTS
( 107.101) LOOP: START GENERATING (program 486)
( 107.101) GENERATE: START SOLVING
( 107.138) GENERATE: DONE SOLVING
( 107.199) LOOP: DONE GENERATING (program 486)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),empty(C).
( 107.199) LOOP: START TESTING
( 107.200) LOOP: DONE TESTING ('none', 'none')
( 107.200) LOOP: START IMPOSING CONSTRAINTS
( 107.200) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 107.200) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 107.201) GENERATE: START GROUNDING (impose_constraints)
( 107.487) GENERATE: DONE GROUNDING (impose_constraints)
( 107.487) LOOP: DONE IMPOSING CONSTRAINTS
( 107.487) LOOP: START GENERATING (program 487)
( 107.487) GENERATE: START SOLVING
( 107.524) GENERATE: DONE SOLVING
( 107.537) LOOP: DONE GENERATING (program 487)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
( 107.537) LOOP: START TESTING
( 107.538) LOOP: DONE TESTING ('none', 'none')
( 107.538) LOOP: START IMPOSING CONSTRAINTS
( 107.538) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 107.538) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 107.539) GENERATE: START GROUNDING (impose_constraints)
( 107.821) GENERATE: DONE GROUNDING (impose_constraints)
( 107.821) LOOP: DONE IMPOSING CONSTRAINTS
( 107.821) LOOP: START GENERATING (program 488)
( 107.821) GENERATE: START SOLVING
( 107.868) GENERATE: DONE SOLVING
( 107.933) LOOP: DONE GENERATING (program 488)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,B).
( 107.933) LOOP: START TESTING
( 107.935) LOOP: DONE TESTING ('none', 'none')
( 107.935) LOOP: START IMPOSING CONSTRAINTS
( 107.935) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 107.935) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 107.935) GENERATE: START GROUNDING (impose_constraints)
( 108.219) GENERATE: DONE GROUNDING (impose_constraints)
( 108.219) LOOP: DONE IMPOSING CONSTRAINTS
( 108.219) LOOP: START GENERATING (program 489)
( 108.219) GENERATE: START SOLVING
( 108.258) GENERATE: DONE SOLVING
( 108.304) LOOP: DONE GENERATING (program 489)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,A).
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
( 108.304) LOOP: START TESTING
( 108.306) LOOP: DONE TESTING ('none', 'none')
( 108.306) LOOP: START IMPOSING CONSTRAINTS
( 108.306) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 108.306) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 108.306) GENERATE: START GROUNDING (impose_constraints)
( 108.587) GENERATE: DONE GROUNDING (impose_constraints)
( 108.587) LOOP: DONE IMPOSING CONSTRAINTS
( 108.587) LOOP: START GENERATING (program 490)
( 108.587) GENERATE: START SOLVING
( 108.623) GENERATE: DONE SOLVING
( 108.634) LOOP: DONE GENERATING (program 490)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,A).
  f(A,B) :- tail(A,B),f(B,C),empty(C).
( 108.634) LOOP: START TESTING
( 108.635) LOOP: DONE TESTING ('none', 'none')
( 108.635) LOOP: START IMPOSING CONSTRAINTS
( 108.635) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 108.635) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 108.636) GENERATE: START GROUNDING (impose_constraints)
( 108.916) GENERATE: DONE GROUNDING (impose_constraints)
( 108.916) LOOP: DONE IMPOSING CONSTRAINTS
( 108.916) LOOP: START GENERATING (program 491)
( 108.916) GENERATE: START SOLVING
( 108.951) GENERATE: DONE SOLVING
( 108.965) LOOP: DONE GENERATING (program 491)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),empty(C).
  f(A,B) :- tail(A,B),f(B,C),tail(B,C).
( 108.965) LOOP: START TESTING
( 108.966) LOOP: DONE TESTING ('none', 'none')
( 108.966) LOOP: START IMPOSING CONSTRAINTS
( 108.966) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 108.966) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 108.967) GENERATE: START GROUNDING (impose_constraints)
( 109.251) GENERATE: DONE GROUNDING (impose_constraints)
( 109.251) LOOP: DONE IMPOSING CONSTRAINTS
( 109.251) LOOP: START GENERATING (program 492)
( 109.251) GENERATE: START SOLVING
( 109.288) GENERATE: DONE SOLVING
( 109.303) LOOP: DONE GENERATING (program 492)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),empty(C).
  f(A,B) :- tail(A,B),f(B,C),empty(C).
( 109.303) LOOP: START TESTING
( 109.304) LOOP: DONE TESTING ('none', 'none')
( 109.304) LOOP: START IMPOSING CONSTRAINTS
( 109.304) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 109.304) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 109.305) GENERATE: START GROUNDING (impose_constraints)
( 109.587) GENERATE: DONE GROUNDING (impose_constraints)
( 109.587) LOOP: DONE IMPOSING CONSTRAINTS
( 109.587) LOOP: START GENERATING (program 493)
( 109.587) GENERATE: START SOLVING
( 109.624) GENERATE: DONE SOLVING
( 109.639) LOOP: DONE GENERATING (program 493)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),empty(C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
( 109.639) LOOP: START TESTING
( 109.641) LOOP: DONE TESTING ('none', 'none')
( 109.641) LOOP: START IMPOSING CONSTRAINTS
( 109.641) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 109.641) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 109.641) GENERATE: START GROUNDING (impose_constraints)
( 109.925) GENERATE: DONE GROUNDING (impose_constraints)
( 109.925) LOOP: DONE IMPOSING CONSTRAINTS
( 109.925) LOOP: START GENERATING (program 494)
( 109.925) GENERATE: START SOLVING
( 109.962) GENERATE: DONE SOLVING
( 109.977) LOOP: DONE GENERATING (program 494)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),tail(C,A).
  f(A,B) :- tail(A,B),f(B,C),tail(C,B).
( 109.977) LOOP: START TESTING
( 109.979) LOOP: DONE TESTING ('none', 'none')
( 109.979) LOOP: START IMPOSING CONSTRAINTS
( 109.979) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 109.979) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 109.979) GENERATE: START GROUNDING (impose_constraints)
( 110.266) GENERATE: DONE GROUNDING (impose_constraints)
( 110.266) LOOP: DONE IMPOSING CONSTRAINTS
( 110.266) LOOP: START GENERATING (program 495)
( 110.266) GENERATE: START SOLVING
( 110.304) GENERATE: DONE SOLVING
( 110.362) LOOP: DONE GENERATING (program 495)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),f(B,C),tail(B,D),tail(D,C).
( 110.362) LOOP: START TESTING
( 110.364) LOOP: DONE TESTING ('none', 'none')
( 110.364) LOOP: START IMPOSING CONSTRAINTS
( 110.364) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 110.364) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 110.364) GENERATE: START GROUNDING (impose_constraints)
( 110.646) GENERATE: DONE GROUNDING (impose_constraints)
( 110.646) LOOP: DONE IMPOSING CONSTRAINTS
( 110.646) LOOP: START GENERATING (program 496)
( 110.646) GENERATE: START SOLVING
( 110.683) GENERATE: DONE SOLVING
( 110.802) LOOP: DONE GENERATING (program 496)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),f(B,C),tail(C,D),tail(D,B).
( 110.802) LOOP: START TESTING
( 110.804) LOOP: DONE TESTING ('none', 'none')
( 110.804) LOOP: START IMPOSING CONSTRAINTS
( 110.804) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 110.804) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 110.804) GENERATE: START GROUNDING (impose_constraints)
( 111.089) GENERATE: DONE GROUNDING (impose_constraints)
( 111.089) LOOP: DONE IMPOSING CONSTRAINTS
( 111.089) LOOP: START GENERATING (program 497)
( 111.089) GENERATE: START SOLVING
( 111.128) GENERATE: DONE SOLVING
( 113.569) LOOP: DONE GENERATING (program 497)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
  f(A,B) :- tail(A,C),tail(C,D),tail(D,B),f(B,A).
( 113.570) LOOP: START TESTING
( 113.571) LOOP: DONE TESTING ('none', 'none')
( 113.571) LOOP: START IMPOSING CONSTRAINTS
( 113.571) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 113.571) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 113.571) GENERATE: START GROUNDING (impose_constraints)
( 113.863) GENERATE: DONE GROUNDING (impose_constraints)
( 113.863) LOOP: DONE IMPOSING CONSTRAINTS
( 113.863) LOOP: START GENERATING (program 498)
( 113.863) GENERATE: START SOLVING
( 113.901) GENERATE: DONE SOLVING
( 118.775) LOOP: DONE GENERATING (program 498)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),tail(C,D).
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
( 118.775) LOOP: START TESTING
( 118.776) LOOP: DONE TESTING ('none', 'none')
( 118.776) LOOP: START IMPOSING CONSTRAINTS
( 118.776) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 118.776) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 118.776) GENERATE: START GROUNDING (impose_constraints)
( 119.064) GENERATE: DONE GROUNDING (impose_constraints)
( 119.064) LOOP: DONE IMPOSING CONSTRAINTS
( 119.064) LOOP: START GENERATING (program 499)
( 119.064) GENERATE: START SOLVING
( 119.103) GENERATE: DONE SOLVING
( 131.631) LOOP: DONE GENERATING (program 499)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,D).
( 131.631) LOOP: START TESTING
( 131.632) LOOP: DONE TESTING ('none', 'none')
( 131.632) LOOP: START IMPOSING CONSTRAINTS
( 131.632) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 131.632) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 131.632) GENERATE: START GROUNDING (impose_constraints)
( 131.927) GENERATE: DONE GROUNDING (impose_constraints)
( 131.927) LOOP: DONE IMPOSING CONSTRAINTS
( 131.927) LOOP: START GENERATING (program 500)
( 131.927) GENERATE: START SOLVING
( 131.965) GENERATE: DONE SOLVING
( 134.578) LOOP: DONE GENERATING (program 500)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,A).
( 134.579) LOOP: START TESTING
( 134.580) LOOP: DONE TESTING ('none', 'none')
( 134.580) LOOP: START IMPOSING CONSTRAINTS
( 134.580) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 134.580) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 134.580) GENERATE: START GROUNDING (impose_constraints)
( 134.877) GENERATE: DONE GROUNDING (impose_constraints)
( 134.877) LOOP: DONE IMPOSING CONSTRAINTS
( 134.877) LOOP: START GENERATING (program 501)
( 134.877) GENERATE: START SOLVING
( 134.914) GENERATE: DONE SOLVING
( 135.406) LOOP: DONE GENERATING (program 501)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,D).
( 135.406) LOOP: START TESTING
( 135.407) LOOP: DONE TESTING ('none', 'none')
( 135.407) LOOP: START IMPOSING CONSTRAINTS
( 135.407) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 135.407) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 135.408) GENERATE: START GROUNDING (impose_constraints)
( 135.700) GENERATE: DONE GROUNDING (impose_constraints)
( 135.700) LOOP: DONE IMPOSING CONSTRAINTS
( 135.700) LOOP: START GENERATING (program 502)
( 135.700) GENERATE: START SOLVING
( 135.738) GENERATE: DONE SOLVING
( 136.023) LOOP: DONE GENERATING (program 502)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),empty(D).
( 136.024) LOOP: START TESTING
( 136.025) LOOP: DONE TESTING ('none', 'none')
( 136.025) LOOP: START IMPOSING CONSTRAINTS
( 136.025) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 136.025) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V3,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 136.025) GENERATE: START GROUNDING (impose_constraints)
( 136.324) GENERATE: DONE GROUNDING (impose_constraints)
( 136.324) LOOP: DONE IMPOSING CONSTRAINTS
( 136.324) LOOP: START GENERATING (program 503)
( 136.324) GENERATE: START SOLVING
( 136.363) GENERATE: DONE SOLVING
( 136.682) LOOP: DONE GENERATING (program 503)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,A).
( 136.682) LOOP: START TESTING
( 136.683) LOOP: DONE TESTING ('none', 'none')
( 136.683) LOOP: START IMPOSING CONSTRAINTS
( 136.683) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 136.683) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 136.684) GENERATE: START GROUNDING (impose_constraints)
( 136.975) GENERATE: DONE GROUNDING (impose_constraints)
( 136.975) LOOP: DONE IMPOSING CONSTRAINTS
( 136.975) LOOP: START GENERATING (program 504)
( 136.975) GENERATE: START SOLVING
( 137.012) GENERATE: DONE SOLVING
( 137.051) LOOP: DONE GENERATING (program 504)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,D).
( 137.051) LOOP: START TESTING
( 137.053) LOOP: DONE TESTING ('none', 'none')
( 137.053) LOOP: START IMPOSING CONSTRAINTS
( 137.053) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 137.053) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 137.053) GENERATE: START GROUNDING (impose_constraints)
( 137.355) GENERATE: DONE GROUNDING (impose_constraints)
( 137.355) LOOP: DONE IMPOSING CONSTRAINTS
( 137.355) LOOP: START GENERATING (program 505)
( 137.355) GENERATE: START SOLVING
( 137.392) GENERATE: DONE SOLVING
( 137.446) LOOP: DONE GENERATING (program 505)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),empty(D).
( 137.446) LOOP: START TESTING
( 137.447) LOOP: DONE TESTING ('none', 'none')
( 137.447) LOOP: START IMPOSING CONSTRAINTS
( 137.447) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 137.447) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V3,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 137.447) GENERATE: START GROUNDING (impose_constraints)
( 137.736) GENERATE: DONE GROUNDING (impose_constraints)
( 137.736) LOOP: DONE IMPOSING CONSTRAINTS
( 137.736) LOOP: START GENERATING (program 506)
( 137.736) GENERATE: START SOLVING
( 137.774) GENERATE: DONE SOLVING
( 137.809) LOOP: DONE GENERATING (program 506)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,C).
( 137.809) LOOP: START TESTING
( 137.811) LOOP: DONE TESTING ('none', 'none')
( 137.811) LOOP: START IMPOSING CONSTRAINTS
( 137.811) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 137.811) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 137.811) GENERATE: START GROUNDING (impose_constraints)
( 138.103) GENERATE: DONE GROUNDING (impose_constraints)
( 138.103) LOOP: DONE IMPOSING CONSTRAINTS
( 138.103) LOOP: START GENERATING (program 507)
( 138.103) GENERATE: START SOLVING
( 138.140) GENERATE: DONE SOLVING
( 138.212) LOOP: DONE GENERATING (program 507)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,C).
( 138.212) LOOP: START TESTING
( 138.213) LOOP: DONE TESTING ('none', 'none')
( 138.213) LOOP: START IMPOSING CONSTRAINTS
( 138.213) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 138.213) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 138.214) GENERATE: START GROUNDING (impose_constraints)
( 138.533) GENERATE: DONE GROUNDING (impose_constraints)
( 138.533) LOOP: DONE IMPOSING CONSTRAINTS
( 138.533) LOOP: START GENERATING (program 508)
( 138.533) GENERATE: START SOLVING
( 138.574) GENERATE: DONE SOLVING
( 138.594) LOOP: DONE GENERATING (program 508)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,A).
( 138.594) LOOP: START TESTING
( 138.595) LOOP: DONE TESTING ('none', 'none')
( 138.595) LOOP: START IMPOSING CONSTRAINTS
( 138.595) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 138.595) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 138.595) GENERATE: START GROUNDING (impose_constraints)
( 138.909) GENERATE: DONE GROUNDING (impose_constraints)
( 138.909) LOOP: DONE IMPOSING CONSTRAINTS
( 138.909) LOOP: START GENERATING (program 509)
( 138.909) GENERATE: START SOLVING
( 138.949) GENERATE: DONE SOLVING
( 138.967) LOOP: DONE GENERATING (program 509)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,B).
( 138.967) LOOP: START TESTING
( 138.969) LOOP: DONE TESTING ('none', 'none')
( 138.969) LOOP: START IMPOSING CONSTRAINTS
( 138.969) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,empty,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 138.969) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 138.969) GENERATE: START GROUNDING (impose_constraints)
( 139.277) GENERATE: DONE GROUNDING (impose_constraints)
( 139.277) LOOP: DONE IMPOSING CONSTRAINTS
( 139.277) LOOP: START GENERATING (program 510)
( 139.277) GENERATE: START SOLVING
( 139.317) GENERATE: DONE SOLVING
( 139.328) LOOP: DONE GENERATING (program 510)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,B).
( 139.328) LOOP: START TESTING
( 139.330) LOOP: DONE TESTING ('none', 'none')
( 139.330) LOOP: START IMPOSING CONSTRAINTS
( 139.330) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 139.330) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 139.330) GENERATE: START GROUNDING (impose_constraints)
( 139.633) GENERATE: DONE GROUNDING (impose_constraints)
( 139.633) LOOP: DONE IMPOSING CONSTRAINTS
( 139.633) LOOP: START GENERATING (program 511)
( 139.633) GENERATE: START SOLVING
( 139.674) GENERATE: DONE SOLVING
( 139.704) LOOP: DONE GENERATING (program 511)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,C).
( 139.704) LOOP: START TESTING
( 139.706) LOOP: DONE TESTING ('none', 'none')
( 139.706) LOOP: START IMPOSING CONSTRAINTS
( 139.706) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 139.706) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 139.706) GENERATE: START GROUNDING (impose_constraints)
( 140.029) GENERATE: DONE GROUNDING (impose_constraints)
( 140.029) LOOP: DONE IMPOSING CONSTRAINTS
( 140.029) LOOP: START GENERATING (program 512)
( 140.029) GENERATE: START SOLVING
( 140.069) GENERATE: DONE SOLVING
( 140.158) LOOP: DONE GENERATING (program 512)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),empty(D).
( 140.158) LOOP: START TESTING
( 140.160) LOOP: DONE TESTING ('none', 'none')
( 140.160) LOOP: START IMPOSING CONSTRAINTS
( 140.160) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 140.160) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V3,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 140.160) GENERATE: START GROUNDING (impose_constraints)
( 140.474) GENERATE: DONE GROUNDING (impose_constraints)
( 140.474) LOOP: DONE IMPOSING CONSTRAINTS
( 140.474) LOOP: START GENERATING (program 513)
( 140.474) GENERATE: START SOLVING
( 140.516) GENERATE: DONE SOLVING
( 140.576) LOOP: DONE GENERATING (program 513)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
  f(A,B) :- tail(A,B),tail(B,C),f(C,D),tail(D,B).
( 140.577) LOOP: START TESTING
( 140.578) LOOP: DONE TESTING ('none', 'none')
( 140.578) LOOP: START IMPOSING CONSTRAINTS
( 140.578) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 140.578) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,f,2,(ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 140.578) GENERATE: START GROUNDING (impose_constraints)
( 140.892) GENERATE: DONE GROUNDING (impose_constraints)
( 140.892) LOOP: DONE IMPOSING CONSTRAINTS
( 140.892) LOOP: START GENERATING (program 514)
( 140.892) GENERATE: START SOLVING
( 140.934) GENERATE: DONE SOLVING
( 144.526) LOOP: DONE GENERATING (program 514)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,E),tail(E,D),tail(D,C),tail(C,B),f(B,A).
( 144.526) LOOP: START TESTING
( 144.527) LOOP: DONE TESTING ('none', 'none')
( 144.527) LOOP: START IMPOSING CONSTRAINTS
( 144.527) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 144.527) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 144.528) GENERATE: START GROUNDING (impose_constraints)
( 144.835) GENERATE: DONE GROUNDING (impose_constraints)
( 144.835) LOOP: DONE IMPOSING CONSTRAINTS
( 144.835) LOOP: START GENERATING (program 515)
( 144.835) GENERATE: START SOLVING
( 144.874) GENERATE: DONE SOLVING
( 151.207) LOOP: DONE GENERATING (program 515)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,E),tail(E,B).
( 151.207) LOOP: START TESTING
( 151.209) LOOP: DONE TESTING ('none', 'none')
( 151.209) LOOP: START IMPOSING CONSTRAINTS
( 151.209) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 151.209) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 151.209) GENERATE: START GROUNDING (impose_constraints)
( 151.515) GENERATE: DONE GROUNDING (impose_constraints)
( 151.515) LOOP: DONE IMPOSING CONSTRAINTS
( 151.515) LOOP: START GENERATING (program 516)
( 151.515) GENERATE: START SOLVING
( 151.556) GENERATE: DONE SOLVING
( 151.904) LOOP: DONE GENERATING (program 516)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,E),tail(E,C),tail(C,D),tail(D,B).
  f(A,B) :- tail(A,B),f(B,A).
( 151.904) LOOP: START TESTING
( 151.906) LOOP: DONE TESTING ('none', 'none')
( 151.906) LOOP: START IMPOSING CONSTRAINTS
( 151.906) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
( 151.906) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
( 151.906) GENERATE: START GROUNDING (impose_constraints)
( 152.221) GENERATE: DONE GROUNDING (impose_constraints)
( 152.221) LOOP: DONE IMPOSING CONSTRAINTS
( 152.221) LOOP: START GENERATING (program 517)
( 152.221) GENERATE: START SOLVING
( 152.262) GENERATE: DONE SOLVING
( 155.461) LOOP: DONE GENERATING (program 517)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- head(A,C),tail(A,D),head(D,C),tail(D,B),f(B,A).
( 155.461) LOOP: START TESTING
( 155.462) LOOP: DONE TESTING ('none', 'none')
( 155.462) LOOP: START IMPOSING CONSTRAINTS
( 155.462) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 155.462) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 155.463) GENERATE: START GROUNDING (impose_constraints)
( 155.770) GENERATE: DONE GROUNDING (impose_constraints)
( 155.770) LOOP: DONE IMPOSING CONSTRAINTS
( 155.770) LOOP: START GENERATING (program 518)
( 155.770) GENERATE: START SOLVING
( 155.810) GENERATE: DONE SOLVING
( 161.412) LOOP: DONE GENERATING (program 518)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- head(A,C),tail(A,D),f(D,A),head(D,C),tail(D,B).
( 161.412) LOOP: START TESTING
( 161.414) LOOP: DONE TESTING ('none', 'none')
( 161.414) LOOP: START IMPOSING CONSTRAINTS
( 161.414) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 161.414) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,f,2,(ClId1V3,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 161.414) GENERATE: START GROUNDING (impose_constraints)
( 161.726) GENERATE: DONE GROUNDING (impose_constraints)
( 161.726) LOOP: DONE IMPOSING CONSTRAINTS
( 161.726) LOOP: START GENERATING (program 519)
( 161.726) GENERATE: START SOLVING
( 161.768) GENERATE: DONE SOLVING
( 162.043) LOOP: DONE GENERATING (program 519)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
  f(A,B) :- head(A,C),tail(A,D),head(D,C),tail(D,B).
( 162.043) LOOP: START TESTING
( 162.045) LOOP: DONE TESTING ('none', 'none')
( 162.045) LOOP: START IMPOSING CONSTRAINTS
( 162.045) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 162.045) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 162.045) GENERATE: START GROUNDING (impose_constraints)
( 162.356) GENERATE: DONE GROUNDING (impose_constraints)
( 162.356) LOOP: DONE IMPOSING CONSTRAINTS
( 162.356) LOOP: START GENERATING (program 520)
( 162.356) GENERATE: START SOLVING
( 162.396) GENERATE: DONE SOLVING
( 163.117) LOOP: DONE GENERATING (program 520)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,A),head(D,C),tail(D,B),head(B,C).
( 163.117) LOOP: START TESTING
( 163.118) LOOP: DONE TESTING ('none', 'none')
( 163.118) LOOP: START IMPOSING CONSTRAINTS
( 163.118) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 163.118) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V3,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 163.119) GENERATE: START GROUNDING (impose_constraints)
( 163.436) GENERATE: DONE GROUNDING (impose_constraints)
( 163.436) LOOP: DONE IMPOSING CONSTRAINTS
( 163.436) LOOP: START GENERATING (program 521)
( 163.436) GENERATE: START SOLVING
( 163.481) GENERATE: DONE SOLVING
( 163.514) LOOP: DONE GENERATING (program 521)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),f(B,A),head(B,C),head(D,C).
( 163.515) LOOP: START TESTING
( 163.516) LOOP: DONE TESTING ('none', 'none')
( 163.516) LOOP: START IMPOSING CONSTRAINTS
( 163.516) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 163.516) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 163.516) GENERATE: START GROUNDING (impose_constraints)
( 163.826) GENERATE: DONE GROUNDING (impose_constraints)
( 163.826) LOOP: DONE IMPOSING CONSTRAINTS
( 163.826) LOOP: START GENERATING (program 522)
( 163.826) GENERATE: START SOLVING
( 163.867) GENERATE: DONE SOLVING
( 163.938) LOOP: DONE GENERATING (program 522)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
  f(A,B) :- tail(A,D),head(D,C),tail(D,B),head(B,C).
( 163.938) LOOP: START TESTING
( 163.939) LOOP: DONE TESTING ('none', 'none')
( 163.939) LOOP: START IMPOSING CONSTRAINTS
( 163.939) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 163.939) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 163.940) GENERATE: START GROUNDING (impose_constraints)
( 164.259) GENERATE: DONE GROUNDING (impose_constraints)
( 164.259) LOOP: DONE IMPOSING CONSTRAINTS
( 164.259) LOOP: START GENERATING (program 523)
( 164.259) GENERATE: START SOLVING
( 164.305) GENERATE: DONE SOLVING
( 172.658) LOOP: DONE GENERATING (program 523)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),tail(D,E),tail(E,C).
  f(A,B) :- tail(A,B),f(B,A).
( 172.658) LOOP: START TESTING
( 172.660) LOOP: DONE TESTING ('none', 'none')
( 172.660) LOOP: START IMPOSING CONSTRAINTS
( 172.660) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,not recursive.
( 172.660) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,not clause(2).
( 172.660) GENERATE: START GROUNDING (impose_constraints)
( 172.996) GENERATE: DONE GROUNDING (impose_constraints)
( 172.996) LOOP: DONE IMPOSING CONSTRAINTS
( 172.996) LOOP: START GENERATING (program 524)
( 172.996) GENERATE: START SOLVING
( 173.044) GENERATE: DONE SOLVING
( 178.608) LOOP: DONE GENERATING (program 524)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,A).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,C),tail(C,D),empty(D).
( 178.608) LOOP: START TESTING
( 178.609) LOOP: DONE TESTING ('none', 'none')
( 178.609) LOOP: START IMPOSING CONSTRAINTS
( 178.609) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 178.609) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V3,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 178.609) GENERATE: START GROUNDING (impose_constraints)
( 178.921) GENERATE: DONE GROUNDING (impose_constraints)
( 178.921) LOOP: DONE IMPOSING CONSTRAINTS
( 178.921) LOOP: START GENERATING (program 525)
( 178.921) GENERATE: START SOLVING
( 178.963) GENERATE: DONE SOLVING
( 187.175) LOOP: DONE GENERATING (program 525)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- head(A,C),tail(A,D),tail(D,B),head(B,C),f(B,D).
( 187.176) LOOP: START TESTING
( 187.177) LOOP: DONE TESTING ('none', 'none')
( 187.177) LOOP: START IMPOSING CONSTRAINTS
( 187.177) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 187.177) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 187.177) GENERATE: START GROUNDING (impose_constraints)
( 187.491) GENERATE: DONE GROUNDING (impose_constraints)
( 187.491) LOOP: DONE IMPOSING CONSTRAINTS
( 187.491) LOOP: START GENERATING (program 526)
( 187.491) GENERATE: START SOLVING
( 187.533) GENERATE: DONE SOLVING
( 195.295) LOOP: DONE GENERATING (program 526)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,A),tail(D,B),tail(B,C),tail(C,D).
( 195.295) LOOP: START TESTING
( 195.297) LOOP: DONE TESTING ('none', 'none')
( 195.297) LOOP: START IMPOSING CONSTRAINTS
( 195.297) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 195.297) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 195.297) GENERATE: START GROUNDING (impose_constraints)
( 195.613) GENERATE: DONE GROUNDING (impose_constraints)
( 195.613) LOOP: DONE IMPOSING CONSTRAINTS
( 195.613) LOOP: START GENERATING (program 527)
( 195.613) GENERATE: START SOLVING
( 195.655) GENERATE: DONE SOLVING
( 196.638) LOOP: DONE GENERATING (program 527)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- head(A,C),tail(A,D),f(D,A),tail(D,B),head(B,C).
( 196.639) LOOP: START TESTING
( 196.640) LOOP: DONE TESTING ('none', 'none')
( 196.640) LOOP: START IMPOSING CONSTRAINTS
( 196.640) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 196.640) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,f,2,(ClId1V3,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 196.640) GENERATE: START GROUNDING (impose_constraints)
( 196.954) GENERATE: DONE GROUNDING (impose_constraints)
( 196.954) LOOP: DONE IMPOSING CONSTRAINTS
( 196.954) LOOP: START GENERATING (program 528)
( 196.954) GENERATE: START SOLVING
( 196.995) GENERATE: DONE SOLVING
( 197.043) LOOP: DONE GENERATING (program 528)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,A),tail(D,B),tail(B,C),tail(C,A).
( 197.043) LOOP: START TESTING
( 197.044) LOOP: DONE TESTING ('none', 'none')
( 197.044) LOOP: START IMPOSING CONSTRAINTS
( 197.045) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 197.045) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 197.045) GENERATE: START GROUNDING (impose_constraints)
( 197.374) GENERATE: DONE GROUNDING (impose_constraints)
( 197.374) LOOP: DONE IMPOSING CONSTRAINTS
( 197.374) LOOP: START GENERATING (program 529)
( 197.374) GENERATE: START SOLVING
( 197.419) GENERATE: DONE SOLVING
( 197.459) LOOP: DONE GENERATING (program 529)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),f(D,A),tail(D,B),tail(B,C),empty(C).
( 197.459) LOOP: START TESTING
( 197.460) LOOP: DONE TESTING ('none', 'none')
( 197.460) LOOP: START IMPOSING CONSTRAINTS
( 197.460) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 197.460) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V3,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 197.460) GENERATE: START GROUNDING (impose_constraints)
( 197.777) GENERATE: DONE GROUNDING (impose_constraints)
( 197.777) LOOP: DONE IMPOSING CONSTRAINTS
( 197.777) LOOP: START GENERATING (program 530)
( 197.777) GENERATE: START SOLVING
( 197.819) GENERATE: DONE SOLVING
( 205.564) LOOP: DONE GENERATING (program 530)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),tail(C,D),f(B,D).
( 205.565) LOOP: START TESTING
( 205.566) LOOP: DONE TESTING ('none', 'none')
( 205.566) LOOP: START IMPOSING CONSTRAINTS
( 205.566) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 205.566) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 205.566) GENERATE: START GROUNDING (impose_constraints)
( 205.886) GENERATE: DONE GROUNDING (impose_constraints)
( 205.886) LOOP: DONE IMPOSING CONSTRAINTS
( 205.886) LOOP: START GENERATING (program 531)
( 205.886) GENERATE: START SOLVING
( 205.928) GENERATE: DONE SOLVING
( 232.517) LOOP: DONE GENERATING (program 531)
PROGRAM:
  f(A,B) :- tail(A,B),f(B,A).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),tail(D,C),tail(C,A).
( 232.517) LOOP: START TESTING
( 232.518) LOOP: DONE TESTING ('none', 'none')
( 232.518) LOOP: START IMPOSING CONSTRAINTS
( 232.518) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 232.518) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 232.519) GENERATE: START GROUNDING (impose_constraints)
( 232.842) GENERATE: DONE GROUNDING (impose_constraints)
( 232.842) LOOP: DONE IMPOSING CONSTRAINTS
( 232.842) LOOP: START GENERATING (program 532)
( 232.842) GENERATE: START SOLVING
( 232.885) GENERATE: DONE SOLVING
( 234.968) LOOP: DONE GENERATING (program 532)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),empty(C),f(B,D).
  f(A,B) :- tail(A,C),tail(C,B).
( 234.968) LOOP: START TESTING
( 234.970) LOOP: DONE TESTING ('none', 'none')
( 234.970) LOOP: START IMPOSING CONSTRAINTS
( 234.970) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
( 234.970) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 234.970) GENERATE: START GROUNDING (impose_constraints)
( 235.299) GENERATE: DONE GROUNDING (impose_constraints)
( 235.299) LOOP: DONE IMPOSING CONSTRAINTS
( 235.299) LOOP: START GENERATING (program 533)
( 235.299) GENERATE: START SOLVING
( 235.346) GENERATE: DONE SOLVING
( 237.838) LOOP: DONE GENERATING (program 533)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),tail(C,A),f(B,D).
  f(A,B) :- tail(A,C),tail(C,B).
( 237.838) LOOP: START TESTING
( 237.840) LOOP: DONE TESTING ('none', 'none')
( 237.840) LOOP: START IMPOSING CONSTRAINTS
( 237.840) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
( 237.840) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 237.840) GENERATE: START GROUNDING (impose_constraints)
( 238.170) GENERATE: DONE GROUNDING (impose_constraints)
( 238.170) LOOP: DONE IMPOSING CONSTRAINTS
( 238.170) LOOP: START GENERATING (program 534)
( 238.170) GENERATE: START SOLVING
( 238.214) GENERATE: DONE SOLVING
( 245.854) LOOP: DONE GENERATING (program 534)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),f(D,B).
  f(A,B) :- tail(A,B),tail(B,C),empty(C).
( 245.854) LOOP: START TESTING
( 245.855) LOOP: DONE TESTING ('none', 'none')
( 245.855) LOOP: START IMPOSING CONSTRAINTS
( 245.855) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
( 245.855) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V3,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 245.855) GENERATE: START GROUNDING (impose_constraints)
( 246.177) GENERATE: DONE GROUNDING (impose_constraints)
( 246.177) LOOP: DONE IMPOSING CONSTRAINTS
( 246.177) LOOP: START GENERATING (program 535)
( 246.177) GENERATE: START SOLVING
( 246.220) GENERATE: DONE SOLVING
( 247.981) LOOP: DONE GENERATING (program 535)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B).
  f(A,B) :- tail(A,D),tail(D,B),f(B,A),tail(B,C),tail(C,D).
( 247.981) LOOP: START TESTING
( 247.982) LOOP: DONE TESTING ('none', 'none')
( 247.982) LOOP: START IMPOSING CONSTRAINTS
( 247.982) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 247.982) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,f,2,(ClId1V1,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 247.983) GENERATE: START GROUNDING (impose_constraints)
( 248.316) GENERATE: DONE GROUNDING (impose_constraints)
( 248.316) LOOP: DONE IMPOSING CONSTRAINTS
( 248.316) LOOP: START GENERATING (program 536)
( 248.316) GENERATE: START SOLVING
( 248.363) GENERATE: DONE SOLVING
( 250.764) LOOP: DONE GENERATING (program 536)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
  f(A,B) :- head(A,C),tail(A,D),tail(D,B),head(B,C).
( 250.765) LOOP: START TESTING
( 250.766) LOOP: DONE TESTING ('none', 'none')
( 250.766) LOOP: START IMPOSING CONSTRAINTS
( 250.766) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 250.766) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 250.766) GENERATE: START GROUNDING (impose_constraints)
( 251.091) GENERATE: DONE GROUNDING (impose_constraints)
( 251.091) LOOP: DONE IMPOSING CONSTRAINTS
( 251.091) LOOP: START GENERATING (program 537)
( 251.091) GENERATE: START SOLVING
( 251.134) GENERATE: DONE SOLVING
( 251.402) LOOP: DONE GENERATING (program 537)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
  f(A,B) :- tail(A,C),tail(C,B),tail(B,D),tail(D,A).
( 251.402) LOOP: START TESTING
( 251.404) LOOP: DONE TESTING ('none', 'none')
( 251.404) LOOP: START IMPOSING CONSTRAINTS
( 251.404) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 251.404) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 251.404) GENERATE: START GROUNDING (impose_constraints)
( 251.726) GENERATE: DONE GROUNDING (impose_constraints)
( 251.726) LOOP: DONE IMPOSING CONSTRAINTS
( 251.726) LOOP: START GENERATING (program 538)
( 251.726) GENERATE: START SOLVING
( 251.782) GENERATE: DONE SOLVING
( 252.940) LOOP: DONE GENERATING (program 538)
PROGRAM:
  f(A,B) :- head(A,C),tail(A,D),tail(D,B),f(B,A),head(B,C).
  f(A,B) :- tail(A,C),tail(C,B).
( 252.940) LOOP: START TESTING
( 252.941) LOOP: DONE TESTING ('none', 'none')
( 252.941) LOOP: START IMPOSING CONSTRAINTS
( 252.941) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
( 252.941) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,head,2,(ClId0V0,ClId0V2)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,head,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 252.941) GENERATE: START GROUNDING (impose_constraints)
( 253.263) GENERATE: DONE GROUNDING (impose_constraints)
( 253.263) LOOP: DONE IMPOSING CONSTRAINTS
( 253.263) LOOP: START GENERATING (program 539)
( 253.263) GENERATE: START SOLVING
( 253.306) GENERATE: DONE SOLVING
( 253.328) LOOP: DONE GENERATING (program 539)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),f(B,A),tail(B,C),tail(C,A).
  f(A,B) :- tail(A,C),tail(C,B).
( 253.328) LOOP: START TESTING
( 253.330) LOOP: DONE TESTING ('none', 'none')
( 253.330) LOOP: START IMPOSING CONSTRAINTS
( 253.330) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
( 253.330) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 253.330) GENERATE: START GROUNDING (impose_constraints)
( 253.665) GENERATE: DONE GROUNDING (impose_constraints)
( 253.665) LOOP: DONE IMPOSING CONSTRAINTS
( 253.665) LOOP: START GENERATING (program 540)
( 253.665) GENERATE: START SOLVING
( 253.709) GENERATE: DONE SOLVING
( 253.761) LOOP: DONE GENERATING (program 540)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),f(B,A),tail(B,C),empty(C).
  f(A,B) :- tail(A,C),tail(C,B).
( 253.761) LOOP: START TESTING
( 253.763) LOOP: DONE TESTING ('none', 'none')
( 253.763) LOOP: START IMPOSING CONSTRAINTS
( 253.763) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
( 253.763) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,empty,1,(ClId0V2,)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 253.763) GENERATE: START GROUNDING (impose_constraints)
( 254.099) GENERATE: DONE GROUNDING (impose_constraints)
( 254.099) LOOP: DONE IMPOSING CONSTRAINTS
( 254.099) LOOP: START GENERATING (program 541)
( 254.099) GENERATE: START SOLVING
( 254.144) GENERATE: DONE SOLVING
( 254.287) LOOP: DONE GENERATING (program 541)
PROGRAM:
  f(A,B) :- tail(A,C),tail(C,B),f(B,A).
  f(A,B) :- tail(A,C),tail(C,B),tail(B,D),empty(D).
( 254.287) LOOP: START TESTING
( 254.288) LOOP: DONE TESTING ('none', 'none')
( 254.288) LOOP: START IMPOSING CONSTRAINTS
( 254.288) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 254.288) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V1,ClId0V0)),body_literal(ClId0,tail,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,empty,1,(ClId1V3,)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 254.288) GENERATE: START GROUNDING (impose_constraints)
( 254.627) GENERATE: DONE GROUNDING (impose_constraints)
( 254.627) LOOP: DONE IMPOSING CONSTRAINTS
( 254.627) LOOP: START GENERATING (program 542)
( 254.627) GENERATE: START SOLVING
( 254.671) GENERATE: DONE SOLVING
( 290.704) LOOP: NO MORE PROGRAMS (with 9 literals)
( 290.704) GENERATE: START SETTING PROGRAM SIZE (10)
( 290.787) GENERATE: START GROUNDING (set_program_size)
( 290.789) GENERATE: DONE GROUNDING (set_program_size)
( 290.789) GENERATE: DONE SETTING PROGRAM SIZE
( 290.789) LOOP: START GENERATING (program 542)
( 290.789) GENERATE: START SOLVING
( 290.903) GENERATE: DONE SOLVING
( 291.372) LOOP: DONE GENERATING (program 542)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,E),tail(E,C),f(C,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,E),tail(E,B).
( 291.372) LOOP: START TESTING
( 291.374) LOOP: DONE TESTING ('none', 'none')
( 291.374) LOOP: START IMPOSING CONSTRAINTS
( 291.374) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 291.374) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 291.374) GENERATE: START GROUNDING (impose_constraints)
( 291.703) GENERATE: DONE GROUNDING (impose_constraints)
( 291.703) LOOP: DONE IMPOSING CONSTRAINTS
( 291.703) LOOP: START GENERATING (program 543)
( 291.703) GENERATE: START SOLVING
( 291.751) GENERATE: DONE SOLVING
( 291.809) LOOP: DONE GENERATING (program 543)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,E),tail(E,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
( 291.809) LOOP: START TESTING
( 291.810) LOOP: DONE TESTING ('none', 'none')
( 291.810) LOOP: START IMPOSING CONSTRAINTS
( 291.810) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 291.810) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 291.811) GENERATE: START GROUNDING (impose_constraints)
( 292.135) GENERATE: DONE GROUNDING (impose_constraints)
( 292.135) LOOP: DONE IMPOSING CONSTRAINTS
( 292.135) LOOP: START GENERATING (program 544)
( 292.135) GENERATE: START SOLVING
( 292.181) GENERATE: DONE SOLVING
( 292.321) LOOP: DONE GENERATING (program 544)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,E),tail(E,C),f(C,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
( 292.321) LOOP: START TESTING
( 292.322) LOOP: DONE TESTING ('none', 'none')
( 292.322) LOOP: START IMPOSING CONSTRAINTS
( 292.323) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 292.323) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 292.323) GENERATE: START GROUNDING (impose_constraints)
( 292.648) GENERATE: DONE GROUNDING (impose_constraints)
( 292.648) LOOP: DONE IMPOSING CONSTRAINTS
( 292.648) LOOP: START GENERATING (program 545)
( 292.648) GENERATE: START SOLVING
( 292.692) GENERATE: DONE SOLVING
( 292.815) LOOP: DONE GENERATING (program 545)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,B).
( 292.815) LOOP: START TESTING
( 292.817) LOOP: DONE TESTING ('none', 'none')
( 292.817) LOOP: START IMPOSING CONSTRAINTS
( 292.817) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 292.817) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 292.817) GENERATE: START GROUNDING (impose_constraints)
( 293.143) GENERATE: DONE GROUNDING (impose_constraints)
( 293.143) LOOP: DONE IMPOSING CONSTRAINTS
( 293.143) LOOP: START GENERATING (program 546)
( 293.143) GENERATE: START SOLVING
( 293.188) GENERATE: DONE SOLVING
( 293.349) LOOP: DONE GENERATING (program 546)
PROGRAM:
  f(A,B) :- tail(A,D),tail(D,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,E),tail(E,B).
( 293.350) LOOP: START TESTING
( 293.351) LOOP: DONE TESTING ('none', 'none')
( 293.351) LOOP: START IMPOSING CONSTRAINTS
( 293.351) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 293.351) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V3)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 293.351) GENERATE: START GROUNDING (impose_constraints)
( 293.688) GENERATE: DONE GROUNDING (impose_constraints)
( 293.688) LOOP: DONE IMPOSING CONSTRAINTS
( 293.688) LOOP: START GENERATING (program 547)
( 293.688) GENERATE: START SOLVING
( 293.735) GENERATE: DONE SOLVING
( 293.849) LOOP: DONE GENERATING (program 547)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,D),tail(D,C),tail(C,E),tail(E,B).
( 293.849) LOOP: START TESTING
( 293.851) LOOP: DONE TESTING ('none', 'none')
( 293.851) LOOP: START IMPOSING CONSTRAINTS
( 293.851) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 293.851) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 293.851) GENERATE: START GROUNDING (impose_constraints)
( 294.190) GENERATE: DONE GROUNDING (impose_constraints)
( 294.190) LOOP: DONE IMPOSING CONSTRAINTS
( 294.190) LOOP: START GENERATING (program 548)
( 294.190) GENERATE: START SOLVING
( 294.236) GENERATE: DONE SOLVING
( 294.856) LOOP: DONE GENERATING (program 548)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,C),tail(C,D),tail(D,A).
( 294.857) LOOP: START TESTING
( 294.858) LOOP: DONE TESTING ('none', 'none')
( 294.858) LOOP: START IMPOSING CONSTRAINTS
( 294.858) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 294.858) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 294.859) GENERATE: START GROUNDING (impose_constraints)
( 295.196) GENERATE: DONE GROUNDING (impose_constraints)
( 295.196) LOOP: DONE IMPOSING CONSTRAINTS
( 295.196) LOOP: START GENERATING (program 549)
( 295.196) GENERATE: START SOLVING
( 295.242) GENERATE: DONE SOLVING
( 295.589) LOOP: DONE GENERATING (program 549)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),head(D,E),head(A,E).
( 295.590) LOOP: START TESTING
( 295.591) LOOP: DONE TESTING ('none', 'none')
( 295.591) LOOP: START IMPOSING CONSTRAINTS
( 295.591) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),body_literal(ClId1,head,2,(ClId1V0,ClId1V4)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 295.591) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 295.591) GENERATE: START GROUNDING (impose_constraints)
( 295.925) GENERATE: DONE GROUNDING (impose_constraints)
( 295.925) LOOP: DONE IMPOSING CONSTRAINTS
( 295.925) LOOP: START GENERATING (program 550)
( 295.925) GENERATE: START SOLVING
( 295.973) GENERATE: DONE SOLVING
( 296.114) LOOP: DONE GENERATING (program 550)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,C),tail(C,D),empty(D).
( 296.114) LOOP: START TESTING
( 296.116) LOOP: DONE TESTING ('none', 'none')
( 296.116) LOOP: START IMPOSING CONSTRAINTS
( 296.116) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 296.116) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V3,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 296.116) GENERATE: START GROUNDING (impose_constraints)
( 296.449) GENERATE: DONE GROUNDING (impose_constraints)
( 296.449) LOOP: DONE IMPOSING CONSTRAINTS
( 296.449) LOOP: START GENERATING (program 551)
( 296.449) GENERATE: START SOLVING
( 296.496) GENERATE: DONE SOLVING
( 296.536) LOOP: DONE GENERATING (program 551)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,C),tail(C,D),tail(D,E).
( 296.536) LOOP: START TESTING
( 296.538) LOOP: DONE TESTING ('none', 'none')
( 296.538) LOOP: START IMPOSING CONSTRAINTS
( 296.538) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 296.538) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 296.538) GENERATE: START GROUNDING (impose_constraints)
( 296.884) GENERATE: DONE GROUNDING (impose_constraints)
( 296.884) LOOP: DONE IMPOSING CONSTRAINTS
( 296.884) LOOP: START GENERATING (program 552)
( 296.884) GENERATE: START SOLVING
( 296.931) GENERATE: DONE SOLVING
( 296.961) LOOP: DONE GENERATING (program 552)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),tail(D,A).
( 296.962) LOOP: START TESTING
( 296.963) LOOP: DONE TESTING ('none', 'none')
( 296.963) LOOP: START IMPOSING CONSTRAINTS
( 296.963) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 296.963) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V0)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 296.963) GENERATE: START GROUNDING (impose_constraints)
( 297.305) GENERATE: DONE GROUNDING (impose_constraints)
( 297.305) LOOP: DONE IMPOSING CONSTRAINTS
( 297.305) LOOP: START GENERATING (program 553)
( 297.305) GENERATE: START SOLVING
( 297.353) GENERATE: DONE SOLVING
( 297.384) LOOP: DONE GENERATING (program 553)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),empty(D).
( 297.384) LOOP: START TESTING
( 297.386) LOOP: DONE TESTING ('none', 'none')
( 297.386) LOOP: START IMPOSING CONSTRAINTS
( 297.386) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,empty,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 297.386) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,empty,1,(ClId1V3,)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 297.386) GENERATE: START GROUNDING (impose_constraints)
( 297.730) GENERATE: DONE GROUNDING (impose_constraints)
( 297.730) LOOP: DONE IMPOSING CONSTRAINTS
( 297.730) LOOP: START GENERATING (program 554)
( 297.730) GENERATE: START SOLVING
( 297.777) GENERATE: DONE SOLVING
( 297.797) LOOP: DONE GENERATING (program 554)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,E),tail(E,C),tail(C,D),tail(D,B).
( 297.797) LOOP: START TESTING
( 297.799) LOOP: DONE TESTING ('none', 'none')
( 297.799) LOOP: START IMPOSING CONSTRAINTS
( 297.799) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 297.799) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V4,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 297.799) GENERATE: START GROUNDING (impose_constraints)
( 298.141) GENERATE: DONE GROUNDING (impose_constraints)
( 298.141) LOOP: DONE IMPOSING CONSTRAINTS
( 298.141) LOOP: START GENERATING (program 555)
( 298.141) GENERATE: START SOLVING
( 298.188) GENERATE: DONE SOLVING
( 298.220) LOOP: DONE GENERATING (program 555)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,D),tail(D,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),tail(D,B).
( 298.220) LOOP: START TESTING
( 298.222) LOOP: DONE TESTING ('none', 'none')
( 298.222) LOOP: START IMPOSING CONSTRAINTS
( 298.222) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 298.222) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 298.222) GENERATE: START GROUNDING (impose_constraints)
( 298.563) GENERATE: DONE GROUNDING (impose_constraints)
( 298.563) LOOP: DONE IMPOSING CONSTRAINTS
( 298.563) LOOP: START GENERATING (program 556)
( 298.563) GENERATE: START SOLVING
( 298.611) GENERATE: DONE SOLVING
( 298.629) LOOP: DONE GENERATING (program 556)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),head(C,E),head(D,E).
( 298.629) LOOP: START TESTING
( 298.631) LOOP: DONE TESTING ('none', 'none')
( 298.631) LOOP: START IMPOSING CONSTRAINTS
( 298.631) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,head,2,(ClId1V2,ClId1V4)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 298.631) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V2,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 298.631) GENERATE: START GROUNDING (impose_constraints)
( 298.977) GENERATE: DONE GROUNDING (impose_constraints)
( 298.977) LOOP: DONE IMPOSING CONSTRAINTS
( 298.977) LOOP: START GENERATING (program 557)
( 298.977) GENERATE: START SOLVING
( 299.023) GENERATE: DONE SOLVING
( 299.045) LOOP: DONE GENERATING (program 557)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,C),f(C,B).
  f(A,B) :- tail(A,B),tail(B,C),tail(C,D),head(D,E),head(B,E).
( 299.046) LOOP: START TESTING
( 299.047) LOOP: DONE TESTING ('none', 'none')
( 299.047) LOOP: START IMPOSING CONSTRAINTS
( 299.047) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),body_literal(ClId1,head,2,(ClId1V1,ClId1V4)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not recursive.
( 299.047) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V2)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,tail,2,(ClId1V2,ClId1V3)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V3,ClId1V4)),body_literal(ClId1,tail,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V1,ClId1V4)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,ClId1V4!=ClId1V0,ClId1V4!=ClId1V1,ClId1V4!=ClId1V2,ClId1V4!=ClId1V3,not clause(2).
( 299.047) GENERATE: START GROUNDING (impose_constraints)
( 299.397) GENERATE: DONE GROUNDING (impose_constraints)
( 299.397) LOOP: DONE IMPOSING CONSTRAINTS
( 299.397) LOOP: START GENERATING (program 558)
( 299.397) GENERATE: START SOLVING
( 299.445) GENERATE: DONE SOLVING
( 299.732) LOOP: DONE GENERATING (program 558)
PROGRAM:
  f(A,B) :- tail(A,B),tail(B,E),tail(E,D),tail(D,C),f(C,B).
  f(A,B) :- head(A,C),tail(A,B),head(B,C).
( 299.732) LOOP: START TESTING
( 299.734) LOOP: DONE TESTING ('none', 'none')
( 299.734) LOOP: START IMPOSING CONSTRAINTS
( 299.734) LOOP: CONSTRAINT:
  :-head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
( 299.734) LOOP: CONSTRAINT:
  :-head_literal(ClId0,f,2,(ClId0V0,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V4,ClId0V3)),body_literal(ClId0,tail,2,(ClId0V1,ClId0V4)),body_literal(ClId0,tail,2,(ClId0V3,ClId0V2)),body_literal(ClId0,f,2,(ClId0V2,ClId0V1)),body_literal(ClId0,tail,2,(ClId0V0,ClId0V1)),head_literal(ClId1,f,2,(ClId1V0,ClId1V1)),body_literal(ClId1,head,2,(ClId1V1,ClId1V2)),body_literal(ClId1,head,2,(ClId1V0,ClId1V2)),body_literal(ClId1,tail,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId0V4!=ClId0V0,ClId0V4!=ClId0V1,ClId0V4!=ClId0V2,ClId0V4!=ClId0V3,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 299.734) GENERATE: START GROUNDING (impose_constraints)
( 300.086) GENERATE: DONE GROUNDING (impose_constraints)
( 300.086) LOOP: DONE IMPOSING CONSTRAINTS
( 300.086) LOOP: START GENERATING (program 559)
( 300.086) GENERATE: START SOLVING
( 300.133) GENERATE: DONE SOLVING
