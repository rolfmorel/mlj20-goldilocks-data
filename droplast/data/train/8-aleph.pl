:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,5000).

%% :- modeh(*,f(+list,-element)).
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+int)).
:- modeb(*,zero(-int)).
:- modeb(*,decrement(+int,-int)).
%% :- modeb(*,increment(+int,-int)).
%% :- modeb(*,element(+list,-element)).
%% :- modeb(*,cons(+element,+list,-list)).
:- modeh(*,f(+list,-list)).
:- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,increment/2).
:- determination(f/2,element/2).
:- determination(f/2,cons/3).
:-begin_bg.
%% SAME AS POPPER
body_pred(head/2).
body_pred(tail/2).
body_pred(geq/2).
body_pred(empty/1).
body_pred(even/1).
body_pred(odd/1).
body_pred(one/1).
body_pred(zero/1).
body_pred(decrement/2).

%% FOR METAGOL
body_pred(P/A):-
    current_predicate(modeb/2),
    modeb(P,A).

%% body_pred(P/A)

is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.


%% partition(Pivot,L1,Left,Right)


add_count(f(A),N-f(A)):-
    length(A,N).
add_count(f(A,B),N-f(A,B)):-
    length(A,N).
remove_k(_-V,V).

sort_examples(L1,L2):-
  maplist(add_count,L1,L3),
  keysort(L3,L4),
  maplist(remove_k,L4,L2).

run:-
    findall(A, pos(A), Pos0),
    findall(A, neg(A), Neg0),
    sort_examples(Pos0, Pos),
    sort_examples(Neg0, Neg),
    learn(Pos, Neg).



%% run:-
%%     findall(A, pos(A), Pos),
%%     findall(A, neg(A), Neg),
%%     learn(Pos, Neg).

test:-
    forall(pos(A),test_pos(A)),
    forall(neg(A),test_neg(A)),
    halt.

target(P/A):-
    pos(Atom),!,
    functor(Atom,P,A).

target_exists:-
    target(P/A),
    current_predicate(P/A).

test_pos(A):-
    target_exists,
    call(A),!,
    writeln('acc,1').
test_pos(_):-
    writeln('acc,0').

test_neg(A):-
    target_exists,
    call(A),!,
    writeln('acc,0').
test_neg(_):-
    writeln('acc,1').

:-end_bg.
:-begin_in_pos.
f([72, 37, 76, 11, 94, 9, 50, 31, 2, 68, 77, 99, 25, 44, 66, 37, 100, 53, 55, 26, 48, 101, 10, 49, 93, 40, 55, 70, 1, 87, 33, 80, 57, 60, 84, 46, 94, 53, 12, 5, 84, 71, 52, 86, 4, 11, 18],[72, 37, 76, 11, 94, 9, 50, 31, 2, 68, 77, 99, 25, 44, 66, 37, 100, 53, 55, 26, 48, 101, 10, 49, 93, 40, 55, 70, 1, 87, 33, 80, 57, 60, 84, 46, 94, 53, 12, 5, 84, 71, 52, 86, 4, 11]).
f([58, 71, 71, 21, 51, 55, 28, 55, 79, 64, 91, 86, 62, 40, 38, 64, 99, 46, 24, 99, 24, 16, 44, 66, 53, 94, 83, 68, 94, 9],[58, 71, 71, 21, 51, 55, 28, 55, 79, 64, 91, 86, 62, 40, 38, 64, 99, 46, 24, 99, 24, 16, 44, 66, 53, 94, 83, 68, 94]).
f([15, 68, 60, 55, 8, 58, 7, 2, 31, 44, 51, 32, 8, 62, 75, 14, 76, 46, 3, 20, 76, 25, 20],[15, 68, 60, 55, 8, 58, 7, 2, 31, 44, 51, 32, 8, 62, 75, 14, 76, 46, 3, 20, 76, 25]).
f([71, 42, 37, 76, 20, 29, 85, 81, 15, 33, 46, 15, 26, 93, 85, 52, 18, 98, 90, 69, 62, 55, 34],[71, 42, 37, 76, 20, 29, 85, 81, 15, 33, 46, 15, 26, 93, 85, 52, 18, 98, 90, 69, 62, 55]).
f([90, 83, 94, 58, 14, 38, 28, 96, 25, 58, 86, 8, 77, 27, 36, 63, 57, 23, 55, 65, 1, 61, 53, 31, 55, 39, 22, 90, 52, 90, 81, 39, 7, 70, 38, 51, 97, 51, 19, 44, 39],[90, 83, 94, 58, 14, 38, 28, 96, 25, 58, 86, 8, 77, 27, 36, 63, 57, 23, 55, 65, 1, 61, 53, 31, 55, 39, 22, 90, 52, 90, 81, 39, 7, 70, 38, 51, 97, 51, 19, 44]).
f([64, 86, 41, 89, 95, 27, 97, 40, 1, 85, 80, 1, 42, 8, 72, 8, 35, 50, 55, 23, 33, 16, 48],[64, 86, 41, 89, 95, 27, 97, 40, 1, 85, 80, 1, 42, 8, 72, 8, 35, 50, 55, 23, 33, 16]).
f([68, 56, 1, 65, 3, 44, 90, 44, 65, 64, 74, 94, 82, 81, 58, 40, 45, 42, 54, 44, 27, 86, 95, 13, 81, 56, 83, 35, 73, 74, 23, 76, 46, 98],[68, 56, 1, 65, 3, 44, 90, 44, 65, 64, 74, 94, 82, 81, 58, 40, 45, 42, 54, 44, 27, 86, 95, 13, 81, 56, 83, 35, 73, 74, 23, 76, 46]).
f([48, 17, 65, 33, 83, 77, 81, 15, 75, 26, 23, 11, 6, 64, 55, 37, 95, 30, 58, 100, 90, 99, 33, 44, 37, 57, 52, 41, 34, 71, 89, 69, 90, 90, 57],[48, 17, 65, 33, 83, 77, 81, 15, 75, 26, 23, 11, 6, 64, 55, 37, 95, 30, 58, 100, 90, 99, 33, 44, 37, 57, 52, 41, 34, 71, 89, 69, 90, 90]).
f([31, 80, 48, 27, 31, 59, 88, 23, 63, 82, 31, 74, 59, 1, 90, 24, 38, 58, 12, 91, 88, 80, 18, 96, 64, 26, 8, 62, 100, 1, 70, 50, 47, 6, 61, 16, 86, 40, 3, 80, 68, 13, 86, 70, 22, 14, 59, 84, 37, 85, 70],[31, 80, 48, 27, 31, 59, 88, 23, 63, 82, 31, 74, 59, 1, 90, 24, 38, 58, 12, 91, 88, 80, 18, 96, 64, 26, 8, 62, 100, 1, 70, 50, 47, 6, 61, 16, 86, 40, 3, 80, 68, 13, 86, 70, 22, 14, 59, 84, 37, 85]).
f([31, 5, 35, 101, 94, 47, 38, 23, 81, 9, 60, 23, 28, 72, 85, 25, 42, 27, 96, 64, 99, 43, 31, 21, 33, 101],[31, 5, 35, 101, 94, 47, 38, 23, 81, 9, 60, 23, 28, 72, 85, 25, 42, 27, 96, 64, 99, 43, 31, 21, 33]).
:-end_in_pos.
:-begin_in_neg.
f([68, 5, 46, 8, 36, 80, 94, 4, 43, 7, 20, 83, 71, 100, 82, 15, 94, 13, 99, 76, 42, 27, 88, 93, 84, 15, 11, 59, 25, 94, 33, 28, 44, 35, 29, 33, 61, 81, 54, 76, 26, 72, 38, 85, 47, 25],[68, 5, 46, 8, 36, 80, 94, 4, 43, 7, 20, 83, 71, 100, 82, 15, 94, 13, 99, 76, 42, 27, 88, 93, 84, 15, 11, 59, 25, 94, 33, 28, 44, 35, 29, 33, 61, 81, 54, 76, 26, 72, 38, 85, 47, 25]).
f([92, 20, 47, 41],[92, 20, 47, 41]).
f([9, 92, 58, 74, 29, 30, 101],[9, 92, 58, 74, 29, 30, 101]).
f([61, 3, 6, 90, 81, 8, 25, 34, 77, 58, 24, 19, 5, 12, 74, 51, 73, 5, 10, 44, 26, 59, 47, 8, 78, 31, 6, 55],[61, 3, 6, 90, 81, 8, 25, 34, 77, 58, 24, 19, 5, 12, 74, 51, 73, 5, 10, 44, 26, 59, 47, 8, 78, 31, 6, 55]).
f([74, 98, 22, 64, 22, 34, 100, 29, 2, 97, 9, 48],[74, 98, 22, 64, 22, 34, 100, 29, 2, 97, 9, 48]).
f([39, 44, 37, 47, 88, 46, 3, 2, 29, 97, 91, 33, 64, 100, 66, 34, 72],[39, 44, 37, 47, 88, 46, 3, 2, 29, 97, 91, 33, 64, 100, 66, 34, 72]).
f([65, 3, 15, 52, 29, 100, 86, 94, 18, 100, 17, 57, 72, 73, 26, 8, 87, 70, 77, 38, 85, 56, 69, 42, 17, 95, 33, 65, 85, 93, 79, 53, 36, 56, 57],[65, 3, 15, 52, 29, 100, 86, 94, 18, 100, 17, 57, 72, 73, 26, 8, 87, 70, 77, 38, 85, 56, 69, 42, 17, 95, 33, 65, 85, 93, 79, 53, 36, 56, 57]).
f([6, 41, 56, 79, 50, 20, 31, 7, 81, 83, 17, 96, 95, 94, 11, 5, 83, 70, 52, 70, 34, 31, 45, 31, 84, 29, 15, 16, 45, 90, 2, 63, 95, 50, 18, 46, 30, 75, 65, 30, 7],[6, 41, 56, 79, 50, 20, 31, 7, 81, 83, 17, 96, 95, 94, 11, 5, 83, 70, 52, 70, 34, 31, 45, 31, 84, 29, 15, 16, 45, 90, 2, 63, 95, 50, 18, 46, 30, 75, 65, 30, 7]).
f([50, 100, 30, 44, 90, 73, 23, 58, 31, 18, 18],[50, 100, 30, 44, 90, 73, 23, 58, 31, 18, 18]).
f([77, 64, 94, 57, 7, 11, 11, 20, 10, 39, 46, 89, 14, 97, 36, 34, 32, 67, 26, 60, 86, 90, 96, 28, 19, 15, 10, 75, 28, 33, 18, 100, 90, 94],[77, 64, 94, 57, 7, 11, 11, 20, 10, 39, 46, 89, 14, 97, 36, 34, 32, 67, 26, 60, 86, 90, 96, 28, 19, 15, 10, 75, 28, 33, 18, 100, 90, 94]).
:-end_in_neg.
