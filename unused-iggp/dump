<block>:54:5-12: info: atom does not occur in any rule head:
  size(N)

<block>:175:18-37: info: atom does not occur in any rule head:
  direction(P,Pos,in)

<block>:182:5-24: info: atom does not occur in any rule head:
  direction(P,Pos,in)

<block>:202:5-24: info: atom does not occur in any rule head:
  direction(P,Pos,in)

<block>:211:5-25: info: atom does not occur in any rule head:
  direction(P,Pos1,in)

<block>:212:5-25: info: atom does not occur in any rule head:
  direction(P,Pos2,in)

<block>:226:5-21: info: atom does not occur in any rule head:
  irreflexive(P,2)

<block>:233:5-20: info: atom does not occur in any rule head:
  functional(P,2)

<block>:239:5-20: info: atom does not occur in any rule head:
  functional(P,3)

<block>:240:5-22: info: atom does not occur in any rule head:
  direction(P,0,in)

<block>:241:5-22: info: atom does not occur in any rule head:
  direction(P,1,in)

<block>:287:5-25: info: atom does not occur in any rule head:
  direction(P,Pos1,in)

<block>:290:5-25: info: atom does not occur in any rule head:
  direction(P,Pos2,in)

<block>:300:5-29: info: atom does not occur in any rule head:
  direction(P,HeadPos1,in)

<block>:301:5-29: info: atom does not occur in any rule head:
  direction(P,HeadPos2,in)

<block>:307:5-29: info: atom does not occur in any rule head:
  direction(P,BodyPos1,in)

<block>:308:5-29: info: atom does not occur in any rule head:
  direction(P,BodyPos2,in)

(   0.321) GENERATE: START SETTING PROGRAM SIZE (1)
(   0.321) GENERATE: START GROUNDING (set_program_size)
(   0.322) GENERATE: DONE GROUNDING (set_program_size)
(   0.322) GENERATE: DONE SETTING PROGRAM SIZE
(   0.322) LOOP: START GENERATING (program 1)
(   0.322) GENERATE: START SOLVING
(   0.329) GENERATE: DONE SOLVING
(   0.329) LOOP: NO MORE PROGRAMS (with 1 literals)
(   0.329) GENERATE: START SETTING PROGRAM SIZE (2)
(   0.329) GENERATE: START GROUNDING (set_program_size)
(   0.330) GENERATE: DONE GROUNDING (set_program_size)
(   0.330) GENERATE: DONE SETTING PROGRAM SIZE
(   0.330) LOOP: START GENERATING (program 1)
(   0.330) GENERATE: START SOLVING
(   0.331) GENERATE: DONE SOLVING
(   0.331) LOOP: DONE GENERATING (program 1)
PROGRAM:
  next_value(A,B) :- my_true_value(A,B).
(   0.331) LOOP: START TESTING
(   0.347) LOOP: DONE TESTING ('some', 'some')
(   0.347) LOOP: START IMPOSING CONSTRAINTS
(   0.347) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not clause(1).
(   0.347) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,1),ClId0V1!=ClId0V0.
(   0.347) GENERATE: START GROUNDING (impose_constraints)
(   0.348) GENERATE: DONE GROUNDING (impose_constraints)
(   0.348) LOOP: DONE IMPOSING CONSTRAINTS
(   0.348) LOOP: START GENERATING (program 2)
(   0.348) GENERATE: START SOLVING
(   0.349) GENERATE: DONE SOLVING
(   0.349) LOOP: NO MORE PROGRAMS (with 2 literals)
(   0.349) GENERATE: START SETTING PROGRAM SIZE (3)
(   0.349) GENERATE: START GROUNDING (set_program_size)
(   0.350) GENERATE: DONE GROUNDING (set_program_size)
(   0.350) GENERATE: DONE SETTING PROGRAM SIZE
(   0.350) LOOP: START GENERATING (program 2)
(   0.350) GENERATE: START SOLVING
(   0.350) GENERATE: DONE SOLVING
(   0.351) LOOP: DONE GENERATING (program 2)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(C).
(   0.351) LOOP: START TESTING
(   0.353) LOOP: DONE TESTING ('some', 'some')
(   0.353) LOOP: START IMPOSING CONSTRAINTS
(   0.353) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   0.353) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,2),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   0.353) GENERATE: START GROUNDING (impose_constraints)
(   0.355) GENERATE: DONE GROUNDING (impose_constraints)
(   0.355) LOOP: DONE IMPOSING CONSTRAINTS
(   0.355) LOOP: START GENERATING (program 3)
(   0.355) GENERATE: START SOLVING
(   0.355) GENERATE: DONE SOLVING
(   0.355) LOOP: DONE GENERATING (program 3)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B).
(   0.355) LOOP: START TESTING
(   0.358) LOOP: DONE TESTING ('some', 'some')
(   0.358) LOOP: START IMPOSING CONSTRAINTS
(   0.358) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   0.358) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,2),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   0.358) GENERATE: START GROUNDING (impose_constraints)
(   0.359) GENERATE: DONE GROUNDING (impose_constraints)
(   0.360) LOOP: DONE IMPOSING CONSTRAINTS
(   0.360) LOOP: START GENERATING (program 4)
(   0.360) GENERATE: START SOLVING
(   0.360) GENERATE: DONE SOLVING
(   0.360) LOOP: DONE GENERATING (program 4)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C).
(   0.360) LOOP: START TESTING
(   0.362) LOOP: DONE TESTING ('some', 'some')
(   0.362) LOOP: START IMPOSING CONSTRAINTS
(   0.362) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   0.362) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),clause_size(ClId0,2),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   0.362) GENERATE: START GROUNDING (impose_constraints)
(   0.364) GENERATE: DONE GROUNDING (impose_constraints)
(   0.364) LOOP: DONE IMPOSING CONSTRAINTS
(   0.364) LOOP: START GENERATING (program 5)
(   0.364) GENERATE: START SOLVING
(   0.365) GENERATE: DONE SOLVING
(   0.365) LOOP: DONE GENERATING (program 5)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,B).
(   0.365) LOOP: START TESTING
(   0.367) LOOP: DONE TESTING ('none', 'none')
(   0.367) LOOP: START IMPOSING CONSTRAINTS
(   0.367) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.367) GENERATE: START GROUNDING (impose_constraints)
(   0.369) GENERATE: DONE GROUNDING (impose_constraints)
(   0.369) LOOP: DONE IMPOSING CONSTRAINTS
(   0.369) LOOP: START GENERATING (program 6)
(   0.369) GENERATE: START SOLVING
(   0.369) GENERATE: DONE SOLVING
(   0.369) LOOP: DONE GENERATING (program 6)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_0(C).
(   0.369) LOOP: START TESTING
(   0.371) LOOP: DONE TESTING ('none', 'none')
(   0.371) LOOP: START IMPOSING CONSTRAINTS
(   0.371) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.371) GENERATE: START GROUNDING (impose_constraints)
(   0.373) GENERATE: DONE GROUNDING (impose_constraints)
(   0.373) LOOP: DONE IMPOSING CONSTRAINTS
(   0.373) LOOP: START GENERATING (program 7)
(   0.373) GENERATE: START SOLVING
(   0.374) GENERATE: DONE SOLVING
(   0.374) LOOP: DONE GENERATING (program 7)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(C).
(   0.374) LOOP: START TESTING
(   0.375) LOOP: DONE TESTING ('some', 'some')
(   0.375) LOOP: START IMPOSING CONSTRAINTS
(   0.375) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   0.375) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,2),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   0.375) GENERATE: START GROUNDING (impose_constraints)
(   0.378) GENERATE: DONE GROUNDING (impose_constraints)
(   0.378) LOOP: DONE IMPOSING CONSTRAINTS
(   0.378) LOOP: START GENERATING (program 8)
(   0.378) GENERATE: START SOLVING
(   0.378) GENERATE: DONE SOLVING
(   0.378) LOOP: DONE GENERATING (program 8)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(C).
(   0.385) LOOP: START TESTING
(   0.387) LOOP: DONE TESTING ('none', 'some')
(   0.387) LOOP: START IMPOSING CONSTRAINTS
(   0.387) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.387) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,2),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   0.387) GENERATE: START GROUNDING (impose_constraints)
(   0.389) GENERATE: DONE GROUNDING (impose_constraints)
(   0.389) LOOP: DONE IMPOSING CONSTRAINTS
(   0.389) LOOP: START GENERATING (program 9)
(   0.389) GENERATE: START SOLVING
(   0.390) GENERATE: DONE SOLVING
(   0.390) LOOP: DONE GENERATING (program 9)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_5(C).
(   0.390) LOOP: START TESTING
(   0.392) LOOP: DONE TESTING ('none', 'some')
(   0.392) LOOP: START IMPOSING CONSTRAINTS
(   0.392) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.392) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,2),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   0.392) GENERATE: START GROUNDING (impose_constraints)
(   0.395) GENERATE: DONE GROUNDING (impose_constraints)
(   0.395) LOOP: DONE IMPOSING CONSTRAINTS
(   0.395) LOOP: START GENERATING (program 10)
(   0.395) GENERATE: START SOLVING
(   0.395) GENERATE: DONE SOLVING
(   0.396) LOOP: DONE GENERATING (program 10)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_4(C).
(   0.396) LOOP: START TESTING
(   0.398) LOOP: DONE TESTING ('none', 'some')
(   0.398) LOOP: START IMPOSING CONSTRAINTS
(   0.398) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.398) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,2),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   0.398) GENERATE: START GROUNDING (impose_constraints)
(   0.401) GENERATE: DONE GROUNDING (impose_constraints)
(   0.401) LOOP: DONE IMPOSING CONSTRAINTS
(   0.401) LOOP: START GENERATING (program 11)
(   0.401) GENERATE: START SOLVING
(   0.402) GENERATE: DONE SOLVING
(   0.402) LOOP: DONE GENERATING (program 11)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_4(C).
(   0.402) LOOP: START TESTING
(   0.404) LOOP: DONE TESTING ('some', 'some')
(   0.404) LOOP: START IMPOSING CONSTRAINTS
(   0.404) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   0.404) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,2),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   0.404) GENERATE: START GROUNDING (impose_constraints)
(   0.407) GENERATE: DONE GROUNDING (impose_constraints)
(   0.407) LOOP: DONE IMPOSING CONSTRAINTS
(   0.407) LOOP: START GENERATING (program 12)
(   0.407) GENERATE: START SOLVING
(   0.407) GENERATE: DONE SOLVING
(   0.408) LOOP: DONE GENERATING (program 12)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_3(C).
(   0.408) LOOP: START TESTING
(   0.409) LOOP: DONE TESTING ('none', 'some')
(   0.409) LOOP: START IMPOSING CONSTRAINTS
(   0.409) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.409) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,2),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   0.409) GENERATE: START GROUNDING (impose_constraints)
(   0.412) GENERATE: DONE GROUNDING (impose_constraints)
(   0.412) LOOP: DONE IMPOSING CONSTRAINTS
(   0.413) LOOP: START GENERATING (program 13)
(   0.413) GENERATE: START SOLVING
(   0.413) GENERATE: DONE SOLVING
(   0.413) LOOP: DONE GENERATING (program 13)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_0(C).
(   0.413) LOOP: START TESTING
(   0.415) LOOP: DONE TESTING ('some', 'some')
(   0.415) LOOP: START IMPOSING CONSTRAINTS
(   0.415) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   0.415) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,2),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   0.415) GENERATE: START GROUNDING (impose_constraints)
(   0.419) GENERATE: DONE GROUNDING (impose_constraints)
(   0.419) LOOP: DONE IMPOSING CONSTRAINTS
(   0.419) LOOP: START GENERATING (program 14)
(   0.419) GENERATE: START SOLVING
(   0.419) GENERATE: DONE SOLVING
(   0.420) LOOP: DONE GENERATING (program 14)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_1(C).
(   0.420) LOOP: START TESTING
(   0.421) LOOP: DONE TESTING ('some', 'some')
(   0.421) LOOP: START IMPOSING CONSTRAINTS
(   0.421) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   0.421) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,2),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   0.421) GENERATE: START GROUNDING (impose_constraints)
(   0.425) GENERATE: DONE GROUNDING (impose_constraints)
(   0.425) LOOP: DONE IMPOSING CONSTRAINTS
(   0.425) LOOP: START GENERATING (program 15)
(   0.425) GENERATE: START SOLVING
(   0.425) GENERATE: DONE SOLVING
(   0.426) LOOP: DONE GENERATING (program 15)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_5(C).
(   0.426) LOOP: START TESTING
(   0.427) LOOP: DONE TESTING ('none', 'none')
(   0.427) LOOP: START IMPOSING CONSTRAINTS
(   0.427) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.427) GENERATE: START GROUNDING (impose_constraints)
(   0.431) GENERATE: DONE GROUNDING (impose_constraints)
(   0.431) LOOP: DONE IMPOSING CONSTRAINTS
(   0.431) LOOP: START GENERATING (program 16)
(   0.431) GENERATE: START SOLVING
(   0.431) GENERATE: DONE SOLVING
(   0.432) LOOP: DONE GENERATING (program 16)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_2(C).
(   0.432) LOOP: START TESTING
(   0.433) LOOP: DONE TESTING ('none', 'some')
(   0.433) LOOP: START IMPOSING CONSTRAINTS
(   0.433) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   0.433) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,2),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   0.433) GENERATE: START GROUNDING (impose_constraints)
(   0.437) GENERATE: DONE GROUNDING (impose_constraints)
(   0.437) LOOP: DONE IMPOSING CONSTRAINTS
(   0.437) LOOP: START GENERATING (program 17)
(   0.437) GENERATE: START SOLVING
(   0.438) GENERATE: DONE SOLVING
(   0.438) LOOP: NO MORE PROGRAMS (with 3 literals)
(   0.438) GENERATE: START SETTING PROGRAM SIZE (4)
(   0.438) GENERATE: START GROUNDING (set_program_size)
(   0.439) GENERATE: DONE GROUNDING (set_program_size)
(   0.439) GENERATE: DONE SETTING PROGRAM SIZE
(   0.439) LOOP: START GENERATING (program 17)
(   0.439) GENERATE: START SOLVING
(   0.440) GENERATE: DONE SOLVING
(   0.440) LOOP: DONE GENERATING (program 17)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),my_succ(A,B,D).
(   0.440) LOOP: START TESTING
(   0.442) LOOP: DONE TESTING ('none', 'none')
(   0.442) LOOP: START IMPOSING CONSTRAINTS
(   0.442) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.442) GENERATE: START GROUNDING (impose_constraints)
(   0.446) GENERATE: DONE GROUNDING (impose_constraints)
(   0.446) LOOP: DONE IMPOSING CONSTRAINTS
(   0.446) LOOP: START GENERATING (program 18)
(   0.446) GENERATE: START SOLVING
(   0.446) GENERATE: DONE SOLVING
(   0.446) LOOP: DONE GENERATING (program 18)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,D,C),my_succ(A,B,D).
(   0.447) LOOP: START TESTING
(   0.449) LOOP: DONE TESTING ('none', 'none')
(   0.449) LOOP: START IMPOSING CONSTRAINTS
(   0.449) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.449) GENERATE: START GROUNDING (impose_constraints)
(   0.453) GENERATE: DONE GROUNDING (impose_constraints)
(   0.453) LOOP: DONE IMPOSING CONSTRAINTS
(   0.453) LOOP: START GENERATING (program 19)
(   0.453) GENERATE: START SOLVING
(   0.454) GENERATE: DONE SOLVING
(   0.454) LOOP: DONE GENERATING (program 19)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
(   0.454) LOOP: START TESTING
(   0.456) LOOP: DONE TESTING ('some', 'some')
(   0.456) LOOP: START IMPOSING CONSTRAINTS
(   0.456) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.456) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.456) GENERATE: START GROUNDING (impose_constraints)
(   0.461) GENERATE: DONE GROUNDING (impose_constraints)
(   0.461) LOOP: DONE IMPOSING CONSTRAINTS
(   0.461) LOOP: START GENERATING (program 20)
(   0.461) GENERATE: START SOLVING
(   0.461) GENERATE: DONE SOLVING
(   0.461) LOOP: DONE GENERATING (program 20)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),my_succ(D,B,C).
(   0.462) LOOP: START TESTING
(   0.463) LOOP: DONE TESTING ('none', 'none')
(   0.463) LOOP: START IMPOSING CONSTRAINTS
(   0.463) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.463) GENERATE: START GROUNDING (impose_constraints)
(   0.468) GENERATE: DONE GROUNDING (impose_constraints)
(   0.468) LOOP: DONE IMPOSING CONSTRAINTS
(   0.468) LOOP: START GENERATING (program 21)
(   0.468) GENERATE: START SOLVING
(   0.468) GENERATE: DONE SOLVING
(   0.468) LOOP: DONE GENERATING (program 21)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),my_true_value(D,B).
(   0.468) LOOP: START TESTING
(   0.471) LOOP: DONE TESTING ('none', 'none')
(   0.471) LOOP: START IMPOSING CONSTRAINTS
(   0.471) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.471) GENERATE: START GROUNDING (impose_constraints)
(   0.475) GENERATE: DONE GROUNDING (impose_constraints)
(   0.475) LOOP: DONE IMPOSING CONSTRAINTS
(   0.475) LOOP: START GENERATING (program 22)
(   0.475) GENERATE: START SOLVING
(   0.476) GENERATE: DONE SOLVING
(   0.476) LOOP: DONE GENERATING (program 22)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(D,B,C),my_succ(D,C,B).
(   0.476) LOOP: START TESTING
(   0.478) LOOP: DONE TESTING ('none', 'none')
(   0.478) LOOP: START IMPOSING CONSTRAINTS
(   0.478) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.478) GENERATE: START GROUNDING (impose_constraints)
(   0.483) GENERATE: DONE GROUNDING (impose_constraints)
(   0.483) LOOP: DONE IMPOSING CONSTRAINTS
(   0.483) LOOP: START GENERATING (program 23)
(   0.483) GENERATE: START SOLVING
(   0.483) GENERATE: DONE SOLVING
(   0.484) LOOP: DONE GENERATING (program 23)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D).
(   0.484) LOOP: START TESTING
(   0.485) LOOP: DONE TESTING ('some', 'some')
(   0.485) LOOP: START IMPOSING CONSTRAINTS
(   0.485) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.485) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.485) GENERATE: START GROUNDING (impose_constraints)
(   0.490) GENERATE: DONE GROUNDING (impose_constraints)
(   0.491) LOOP: DONE IMPOSING CONSTRAINTS
(   0.491) LOOP: START GENERATING (program 24)
(   0.491) GENERATE: START SOLVING
(   0.491) GENERATE: DONE SOLVING
(   0.491) LOOP: DONE GENERATING (program 24)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_2(D),my_succ(A,D,C).
(   0.491) LOOP: START TESTING
(   0.494) LOOP: DONE TESTING ('none', 'some')
(   0.494) LOOP: START IMPOSING CONSTRAINTS
(   0.494) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.494) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.494) GENERATE: START GROUNDING (impose_constraints)
(   0.499) GENERATE: DONE GROUNDING (impose_constraints)
(   0.499) LOOP: DONE IMPOSING CONSTRAINTS
(   0.499) LOOP: START GENERATING (program 25)
(   0.499) GENERATE: START SOLVING
(   0.500) GENERATE: DONE SOLVING
(   0.500) LOOP: DONE GENERATING (program 25)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,D,C),c_1(D).
(   0.500) LOOP: START TESTING
(   0.502) LOOP: DONE TESTING ('none', 'some')
(   0.502) LOOP: START IMPOSING CONSTRAINTS
(   0.502) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.502) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.502) GENERATE: START GROUNDING (impose_constraints)
(   0.508) GENERATE: DONE GROUNDING (impose_constraints)
(   0.508) LOOP: DONE IMPOSING CONSTRAINTS
(   0.508) LOOP: START GENERATING (program 26)
(   0.508) GENERATE: START SOLVING
(   0.509) GENERATE: DONE SOLVING
(   0.509) LOOP: DONE GENERATING (program 26)
PROGRAM:
  next_value(A,B) :- c_0(D),my_succ(A,C,B),my_succ(A,D,C).
(   0.509) LOOP: START TESTING
(   0.511) LOOP: DONE TESTING ('some', 'some')
(   0.511) LOOP: START IMPOSING CONSTRAINTS
(   0.511) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.511) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.511) GENERATE: START GROUNDING (impose_constraints)
(   0.518) GENERATE: DONE GROUNDING (impose_constraints)
(   0.518) LOOP: DONE IMPOSING CONSTRAINTS
(   0.518) LOOP: START GENERATING (program 27)
(   0.518) GENERATE: START SOLVING
(   0.519) GENERATE: DONE SOLVING
(   0.519) LOOP: DONE GENERATING (program 27)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,D,C),c_5(D).
(   0.519) LOOP: START TESTING
(   0.521) LOOP: DONE TESTING ('none', 'none')
(   0.521) LOOP: START IMPOSING CONSTRAINTS
(   0.521) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.521) GENERATE: START GROUNDING (impose_constraints)
(   0.528) GENERATE: DONE GROUNDING (impose_constraints)
(   0.528) LOOP: DONE IMPOSING CONSTRAINTS
(   0.528) LOOP: START GENERATING (program 28)
(   0.528) GENERATE: START SOLVING
(   0.529) GENERATE: DONE SOLVING
(   0.529) LOOP: DONE GENERATING (program 28)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,D,C),c_4(D).
(   0.529) LOOP: START TESTING
(   0.531) LOOP: DONE TESTING ('none', 'none')
(   0.531) LOOP: START IMPOSING CONSTRAINTS
(   0.531) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.531) GENERATE: START GROUNDING (impose_constraints)
(   0.538) GENERATE: DONE GROUNDING (impose_constraints)
(   0.538) LOOP: DONE IMPOSING CONSTRAINTS
(   0.538) LOOP: START GENERATING (program 29)
(   0.538) GENERATE: START SOLVING
(   0.539) GENERATE: DONE SOLVING
(   0.539) LOOP: DONE GENERATING (program 29)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,C,B),my_succ(A,D,C).
(   0.539) LOOP: START TESTING
(   0.541) LOOP: DONE TESTING ('some', 'some')
(   0.541) LOOP: START IMPOSING CONSTRAINTS
(   0.541) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.541) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.541) GENERATE: START GROUNDING (impose_constraints)
(   0.548) GENERATE: DONE GROUNDING (impose_constraints)
(   0.548) LOOP: DONE IMPOSING CONSTRAINTS
(   0.548) LOOP: START GENERATING (program 30)
(   0.548) GENERATE: START SOLVING
(   0.549) GENERATE: DONE SOLVING
(   0.550) LOOP: DONE GENERATING (program 30)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,D,C),my_succ(A,D,B).
(   0.550) LOOP: START TESTING
(   0.551) LOOP: DONE TESTING ('none', 'none')
(   0.551) LOOP: START IMPOSING CONSTRAINTS
(   0.551) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.552) GENERATE: START GROUNDING (impose_constraints)
(   0.559) GENERATE: DONE GROUNDING (impose_constraints)
(   0.559) LOOP: DONE IMPOSING CONSTRAINTS
(   0.559) LOOP: START GENERATING (program 31)
(   0.559) GENERATE: START SOLVING
(   0.560) GENERATE: DONE SOLVING
(   0.560) LOOP: DONE GENERATING (program 31)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),my_succ(A,D,C).
(   0.560) LOOP: START TESTING
(   0.562) LOOP: DONE TESTING ('none', 'none')
(   0.562) LOOP: START IMPOSING CONSTRAINTS
(   0.562) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.562) GENERATE: START GROUNDING (impose_constraints)
(   0.569) GENERATE: DONE GROUNDING (impose_constraints)
(   0.569) LOOP: DONE IMPOSING CONSTRAINTS
(   0.569) LOOP: START GENERATING (program 32)
(   0.569) GENERATE: START SOLVING
(   0.570) GENERATE: DONE SOLVING
(   0.571) LOOP: DONE GENERATING (program 32)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(D,B,C),my_true_value(D,B).
(   0.571) LOOP: START TESTING
(   0.572) LOOP: DONE TESTING ('none', 'none')
(   0.572) LOOP: START IMPOSING CONSTRAINTS
(   0.572) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.573) GENERATE: START GROUNDING (impose_constraints)
(   0.581) GENERATE: DONE GROUNDING (impose_constraints)
(   0.581) LOOP: DONE IMPOSING CONSTRAINTS
(   0.581) LOOP: START GENERATING (program 33)
(   0.581) GENERATE: START SOLVING
(   0.583) GENERATE: DONE SOLVING
(   0.583) LOOP: DONE GENERATING (program 33)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_5(D).
(   0.583) LOOP: START TESTING
(   0.585) LOOP: DONE TESTING ('some', 'some')
(   0.585) LOOP: START IMPOSING CONSTRAINTS
(   0.585) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.585) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.585) GENERATE: START GROUNDING (impose_constraints)
(   0.592) GENERATE: DONE GROUNDING (impose_constraints)
(   0.592) LOOP: DONE IMPOSING CONSTRAINTS
(   0.592) LOOP: START GENERATING (program 34)
(   0.592) GENERATE: START SOLVING
(   0.594) GENERATE: DONE SOLVING
(   0.594) LOOP: DONE GENERATING (program 34)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),my_succ(A,C,B).
(   0.594) LOOP: START TESTING
(   0.596) LOOP: DONE TESTING ('none', 'some')
(   0.596) LOOP: START IMPOSING CONSTRAINTS
(   0.596) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.596) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.596) GENERATE: START GROUNDING (impose_constraints)
(   0.603) GENERATE: DONE GROUNDING (impose_constraints)
(   0.603) LOOP: DONE IMPOSING CONSTRAINTS
(   0.603) LOOP: START GENERATING (program 35)
(   0.603) GENERATE: START SOLVING
(   0.604) GENERATE: DONE SOLVING
(   0.604) LOOP: DONE GENERATING (program 35)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_4(D).
(   0.604) LOOP: START TESTING
(   0.606) LOOP: DONE TESTING ('none', 'some')
(   0.606) LOOP: START IMPOSING CONSTRAINTS
(   0.606) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.606) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.606) GENERATE: START GROUNDING (impose_constraints)
(   0.614) GENERATE: DONE GROUNDING (impose_constraints)
(   0.614) LOOP: DONE IMPOSING CONSTRAINTS
(   0.614) LOOP: START GENERATING (program 36)
(   0.614) GENERATE: START SOLVING
(   0.615) GENERATE: DONE SOLVING
(   0.615) LOOP: DONE GENERATING (program 36)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),my_succ(A,C,B).
(   0.615) LOOP: START TESTING
(   0.617) LOOP: DONE TESTING ('none', 'none')
(   0.617) LOOP: START IMPOSING CONSTRAINTS
(   0.617) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.617) GENERATE: START GROUNDING (impose_constraints)
(   0.625) GENERATE: DONE GROUNDING (impose_constraints)
(   0.625) LOOP: DONE IMPOSING CONSTRAINTS
(   0.625) LOOP: START GENERATING (program 37)
(   0.625) GENERATE: START SOLVING
(   0.626) GENERATE: DONE SOLVING
(   0.626) LOOP: DONE GENERATING (program 37)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_1(D).
(   0.626) LOOP: START TESTING
(   0.628) LOOP: DONE TESTING ('some', 'some')
(   0.628) LOOP: START IMPOSING CONSTRAINTS
(   0.628) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.628) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.628) GENERATE: START GROUNDING (impose_constraints)
(   0.636) GENERATE: DONE GROUNDING (impose_constraints)
(   0.636) LOOP: DONE IMPOSING CONSTRAINTS
(   0.636) LOOP: START GENERATING (program 38)
(   0.636) GENERATE: START SOLVING
(   0.637) GENERATE: DONE SOLVING
(   0.637) LOOP: DONE GENERATING (program 38)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_2(D).
(   0.637) LOOP: START TESTING
(   0.640) LOOP: DONE TESTING ('some', 'some')
(   0.640) LOOP: START IMPOSING CONSTRAINTS
(   0.640) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.640) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.640) GENERATE: START GROUNDING (impose_constraints)
(   0.648) GENERATE: DONE GROUNDING (impose_constraints)
(   0.648) LOOP: DONE IMPOSING CONSTRAINTS
(   0.648) LOOP: START GENERATING (program 39)
(   0.648) GENERATE: START SOLVING
(   0.649) GENERATE: DONE SOLVING
(   0.649) LOOP: DONE GENERATING (program 39)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),my_true_value(A,D).
(   0.649) LOOP: START TESTING
(   0.651) LOOP: DONE TESTING ('some', 'some')
(   0.651) LOOP: START IMPOSING CONSTRAINTS
(   0.651) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.651) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.651) GENERATE: START GROUNDING (impose_constraints)
(   0.660) GENERATE: DONE GROUNDING (impose_constraints)
(   0.660) LOOP: DONE IMPOSING CONSTRAINTS
(   0.660) LOOP: START GENERATING (program 40)
(   0.660) GENERATE: START SOLVING
(   0.661) GENERATE: DONE SOLVING
(   0.661) LOOP: DONE GENERATING (program 40)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
(   0.661) LOOP: START TESTING
(   0.663) LOOP: DONE TESTING ('some', 'some')
(   0.663) LOOP: START IMPOSING CONSTRAINTS
(   0.663) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.663) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.663) GENERATE: START GROUNDING (impose_constraints)
(   0.672) GENERATE: DONE GROUNDING (impose_constraints)
(   0.672) LOOP: DONE IMPOSING CONSTRAINTS
(   0.672) LOOP: START GENERATING (program 41)
(   0.672) GENERATE: START SOLVING
(   0.673) GENERATE: DONE SOLVING
(   0.674) LOOP: DONE GENERATING (program 41)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,D,C),my_succ(A,B,D).
(   0.674) LOOP: START TESTING
(   0.676) LOOP: DONE TESTING ('none', 'none')
(   0.676) LOOP: START IMPOSING CONSTRAINTS
(   0.676) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.676) GENERATE: START GROUNDING (impose_constraints)
(   0.685) GENERATE: DONE GROUNDING (impose_constraints)
(   0.685) LOOP: DONE IMPOSING CONSTRAINTS
(   0.685) LOOP: START GENERATING (program 42)
(   0.685) GENERATE: START SOLVING
(   0.686) GENERATE: DONE SOLVING
(   0.686) LOOP: DONE GENERATING (program 42)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),my_succ(A,B,D).
(   0.686) LOOP: START TESTING
(   0.688) LOOP: DONE TESTING ('none', 'some')
(   0.688) LOOP: START IMPOSING CONSTRAINTS
(   0.688) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.688) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.689) GENERATE: START GROUNDING (impose_constraints)
(   0.698) GENERATE: DONE GROUNDING (impose_constraints)
(   0.698) LOOP: DONE IMPOSING CONSTRAINTS
(   0.698) LOOP: START GENERATING (program 43)
(   0.698) GENERATE: START SOLVING
(   0.699) GENERATE: DONE SOLVING
(   0.699) LOOP: DONE GENERATING (program 43)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,B,D),c_0(C).
(   0.699) LOOP: START TESTING
(   0.701) LOOP: DONE TESTING ('none', 'some')
(   0.701) LOOP: START IMPOSING CONSTRAINTS
(   0.701) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.701) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.702) GENERATE: START GROUNDING (impose_constraints)
(   0.711) GENERATE: DONE GROUNDING (impose_constraints)
(   0.711) LOOP: DONE IMPOSING CONSTRAINTS
(   0.711) LOOP: START GENERATING (program 44)
(   0.711) GENERATE: START SOLVING
(   0.712) GENERATE: DONE SOLVING
(   0.712) LOOP: DONE GENERATING (program 44)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,B,D),c_1(C).
(   0.712) LOOP: START TESTING
(   0.715) LOOP: DONE TESTING ('some', 'some')
(   0.715) LOOP: START IMPOSING CONSTRAINTS
(   0.715) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.715) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.715) GENERATE: START GROUNDING (impose_constraints)
(   0.725) GENERATE: DONE GROUNDING (impose_constraints)
(   0.725) LOOP: DONE IMPOSING CONSTRAINTS
(   0.725) LOOP: START GENERATING (program 45)
(   0.725) GENERATE: START SOLVING
(   0.726) GENERATE: DONE SOLVING
(   0.726) LOOP: DONE GENERATING (program 45)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,B,D),c_4(C).
(   0.726) LOOP: START TESTING
(   0.728) LOOP: DONE TESTING ('none', 'some')
(   0.728) LOOP: START IMPOSING CONSTRAINTS
(   0.728) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.728) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.728) GENERATE: START GROUNDING (impose_constraints)
(   0.738) GENERATE: DONE GROUNDING (impose_constraints)
(   0.738) LOOP: DONE IMPOSING CONSTRAINTS
(   0.738) LOOP: START GENERATING (program 46)
(   0.738) GENERATE: START SOLVING
(   0.739) GENERATE: DONE SOLVING
(   0.740) LOOP: DONE GENERATING (program 46)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,B,D),c_5(C).
(   0.740) LOOP: START TESTING
(   0.742) LOOP: DONE TESTING ('none', 'none')
(   0.742) LOOP: START IMPOSING CONSTRAINTS
(   0.742) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.742) GENERATE: START GROUNDING (impose_constraints)
(   0.752) GENERATE: DONE GROUNDING (impose_constraints)
(   0.752) LOOP: DONE IMPOSING CONSTRAINTS
(   0.752) LOOP: START GENERATING (program 47)
(   0.752) GENERATE: START SOLVING
(   0.753) GENERATE: DONE SOLVING
(   0.753) LOOP: DONE GENERATING (program 47)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,B,D),c_2(C).
(   0.753) LOOP: START TESTING
(   0.756) LOOP: DONE TESTING ('some', 'some')
(   0.756) LOOP: START IMPOSING CONSTRAINTS
(   0.756) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.756) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.756) GENERATE: START GROUNDING (impose_constraints)
(   0.766) GENERATE: DONE GROUNDING (impose_constraints)
(   0.766) LOOP: DONE IMPOSING CONSTRAINTS
(   0.766) LOOP: START GENERATING (program 48)
(   0.766) GENERATE: START SOLVING
(   0.768) GENERATE: DONE SOLVING
(   0.768) LOOP: DONE GENERATING (program 48)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(C),my_succ(A,B,D).
(   0.768) LOOP: START TESTING
(   0.770) LOOP: DONE TESTING ('none', 'some')
(   0.770) LOOP: START IMPOSING CONSTRAINTS
(   0.770) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.770) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.770) GENERATE: START GROUNDING (impose_constraints)
(   0.782) GENERATE: DONE GROUNDING (impose_constraints)
(   0.782) LOOP: DONE IMPOSING CONSTRAINTS
(   0.782) LOOP: START GENERATING (program 49)
(   0.782) GENERATE: START SOLVING
(   0.784) GENERATE: DONE SOLVING
(   0.784) LOOP: DONE GENERATING (program 49)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),my_succ(A,B,D).
(   0.784) LOOP: START TESTING
(   0.786) LOOP: DONE TESTING ('none', 'none')
(   0.786) LOOP: START IMPOSING CONSTRAINTS
(   0.786) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.786) GENERATE: START GROUNDING (impose_constraints)
(   0.802) GENERATE: DONE GROUNDING (impose_constraints)
(   0.802) LOOP: DONE IMPOSING CONSTRAINTS
(   0.802) LOOP: START GENERATING (program 50)
(   0.802) GENERATE: START SOLVING
(   0.803) GENERATE: DONE SOLVING
(   0.804) LOOP: DONE GENERATING (program 50)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),my_succ(A,D,C).
(   0.804) LOOP: START TESTING
(   0.806) LOOP: DONE TESTING ('none', 'none')
(   0.806) LOOP: START IMPOSING CONSTRAINTS
(   0.806) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.806) GENERATE: START GROUNDING (impose_constraints)
(   0.818) GENERATE: DONE GROUNDING (impose_constraints)
(   0.818) LOOP: DONE IMPOSING CONSTRAINTS
(   0.818) LOOP: START GENERATING (program 51)
(   0.818) GENERATE: START SOLVING
(   0.820) GENERATE: DONE SOLVING
(   0.820) LOOP: DONE GENERATING (program 51)
PROGRAM:
  next_value(A,B) :- my_succ(C,B,D),my_succ(C,D,B),my_succ(A,B,D).
(   0.820) LOOP: START TESTING
(   0.822) LOOP: DONE TESTING ('none', 'none')
(   0.822) LOOP: START IMPOSING CONSTRAINTS
(   0.822) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V1,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.822) GENERATE: START GROUNDING (impose_constraints)
(   0.834) GENERATE: DONE GROUNDING (impose_constraints)
(   0.834) LOOP: DONE IMPOSING CONSTRAINTS
(   0.834) LOOP: START GENERATING (program 52)
(   0.834) GENERATE: START SOLVING
(   0.835) GENERATE: DONE SOLVING
(   0.835) LOOP: DONE GENERATING (program 52)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),my_succ(A,B,D),c_0(C).
(   0.836) LOOP: START TESTING
(   0.837) LOOP: DONE TESTING ('none', 'none')
(   0.837) LOOP: START IMPOSING CONSTRAINTS
(   0.837) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.837) GENERATE: START GROUNDING (impose_constraints)
(   0.849) GENERATE: DONE GROUNDING (impose_constraints)
(   0.849) LOOP: DONE IMPOSING CONSTRAINTS
(   0.849) LOOP: START GENERATING (program 53)
(   0.849) GENERATE: START SOLVING
(   0.851) GENERATE: DONE SOLVING
(   0.851) LOOP: DONE GENERATING (program 53)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),my_succ(C,D,B),my_succ(A,B,D).
(   0.851) LOOP: START TESTING
(   0.853) LOOP: DONE TESTING ('none', 'none')
(   0.853) LOOP: START IMPOSING CONSTRAINTS
(   0.853) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.853) GENERATE: START GROUNDING (impose_constraints)
(   0.865) GENERATE: DONE GROUNDING (impose_constraints)
(   0.865) LOOP: DONE IMPOSING CONSTRAINTS
(   0.865) LOOP: START GENERATING (program 54)
(   0.865) GENERATE: START SOLVING
(   0.866) GENERATE: DONE SOLVING
(   0.866) LOOP: DONE GENERATING (program 54)
PROGRAM:
  next_value(A,B) :- my_succ(C,D,B),my_succ(A,B,D),my_true_value(C,B).
(   0.866) LOOP: START TESTING
(   0.868) LOOP: DONE TESTING ('none', 'none')
(   0.868) LOOP: START IMPOSING CONSTRAINTS
(   0.868) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.868) GENERATE: START GROUNDING (impose_constraints)
(   0.880) GENERATE: DONE GROUNDING (impose_constraints)
(   0.880) LOOP: DONE IMPOSING CONSTRAINTS
(   0.880) LOOP: START GENERATING (program 55)
(   0.880) GENERATE: START SOLVING
(   0.881) GENERATE: DONE SOLVING
(   0.882) LOOP: DONE GENERATING (program 55)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),my_succ(C,B,D),my_succ(A,B,D).
(   0.882) LOOP: START TESTING
(   0.884) LOOP: DONE TESTING ('some', 'some')
(   0.884) LOOP: START IMPOSING CONSTRAINTS
(   0.884) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V1,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.884) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V1,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.884) GENERATE: START GROUNDING (impose_constraints)
(   0.898) GENERATE: DONE GROUNDING (impose_constraints)
(   0.906) LOOP: DONE IMPOSING CONSTRAINTS
(   0.906) LOOP: START GENERATING (program 56)
(   0.906) GENERATE: START SOLVING
(   0.909) GENERATE: DONE SOLVING
(   0.909) LOOP: DONE GENERATING (program 56)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),my_succ(A,B,D).
(   0.909) LOOP: START TESTING
(   0.911) LOOP: DONE TESTING ('none', 'some')
(   0.911) LOOP: START IMPOSING CONSTRAINTS
(   0.911) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.911) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.912) GENERATE: START GROUNDING (impose_constraints)
(   0.927) GENERATE: DONE GROUNDING (impose_constraints)
(   0.927) LOOP: DONE IMPOSING CONSTRAINTS
(   0.927) LOOP: START GENERATING (program 57)
(   0.927) GENERATE: START SOLVING
(   0.929) GENERATE: DONE SOLVING
(   0.930) LOOP: DONE GENERATING (program 57)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),my_succ(A,B,D),c_4(C).
(   0.930) LOOP: START TESTING
(   0.932) LOOP: DONE TESTING ('some', 'some')
(   0.932) LOOP: START IMPOSING CONSTRAINTS
(   0.932) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   0.932) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.932) GENERATE: START GROUNDING (impose_constraints)
(   0.947) GENERATE: DONE GROUNDING (impose_constraints)
(   0.947) LOOP: DONE IMPOSING CONSTRAINTS
(   0.947) LOOP: START GENERATING (program 58)
(   0.947) GENERATE: START SOLVING
(   0.948) GENERATE: DONE SOLVING
(   0.949) LOOP: DONE GENERATING (program 58)
PROGRAM:
  next_value(A,B) :- c_1(C),my_succ(A,D,C),my_succ(A,B,D).
(   0.949) LOOP: START TESTING
(   0.950) LOOP: DONE TESTING ('none', 'none')
(   0.950) LOOP: START IMPOSING CONSTRAINTS
(   0.951) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.951) GENERATE: START GROUNDING (impose_constraints)
(   0.963) GENERATE: DONE GROUNDING (impose_constraints)
(   0.964) LOOP: DONE IMPOSING CONSTRAINTS
(   0.964) LOOP: START GENERATING (program 59)
(   0.964) GENERATE: START SOLVING
(   0.965) GENERATE: DONE SOLVING
(   0.965) LOOP: DONE GENERATING (program 59)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),my_succ(A,B,D),c_5(C).
(   0.965) LOOP: START TESTING
(   0.967) LOOP: DONE TESTING ('none', 'some')
(   0.967) LOOP: START IMPOSING CONSTRAINTS
(   0.967) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.967) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.967) GENERATE: START GROUNDING (impose_constraints)
(   0.981) GENERATE: DONE GROUNDING (impose_constraints)
(   0.981) LOOP: DONE IMPOSING CONSTRAINTS
(   0.981) LOOP: START GENERATING (program 60)
(   0.981) GENERATE: START SOLVING
(   0.982) GENERATE: DONE SOLVING
(   0.983) LOOP: DONE GENERATING (program 60)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),my_succ(A,B,D),c_2(C).
(   0.983) LOOP: START TESTING
(   0.984) LOOP: DONE TESTING ('none', 'some')
(   0.985) LOOP: START IMPOSING CONSTRAINTS
(   0.985) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   0.985) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   0.985) GENERATE: START GROUNDING (impose_constraints)
(   0.998) GENERATE: DONE GROUNDING (impose_constraints)
(   0.998) LOOP: DONE IMPOSING CONSTRAINTS
(   0.998) LOOP: START GENERATING (program 61)
(   0.998) GENERATE: START SOLVING
(   1.000) GENERATE: DONE SOLVING
(   1.000) LOOP: DONE GENERATING (program 61)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),c_3(C),my_succ(A,B,D).
(   1.000) LOOP: START TESTING
(   1.002) LOOP: DONE TESTING ('some', 'some')
(   1.002) LOOP: START IMPOSING CONSTRAINTS
(   1.002) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   1.002) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   1.002) GENERATE: START GROUNDING (impose_constraints)
(   1.016) GENERATE: DONE GROUNDING (impose_constraints)
(   1.016) LOOP: DONE IMPOSING CONSTRAINTS
(   1.016) LOOP: START GENERATING (program 62)
(   1.016) GENERATE: START SOLVING
(   1.018) GENERATE: DONE SOLVING
(   1.019) LOOP: DONE GENERATING (program 62)
PROGRAM:
  next_value(A,B) :- my_succ(C,B,D),my_succ(A,B,D),my_true_value(C,B).
(   1.019) LOOP: START TESTING
(   1.021) LOOP: DONE TESTING ('some', 'some')
(   1.021) LOOP: START IMPOSING CONSTRAINTS
(   1.021) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V1,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   1.021) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V1,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   1.021) GENERATE: START GROUNDING (impose_constraints)
(   1.036) GENERATE: DONE GROUNDING (impose_constraints)
(   1.036) LOOP: DONE IMPOSING CONSTRAINTS
(   1.036) LOOP: START GENERATING (program 63)
(   1.036) GENERATE: START SOLVING
(   1.037) GENERATE: DONE SOLVING
(   1.038) LOOP: DONE GENERATING (program 63)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,D,C),c_4(B).
(   1.038) LOOP: START TESTING
(   1.040) LOOP: DONE TESTING ('none', 'none')
(   1.040) LOOP: START IMPOSING CONSTRAINTS
(   1.040) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   1.040) GENERATE: START GROUNDING (impose_constraints)
(   1.054) GENERATE: DONE GROUNDING (impose_constraints)
(   1.054) LOOP: DONE IMPOSING CONSTRAINTS
(   1.054) LOOP: START GENERATING (program 64)
(   1.054) GENERATE: START SOLVING
(   1.056) GENERATE: DONE SOLVING
(   1.056) LOOP: DONE GENERATING (program 64)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),my_succ(A,B,D),my_true_value(C,B).
(   1.056) LOOP: START TESTING
(   1.058) LOOP: DONE TESTING ('none', 'none')
(   1.058) LOOP: START IMPOSING CONSTRAINTS
(   1.058) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   1.058) GENERATE: START GROUNDING (impose_constraints)
(   1.072) GENERATE: DONE GROUNDING (impose_constraints)
(   1.072) LOOP: DONE IMPOSING CONSTRAINTS
(   1.072) LOOP: START GENERATING (program 65)
(   1.072) GENERATE: START SOLVING
(   1.075) GENERATE: DONE SOLVING
(   1.075) LOOP: DONE GENERATING (program 65)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),my_succ(A,D,C).
(   1.075) LOOP: START TESTING
(   1.077) LOOP: DONE TESTING ('none', 'none')
(   1.077) LOOP: START IMPOSING CONSTRAINTS
(   1.077) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   1.077) GENERATE: START GROUNDING (impose_constraints)
(   1.091) GENERATE: DONE GROUNDING (impose_constraints)
(   1.091) LOOP: DONE IMPOSING CONSTRAINTS
(   1.091) LOOP: START GENERATING (program 66)
(   1.091) GENERATE: START SOLVING
(   1.093) GENERATE: DONE SOLVING
(   1.093) LOOP: DONE GENERATING (program 66)
PROGRAM:
  next_value(A,B) :- c_0(B),my_true_value(A,C),c_0(C).
(   1.093) LOOP: START TESTING
(   1.095) LOOP: DONE TESTING ('none', 'some')
(   1.095) LOOP: START IMPOSING CONSTRAINTS
(   1.095) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.095) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.096) GENERATE: START GROUNDING (impose_constraints)
(   1.110) GENERATE: DONE GROUNDING (impose_constraints)
(   1.110) LOOP: DONE IMPOSING CONSTRAINTS
(   1.110) LOOP: START GENERATING (program 67)
(   1.110) GENERATE: START SOLVING
(   1.112) GENERATE: DONE SOLVING
(   1.112) LOOP: DONE GENERATING (program 67)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),c_0(C).
(   1.112) LOOP: START TESTING
(   1.114) LOOP: DONE TESTING ('none', 'some')
(   1.114) LOOP: START IMPOSING CONSTRAINTS
(   1.114) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.114) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.114) GENERATE: START GROUNDING (impose_constraints)
(   1.129) GENERATE: DONE GROUNDING (impose_constraints)
(   1.129) LOOP: DONE IMPOSING CONSTRAINTS
(   1.129) LOOP: START GENERATING (program 68)
(   1.129) GENERATE: START SOLVING
(   1.131) GENERATE: DONE SOLVING
(   1.131) LOOP: DONE GENERATING (program 68)
PROGRAM:
  next_value(A,B) :- c_3(B),my_true_value(A,C),c_0(C).
(   1.131) LOOP: START TESTING
(   1.133) LOOP: DONE TESTING ('none', 'some')
(   1.133) LOOP: START IMPOSING CONSTRAINTS
(   1.133) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.133) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.133) GENERATE: START GROUNDING (impose_constraints)
(   1.148) GENERATE: DONE GROUNDING (impose_constraints)
(   1.148) LOOP: DONE IMPOSING CONSTRAINTS
(   1.148) LOOP: START GENERATING (program 69)
(   1.148) GENERATE: START SOLVING
(   1.150) GENERATE: DONE SOLVING
(   1.150) LOOP: DONE GENERATING (program 69)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
(   1.150) LOOP: START TESTING
(   1.152) LOOP: DONE TESTING ('some', 'none')
(   1.152) LOOP: START IMPOSING CONSTRAINTS
(   1.152) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   1.152) GENERATE: START GROUNDING (impose_constraints)
(   1.167) GENERATE: DONE GROUNDING (impose_constraints)
(   1.167) LOOP: DONE IMPOSING CONSTRAINTS
(   1.167) LOOP: START GENERATING (program 70)
(   1.167) GENERATE: START SOLVING
(   1.169) GENERATE: DONE SOLVING
(   1.169) LOOP: DONE GENERATING (program 70)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,C),c_0(C).
(   1.169) LOOP: START TESTING
(   1.171) LOOP: DONE TESTING ('none', 'some')
(   1.171) LOOP: START IMPOSING CONSTRAINTS
(   1.171) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.171) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.171) GENERATE: START GROUNDING (impose_constraints)
(   1.187) GENERATE: DONE GROUNDING (impose_constraints)
(   1.187) LOOP: DONE IMPOSING CONSTRAINTS
(   1.187) LOOP: START GENERATING (program 71)
(   1.187) GENERATE: START SOLVING
(   1.188) GENERATE: DONE SOLVING
(   1.189) LOOP: DONE GENERATING (program 71)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_succ(A,D,C).
(   1.189) LOOP: START TESTING
(   1.191) LOOP: DONE TESTING ('none', 'none')
(   1.191) LOOP: START IMPOSING CONSTRAINTS
(   1.191) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   1.191) GENERATE: START GROUNDING (impose_constraints)
(   1.206) GENERATE: DONE GROUNDING (impose_constraints)
(   1.206) LOOP: DONE IMPOSING CONSTRAINTS
(   1.206) LOOP: START GENERATING (program 72)
(   1.206) GENERATE: START SOLVING
(   1.208) GENERATE: DONE SOLVING
(   1.209) LOOP: DONE GENERATING (program 72)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),my_succ(A,D,C).
(   1.209) LOOP: START TESTING
(   1.210) LOOP: DONE TESTING ('none', 'none')
(   1.210) LOOP: START IMPOSING CONSTRAINTS
(   1.211) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   1.211) GENERATE: START GROUNDING (impose_constraints)
(   1.226) GENERATE: DONE GROUNDING (impose_constraints)
(   1.226) LOOP: DONE IMPOSING CONSTRAINTS
(   1.226) LOOP: START GENERATING (program 73)
(   1.226) GENERATE: START SOLVING
(   1.227) GENERATE: DONE SOLVING
(   1.228) LOOP: DONE GENERATING (program 73)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),my_succ(A,D,C).
(   1.228) LOOP: START TESTING
(   1.230) LOOP: DONE TESTING ('none', 'none')
(   1.230) LOOP: START IMPOSING CONSTRAINTS
(   1.230) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   1.230) GENERATE: START GROUNDING (impose_constraints)
(   1.245) GENERATE: DONE GROUNDING (impose_constraints)
(   1.245) LOOP: DONE IMPOSING CONSTRAINTS
(   1.245) LOOP: START GENERATING (program 74)
(   1.245) GENERATE: START SOLVING
(   1.250) GENERATE: DONE SOLVING
(   1.250) LOOP: DONE GENERATING (program 74)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
(   1.250) LOOP: START TESTING
(   1.252) LOOP: DONE TESTING ('some', 'none')
(   1.252) LOOP: START IMPOSING CONSTRAINTS
(   1.252) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   1.252) GENERATE: START GROUNDING (impose_constraints)
(   1.267) GENERATE: DONE GROUNDING (impose_constraints)
(   1.267) LOOP: DONE IMPOSING CONSTRAINTS
(   1.267) LOOP: START GENERATING (program 75)
(   1.267) GENERATE: START SOLVING
(   1.269) GENERATE: DONE SOLVING
(   1.270) LOOP: DONE GENERATING (program 75)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),my_true_value(A,D),my_true_value(C,B).
(   1.270) LOOP: START TESTING
(   1.272) LOOP: DONE TESTING ('some', 'some')
(   1.272) LOOP: START IMPOSING CONSTRAINTS
(   1.272) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   1.272) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   1.272) GENERATE: START GROUNDING (impose_constraints)
(   1.288) GENERATE: DONE GROUNDING (impose_constraints)
(   1.288) LOOP: DONE IMPOSING CONSTRAINTS
(   1.288) LOOP: START GENERATING (program 76)
(   1.288) GENERATE: START SOLVING
(   1.294) GENERATE: DONE SOLVING
(   1.294) LOOP: DONE GENERATING (program 76)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),c_4(C).
(   1.294) LOOP: START TESTING
(   1.296) LOOP: DONE TESTING ('none', 'some')
(   1.296) LOOP: START IMPOSING CONSTRAINTS
(   1.296) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.296) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.296) GENERATE: START GROUNDING (impose_constraints)
(   1.312) GENERATE: DONE GROUNDING (impose_constraints)
(   1.312) LOOP: DONE IMPOSING CONSTRAINTS
(   1.312) LOOP: START GENERATING (program 77)
(   1.312) GENERATE: START SOLVING
(   1.314) GENERATE: DONE SOLVING
(   1.315) LOOP: DONE GENERATING (program 77)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,C),c_4(C).
(   1.315) LOOP: START TESTING
(   1.317) LOOP: DONE TESTING ('none', 'some')
(   1.317) LOOP: START IMPOSING CONSTRAINTS
(   1.317) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.317) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.317) GENERATE: START GROUNDING (impose_constraints)
(   1.333) GENERATE: DONE GROUNDING (impose_constraints)
(   1.333) LOOP: DONE IMPOSING CONSTRAINTS
(   1.333) LOOP: START GENERATING (program 78)
(   1.333) GENERATE: START SOLVING
(   1.335) GENERATE: DONE SOLVING
(   1.336) LOOP: DONE GENERATING (program 78)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),my_succ(C,D,B),my_true_value(A,D).
(   1.336) LOOP: START TESTING
(   1.337) LOOP: DONE TESTING ('some', 'some')
(   1.338) LOOP: START IMPOSING CONSTRAINTS
(   1.338) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   1.338) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   1.338) GENERATE: START GROUNDING (impose_constraints)
(   1.354) GENERATE: DONE GROUNDING (impose_constraints)
(   1.354) LOOP: DONE IMPOSING CONSTRAINTS
(   1.354) LOOP: START GENERATING (program 79)
(   1.354) GENERATE: START SOLVING
(   1.356) GENERATE: DONE SOLVING
(   1.356) LOOP: DONE GENERATING (program 79)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,C),c_1(C).
(   1.357) LOOP: START TESTING
(   1.358) LOOP: DONE TESTING ('none', 'none')
(   1.358) LOOP: START IMPOSING CONSTRAINTS
(   1.358) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.358) GENERATE: START GROUNDING (impose_constraints)
(   1.375) GENERATE: DONE GROUNDING (impose_constraints)
(   1.375) LOOP: DONE IMPOSING CONSTRAINTS
(   1.375) LOOP: START GENERATING (program 80)
(   1.375) GENERATE: START SOLVING
(   1.377) GENERATE: DONE SOLVING
(   1.377) LOOP: DONE GENERATING (program 80)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
(   1.377) LOOP: START TESTING
(   1.379) LOOP: DONE TESTING ('some', 'some')
(   1.379) LOOP: START IMPOSING CONSTRAINTS
(   1.379) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   1.379) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   1.380) GENERATE: START GROUNDING (impose_constraints)
(   1.396) GENERATE: DONE GROUNDING (impose_constraints)
(   1.396) LOOP: DONE IMPOSING CONSTRAINTS
(   1.396) LOOP: START GENERATING (program 81)
(   1.396) GENERATE: START SOLVING
(   1.398) GENERATE: DONE SOLVING
(   1.399) LOOP: DONE GENERATING (program 81)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(D,B,C),my_succ(D,C,B).
(   1.399) LOOP: START TESTING
(   1.401) LOOP: DONE TESTING ('none', 'none')
(   1.401) LOOP: START IMPOSING CONSTRAINTS
(   1.401) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   1.401) GENERATE: START GROUNDING (impose_constraints)
(   1.418) GENERATE: DONE GROUNDING (impose_constraints)
(   1.418) LOOP: DONE IMPOSING CONSTRAINTS
(   1.418) LOOP: START GENERATING (program 82)
(   1.418) GENERATE: START SOLVING
(   1.420) GENERATE: DONE SOLVING
(   1.421) LOOP: DONE GENERATING (program 82)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
(   1.421) LOOP: START TESTING
(   1.423) LOOP: DONE TESTING ('some', 'some')
(   1.423) LOOP: START IMPOSING CONSTRAINTS
(   1.423) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   1.423) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   1.423) GENERATE: START GROUNDING (impose_constraints)
(   1.441) GENERATE: DONE GROUNDING (impose_constraints)
(   1.441) LOOP: DONE IMPOSING CONSTRAINTS
(   1.441) LOOP: START GENERATING (program 83)
(   1.441) GENERATE: START SOLVING
(   1.443) GENERATE: DONE SOLVING
(   1.443) LOOP: DONE GENERATING (program 83)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
(   1.443) LOOP: START TESTING
(   1.445) LOOP: DONE TESTING ('some', 'some')
(   1.445) LOOP: START IMPOSING CONSTRAINTS
(   1.445) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   1.445) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   1.445) GENERATE: START GROUNDING (impose_constraints)
(   1.463) GENERATE: DONE GROUNDING (impose_constraints)
(   1.463) LOOP: DONE IMPOSING CONSTRAINTS
(   1.463) LOOP: START GENERATING (program 84)
(   1.463) GENERATE: START SOLVING
(   1.468) GENERATE: DONE SOLVING
(   1.468) LOOP: DONE GENERATING (program 84)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,C),c_2(C).
(   1.468) LOOP: START TESTING
(   1.470) LOOP: DONE TESTING ('some', 'some')
(   1.470) LOOP: START IMPOSING CONSTRAINTS
(   1.470) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   1.470) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.470) GENERATE: START GROUNDING (impose_constraints)
(   1.488) GENERATE: DONE GROUNDING (impose_constraints)
(   1.489) LOOP: DONE IMPOSING CONSTRAINTS
(   1.489) LOOP: START GENERATING (program 85)
(   1.489) GENERATE: START SOLVING
(   1.491) GENERATE: DONE SOLVING
(   1.492) LOOP: DONE GENERATING (program 85)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_2(C).
(   1.492) LOOP: START TESTING
(   1.493) LOOP: DONE TESTING ('some', 'some')
(   1.493) LOOP: START IMPOSING CONSTRAINTS
(   1.494) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   1.494) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.494) GENERATE: START GROUNDING (impose_constraints)
(   1.516) GENERATE: DONE GROUNDING (impose_constraints)
(   1.516) LOOP: DONE IMPOSING CONSTRAINTS
(   1.516) LOOP: START GENERATING (program 86)
(   1.516) GENERATE: START SOLVING
(   1.520) GENERATE: DONE SOLVING
(   1.520) LOOP: DONE GENERATING (program 86)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,C),c_3(C).
(   1.520) LOOP: START TESTING
(   1.523) LOOP: DONE TESTING ('none', 'some')
(   1.523) LOOP: START IMPOSING CONSTRAINTS
(   1.523) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.523) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.523) GENERATE: START GROUNDING (impose_constraints)
(   1.547) GENERATE: DONE GROUNDING (impose_constraints)
(   1.547) LOOP: DONE IMPOSING CONSTRAINTS
(   1.547) LOOP: START GENERATING (program 87)
(   1.547) GENERATE: START SOLVING
(   1.551) GENERATE: DONE SOLVING
(   1.551) LOOP: DONE GENERATING (program 87)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,C),c_5(C).
(   1.552) LOOP: START TESTING
(   1.553) LOOP: DONE TESTING ('none', 'some')
(   1.553) LOOP: START IMPOSING CONSTRAINTS
(   1.553) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.553) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.553) GENERATE: START GROUNDING (impose_constraints)
(   1.579) GENERATE: DONE GROUNDING (impose_constraints)
(   1.579) LOOP: DONE IMPOSING CONSTRAINTS
(   1.579) LOOP: START GENERATING (program 88)
(   1.579) GENERATE: START SOLVING
(   1.582) GENERATE: DONE SOLVING
(   1.582) LOOP: DONE GENERATING (program 88)
PROGRAM:
  next_value(A,B) :- c_3(B),my_true_value(A,C),c_2(C).
(   1.583) LOOP: START TESTING
(   1.584) LOOP: DONE TESTING ('none', 'some')
(   1.584) LOOP: START IMPOSING CONSTRAINTS
(   1.584) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.584) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.584) GENERATE: START GROUNDING (impose_constraints)
(   1.606) GENERATE: DONE GROUNDING (impose_constraints)
(   1.606) LOOP: DONE IMPOSING CONSTRAINTS
(   1.606) LOOP: START GENERATING (program 89)
(   1.606) GENERATE: START SOLVING
(   1.609) GENERATE: DONE SOLVING
(   1.609) LOOP: DONE GENERATING (program 89)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),c_2(C),c_4(B).
(   1.609) LOOP: START TESTING
(   1.611) LOOP: DONE TESTING ('none', 'some')
(   1.611) LOOP: START IMPOSING CONSTRAINTS
(   1.611) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.611) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.611) GENERATE: START GROUNDING (impose_constraints)
(   1.633) GENERATE: DONE GROUNDING (impose_constraints)
(   1.633) LOOP: DONE IMPOSING CONSTRAINTS
(   1.633) LOOP: START GENERATING (program 90)
(   1.633) GENERATE: START SOLVING
(   1.637) GENERATE: DONE SOLVING
(   1.637) LOOP: DONE GENERATING (program 90)
PROGRAM:
  next_value(A,B) :- c_0(B),my_true_value(A,C),c_2(C).
(   1.637) LOOP: START TESTING
(   1.639) LOOP: DONE TESTING ('none', 'some')
(   1.639) LOOP: START IMPOSING CONSTRAINTS
(   1.639) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.639) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.639) GENERATE: START GROUNDING (impose_constraints)
(   1.661) GENERATE: DONE GROUNDING (impose_constraints)
(   1.661) LOOP: DONE IMPOSING CONSTRAINTS
(   1.661) LOOP: START GENERATING (program 91)
(   1.661) GENERATE: START SOLVING
(   1.664) GENERATE: DONE SOLVING
(   1.664) LOOP: DONE GENERATING (program 91)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),c_2(C).
(   1.665) LOOP: START TESTING
(   1.666) LOOP: DONE TESTING ('none', 'some')
(   1.666) LOOP: START IMPOSING CONSTRAINTS
(   1.666) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.666) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.666) GENERATE: START GROUNDING (impose_constraints)
(   1.689) GENERATE: DONE GROUNDING (impose_constraints)
(   1.689) LOOP: DONE IMPOSING CONSTRAINTS
(   1.689) LOOP: START GENERATING (program 92)
(   1.689) GENERATE: START SOLVING
(   1.692) GENERATE: DONE SOLVING
(   1.692) LOOP: DONE GENERATING (program 92)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_1(C).
(   1.692) LOOP: START TESTING
(   1.694) LOOP: DONE TESTING ('none', 'none')
(   1.694) LOOP: START IMPOSING CONSTRAINTS
(   1.694) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.694) GENERATE: START GROUNDING (impose_constraints)
(   1.717) GENERATE: DONE GROUNDING (impose_constraints)
(   1.717) LOOP: DONE IMPOSING CONSTRAINTS
(   1.717) LOOP: START GENERATING (program 93)
(   1.717) GENERATE: START SOLVING
(   1.720) GENERATE: DONE SOLVING
(   1.721) LOOP: DONE GENERATING (program 93)
PROGRAM:
  next_value(A,B) :- c_3(B),my_true_value(A,C),c_4(C).
(   1.721) LOOP: START TESTING
(   1.722) LOOP: DONE TESTING ('none', 'some')
(   1.722) LOOP: START IMPOSING CONSTRAINTS
(   1.722) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.722) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.722) GENERATE: START GROUNDING (impose_constraints)
(   1.745) GENERATE: DONE GROUNDING (impose_constraints)
(   1.745) LOOP: DONE IMPOSING CONSTRAINTS
(   1.745) LOOP: START GENERATING (program 94)
(   1.745) GENERATE: START SOLVING
(   1.748) GENERATE: DONE SOLVING
(   1.748) LOOP: DONE GENERATING (program 94)
PROGRAM:
  next_value(A,B) :- c_3(B),my_true_value(A,C),c_1(C).
(   1.748) LOOP: START TESTING
(   1.750) LOOP: DONE TESTING ('none', 'none')
(   1.750) LOOP: START IMPOSING CONSTRAINTS
(   1.750) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.750) GENERATE: START GROUNDING (impose_constraints)
(   1.771) GENERATE: DONE GROUNDING (impose_constraints)
(   1.771) LOOP: DONE IMPOSING CONSTRAINTS
(   1.771) LOOP: START GENERATING (program 95)
(   1.771) GENERATE: START SOLVING
(   1.774) GENERATE: DONE SOLVING
(   1.774) LOOP: DONE GENERATING (program 95)
PROGRAM:
  next_value(A,B) :- c_3(B),my_true_value(A,C),c_3(C).
(   1.774) LOOP: START TESTING
(   1.776) LOOP: DONE TESTING ('none', 'some')
(   1.776) LOOP: START IMPOSING CONSTRAINTS
(   1.776) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.776) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.776) GENERATE: START GROUNDING (impose_constraints)
(   1.801) GENERATE: DONE GROUNDING (impose_constraints)
(   1.801) LOOP: DONE IMPOSING CONSTRAINTS
(   1.801) LOOP: START GENERATING (program 96)
(   1.801) GENERATE: START SOLVING
(   1.804) GENERATE: DONE SOLVING
(   1.805) LOOP: DONE GENERATING (program 96)
PROGRAM:
  next_value(A,B) :- c_3(B),my_true_value(A,C),c_5(C).
(   1.805) LOOP: START TESTING
(   1.806) LOOP: DONE TESTING ('none', 'some')
(   1.806) LOOP: START IMPOSING CONSTRAINTS
(   1.806) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.806) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.807) GENERATE: START GROUNDING (impose_constraints)
(   1.829) GENERATE: DONE GROUNDING (impose_constraints)
(   1.829) LOOP: DONE IMPOSING CONSTRAINTS
(   1.829) LOOP: START GENERATING (program 97)
(   1.829) GENERATE: START SOLVING
(   1.832) GENERATE: DONE SOLVING
(   1.832) LOOP: DONE GENERATING (program 97)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),c_4(B),c_4(C).
(   1.832) LOOP: START TESTING
(   1.834) LOOP: DONE TESTING ('none', 'some')
(   1.834) LOOP: START IMPOSING CONSTRAINTS
(   1.834) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.834) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.834) GENERATE: START GROUNDING (impose_constraints)
(   1.856) GENERATE: DONE GROUNDING (impose_constraints)
(   1.856) LOOP: DONE IMPOSING CONSTRAINTS
(   1.856) LOOP: START GENERATING (program 98)
(   1.856) GENERATE: START SOLVING
(   1.861) GENERATE: DONE SOLVING
(   1.861) LOOP: DONE GENERATING (program 98)
PROGRAM:
  next_value(A,B) :- c_0(B),my_true_value(A,C),c_4(C).
(   1.861) LOOP: START TESTING
(   1.863) LOOP: DONE TESTING ('none', 'some')
(   1.863) LOOP: START IMPOSING CONSTRAINTS
(   1.863) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.863) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.863) GENERATE: START GROUNDING (impose_constraints)
(   1.888) GENERATE: DONE GROUNDING (impose_constraints)
(   1.888) LOOP: DONE IMPOSING CONSTRAINTS
(   1.888) LOOP: START GENERATING (program 99)
(   1.888) GENERATE: START SOLVING
(   1.890) GENERATE: DONE SOLVING
(   1.891) LOOP: DONE GENERATING (program 99)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),c_0(C),c_4(B).
(   1.891) LOOP: START TESTING
(   1.892) LOOP: DONE TESTING ('none', 'some')
(   1.892) LOOP: START IMPOSING CONSTRAINTS
(   1.892) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.892) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.893) GENERATE: START GROUNDING (impose_constraints)
(   1.915) GENERATE: DONE GROUNDING (impose_constraints)
(   1.915) LOOP: DONE IMPOSING CONSTRAINTS
(   1.915) LOOP: START GENERATING (program 100)
(   1.915) GENERATE: START SOLVING
(   1.918) GENERATE: DONE SOLVING
(   1.918) LOOP: DONE GENERATING (program 100)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_3(C).
(   1.918) LOOP: START TESTING
(   1.919) LOOP: DONE TESTING ('some', 'some')
(   1.919) LOOP: START IMPOSING CONSTRAINTS
(   1.919) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   1.919) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   1.920) GENERATE: START GROUNDING (impose_constraints)
(   1.943) GENERATE: DONE GROUNDING (impose_constraints)
(   1.943) LOOP: DONE IMPOSING CONSTRAINTS
(   1.943) LOOP: START GENERATING (program 101)
(   1.943) GENERATE: START SOLVING
(   1.946) GENERATE: DONE SOLVING
(   1.946) LOOP: DONE GENERATING (program 101)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),c_1(C),c_4(B).
(   1.946) LOOP: START TESTING
(   1.948) LOOP: DONE TESTING ('none', 'none')
(   1.948) LOOP: START IMPOSING CONSTRAINTS
(   1.948) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.948) GENERATE: START GROUNDING (impose_constraints)
(   1.970) GENERATE: DONE GROUNDING (impose_constraints)
(   1.970) LOOP: DONE IMPOSING CONSTRAINTS
(   1.970) LOOP: START GENERATING (program 102)
(   1.970) GENERATE: START SOLVING
(   1.973) GENERATE: DONE SOLVING
(   1.974) LOOP: DONE GENERATING (program 102)
PROGRAM:
  next_value(A,B) :- c_0(B),my_true_value(A,C),c_1(C).
(   1.974) LOOP: START TESTING
(   1.976) LOOP: DONE TESTING ('none', 'none')
(   1.976) LOOP: START IMPOSING CONSTRAINTS
(   1.976) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   1.976) GENERATE: START GROUNDING (impose_constraints)
(   1.998) GENERATE: DONE GROUNDING (impose_constraints)
(   1.998) LOOP: DONE IMPOSING CONSTRAINTS
(   1.998) LOOP: START GENERATING (program 103)
(   1.998) GENERATE: START SOLVING
(   2.001) GENERATE: DONE SOLVING
(   2.001) LOOP: DONE GENERATING (program 103)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),c_1(C).
(   2.001) LOOP: START TESTING
(   2.003) LOOP: DONE TESTING ('none', 'none')
(   2.003) LOOP: START IMPOSING CONSTRAINTS
(   2.003) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   2.003) GENERATE: START GROUNDING (impose_constraints)
(   2.027) GENERATE: DONE GROUNDING (impose_constraints)
(   2.027) LOOP: DONE IMPOSING CONSTRAINTS
(   2.027) LOOP: START GENERATING (program 104)
(   2.027) GENERATE: START SOLVING
(   2.031) GENERATE: DONE SOLVING
(   2.031) LOOP: DONE GENERATING (program 104)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
(   2.031) LOOP: START TESTING
(   2.032) LOOP: DONE TESTING ('some', 'none')
(   2.032) LOOP: START IMPOSING CONSTRAINTS
(   2.032) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   2.033) GENERATE: START GROUNDING (impose_constraints)
(   2.056) GENERATE: DONE GROUNDING (impose_constraints)
(   2.056) LOOP: DONE IMPOSING CONSTRAINTS
(   2.056) LOOP: START GENERATING (program 105)
(   2.056) GENERATE: START SOLVING
(   2.059) GENERATE: DONE SOLVING
(   2.060) LOOP: DONE GENERATING (program 105)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),c_5(C),c_4(B).
(   2.060) LOOP: START TESTING
(   2.061) LOOP: DONE TESTING ('none', 'some')
(   2.061) LOOP: START IMPOSING CONSTRAINTS
(   2.061) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   2.061) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   2.062) GENERATE: START GROUNDING (impose_constraints)
(   2.085) GENERATE: DONE GROUNDING (impose_constraints)
(   2.085) LOOP: DONE IMPOSING CONSTRAINTS
(   2.085) LOOP: START GENERATING (program 106)
(   2.085) GENERATE: START SOLVING
(   2.088) GENERATE: DONE SOLVING
(   2.088) LOOP: DONE GENERATING (program 106)
PROGRAM:
  next_value(A,B) :- c_0(B),my_true_value(A,C),c_5(C).
(   2.088) LOOP: START TESTING
(   2.090) LOOP: DONE TESTING ('none', 'some')
(   2.090) LOOP: START IMPOSING CONSTRAINTS
(   2.090) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   2.090) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   2.090) GENERATE: START GROUNDING (impose_constraints)
(   2.115) GENERATE: DONE GROUNDING (impose_constraints)
(   2.115) LOOP: DONE IMPOSING CONSTRAINTS
(   2.115) LOOP: START GENERATING (program 107)
(   2.115) GENERATE: START SOLVING
(   2.118) GENERATE: DONE SOLVING
(   2.118) LOOP: DONE GENERATING (program 107)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),c_3(C),c_4(B).
(   2.118) LOOP: START TESTING
(   2.120) LOOP: DONE TESTING ('none', 'some')
(   2.120) LOOP: START IMPOSING CONSTRAINTS
(   2.120) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   2.120) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   2.121) GENERATE: START GROUNDING (impose_constraints)
(   2.150) GENERATE: DONE GROUNDING (impose_constraints)
(   2.150) LOOP: DONE IMPOSING CONSTRAINTS
(   2.150) LOOP: START GENERATING (program 108)
(   2.150) GENERATE: START SOLVING
(   2.154) GENERATE: DONE SOLVING
(   2.154) LOOP: DONE GENERATING (program 108)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),c_5(C).
(   2.154) LOOP: START TESTING
(   2.157) LOOP: DONE TESTING ('none', 'some')
(   2.157) LOOP: START IMPOSING CONSTRAINTS
(   2.157) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   2.157) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   2.157) GENERATE: START GROUNDING (impose_constraints)
(   2.183) GENERATE: DONE GROUNDING (impose_constraints)
(   2.183) LOOP: DONE IMPOSING CONSTRAINTS
(   2.183) LOOP: START GENERATING (program 109)
(   2.183) GENERATE: START SOLVING
(   2.186) GENERATE: DONE SOLVING
(   2.186) LOOP: DONE GENERATING (program 109)
PROGRAM:
  next_value(A,B) :- c_0(B),my_true_value(A,C),c_3(C).
(   2.186) LOOP: START TESTING
(   2.188) LOOP: DONE TESTING ('none', 'some')
(   2.188) LOOP: START IMPOSING CONSTRAINTS
(   2.188) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(   2.188) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   2.188) GENERATE: START GROUNDING (impose_constraints)
(   2.212) GENERATE: DONE GROUNDING (impose_constraints)
(   2.212) LOOP: DONE IMPOSING CONSTRAINTS
(   2.212) LOOP: START GENERATING (program 110)
(   2.212) GENERATE: START SOLVING
(   2.215) GENERATE: DONE SOLVING
(   2.216) LOOP: DONE GENERATING (program 110)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),c_3(C).
(   2.216) LOOP: START TESTING
(   2.217) LOOP: DONE TESTING ('some', 'some')
(   2.217) LOOP: START IMPOSING CONSTRAINTS
(   2.217) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not clause(1).
(   2.217) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,3),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1.
(   2.217) GENERATE: START GROUNDING (impose_constraints)
(   2.242) GENERATE: DONE GROUNDING (impose_constraints)
(   2.242) LOOP: DONE IMPOSING CONSTRAINTS
(   2.242) LOOP: START GENERATING (program 111)
(   2.242) GENERATE: START SOLVING
(   2.245) GENERATE: DONE SOLVING
(   2.245) LOOP: NO MORE PROGRAMS (with 4 literals)
(   2.245) GENERATE: START SETTING PROGRAM SIZE (5)
(   2.246) GENERATE: START GROUNDING (set_program_size)
(   2.247) GENERATE: DONE GROUNDING (set_program_size)
(   2.247) GENERATE: DONE SETTING PROGRAM SIZE
(   2.247) LOOP: START GENERATING (program 111)
(   2.247) GENERATE: START SOLVING
(   2.250) GENERATE: DONE SOLVING
(   2.251) LOOP: DONE GENERATING (program 111)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,D,C),c_1(D).
(   2.251) LOOP: START TESTING
(   2.253) LOOP: DONE TESTING ('some', 'some')
(   2.253) LOOP: START IMPOSING CONSTRAINTS
(   2.253) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   2.253) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   2.253) GENERATE: START GROUNDING (impose_constraints)
(   2.277) GENERATE: DONE GROUNDING (impose_constraints)
(   2.277) LOOP: DONE IMPOSING CONSTRAINTS
(   2.277) LOOP: START GENERATING (program 112)
(   2.277) GENERATE: START SOLVING
(   2.284) GENERATE: DONE SOLVING
(   2.285) LOOP: DONE GENERATING (program 112)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_true_value(A,D),c_2(C).
(   2.285) LOOP: START TESTING
(   2.286) LOOP: DONE TESTING ('some', 'some')
(   2.286) LOOP: START IMPOSING CONSTRAINTS
(   2.286) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   2.286) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   2.287) GENERATE: START GROUNDING (impose_constraints)
(   2.313) GENERATE: DONE GROUNDING (impose_constraints)
(   2.313) LOOP: DONE IMPOSING CONSTRAINTS
(   2.313) LOOP: START GENERATING (program 113)
(   2.313) GENERATE: START SOLVING
(   2.315) GENERATE: DONE SOLVING
(   2.316) LOOP: DONE GENERATING (program 113)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),my_true_value(A,D),c_2(C).
(   2.316) LOOP: START TESTING
(   2.317) LOOP: DONE TESTING ('some', 'some')
(   2.317) LOOP: START IMPOSING CONSTRAINTS
(   2.318) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   2.318) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   2.318) GENERATE: START GROUNDING (impose_constraints)
(   2.343) GENERATE: DONE GROUNDING (impose_constraints)
(   2.343) LOOP: DONE IMPOSING CONSTRAINTS
(   2.343) LOOP: START GENERATING (program 114)
(   2.343) GENERATE: START SOLVING
(   2.346) GENERATE: DONE SOLVING
(   2.346) LOOP: DONE GENERATING (program 114)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,D),c_2(C),c_4(B).
(   2.347) LOOP: START TESTING
(   2.348) LOOP: DONE TESTING ('none', 'some')
(   2.348) LOOP: START IMPOSING CONSTRAINTS
(   2.348) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.348) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   2.349) GENERATE: START GROUNDING (impose_constraints)
(   2.374) GENERATE: DONE GROUNDING (impose_constraints)
(   2.374) LOOP: DONE IMPOSING CONSTRAINTS
(   2.374) LOOP: START GENERATING (program 115)
(   2.374) GENERATE: START SOLVING
(   2.378) GENERATE: DONE SOLVING
(   2.378) LOOP: DONE GENERATING (program 115)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),my_true_value(A,D),c_2(C).
(   2.378) LOOP: START TESTING
(   2.380) LOOP: DONE TESTING ('none', 'some')
(   2.380) LOOP: START IMPOSING CONSTRAINTS
(   2.380) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.380) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   2.380) GENERATE: START GROUNDING (impose_constraints)
(   2.405) GENERATE: DONE GROUNDING (impose_constraints)
(   2.405) LOOP: DONE IMPOSING CONSTRAINTS
(   2.405) LOOP: START GENERATING (program 116)
(   2.405) GENERATE: START SOLVING
(   2.408) GENERATE: DONE SOLVING
(   2.409) LOOP: DONE GENERATING (program 116)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_true_value(A,D),c_0(C).
(   2.409) LOOP: START TESTING
(   2.411) LOOP: DONE TESTING ('none', 'none')
(   2.411) LOOP: START IMPOSING CONSTRAINTS
(   2.411) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.411) GENERATE: START GROUNDING (impose_constraints)
(   2.438) GENERATE: DONE GROUNDING (impose_constraints)
(   2.438) LOOP: DONE IMPOSING CONSTRAINTS
(   2.438) LOOP: START GENERATING (program 117)
(   2.438) GENERATE: START SOLVING
(   2.441) GENERATE: DONE SOLVING
(   2.442) LOOP: DONE GENERATING (program 117)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_true_value(A,D),c_4(C).
(   2.442) LOOP: START TESTING
(   2.444) LOOP: DONE TESTING ('some', 'none')
(   2.444) LOOP: START IMPOSING CONSTRAINTS
(   2.444) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   2.444) GENERATE: START GROUNDING (impose_constraints)
(   2.470) GENERATE: DONE GROUNDING (impose_constraints)
(   2.470) LOOP: DONE IMPOSING CONSTRAINTS
(   2.470) LOOP: START GENERATING (program 118)
(   2.470) GENERATE: START SOLVING
(   2.473) GENERATE: DONE SOLVING
(   2.473) LOOP: DONE GENERATING (program 118)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),c_4(D),c_2(C).
(   2.473) LOOP: START TESTING
(   2.475) LOOP: DONE TESTING ('none', 'none')
(   2.475) LOOP: START IMPOSING CONSTRAINTS
(   2.475) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.475) GENERATE: START GROUNDING (impose_constraints)
(   2.502) GENERATE: DONE GROUNDING (impose_constraints)
(   2.502) LOOP: DONE IMPOSING CONSTRAINTS
(   2.502) LOOP: START GENERATING (program 119)
(   2.502) GENERATE: START SOLVING
(   2.505) GENERATE: DONE SOLVING
(   2.505) LOOP: DONE GENERATING (program 119)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_true_value(A,D),c_5(C).
(   2.505) LOOP: START TESTING
(   2.507) LOOP: DONE TESTING ('none', 'none')
(   2.507) LOOP: START IMPOSING CONSTRAINTS
(   2.507) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.507) GENERATE: START GROUNDING (impose_constraints)
(   2.534) GENERATE: DONE GROUNDING (impose_constraints)
(   2.534) LOOP: DONE IMPOSING CONSTRAINTS
(   2.534) LOOP: START GENERATING (program 120)
(   2.534) GENERATE: START SOLVING
(   2.537) GENERATE: DONE SOLVING
(   2.538) LOOP: DONE GENERATING (program 120)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),c_0(D),c_2(C).
(   2.538) LOOP: START TESTING
(   2.539) LOOP: DONE TESTING ('none', 'none')
(   2.539) LOOP: START IMPOSING CONSTRAINTS
(   2.539) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.539) GENERATE: START GROUNDING (impose_constraints)
(   2.567) GENERATE: DONE GROUNDING (impose_constraints)
(   2.567) LOOP: DONE IMPOSING CONSTRAINTS
(   2.567) LOOP: START GENERATING (program 121)
(   2.567) GENERATE: START SOLVING
(   2.570) GENERATE: DONE SOLVING
(   2.570) LOOP: DONE GENERATING (program 121)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),my_true_value(A,D),c_2(C).
(   2.570) LOOP: START TESTING
(   2.572) LOOP: DONE TESTING ('none', 'none')
(   2.572) LOOP: START IMPOSING CONSTRAINTS
(   2.572) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.572) GENERATE: START GROUNDING (impose_constraints)
(   2.599) GENERATE: DONE GROUNDING (impose_constraints)
(   2.599) LOOP: DONE IMPOSING CONSTRAINTS
(   2.599) LOOP: START GENERATING (program 122)
(   2.599) GENERATE: START SOLVING
(   2.603) GENERATE: DONE SOLVING
(   2.603) LOOP: DONE GENERATING (program 122)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),my_true_value(A,D),c_0(C).
(   2.603) LOOP: START TESTING
(   2.605) LOOP: DONE TESTING ('none', 'none')
(   2.605) LOOP: START IMPOSING CONSTRAINTS
(   2.605) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.605) GENERATE: START GROUNDING (impose_constraints)
(   2.632) GENERATE: DONE GROUNDING (impose_constraints)
(   2.632) LOOP: DONE IMPOSING CONSTRAINTS
(   2.632) LOOP: START GENERATING (program 123)
(   2.632) GENERATE: START SOLVING
(   2.635) GENERATE: DONE SOLVING
(   2.635) LOOP: DONE GENERATING (program 123)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_5(B),c_2(C).
(   2.635) LOOP: START TESTING
(   2.637) LOOP: DONE TESTING ('some', 'some')
(   2.637) LOOP: START IMPOSING CONSTRAINTS
(   2.637) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   2.637) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   2.637) GENERATE: START GROUNDING (impose_constraints)
(   2.665) GENERATE: DONE GROUNDING (impose_constraints)
(   2.665) LOOP: DONE IMPOSING CONSTRAINTS
(   2.665) LOOP: START GENERATING (program 124)
(   2.665) GENERATE: START SOLVING
(   2.669) GENERATE: DONE SOLVING
(   2.669) LOOP: DONE GENERATING (program 124)
PROGRAM:
  next_value(A,B) :- c_3(D),c_5(B),my_succ(A,D,C),c_2(C).
(   2.669) LOOP: START TESTING
(   2.671) LOOP: DONE TESTING ('none', 'none')
(   2.671) LOOP: START IMPOSING CONSTRAINTS
(   2.671) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.671) GENERATE: START GROUNDING (impose_constraints)
(   2.698) GENERATE: DONE GROUNDING (impose_constraints)
(   2.698) LOOP: DONE IMPOSING CONSTRAINTS
(   2.698) LOOP: START GENERATING (program 125)
(   2.698) GENERATE: START SOLVING
(   2.702) GENERATE: DONE SOLVING
(   2.702) LOOP: DONE GENERATING (program 125)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),c_5(D),c_2(C).
(   2.702) LOOP: START TESTING
(   2.704) LOOP: DONE TESTING ('none', 'none')
(   2.704) LOOP: START IMPOSING CONSTRAINTS
(   2.704) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.704) GENERATE: START GROUNDING (impose_constraints)
(   2.732) GENERATE: DONE GROUNDING (impose_constraints)
(   2.732) LOOP: DONE IMPOSING CONSTRAINTS
(   2.732) LOOP: START GENERATING (program 126)
(   2.732) GENERATE: START SOLVING
(   2.736) GENERATE: DONE SOLVING
(   2.736) LOOP: DONE GENERATING (program 126)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),c_1(D),c_2(C).
(   2.736) LOOP: START TESTING
(   2.738) LOOP: DONE TESTING ('none', 'none')
(   2.738) LOOP: START IMPOSING CONSTRAINTS
(   2.738) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.738) GENERATE: START GROUNDING (impose_constraints)
(   2.771) GENERATE: DONE GROUNDING (impose_constraints)
(   2.771) LOOP: DONE IMPOSING CONSTRAINTS
(   2.771) LOOP: START GENERATING (program 127)
(   2.771) GENERATE: START SOLVING
(   2.776) GENERATE: DONE SOLVING
(   2.776) LOOP: DONE GENERATING (program 127)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),c_2(D),c_2(C).
(   2.777) LOOP: START TESTING
(   2.779) LOOP: DONE TESTING ('none', 'none')
(   2.779) LOOP: START IMPOSING CONSTRAINTS
(   2.779) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.779) GENERATE: START GROUNDING (impose_constraints)
(   2.809) GENERATE: DONE GROUNDING (impose_constraints)
(   2.809) LOOP: DONE IMPOSING CONSTRAINTS
(   2.809) LOOP: START GENERATING (program 128)
(   2.809) GENERATE: START SOLVING
(   2.813) GENERATE: DONE SOLVING
(   2.813) LOOP: DONE GENERATING (program 128)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_5(D),c_2(C).
(   2.813) LOOP: START TESTING
(   2.815) LOOP: DONE TESTING ('none', 'none')
(   2.815) LOOP: START IMPOSING CONSTRAINTS
(   2.815) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.815) GENERATE: START GROUNDING (impose_constraints)
(   2.843) GENERATE: DONE GROUNDING (impose_constraints)
(   2.843) LOOP: DONE IMPOSING CONSTRAINTS
(   2.843) LOOP: START GENERATING (program 129)
(   2.843) GENERATE: START SOLVING
(   2.847) GENERATE: DONE SOLVING
(   2.847) LOOP: DONE GENERATING (program 129)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_1(D),c_2(C).
(   2.847) LOOP: START TESTING
(   2.849) LOOP: DONE TESTING ('some', 'some')
(   2.849) LOOP: START IMPOSING CONSTRAINTS
(   2.849) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   2.849) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   2.849) GENERATE: START GROUNDING (impose_constraints)
(   2.877) GENERATE: DONE GROUNDING (impose_constraints)
(   2.877) LOOP: DONE IMPOSING CONSTRAINTS
(   2.877) LOOP: START GENERATING (program 130)
(   2.877) GENERATE: START SOLVING
(   2.881) GENERATE: DONE SOLVING
(   2.881) LOOP: DONE GENERATING (program 130)
PROGRAM:
  next_value(A,B) :- c_0(D),c_5(B),my_succ(A,D,C),c_2(C).
(   2.881) LOOP: START TESTING
(   2.883) LOOP: DONE TESTING ('none', 'none')
(   2.883) LOOP: START IMPOSING CONSTRAINTS
(   2.883) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.883) GENERATE: START GROUNDING (impose_constraints)
(   2.911) GENERATE: DONE GROUNDING (impose_constraints)
(   2.911) LOOP: DONE IMPOSING CONSTRAINTS
(   2.911) LOOP: START GENERATING (program 131)
(   2.911) GENERATE: START SOLVING
(   2.915) GENERATE: DONE SOLVING
(   2.915) LOOP: DONE GENERATING (program 131)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_4(D),c_2(C).
(   2.915) LOOP: START TESTING
(   2.917) LOOP: DONE TESTING ('none', 'none')
(   2.917) LOOP: START IMPOSING CONSTRAINTS
(   2.917) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.917) GENERATE: START GROUNDING (impose_constraints)
(   2.946) GENERATE: DONE GROUNDING (impose_constraints)
(   2.946) LOOP: DONE IMPOSING CONSTRAINTS
(   2.946) LOOP: START GENERATING (program 132)
(   2.946) GENERATE: START SOLVING
(   2.951) GENERATE: DONE SOLVING
(   2.952) LOOP: DONE GENERATING (program 132)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(C),c_5(B),my_true_value(A,D).
(   2.952) LOOP: START TESTING
(   2.953) LOOP: DONE TESTING ('some', 'none')
(   2.953) LOOP: START IMPOSING CONSTRAINTS
(   2.953) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   2.953) GENERATE: START GROUNDING (impose_constraints)
(   2.985) GENERATE: DONE GROUNDING (impose_constraints)
(   2.985) LOOP: DONE IMPOSING CONSTRAINTS
(   2.985) LOOP: START GENERATING (program 133)
(   2.985) GENERATE: START SOLVING
(   2.989) GENERATE: DONE SOLVING
(   2.989) LOOP: DONE GENERATING (program 133)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_5(B),c_4(C).
(   2.989) LOOP: START TESTING
(   2.991) LOOP: DONE TESTING ('none', 'none')
(   2.991) LOOP: START IMPOSING CONSTRAINTS
(   2.991) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   2.991) GENERATE: START GROUNDING (impose_constraints)
(   3.022) GENERATE: DONE GROUNDING (impose_constraints)
(   3.022) LOOP: DONE IMPOSING CONSTRAINTS
(   3.022) LOOP: START GENERATING (program 134)
(   3.022) GENERATE: START SOLVING
(   3.027) GENERATE: DONE SOLVING
(   3.027) LOOP: DONE GENERATING (program 134)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),my_true_value(A,D),c_4(C).
(   3.027) LOOP: START TESTING
(   3.029) LOOP: DONE TESTING ('some', 'some')
(   3.029) LOOP: START IMPOSING CONSTRAINTS
(   3.029) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   3.029) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.029) GENERATE: START GROUNDING (impose_constraints)
(   3.058) GENERATE: DONE GROUNDING (impose_constraints)
(   3.058) LOOP: DONE IMPOSING CONSTRAINTS
(   3.058) LOOP: START GENERATING (program 135)
(   3.058) GENERATE: START SOLVING
(   3.063) GENERATE: DONE SOLVING
(   3.063) LOOP: DONE GENERATING (program 135)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),my_true_value(A,D),c_2(C).
(   3.063) LOOP: START TESTING
(   3.065) LOOP: DONE TESTING ('none', 'some')
(   3.065) LOOP: START IMPOSING CONSTRAINTS
(   3.065) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.065) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.065) GENERATE: START GROUNDING (impose_constraints)
(   3.096) GENERATE: DONE GROUNDING (impose_constraints)
(   3.096) LOOP: DONE IMPOSING CONSTRAINTS
(   3.096) LOOP: START GENERATING (program 136)
(   3.096) GENERATE: START SOLVING
(   3.104) GENERATE: DONE SOLVING
(   3.104) LOOP: DONE GENERATING (program 136)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,D,C),my_true_value(A,D),c_1(C).
(   3.105) LOOP: START TESTING
(   3.106) LOOP: DONE TESTING ('none', 'some')
(   3.106) LOOP: START IMPOSING CONSTRAINTS
(   3.106) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.106) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.106) GENERATE: START GROUNDING (impose_constraints)
(   3.137) GENERATE: DONE GROUNDING (impose_constraints)
(   3.137) LOOP: DONE IMPOSING CONSTRAINTS
(   3.137) LOOP: START GENERATING (program 137)
(   3.137) GENERATE: START SOLVING
(   3.143) GENERATE: DONE SOLVING
(   3.143) LOOP: DONE GENERATING (program 137)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,D,C),my_true_value(A,D),c_4(C).
(   3.143) LOOP: START TESTING
(   3.145) LOOP: DONE TESTING ('none', 'some')
(   3.145) LOOP: START IMPOSING CONSTRAINTS
(   3.145) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.145) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.145) GENERATE: START GROUNDING (impose_constraints)
(   3.176) GENERATE: DONE GROUNDING (impose_constraints)
(   3.176) LOOP: DONE IMPOSING CONSTRAINTS
(   3.176) LOOP: START GENERATING (program 138)
(   3.176) GENERATE: START SOLVING
(   3.180) GENERATE: DONE SOLVING
(   3.180) LOOP: DONE GENERATING (program 138)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,D,C),my_true_value(A,D),c_0(C).
(   3.180) LOOP: START TESTING
(   3.182) LOOP: DONE TESTING ('none', 'none')
(   3.182) LOOP: START IMPOSING CONSTRAINTS
(   3.182) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.182) GENERATE: START GROUNDING (impose_constraints)
(   3.211) GENERATE: DONE GROUNDING (impose_constraints)
(   3.211) LOOP: DONE IMPOSING CONSTRAINTS
(   3.211) LOOP: START GENERATING (program 139)
(   3.211) GENERATE: START SOLVING
(   3.214) GENERATE: DONE SOLVING
(   3.215) LOOP: DONE GENERATING (program 139)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,D,C),my_true_value(A,D),c_5(C).
(   3.215) LOOP: START TESTING
(   3.217) LOOP: DONE TESTING ('none', 'some')
(   3.217) LOOP: START IMPOSING CONSTRAINTS
(   3.217) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.217) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.217) GENERATE: START GROUNDING (impose_constraints)
(   3.247) GENERATE: DONE GROUNDING (impose_constraints)
(   3.247) LOOP: DONE IMPOSING CONSTRAINTS
(   3.247) LOOP: START GENERATING (program 140)
(   3.247) GENERATE: START SOLVING
(   3.251) GENERATE: DONE SOLVING
(   3.251) LOOP: DONE GENERATING (program 140)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),my_true_value(A,D),c_1(C).
(   3.251) LOOP: START TESTING
(   3.253) LOOP: DONE TESTING ('some', 'some')
(   3.253) LOOP: START IMPOSING CONSTRAINTS
(   3.253) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   3.253) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.254) GENERATE: START GROUNDING (impose_constraints)
(   3.283) GENERATE: DONE GROUNDING (impose_constraints)
(   3.283) LOOP: DONE IMPOSING CONSTRAINTS
(   3.283) LOOP: START GENERATING (program 141)
(   3.283) GENERATE: START SOLVING
(   3.286) GENERATE: DONE SOLVING
(   3.287) LOOP: DONE GENERATING (program 141)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),my_true_value(A,D),c_1(C),c_4(B).
(   3.287) LOOP: START TESTING
(   3.289) LOOP: DONE TESTING ('none', 'some')
(   3.289) LOOP: START IMPOSING CONSTRAINTS
(   3.289) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.289) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.289) GENERATE: START GROUNDING (impose_constraints)
(   3.319) GENERATE: DONE GROUNDING (impose_constraints)
(   3.319) LOOP: DONE IMPOSING CONSTRAINTS
(   3.319) LOOP: START GENERATING (program 142)
(   3.319) GENERATE: START SOLVING
(   3.323) GENERATE: DONE SOLVING
(   3.323) LOOP: DONE GENERATING (program 142)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),my_true_value(A,D),c_4(C).
(   3.323) LOOP: START TESTING
(   3.325) LOOP: DONE TESTING ('none', 'some')
(   3.325) LOOP: START IMPOSING CONSTRAINTS
(   3.325) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.326) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.326) GENERATE: START GROUNDING (impose_constraints)
(   3.356) GENERATE: DONE GROUNDING (impose_constraints)
(   3.356) LOOP: DONE IMPOSING CONSTRAINTS
(   3.356) LOOP: START GENERATING (program 143)
(   3.356) GENERATE: START SOLVING
(   3.362) GENERATE: DONE SOLVING
(   3.362) LOOP: DONE GENERATING (program 143)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),c_2(D),c_1(C),c_4(B).
(   3.362) LOOP: START TESTING
(   3.364) LOOP: DONE TESTING ('none', 'none')
(   3.364) LOOP: START IMPOSING CONSTRAINTS
(   3.364) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.364) GENERATE: START GROUNDING (impose_constraints)
(   3.396) GENERATE: DONE GROUNDING (impose_constraints)
(   3.396) LOOP: DONE IMPOSING CONSTRAINTS
(   3.396) LOOP: START GENERATING (program 144)
(   3.396) GENERATE: START SOLVING
(   3.400) GENERATE: DONE SOLVING
(   3.400) LOOP: DONE GENERATING (program 144)
PROGRAM:
  next_value(A,B) :- c_1(B),c_3(C),my_succ(A,D,C),my_true_value(A,D).
(   3.400) LOOP: START TESTING
(   3.401) LOOP: DONE TESTING ('some', 'some')
(   3.401) LOOP: START IMPOSING CONSTRAINTS
(   3.402) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   3.402) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.402) GENERATE: START GROUNDING (impose_constraints)
(   3.437) GENERATE: DONE GROUNDING (impose_constraints)
(   3.437) LOOP: DONE IMPOSING CONSTRAINTS
(   3.437) LOOP: START GENERATING (program 145)
(   3.437) GENERATE: START SOLVING
(   3.442) GENERATE: DONE SOLVING
(   3.443) LOOP: DONE GENERATING (program 145)
PROGRAM:
  next_value(A,B) :- c_0(B),my_succ(A,D,C),my_true_value(A,D),c_0(C).
(   3.443) LOOP: START TESTING
(   3.445) LOOP: DONE TESTING ('none', 'none')
(   3.445) LOOP: START IMPOSING CONSTRAINTS
(   3.445) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.445) GENERATE: START GROUNDING (impose_constraints)
(   3.476) GENERATE: DONE GROUNDING (impose_constraints)
(   3.476) LOOP: DONE IMPOSING CONSTRAINTS
(   3.476) LOOP: START GENERATING (program 146)
(   3.476) GENERATE: START SOLVING
(   3.480) GENERATE: DONE SOLVING
(   3.481) LOOP: DONE GENERATING (program 146)
PROGRAM:
  next_value(A,B) :- c_0(B),my_succ(A,D,C),c_2(D),c_1(C).
(   3.481) LOOP: START TESTING
(   3.483) LOOP: DONE TESTING ('none', 'none')
(   3.483) LOOP: START IMPOSING CONSTRAINTS
(   3.483) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.483) GENERATE: START GROUNDING (impose_constraints)
(   3.514) GENERATE: DONE GROUNDING (impose_constraints)
(   3.514) LOOP: DONE IMPOSING CONSTRAINTS
(   3.514) LOOP: START GENERATING (program 147)
(   3.514) GENERATE: START SOLVING
(   3.519) GENERATE: DONE SOLVING
(   3.519) LOOP: DONE GENERATING (program 147)
PROGRAM:
  next_value(A,B) :- c_0(B),my_succ(A,D,C),my_true_value(A,D),c_5(C).
(   3.519) LOOP: START TESTING
(   3.521) LOOP: DONE TESTING ('none', 'some')
(   3.521) LOOP: START IMPOSING CONSTRAINTS
(   3.521) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.521) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.521) GENERATE: START GROUNDING (impose_constraints)
(   3.552) GENERATE: DONE GROUNDING (impose_constraints)
(   3.552) LOOP: DONE IMPOSING CONSTRAINTS
(   3.552) LOOP: START GENERATING (program 148)
(   3.552) GENERATE: START SOLVING
(   3.556) GENERATE: DONE SOLVING
(   3.557) LOOP: DONE GENERATING (program 148)
PROGRAM:
  next_value(A,B) :- c_0(D),c_3(B),my_succ(A,D,C),c_4(C).
(   3.557) LOOP: START TESTING
(   3.559) LOOP: DONE TESTING ('none', 'none')
(   3.559) LOOP: START IMPOSING CONSTRAINTS
(   3.559) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.559) GENERATE: START GROUNDING (impose_constraints)
(   3.591) GENERATE: DONE GROUNDING (impose_constraints)
(   3.591) LOOP: DONE IMPOSING CONSTRAINTS
(   3.591) LOOP: START GENERATING (program 149)
(   3.591) GENERATE: START SOLVING
(   3.595) GENERATE: DONE SOLVING
(   3.595) LOOP: DONE GENERATING (program 149)
PROGRAM:
  next_value(A,B) :- c_0(B),my_succ(A,D,C),my_true_value(A,D),c_4(C).
(   3.595) LOOP: START TESTING
(   3.597) LOOP: DONE TESTING ('none', 'some')
(   3.597) LOOP: START IMPOSING CONSTRAINTS
(   3.597) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.597) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.597) GENERATE: START GROUNDING (impose_constraints)
(   3.630) GENERATE: DONE GROUNDING (impose_constraints)
(   3.630) LOOP: DONE IMPOSING CONSTRAINTS
(   3.630) LOOP: START GENERATING (program 150)
(   3.630) GENERATE: START SOLVING
(   3.634) GENERATE: DONE SOLVING
(   3.634) LOOP: DONE GENERATING (program 150)
PROGRAM:
  next_value(A,B) :- c_0(B),c_3(C),my_succ(A,D,C),my_true_value(A,D).
(   3.635) LOOP: START TESTING
(   3.636) LOOP: DONE TESTING ('none', 'some')
(   3.636) LOOP: START IMPOSING CONSTRAINTS
(   3.636) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.636) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.636) GENERATE: START GROUNDING (impose_constraints)
(   3.669) GENERATE: DONE GROUNDING (impose_constraints)
(   3.669) LOOP: DONE IMPOSING CONSTRAINTS
(   3.669) LOOP: START GENERATING (program 151)
(   3.669) GENERATE: START SOLVING
(   3.673) GENERATE: DONE SOLVING
(   3.674) LOOP: DONE GENERATING (program 151)
PROGRAM:
  next_value(A,B) :- c_0(B),my_true_value(A,C),my_succ(A,D,C),my_true_value(A,D).
(   3.674) LOOP: START TESTING
(   3.676) LOOP: DONE TESTING ('none', 'none')
(   3.676) LOOP: START IMPOSING CONSTRAINTS
(   3.676) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.676) GENERATE: START GROUNDING (impose_constraints)
(   3.709) GENERATE: DONE GROUNDING (impose_constraints)
(   3.709) LOOP: DONE IMPOSING CONSTRAINTS
(   3.709) LOOP: START GENERATING (program 152)
(   3.709) GENERATE: START SOLVING
(   3.713) GENERATE: DONE SOLVING
(   3.713) LOOP: DONE GENERATING (program 152)
PROGRAM:
  next_value(A,B) :- c_0(B),my_succ(A,D,C),my_true_value(A,D),c_2(C).
(   3.713) LOOP: START TESTING
(   3.715) LOOP: DONE TESTING ('none', 'none')
(   3.715) LOOP: START IMPOSING CONSTRAINTS
(   3.715) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.715) GENERATE: START GROUNDING (impose_constraints)
(   3.749) GENERATE: DONE GROUNDING (impose_constraints)
(   3.749) LOOP: DONE IMPOSING CONSTRAINTS
(   3.749) LOOP: START GENERATING (program 153)
(   3.749) GENERATE: START SOLVING
(   3.753) GENERATE: DONE SOLVING
(   3.753) LOOP: DONE GENERATING (program 153)
PROGRAM:
  next_value(A,B) :- c_0(B),my_succ(A,D,C),my_true_value(A,D),c_1(C).
(   3.753) LOOP: START TESTING
(   3.755) LOOP: DONE TESTING ('none', 'some')
(   3.755) LOOP: START IMPOSING CONSTRAINTS
(   3.755) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.755) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.755) GENERATE: START GROUNDING (impose_constraints)
(   3.788) GENERATE: DONE GROUNDING (impose_constraints)
(   3.788) LOOP: DONE IMPOSING CONSTRAINTS
(   3.788) LOOP: START GENERATING (program 154)
(   3.788) GENERATE: START SOLVING
(   3.793) GENERATE: DONE SOLVING
(   3.793) LOOP: DONE GENERATING (program 154)
PROGRAM:
  next_value(A,B) :- c_3(B),my_succ(A,D,C),my_true_value(A,D),c_4(C).
(   3.793) LOOP: START TESTING
(   3.795) LOOP: DONE TESTING ('none', 'some')
(   3.795) LOOP: START IMPOSING CONSTRAINTS
(   3.795) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.795) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.795) GENERATE: START GROUNDING (impose_constraints)
(   3.829) GENERATE: DONE GROUNDING (impose_constraints)
(   3.829) LOOP: DONE IMPOSING CONSTRAINTS
(   3.829) LOOP: START GENERATING (program 155)
(   3.829) GENERATE: START SOLVING
(   3.834) GENERATE: DONE SOLVING
(   3.834) LOOP: DONE GENERATING (program 155)
PROGRAM:
  next_value(A,B) :- c_0(B),c_3(D),my_succ(A,D,C),c_2(C).
(   3.835) LOOP: START TESTING
(   3.836) LOOP: DONE TESTING ('none', 'none')
(   3.836) LOOP: START IMPOSING CONSTRAINTS
(   3.836) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.836) GENERATE: START GROUNDING (impose_constraints)
(   3.870) GENERATE: DONE GROUNDING (impose_constraints)
(   3.870) LOOP: DONE IMPOSING CONSTRAINTS
(   3.870) LOOP: START GENERATING (program 156)
(   3.870) GENERATE: START SOLVING
(   3.874) GENERATE: DONE SOLVING
(   3.875) LOOP: DONE GENERATING (program 156)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),my_true_value(A,D),c_1(C).
(   3.875) LOOP: START TESTING
(   3.877) LOOP: DONE TESTING ('some', 'none')
(   3.877) LOOP: START IMPOSING CONSTRAINTS
(   3.877) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   3.877) GENERATE: START GROUNDING (impose_constraints)
(   3.910) GENERATE: DONE GROUNDING (impose_constraints)
(   3.910) LOOP: DONE IMPOSING CONSTRAINTS
(   3.910) LOOP: START GENERATING (program 157)
(   3.910) GENERATE: START SOLVING
(   3.915) GENERATE: DONE SOLVING
(   3.915) LOOP: DONE GENERATING (program 157)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),my_true_value(A,D),c_5(C).
(   3.915) LOOP: START TESTING
(   3.917) LOOP: DONE TESTING ('some', 'none')
(   3.917) LOOP: START IMPOSING CONSTRAINTS
(   3.917) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   3.917) GENERATE: START GROUNDING (impose_constraints)
(   3.951) GENERATE: DONE GROUNDING (impose_constraints)
(   3.951) LOOP: DONE IMPOSING CONSTRAINTS
(   3.951) LOOP: START GENERATING (program 158)
(   3.951) GENERATE: START SOLVING
(   3.956) GENERATE: DONE SOLVING
(   3.956) LOOP: DONE GENERATING (program 158)
PROGRAM:
  next_value(A,B) :- c_0(D),c_5(B),my_succ(A,D,C),c_4(C).
(   3.956) LOOP: START TESTING
(   3.958) LOOP: DONE TESTING ('none', 'none')
(   3.958) LOOP: START IMPOSING CONSTRAINTS
(   3.958) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   3.958) GENERATE: START GROUNDING (impose_constraints)
(   3.992) GENERATE: DONE GROUNDING (impose_constraints)
(   3.992) LOOP: DONE IMPOSING CONSTRAINTS
(   3.992) LOOP: START GENERATING (program 159)
(   3.992) GENERATE: START SOLVING
(   3.996) GENERATE: DONE SOLVING
(   3.996) LOOP: DONE GENERATING (program 159)
PROGRAM:
  next_value(A,B) :- c_3(D),c_5(B),my_succ(A,D,C),c_4(C).
(   3.996) LOOP: START TESTING
(   3.998) LOOP: DONE TESTING ('some', 'some')
(   3.998) LOOP: START IMPOSING CONSTRAINTS
(   3.998) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   3.998) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   3.998) GENERATE: START GROUNDING (impose_constraints)
(   4.034) GENERATE: DONE GROUNDING (impose_constraints)
(   4.034) LOOP: DONE IMPOSING CONSTRAINTS
(   4.034) LOOP: START GENERATING (program 160)
(   4.034) GENERATE: START SOLVING
(   4.038) GENERATE: DONE SOLVING
(   4.038) LOOP: DONE GENERATING (program 160)
PROGRAM:
  next_value(A,B) :- c_3(D),c_5(B),my_succ(A,D,C),c_0(C).
(   4.038) LOOP: START TESTING
(   4.040) LOOP: DONE TESTING ('none', 'none')
(   4.040) LOOP: START IMPOSING CONSTRAINTS
(   4.040) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.040) GENERATE: START GROUNDING (impose_constraints)
(   4.075) GENERATE: DONE GROUNDING (impose_constraints)
(   4.075) LOOP: DONE IMPOSING CONSTRAINTS
(   4.075) LOOP: START GENERATING (program 161)
(   4.075) GENERATE: START SOLVING
(   4.079) GENERATE: DONE SOLVING
(   4.080) LOOP: DONE GENERATING (program 161)
PROGRAM:
  next_value(A,B) :- c_3(D),c_5(B),my_succ(A,D,C),c_1(C).
(   4.080) LOOP: START TESTING
(   4.082) LOOP: DONE TESTING ('none', 'none')
(   4.082) LOOP: START IMPOSING CONSTRAINTS
(   4.082) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.082) GENERATE: START GROUNDING (impose_constraints)
(   4.122) GENERATE: DONE GROUNDING (impose_constraints)
(   4.122) LOOP: DONE IMPOSING CONSTRAINTS
(   4.122) LOOP: START GENERATING (program 162)
(   4.122) GENERATE: START SOLVING
(   4.129) GENERATE: DONE SOLVING
(   4.129) LOOP: DONE GENERATING (program 162)
PROGRAM:
  next_value(A,B) :- c_0(D),c_5(B),my_succ(A,D,C),c_1(C).
(   4.129) LOOP: START TESTING
(   4.131) LOOP: DONE TESTING ('some', 'some')
(   4.131) LOOP: START IMPOSING CONSTRAINTS
(   4.131) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   4.131) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   4.131) GENERATE: START GROUNDING (impose_constraints)
(   4.166) GENERATE: DONE GROUNDING (impose_constraints)
(   4.166) LOOP: DONE IMPOSING CONSTRAINTS
(   4.166) LOOP: START GENERATING (program 163)
(   4.166) GENERATE: START SOLVING
(   4.172) GENERATE: DONE SOLVING
(   4.172) LOOP: DONE GENERATING (program 163)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_4(D),c_1(C).
(   4.172) LOOP: START TESTING
(   4.174) LOOP: DONE TESTING ('none', 'none')
(   4.174) LOOP: START IMPOSING CONSTRAINTS
(   4.174) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.174) GENERATE: START GROUNDING (impose_constraints)
(   4.209) GENERATE: DONE GROUNDING (impose_constraints)
(   4.209) LOOP: DONE IMPOSING CONSTRAINTS
(   4.209) LOOP: START GENERATING (program 164)
(   4.209) GENERATE: START SOLVING
(   4.214) GENERATE: DONE SOLVING
(   4.215) LOOP: DONE GENERATING (program 164)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),my_true_value(A,D),c_0(C).
(   4.215) LOOP: START TESTING
(   4.217) LOOP: DONE TESTING ('none', 'none')
(   4.217) LOOP: START IMPOSING CONSTRAINTS
(   4.217) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.217) GENERATE: START GROUNDING (impose_constraints)
(   4.252) GENERATE: DONE GROUNDING (impose_constraints)
(   4.252) LOOP: DONE IMPOSING CONSTRAINTS
(   4.252) LOOP: START GENERATING (program 165)
(   4.252) GENERATE: START SOLVING
(   4.257) GENERATE: DONE SOLVING
(   4.257) LOOP: DONE GENERATING (program 165)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,D,C),my_true_value(A,D),c_2(C).
(   4.257) LOOP: START TESTING
(   4.259) LOOP: DONE TESTING ('none', 'none')
(   4.259) LOOP: START IMPOSING CONSTRAINTS
(   4.259) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.259) GENERATE: START GROUNDING (impose_constraints)
(   4.294) GENERATE: DONE GROUNDING (impose_constraints)
(   4.294) LOOP: DONE IMPOSING CONSTRAINTS
(   4.294) LOOP: START GENERATING (program 166)
(   4.294) GENERATE: START SOLVING
(   4.301) GENERATE: DONE SOLVING
(   4.301) LOOP: DONE GENERATING (program 166)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_1(D),c_1(C).
(   4.301) LOOP: START TESTING
(   4.303) LOOP: DONE TESTING ('none', 'none')
(   4.303) LOOP: START IMPOSING CONSTRAINTS
(   4.303) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.303) GENERATE: START GROUNDING (impose_constraints)
(   4.339) GENERATE: DONE GROUNDING (impose_constraints)
(   4.339) LOOP: DONE IMPOSING CONSTRAINTS
(   4.339) LOOP: START GENERATING (program 167)
(   4.339) GENERATE: START SOLVING
(   4.343) GENERATE: DONE SOLVING
(   4.344) LOOP: DONE GENERATING (program 167)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_5(D),c_1(C).
(   4.344) LOOP: START TESTING
(   4.345) LOOP: DONE TESTING ('none', 'none')
(   4.345) LOOP: START IMPOSING CONSTRAINTS
(   4.345) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.346) GENERATE: START GROUNDING (impose_constraints)
(   4.380) GENERATE: DONE GROUNDING (impose_constraints)
(   4.380) LOOP: DONE IMPOSING CONSTRAINTS
(   4.380) LOOP: START GENERATING (program 168)
(   4.380) GENERATE: START SOLVING
(   4.385) GENERATE: DONE SOLVING
(   4.386) LOOP: DONE GENERATING (program 168)
PROGRAM:
  next_value(A,B) :- c_3(C),c_5(B),my_succ(A,D,C),my_true_value(A,D).
(   4.386) LOOP: START TESTING
(   4.388) LOOP: DONE TESTING ('some', 'some')
(   4.388) LOOP: START IMPOSING CONSTRAINTS
(   4.388) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   4.388) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   4.388) GENERATE: START GROUNDING (impose_constraints)
(   4.425) GENERATE: DONE GROUNDING (impose_constraints)
(   4.425) LOOP: DONE IMPOSING CONSTRAINTS
(   4.425) LOOP: START GENERATING (program 169)
(   4.425) GENERATE: START SOLVING
(   4.430) GENERATE: DONE SOLVING
(   4.430) LOOP: DONE GENERATING (program 169)
PROGRAM:
  next_value(A,B) :- c_0(D),c_5(B),my_succ(A,D,C),c_0(C).
(   4.430) LOOP: START TESTING
(   4.432) LOOP: DONE TESTING ('none', 'none')
(   4.432) LOOP: START IMPOSING CONSTRAINTS
(   4.432) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.432) GENERATE: START GROUNDING (impose_constraints)
(   4.468) GENERATE: DONE GROUNDING (impose_constraints)
(   4.468) LOOP: DONE IMPOSING CONSTRAINTS
(   4.468) LOOP: START GENERATING (program 170)
(   4.468) GENERATE: START SOLVING
(   4.473) GENERATE: DONE SOLVING
(   4.473) LOOP: DONE GENERATING (program 170)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,D,C),my_true_value(A,D),c_0(C).
(   4.473) LOOP: START TESTING
(   4.475) LOOP: DONE TESTING ('none', 'none')
(   4.475) LOOP: START IMPOSING CONSTRAINTS
(   4.475) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.475) GENERATE: START GROUNDING (impose_constraints)
(   4.511) GENERATE: DONE GROUNDING (impose_constraints)
(   4.511) LOOP: DONE IMPOSING CONSTRAINTS
(   4.511) LOOP: START GENERATING (program 171)
(   4.511) GENERATE: START SOLVING
(   4.516) GENERATE: DONE SOLVING
(   4.516) LOOP: DONE GENERATING (program 171)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_1(D),c_0(C).
(   4.516) LOOP: START TESTING
(   4.519) LOOP: DONE TESTING ('none', 'none')
(   4.519) LOOP: START IMPOSING CONSTRAINTS
(   4.519) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.519) GENERATE: START GROUNDING (impose_constraints)
(   4.556) GENERATE: DONE GROUNDING (impose_constraints)
(   4.556) LOOP: DONE IMPOSING CONSTRAINTS
(   4.556) LOOP: START GENERATING (program 172)
(   4.556) GENERATE: START SOLVING
(   4.560) GENERATE: DONE SOLVING
(   4.561) LOOP: DONE GENERATING (program 172)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_4(D),c_0(C).
(   4.561) LOOP: START TESTING
(   4.562) LOOP: DONE TESTING ('none', 'none')
(   4.563) LOOP: START IMPOSING CONSTRAINTS
(   4.563) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.563) GENERATE: START GROUNDING (impose_constraints)
(   4.598) GENERATE: DONE GROUNDING (impose_constraints)
(   4.598) LOOP: DONE IMPOSING CONSTRAINTS
(   4.598) LOOP: START GENERATING (program 173)
(   4.598) GENERATE: START SOLVING
(   4.604) GENERATE: DONE SOLVING
(   4.604) LOOP: DONE GENERATING (program 173)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),my_true_value(A,D),c_0(C),c_4(B).
(   4.604) LOOP: START TESTING
(   4.606) LOOP: DONE TESTING ('none', 'none')
(   4.606) LOOP: START IMPOSING CONSTRAINTS
(   4.606) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.606) GENERATE: START GROUNDING (impose_constraints)
(   4.644) GENERATE: DONE GROUNDING (impose_constraints)
(   4.644) LOOP: DONE IMPOSING CONSTRAINTS
(   4.644) LOOP: START GENERATING (program 174)
(   4.644) GENERATE: START SOLVING
(   4.649) GENERATE: DONE SOLVING
(   4.649) LOOP: DONE GENERATING (program 174)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_5(D),c_0(C).
(   4.649) LOOP: START TESTING
(   4.651) LOOP: DONE TESTING ('none', 'none')
(   4.651) LOOP: START IMPOSING CONSTRAINTS
(   4.651) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.651) GENERATE: START GROUNDING (impose_constraints)
(   4.688) GENERATE: DONE GROUNDING (impose_constraints)
(   4.688) LOOP: DONE IMPOSING CONSTRAINTS
(   4.688) LOOP: START GENERATING (program 175)
(   4.688) GENERATE: START SOLVING
(   4.693) GENERATE: DONE SOLVING
(   4.694) LOOP: DONE GENERATING (program 175)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_5(D),c_4(C).
(   4.694) LOOP: START TESTING
(   4.695) LOOP: DONE TESTING ('none', 'none')
(   4.695) LOOP: START IMPOSING CONSTRAINTS
(   4.695) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.696) GENERATE: START GROUNDING (impose_constraints)
(   4.734) GENERATE: DONE GROUNDING (impose_constraints)
(   4.734) LOOP: DONE IMPOSING CONSTRAINTS
(   4.734) LOOP: START GENERATING (program 176)
(   4.734) GENERATE: START SOLVING
(   4.739) GENERATE: DONE SOLVING
(   4.739) LOOP: DONE GENERATING (program 176)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,D,C),my_true_value(A,D),c_4(C).
(   4.739) LOOP: START TESTING
(   4.741) LOOP: DONE TESTING ('some', 'some')
(   4.741) LOOP: START IMPOSING CONSTRAINTS
(   4.741) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   4.741) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   4.741) GENERATE: START GROUNDING (impose_constraints)
(   4.778) GENERATE: DONE GROUNDING (impose_constraints)
(   4.778) LOOP: DONE IMPOSING CONSTRAINTS
(   4.778) LOOP: START GENERATING (program 177)
(   4.778) GENERATE: START SOLVING
(   4.785) GENERATE: DONE SOLVING
(   4.785) LOOP: DONE GENERATING (program 177)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_5(D),c_5(C).
(   4.785) LOOP: START TESTING
(   4.787) LOOP: DONE TESTING ('none', 'none')
(   4.787) LOOP: START IMPOSING CONSTRAINTS
(   4.787) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.787) GENERATE: START GROUNDING (impose_constraints)
(   4.829) GENERATE: DONE GROUNDING (impose_constraints)
(   4.829) LOOP: DONE IMPOSING CONSTRAINTS
(   4.829) LOOP: START GENERATING (program 178)
(   4.829) GENERATE: START SOLVING
(   4.835) GENERATE: DONE SOLVING
(   4.836) LOOP: DONE GENERATING (program 178)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,D,C),c_5(D),c_0(C).
(   4.836) LOOP: START TESTING
(   4.837) LOOP: DONE TESTING ('none', 'none')
(   4.837) LOOP: START IMPOSING CONSTRAINTS
(   4.837) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.838) GENERATE: START GROUNDING (impose_constraints)
(   4.875) GENERATE: DONE GROUNDING (impose_constraints)
(   4.875) LOOP: DONE IMPOSING CONSTRAINTS
(   4.875) LOOP: START GENERATING (program 179)
(   4.875) GENERATE: START SOLVING
(   4.880) GENERATE: DONE SOLVING
(   4.881) LOOP: DONE GENERATING (program 179)
PROGRAM:
  next_value(A,B) :- c_0(D),c_2(B),my_succ(A,D,C),c_0(C).
(   4.881) LOOP: START TESTING
(   4.883) LOOP: DONE TESTING ('none', 'none')
(   4.883) LOOP: START IMPOSING CONSTRAINTS
(   4.883) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.883) GENERATE: START GROUNDING (impose_constraints)
(   4.921) GENERATE: DONE GROUNDING (impose_constraints)
(   4.921) LOOP: DONE IMPOSING CONSTRAINTS
(   4.921) LOOP: START GENERATING (program 180)
(   4.921) GENERATE: START SOLVING
(   4.926) GENERATE: DONE SOLVING
(   4.926) LOOP: DONE GENERATING (program 180)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_5(D),c_3(C).
(   4.927) LOOP: START TESTING
(   4.928) LOOP: DONE TESTING ('none', 'none')
(   4.928) LOOP: START IMPOSING CONSTRAINTS
(   4.928) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.928) GENERATE: START GROUNDING (impose_constraints)
(   4.966) GENERATE: DONE GROUNDING (impose_constraints)
(   4.966) LOOP: DONE IMPOSING CONSTRAINTS
(   4.966) LOOP: START GENERATING (program 181)
(   4.966) GENERATE: START SOLVING
(   4.971) GENERATE: DONE SOLVING
(   4.971) LOOP: DONE GENERATING (program 181)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,D,C),my_true_value(A,D).
(   4.972) LOOP: START TESTING
(   4.974) LOOP: DONE TESTING ('none', 'none')
(   4.974) LOOP: START IMPOSING CONSTRAINTS
(   4.974) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   4.974) GENERATE: START GROUNDING (impose_constraints)
(   5.011) GENERATE: DONE GROUNDING (impose_constraints)
(   5.011) LOOP: DONE IMPOSING CONSTRAINTS
(   5.011) LOOP: START GENERATING (program 182)
(   5.011) GENERATE: START SOLVING
(   5.019) GENERATE: DONE SOLVING
(   5.019) LOOP: DONE GENERATING (program 182)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_3(C),my_true_value(A,D).
(   5.019) LOOP: START TESTING
(   5.021) LOOP: DONE TESTING ('none', 'some')
(   5.021) LOOP: START IMPOSING CONSTRAINTS
(   5.021) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.021) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   5.022) GENERATE: START GROUNDING (impose_constraints)
(   5.061) GENERATE: DONE GROUNDING (impose_constraints)
(   5.061) LOOP: DONE IMPOSING CONSTRAINTS
(   5.061) LOOP: START GENERATING (program 183)
(   5.061) GENERATE: START SOLVING
(   5.067) GENERATE: DONE SOLVING
(   5.067) LOOP: DONE GENERATING (program 183)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,D,C),c_1(D),c_1(C).
(   5.067) LOOP: START TESTING
(   5.069) LOOP: DONE TESTING ('none', 'none')
(   5.069) LOOP: START IMPOSING CONSTRAINTS
(   5.069) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.069) GENERATE: START GROUNDING (impose_constraints)
(   5.109) GENERATE: DONE GROUNDING (impose_constraints)
(   5.109) LOOP: DONE IMPOSING CONSTRAINTS
(   5.109) LOOP: START GENERATING (program 184)
(   5.109) GENERATE: START SOLVING
(   5.115) GENERATE: DONE SOLVING
(   5.115) LOOP: DONE GENERATING (program 184)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_5(B),c_0(C).
(   5.115) LOOP: START TESTING
(   5.117) LOOP: DONE TESTING ('none', 'none')
(   5.117) LOOP: START IMPOSING CONSTRAINTS
(   5.117) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.117) GENERATE: START GROUNDING (impose_constraints)
(   5.156) GENERATE: DONE GROUNDING (impose_constraints)
(   5.156) LOOP: DONE IMPOSING CONSTRAINTS
(   5.156) LOOP: START GENERATING (program 185)
(   5.156) GENERATE: START SOLVING
(   5.162) GENERATE: DONE SOLVING
(   5.162) LOOP: DONE GENERATING (program 185)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),c_5(D),c_0(C).
(   5.162) LOOP: START TESTING
(   5.164) LOOP: DONE TESTING ('none', 'none')
(   5.164) LOOP: START IMPOSING CONSTRAINTS
(   5.164) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.164) GENERATE: START GROUNDING (impose_constraints)
(   5.204) GENERATE: DONE GROUNDING (impose_constraints)
(   5.204) LOOP: DONE IMPOSING CONSTRAINTS
(   5.204) LOOP: START GENERATING (program 186)
(   5.204) GENERATE: START SOLVING
(   5.209) GENERATE: DONE SOLVING
(   5.209) LOOP: DONE GENERATING (program 186)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),c_5(D),c_4(C).
(   5.209) LOOP: START TESTING
(   5.211) LOOP: DONE TESTING ('some', 'some')
(   5.211) LOOP: START IMPOSING CONSTRAINTS
(   5.211) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   5.211) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   5.211) GENERATE: START GROUNDING (impose_constraints)
(   5.251) GENERATE: DONE GROUNDING (impose_constraints)
(   5.251) LOOP: DONE IMPOSING CONSTRAINTS
(   5.251) LOOP: START GENERATING (program 187)
(   5.251) GENERATE: START SOLVING
(   5.257) GENERATE: DONE SOLVING
(   5.257) LOOP: DONE GENERATING (program 187)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),c_5(D),c_3(C).
(   5.257) LOOP: START TESTING
(   5.259) LOOP: DONE TESTING ('none', 'none')
(   5.259) LOOP: START IMPOSING CONSTRAINTS
(   5.259) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.259) GENERATE: START GROUNDING (impose_constraints)
(   5.300) GENERATE: DONE GROUNDING (impose_constraints)
(   5.300) LOOP: DONE IMPOSING CONSTRAINTS
(   5.300) LOOP: START GENERATING (program 188)
(   5.300) GENERATE: START SOLVING
(   5.305) GENERATE: DONE SOLVING
(   5.305) LOOP: DONE GENERATING (program 188)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),c_4(D),c_4(C).
(   5.305) LOOP: START TESTING
(   5.307) LOOP: DONE TESTING ('none', 'none')
(   5.307) LOOP: START IMPOSING CONSTRAINTS
(   5.307) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.307) GENERATE: START GROUNDING (impose_constraints)
(   5.348) GENERATE: DONE GROUNDING (impose_constraints)
(   5.348) LOOP: DONE IMPOSING CONSTRAINTS
(   5.348) LOOP: START GENERATING (program 189)
(   5.348) GENERATE: START SOLVING
(   5.353) GENERATE: DONE SOLVING
(   5.353) LOOP: DONE GENERATING (program 189)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),c_5(D),c_1(C).
(   5.353) LOOP: START TESTING
(   5.355) LOOP: DONE TESTING ('none', 'none')
(   5.355) LOOP: START IMPOSING CONSTRAINTS
(   5.355) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.355) GENERATE: START GROUNDING (impose_constraints)
(   5.396) GENERATE: DONE GROUNDING (impose_constraints)
(   5.396) LOOP: DONE IMPOSING CONSTRAINTS
(   5.396) LOOP: START GENERATING (program 190)
(   5.396) GENERATE: START SOLVING
(   5.402) GENERATE: DONE SOLVING
(   5.402) LOOP: DONE GENERATING (program 190)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),c_4(D),c_1(C).
(   5.402) LOOP: START TESTING
(   5.404) LOOP: DONE TESTING ('none', 'none')
(   5.404) LOOP: START IMPOSING CONSTRAINTS
(   5.404) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.404) GENERATE: START GROUNDING (impose_constraints)
(   5.445) GENERATE: DONE GROUNDING (impose_constraints)
(   5.445) LOOP: DONE IMPOSING CONSTRAINTS
(   5.445) LOOP: START GENERATING (program 191)
(   5.445) GENERATE: START SOLVING
(   5.451) GENERATE: DONE SOLVING
(   5.451) LOOP: DONE GENERATING (program 191)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_5(B),c_1(C).
(   5.451) LOOP: START TESTING
(   5.453) LOOP: DONE TESTING ('none', 'none')
(   5.453) LOOP: START IMPOSING CONSTRAINTS
(   5.453) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.453) GENERATE: START GROUNDING (impose_constraints)
(   5.500) GENERATE: DONE GROUNDING (impose_constraints)
(   5.500) LOOP: DONE IMPOSING CONSTRAINTS
(   5.500) LOOP: START GENERATING (program 192)
(   5.500) GENERATE: START SOLVING
(   5.506) GENERATE: DONE SOLVING
(   5.506) LOOP: DONE GENERATING (program 192)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_2(D),c_1(C).
(   5.506) LOOP: START TESTING
(   5.509) LOOP: DONE TESTING ('some', 'some')
(   5.509) LOOP: START IMPOSING CONSTRAINTS
(   5.509) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   5.509) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   5.509) GENERATE: START GROUNDING (impose_constraints)
(   5.553) GENERATE: DONE GROUNDING (impose_constraints)
(   5.553) LOOP: DONE IMPOSING CONSTRAINTS
(   5.553) LOOP: START GENERATING (program 193)
(   5.553) GENERATE: START SOLVING
(   5.558) GENERATE: DONE SOLVING
(   5.558) LOOP: DONE GENERATING (program 193)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_5(B),c_3(C).
(   5.558) LOOP: START TESTING
(   5.561) LOOP: DONE TESTING ('none', 'none')
(   5.561) LOOP: START IMPOSING CONSTRAINTS
(   5.561) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.561) GENERATE: START GROUNDING (impose_constraints)
(   5.602) GENERATE: DONE GROUNDING (impose_constraints)
(   5.602) LOOP: DONE IMPOSING CONSTRAINTS
(   5.602) LOOP: START GENERATING (program 194)
(   5.602) GENERATE: START SOLVING
(   5.609) GENERATE: DONE SOLVING
(   5.609) LOOP: DONE GENERATING (program 194)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_2(D),c_1(C).
(   5.609) LOOP: START TESTING
(   5.611) LOOP: DONE TESTING ('some', 'some')
(   5.611) LOOP: START IMPOSING CONSTRAINTS
(   5.611) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   5.611) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   5.611) GENERATE: START GROUNDING (impose_constraints)
(   5.653) GENERATE: DONE GROUNDING (impose_constraints)
(   5.653) LOOP: DONE IMPOSING CONSTRAINTS
(   5.653) LOOP: START GENERATING (program 195)
(   5.653) GENERATE: START SOLVING
(   5.660) GENERATE: DONE SOLVING
(   5.661) LOOP: DONE GENERATING (program 195)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_2(D),c_4(C).
(   5.661) LOOP: START TESTING
(   5.663) LOOP: DONE TESTING ('none', 'none')
(   5.663) LOOP: START IMPOSING CONSTRAINTS
(   5.663) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.663) GENERATE: START GROUNDING (impose_constraints)
(   5.706) GENERATE: DONE GROUNDING (impose_constraints)
(   5.706) LOOP: DONE IMPOSING CONSTRAINTS
(   5.706) LOOP: START GENERATING (program 196)
(   5.706) GENERATE: START SOLVING
(   5.713) GENERATE: DONE SOLVING
(   5.713) LOOP: DONE GENERATING (program 196)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),my_true_value(A,D),c_1(C).
(   5.713) LOOP: START TESTING
(   5.715) LOOP: DONE TESTING ('none', 'some')
(   5.715) LOOP: START IMPOSING CONSTRAINTS
(   5.715) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.715) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   5.715) GENERATE: START GROUNDING (impose_constraints)
(   5.758) GENERATE: DONE GROUNDING (impose_constraints)
(   5.758) LOOP: DONE IMPOSING CONSTRAINTS
(   5.758) LOOP: START GENERATING (program 197)
(   5.758) GENERATE: START SOLVING
(   5.764) GENERATE: DONE SOLVING
(   5.764) LOOP: DONE GENERATING (program 197)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_2(D),c_2(C).
(   5.764) LOOP: START TESTING
(   5.766) LOOP: DONE TESTING ('none', 'none')
(   5.766) LOOP: START IMPOSING CONSTRAINTS
(   5.766) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.766) GENERATE: START GROUNDING (impose_constraints)
(   5.807) GENERATE: DONE GROUNDING (impose_constraints)
(   5.808) LOOP: DONE IMPOSING CONSTRAINTS
(   5.808) LOOP: START GENERATING (program 198)
(   5.808) GENERATE: START SOLVING
(   5.813) GENERATE: DONE SOLVING
(   5.813) LOOP: DONE GENERATING (program 198)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_2(D),c_2(C).
(   5.813) LOOP: START TESTING
(   5.816) LOOP: DONE TESTING ('none', 'none')
(   5.816) LOOP: START IMPOSING CONSTRAINTS
(   5.816) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.816) GENERATE: START GROUNDING (impose_constraints)
(   5.858) GENERATE: DONE GROUNDING (impose_constraints)
(   5.858) LOOP: DONE IMPOSING CONSTRAINTS
(   5.858) LOOP: START GENERATING (program 199)
(   5.858) GENERATE: START SOLVING
(   5.864) GENERATE: DONE SOLVING
(   5.864) LOOP: DONE GENERATING (program 199)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_2(D),c_2(C).
(   5.864) LOOP: START TESTING
(   5.866) LOOP: DONE TESTING ('none', 'none')
(   5.866) LOOP: START IMPOSING CONSTRAINTS
(   5.866) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.866) GENERATE: START GROUNDING (impose_constraints)
(   5.909) GENERATE: DONE GROUNDING (impose_constraints)
(   5.909) LOOP: DONE IMPOSING CONSTRAINTS
(   5.909) LOOP: START GENERATING (program 200)
(   5.909) GENERATE: START SOLVING
(   5.915) GENERATE: DONE SOLVING
(   5.916) LOOP: DONE GENERATING (program 200)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(D),c_2(C),c_4(B).
(   5.916) LOOP: START TESTING
(   5.918) LOOP: DONE TESTING ('none', 'none')
(   5.918) LOOP: START IMPOSING CONSTRAINTS
(   5.918) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.918) GENERATE: START GROUNDING (impose_constraints)
(   5.961) GENERATE: DONE GROUNDING (impose_constraints)
(   5.961) LOOP: DONE IMPOSING CONSTRAINTS
(   5.961) LOOP: START GENERATING (program 201)
(   5.961) GENERATE: START SOLVING
(   5.966) GENERATE: DONE SOLVING
(   5.967) LOOP: DONE GENERATING (program 201)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_2(D),c_2(C).
(   5.967) LOOP: START TESTING
(   5.969) LOOP: DONE TESTING ('none', 'none')
(   5.969) LOOP: START IMPOSING CONSTRAINTS
(   5.969) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   5.969) GENERATE: START GROUNDING (impose_constraints)
(   6.010) GENERATE: DONE GROUNDING (impose_constraints)
(   6.010) LOOP: DONE IMPOSING CONSTRAINTS
(   6.010) LOOP: START GENERATING (program 202)
(   6.010) GENERATE: START SOLVING
(   6.016) GENERATE: DONE SOLVING
(   6.017) LOOP: DONE GENERATING (program 202)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_2(D),c_0(C).
(   6.017) LOOP: START TESTING
(   6.019) LOOP: DONE TESTING ('none', 'none')
(   6.019) LOOP: START IMPOSING CONSTRAINTS
(   6.019) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.019) GENERATE: START GROUNDING (impose_constraints)
(   6.070) GENERATE: DONE GROUNDING (impose_constraints)
(   6.070) LOOP: DONE IMPOSING CONSTRAINTS
(   6.070) LOOP: START GENERATING (program 203)
(   6.070) GENERATE: START SOLVING
(   6.088) GENERATE: DONE SOLVING
(   6.088) LOOP: DONE GENERATING (program 203)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),my_true_value(A,C),c_1(D).
(   6.088) LOOP: START TESTING
(   6.091) LOOP: DONE TESTING ('none', 'some')
(   6.091) LOOP: START IMPOSING CONSTRAINTS
(   6.091) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.091) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   6.091) GENERATE: START GROUNDING (impose_constraints)
(   6.134) GENERATE: DONE GROUNDING (impose_constraints)
(   6.134) LOOP: DONE IMPOSING CONSTRAINTS
(   6.134) LOOP: START GENERATING (program 204)
(   6.134) GENERATE: START SOLVING
(   6.140) GENERATE: DONE SOLVING
(   6.140) LOOP: DONE GENERATING (program 204)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),my_true_value(A,C),my_true_value(A,D).
(   6.140) LOOP: START TESTING
(   6.142) LOOP: DONE TESTING ('none', 'none')
(   6.142) LOOP: START IMPOSING CONSTRAINTS
(   6.142) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.142) GENERATE: START GROUNDING (impose_constraints)
(   6.184) GENERATE: DONE GROUNDING (impose_constraints)
(   6.184) LOOP: DONE IMPOSING CONSTRAINTS
(   6.184) LOOP: START GENERATING (program 205)
(   6.184) GENERATE: START SOLVING
(   6.191) GENERATE: DONE SOLVING
(   6.191) LOOP: DONE GENERATING (program 205)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_3(B),my_true_value(A,D).
(   6.191) LOOP: START TESTING
(   6.193) LOOP: DONE TESTING ('none', 'none')
(   6.193) LOOP: START IMPOSING CONSTRAINTS
(   6.193) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.193) GENERATE: START GROUNDING (impose_constraints)
(   6.238) GENERATE: DONE GROUNDING (impose_constraints)
(   6.238) LOOP: DONE IMPOSING CONSTRAINTS
(   6.238) LOOP: START GENERATING (program 206)
(   6.238) GENERATE: START SOLVING
(   6.245) GENERATE: DONE SOLVING
(   6.245) LOOP: DONE GENERATING (program 206)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),my_true_value(A,C),my_true_value(A,D).
(   6.245) LOOP: START TESTING
(   6.247) LOOP: DONE TESTING ('none', 'none')
(   6.247) LOOP: START IMPOSING CONSTRAINTS
(   6.247) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.247) GENERATE: START GROUNDING (impose_constraints)
(   6.294) GENERATE: DONE GROUNDING (impose_constraints)
(   6.294) LOOP: DONE IMPOSING CONSTRAINTS
(   6.294) LOOP: START GENERATING (program 207)
(   6.294) GENERATE: START SOLVING
(   6.302) GENERATE: DONE SOLVING
(   6.302) LOOP: DONE GENERATING (program 207)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),my_true_value(A,D),c_4(B).
(   6.302) LOOP: START TESTING
(   6.305) LOOP: DONE TESTING ('none', 'none')
(   6.305) LOOP: START IMPOSING CONSTRAINTS
(   6.305) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.305) GENERATE: START GROUNDING (impose_constraints)
(   6.357) GENERATE: DONE GROUNDING (impose_constraints)
(   6.357) LOOP: DONE IMPOSING CONSTRAINTS
(   6.357) LOOP: START GENERATING (program 208)
(   6.357) GENERATE: START SOLVING
(   6.364) GENERATE: DONE SOLVING
(   6.364) LOOP: DONE GENERATING (program 208)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),my_true_value(A,C),c_5(D).
(   6.364) LOOP: START TESTING
(   6.366) LOOP: DONE TESTING ('none', 'some')
(   6.366) LOOP: START IMPOSING CONSTRAINTS
(   6.366) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.366) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   6.366) GENERATE: START GROUNDING (impose_constraints)
(   6.414) GENERATE: DONE GROUNDING (impose_constraints)
(   6.414) LOOP: DONE IMPOSING CONSTRAINTS
(   6.414) LOOP: START GENERATING (program 209)
(   6.414) GENERATE: START SOLVING
(   6.420) GENERATE: DONE SOLVING
(   6.420) LOOP: DONE GENERATING (program 209)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_2(B),my_true_value(A,C).
(   6.420) LOOP: START TESTING
(   6.423) LOOP: DONE TESTING ('none', 'some')
(   6.423) LOOP: START IMPOSING CONSTRAINTS
(   6.423) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.423) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   6.423) GENERATE: START GROUNDING (impose_constraints)
(   6.471) GENERATE: DONE GROUNDING (impose_constraints)
(   6.471) LOOP: DONE IMPOSING CONSTRAINTS
(   6.471) LOOP: START GENERATING (program 210)
(   6.471) GENERATE: START SOLVING
(   6.477) GENERATE: DONE SOLVING
(   6.477) LOOP: DONE GENERATING (program 210)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_3(B),c_1(D).
(   6.477) LOOP: START TESTING
(   6.479) LOOP: DONE TESTING ('none', 'some')
(   6.479) LOOP: START IMPOSING CONSTRAINTS
(   6.479) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.479) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   6.479) GENERATE: START GROUNDING (impose_constraints)
(   6.525) GENERATE: DONE GROUNDING (impose_constraints)
(   6.525) LOOP: DONE IMPOSING CONSTRAINTS
(   6.525) LOOP: START GENERATING (program 211)
(   6.525) GENERATE: START SOLVING
(   6.533) GENERATE: DONE SOLVING
(   6.533) LOOP: DONE GENERATING (program 211)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_3(B),c_5(D).
(   6.533) LOOP: START TESTING
(   6.535) LOOP: DONE TESTING ('none', 'some')
(   6.535) LOOP: START IMPOSING CONSTRAINTS
(   6.535) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.535) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   6.535) GENERATE: START GROUNDING (impose_constraints)
(   6.583) GENERATE: DONE GROUNDING (impose_constraints)
(   6.583) LOOP: DONE IMPOSING CONSTRAINTS
(   6.583) LOOP: START GENERATING (program 212)
(   6.583) GENERATE: START SOLVING
(   6.589) GENERATE: DONE SOLVING
(   6.590) LOOP: DONE GENERATING (program 212)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_3(B),c_2(D).
(   6.590) LOOP: START TESTING
(   6.591) LOOP: DONE TESTING ('none', 'none')
(   6.591) LOOP: START IMPOSING CONSTRAINTS
(   6.592) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.592) GENERATE: START GROUNDING (impose_constraints)
(   6.644) GENERATE: DONE GROUNDING (impose_constraints)
(   6.644) LOOP: DONE IMPOSING CONSTRAINTS
(   6.644) LOOP: START GENERATING (program 213)
(   6.644) GENERATE: START SOLVING
(   6.653) GENERATE: DONE SOLVING
(   6.654) LOOP: DONE GENERATING (program 213)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_3(B),my_true_value(A,C).
(   6.654) LOOP: START TESTING
(   6.656) LOOP: DONE TESTING ('none', 'some')
(   6.656) LOOP: START IMPOSING CONSTRAINTS
(   6.656) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.656) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   6.656) GENERATE: START GROUNDING (impose_constraints)
(   6.715) GENERATE: DONE GROUNDING (impose_constraints)
(   6.715) LOOP: DONE IMPOSING CONSTRAINTS
(   6.715) LOOP: START GENERATING (program 214)
(   6.715) GENERATE: START SOLVING
(   6.724) GENERATE: DONE SOLVING
(   6.725) LOOP: DONE GENERATING (program 214)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_3(B),my_true_value(A,C).
(   6.725) LOOP: START TESTING
(   6.727) LOOP: DONE TESTING ('none', 'none')
(   6.727) LOOP: START IMPOSING CONSTRAINTS
(   6.727) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.727) GENERATE: START GROUNDING (impose_constraints)
(   6.777) GENERATE: DONE GROUNDING (impose_constraints)
(   6.777) LOOP: DONE IMPOSING CONSTRAINTS
(   6.777) LOOP: START GENERATING (program 215)
(   6.777) GENERATE: START SOLVING
(   6.785) GENERATE: DONE SOLVING
(   6.785) LOOP: DONE GENERATING (program 215)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),my_true_value(A,C),c_2(D).
(   6.785) LOOP: START TESTING
(   6.787) LOOP: DONE TESTING ('none', 'none')
(   6.787) LOOP: START IMPOSING CONSTRAINTS
(   6.787) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.787) GENERATE: START GROUNDING (impose_constraints)
(   6.838) GENERATE: DONE GROUNDING (impose_constraints)
(   6.838) LOOP: DONE IMPOSING CONSTRAINTS
(   6.838) LOOP: START GENERATING (program 216)
(   6.838) GENERATE: START SOLVING
(   6.845) GENERATE: DONE SOLVING
(   6.845) LOOP: DONE GENERATING (program 216)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_5(D),c_4(B).
(   6.845) LOOP: START TESTING
(   6.847) LOOP: DONE TESTING ('none', 'some')
(   6.847) LOOP: START IMPOSING CONSTRAINTS
(   6.847) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.847) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   6.847) GENERATE: START GROUNDING (impose_constraints)
(   6.900) GENERATE: DONE GROUNDING (impose_constraints)
(   6.900) LOOP: DONE IMPOSING CONSTRAINTS
(   6.900) LOOP: START GENERATING (program 217)
(   6.900) GENERATE: START SOLVING
(   6.909) GENERATE: DONE SOLVING
(   6.910) LOOP: DONE GENERATING (program 217)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_2(D),c_4(B).
(   6.910) LOOP: START TESTING
(   6.912) LOOP: DONE TESTING ('none', 'none')
(   6.912) LOOP: START IMPOSING CONSTRAINTS
(   6.912) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.912) GENERATE: START GROUNDING (impose_constraints)
(   6.965) GENERATE: DONE GROUNDING (impose_constraints)
(   6.965) LOOP: DONE IMPOSING CONSTRAINTS
(   6.965) LOOP: START GENERATING (program 218)
(   6.965) GENERATE: START SOLVING
(   6.972) GENERATE: DONE SOLVING
(   6.972) LOOP: DONE GENERATING (program 218)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_4(D),c_4(B).
(   6.972) LOOP: START TESTING
(   6.974) LOOP: DONE TESTING ('none', 'some')
(   6.974) LOOP: START IMPOSING CONSTRAINTS
(   6.974) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   6.974) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   6.974) GENERATE: START GROUNDING (impose_constraints)
(   7.028) GENERATE: DONE GROUNDING (impose_constraints)
(   7.028) LOOP: DONE IMPOSING CONSTRAINTS
(   7.028) LOOP: START GENERATING (program 219)
(   7.028) GENERATE: START SOLVING
(   7.036) GENERATE: DONE SOLVING
(   7.036) LOOP: DONE GENERATING (program 219)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),my_true_value(A,C),c_4(B).
(   7.036) LOOP: START TESTING
(   7.038) LOOP: DONE TESTING ('none', 'some')
(   7.038) LOOP: START IMPOSING CONSTRAINTS
(   7.038) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.038) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   7.038) GENERATE: START GROUNDING (impose_constraints)
(   7.090) GENERATE: DONE GROUNDING (impose_constraints)
(   7.090) LOOP: DONE IMPOSING CONSTRAINTS
(   7.090) LOOP: START GENERATING (program 220)
(   7.090) GENERATE: START SOLVING
(   7.098) GENERATE: DONE SOLVING
(   7.098) LOOP: DONE GENERATING (program 220)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),my_true_value(A,D),c_1(C).
(   7.098) LOOP: START TESTING
(   7.100) LOOP: DONE TESTING ('none', 'some')
(   7.100) LOOP: START IMPOSING CONSTRAINTS
(   7.100) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.100) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   7.100) GENERATE: START GROUNDING (impose_constraints)
(   7.156) GENERATE: DONE GROUNDING (impose_constraints)
(   7.156) LOOP: DONE IMPOSING CONSTRAINTS
(   7.156) LOOP: START GENERATING (program 221)
(   7.156) GENERATE: START SOLVING
(   7.166) GENERATE: DONE SOLVING
(   7.166) LOOP: DONE GENERATING (program 221)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),my_true_value(A,D),c_5(C).
(   7.166) LOOP: START TESTING
(   7.168) LOOP: DONE TESTING ('none', 'none')
(   7.168) LOOP: START IMPOSING CONSTRAINTS
(   7.168) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.168) GENERATE: START GROUNDING (impose_constraints)
(   7.219) GENERATE: DONE GROUNDING (impose_constraints)
(   7.219) LOOP: DONE IMPOSING CONSTRAINTS
(   7.219) LOOP: START GENERATING (program 222)
(   7.219) GENERATE: START SOLVING
(   7.226) GENERATE: DONE SOLVING
(   7.227) LOOP: DONE GENERATING (program 222)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),my_true_value(A,D),c_2(C).
(   7.227) LOOP: START TESTING
(   7.228) LOOP: DONE TESTING ('none', 'some')
(   7.228) LOOP: START IMPOSING CONSTRAINTS
(   7.228) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.228) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   7.229) GENERATE: START GROUNDING (impose_constraints)
(   7.281) GENERATE: DONE GROUNDING (impose_constraints)
(   7.281) LOOP: DONE IMPOSING CONSTRAINTS
(   7.281) LOOP: START GENERATING (program 223)
(   7.281) GENERATE: START SOLVING
(   7.289) GENERATE: DONE SOLVING
(   7.289) LOOP: DONE GENERATING (program 223)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_3(C),my_true_value(A,D).
(   7.289) LOOP: START TESTING
(   7.291) LOOP: DONE TESTING ('none', 'some')
(   7.291) LOOP: START IMPOSING CONSTRAINTS
(   7.291) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.291) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   7.291) GENERATE: START GROUNDING (impose_constraints)
(   7.344) GENERATE: DONE GROUNDING (impose_constraints)
(   7.344) LOOP: DONE IMPOSING CONSTRAINTS
(   7.344) LOOP: START GENERATING (program 224)
(   7.344) GENERATE: START SOLVING
(   7.351) GENERATE: DONE SOLVING
(   7.351) LOOP: DONE GENERATING (program 224)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_1(D),c_2(C).
(   7.351) LOOP: START TESTING
(   7.352) LOOP: DONE TESTING ('none', 'none')
(   7.352) LOOP: START IMPOSING CONSTRAINTS
(   7.353) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.353) GENERATE: START GROUNDING (impose_constraints)
(   7.407) GENERATE: DONE GROUNDING (impose_constraints)
(   7.407) LOOP: DONE IMPOSING CONSTRAINTS
(   7.407) LOOP: START GENERATING (program 225)
(   7.407) GENERATE: START SOLVING
(   7.416) GENERATE: DONE SOLVING
(   7.417) LOOP: DONE GENERATING (program 225)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_5(D),c_2(C).
(   7.417) LOOP: START TESTING
(   7.419) LOOP: DONE TESTING ('none', 'none')
(   7.419) LOOP: START IMPOSING CONSTRAINTS
(   7.419) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.419) GENERATE: START GROUNDING (impose_constraints)
(   7.477) GENERATE: DONE GROUNDING (impose_constraints)
(   7.477) LOOP: DONE IMPOSING CONSTRAINTS
(   7.477) LOOP: START GENERATING (program 226)
(   7.477) GENERATE: START SOLVING
(   7.486) GENERATE: DONE SOLVING
(   7.486) LOOP: DONE GENERATING (program 226)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_4(D),c_2(C).
(   7.486) LOOP: START TESTING
(   7.488) LOOP: DONE TESTING ('none', 'none')
(   7.488) LOOP: START IMPOSING CONSTRAINTS
(   7.488) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.488) GENERATE: START GROUNDING (impose_constraints)
(   7.545) GENERATE: DONE GROUNDING (impose_constraints)
(   7.545) LOOP: DONE IMPOSING CONSTRAINTS
(   7.545) LOOP: START GENERATING (program 227)
(   7.545) GENERATE: START SOLVING
(   7.554) GENERATE: DONE SOLVING
(   7.554) LOOP: DONE GENERATING (program 227)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_3(D),c_2(C).
(   7.554) LOOP: START TESTING
(   7.556) LOOP: DONE TESTING ('none', 'some')
(   7.556) LOOP: START IMPOSING CONSTRAINTS
(   7.556) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.556) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   7.557) GENERATE: START GROUNDING (impose_constraints)
(   7.626) GENERATE: DONE GROUNDING (impose_constraints)
(   7.626) LOOP: DONE IMPOSING CONSTRAINTS
(   7.626) LOOP: START GENERATING (program 228)
(   7.626) GENERATE: START SOLVING
(   7.633) GENERATE: DONE SOLVING
(   7.633) LOOP: DONE GENERATING (program 228)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_0(D),c_2(C).
(   7.633) LOOP: START TESTING
(   7.635) LOOP: DONE TESTING ('none', 'none')
(   7.635) LOOP: START IMPOSING CONSTRAINTS
(   7.635) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.636) GENERATE: START GROUNDING (impose_constraints)
(   7.693) GENERATE: DONE GROUNDING (impose_constraints)
(   7.693) LOOP: DONE IMPOSING CONSTRAINTS
(   7.693) LOOP: START GENERATING (program 229)
(   7.693) GENERATE: START SOLVING
(   7.704) GENERATE: DONE SOLVING
(   7.705) LOOP: DONE GENERATING (program 229)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_1(D),c_2(C).
(   7.705) LOOP: START TESTING
(   7.707) LOOP: DONE TESTING ('none', 'none')
(   7.707) LOOP: START IMPOSING CONSTRAINTS
(   7.707) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.707) GENERATE: START GROUNDING (impose_constraints)
(   7.762) GENERATE: DONE GROUNDING (impose_constraints)
(   7.762) LOOP: DONE IMPOSING CONSTRAINTS
(   7.762) LOOP: START GENERATING (program 230)
(   7.762) GENERATE: START SOLVING
(   7.770) GENERATE: DONE SOLVING
(   7.770) LOOP: DONE GENERATING (program 230)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(C),c_1(B),my_true_value(A,D).
(   7.770) LOOP: START TESTING
(   7.772) LOOP: DONE TESTING ('none', 'some')
(   7.772) LOOP: START IMPOSING CONSTRAINTS
(   7.772) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.772) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   7.773) GENERATE: START GROUNDING (impose_constraints)
(   7.829) GENERATE: DONE GROUNDING (impose_constraints)
(   7.829) LOOP: DONE IMPOSING CONSTRAINTS
(   7.829) LOOP: START GENERATING (program 231)
(   7.829) GENERATE: START SOLVING
(   7.840) GENERATE: DONE SOLVING
(   7.840) LOOP: DONE GENERATING (program 231)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_5(D),c_4(C).
(   7.840) LOOP: START TESTING
(   7.842) LOOP: DONE TESTING ('none', 'some')
(   7.842) LOOP: START IMPOSING CONSTRAINTS
(   7.842) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.842) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   7.842) GENERATE: START GROUNDING (impose_constraints)
(   7.900) GENERATE: DONE GROUNDING (impose_constraints)
(   7.900) LOOP: DONE IMPOSING CONSTRAINTS
(   7.900) LOOP: START GENERATING (program 232)
(   7.900) GENERATE: START SOLVING
(   7.921) GENERATE: DONE SOLVING
(   7.921) LOOP: DONE GENERATING (program 232)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_4(D),c_4(B).
(   7.922) LOOP: START TESTING
(   7.924) LOOP: DONE TESTING ('none', 'some')
(   7.924) LOOP: START IMPOSING CONSTRAINTS
(   7.924) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.924) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   7.924) GENERATE: START GROUNDING (impose_constraints)
(   7.983) GENERATE: DONE GROUNDING (impose_constraints)
(   7.983) LOOP: DONE IMPOSING CONSTRAINTS
(   7.983) LOOP: START GENERATING (program 233)
(   7.983) GENERATE: START SOLVING
(   7.993) GENERATE: DONE SOLVING
(   7.993) LOOP: DONE GENERATING (program 233)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_succ(A,D,C),c_4(D).
(   7.993) LOOP: START TESTING
(   7.995) LOOP: DONE TESTING ('none', 'some')
(   7.995) LOOP: START IMPOSING CONSTRAINTS
(   7.995) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   7.995) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   7.995) GENERATE: START GROUNDING (impose_constraints)
(   8.052) GENERATE: DONE GROUNDING (impose_constraints)
(   8.052) LOOP: DONE IMPOSING CONSTRAINTS
(   8.052) LOOP: START GENERATING (program 234)
(   8.052) GENERATE: START SOLVING
(   8.060) GENERATE: DONE SOLVING
(   8.061) LOOP: DONE GENERATING (program 234)
PROGRAM:
  next_value(A,B) :- c_0(B),my_true_value(A,C),my_succ(A,D,C),c_4(D).
(   8.061) LOOP: START TESTING
(   8.062) LOOP: DONE TESTING ('none', 'some')
(   8.062) LOOP: START IMPOSING CONSTRAINTS
(   8.062) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.062) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   8.062) GENERATE: START GROUNDING (impose_constraints)
(   8.118) GENERATE: DONE GROUNDING (impose_constraints)
(   8.118) LOOP: DONE IMPOSING CONSTRAINTS
(   8.118) LOOP: START GENERATING (program 235)
(   8.118) GENERATE: START SOLVING
(   8.126) GENERATE: DONE SOLVING
(   8.126) LOOP: DONE GENERATING (program 235)
PROGRAM:
  next_value(A,B) :- c_0(B),c_0(D),my_true_value(A,C),my_succ(A,D,C).
(   8.126) LOOP: START TESTING
(   8.128) LOOP: DONE TESTING ('none', 'none')
(   8.128) LOOP: START IMPOSING CONSTRAINTS
(   8.128) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.128) GENERATE: START GROUNDING (impose_constraints)
(   8.194) GENERATE: DONE GROUNDING (impose_constraints)
(   8.194) LOOP: DONE IMPOSING CONSTRAINTS
(   8.194) LOOP: START GENERATING (program 236)
(   8.194) GENERATE: START SOLVING
(   8.204) GENERATE: DONE SOLVING
(   8.205) LOOP: DONE GENERATING (program 236)
PROGRAM:
  next_value(A,B) :- c_0(B),my_true_value(A,C),my_succ(A,D,C),c_5(D).
(   8.205) LOOP: START TESTING
(   8.207) LOOP: DONE TESTING ('none', 'none')
(   8.207) LOOP: START IMPOSING CONSTRAINTS
(   8.207) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.207) GENERATE: START GROUNDING (impose_constraints)
(   8.262) GENERATE: DONE GROUNDING (impose_constraints)
(   8.262) LOOP: DONE IMPOSING CONSTRAINTS
(   8.262) LOOP: START GENERATING (program 237)
(   8.262) GENERATE: START SOLVING
(   8.270) GENERATE: DONE SOLVING
(   8.270) LOOP: DONE GENERATING (program 237)
PROGRAM:
  next_value(A,B) :- c_3(B),my_true_value(A,C),my_succ(A,D,C),c_4(D).
(   8.270) LOOP: START TESTING
(   8.272) LOOP: DONE TESTING ('none', 'some')
(   8.272) LOOP: START IMPOSING CONSTRAINTS
(   8.272) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.272) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   8.272) GENERATE: START GROUNDING (impose_constraints)
(   8.328) GENERATE: DONE GROUNDING (impose_constraints)
(   8.328) LOOP: DONE IMPOSING CONSTRAINTS
(   8.328) LOOP: START GENERATING (program 238)
(   8.328) GENERATE: START SOLVING
(   8.336) GENERATE: DONE SOLVING
(   8.336) LOOP: DONE GENERATING (program 238)
PROGRAM:
  next_value(A,B) :- c_0(D),my_true_value(A,C),my_succ(A,D,C),c_4(B).
(   8.337) LOOP: START TESTING
(   8.338) LOOP: DONE TESTING ('none', 'none')
(   8.338) LOOP: START IMPOSING CONSTRAINTS
(   8.338) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.338) GENERATE: START GROUNDING (impose_constraints)
(   8.395) GENERATE: DONE GROUNDING (impose_constraints)
(   8.395) LOOP: DONE IMPOSING CONSTRAINTS
(   8.395) LOOP: START GENERATING (program 239)
(   8.395) GENERATE: START SOLVING
(   8.403) GENERATE: DONE SOLVING
(   8.403) LOOP: DONE GENERATING (program 239)
PROGRAM:
  next_value(A,B) :- c_0(D),c_1(B),my_true_value(A,C),my_succ(A,D,C).
(   8.403) LOOP: START TESTING
(   8.405) LOOP: DONE TESTING ('none', 'none')
(   8.405) LOOP: START IMPOSING CONSTRAINTS
(   8.405) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.405) GENERATE: START GROUNDING (impose_constraints)
(   8.463) GENERATE: DONE GROUNDING (impose_constraints)
(   8.463) LOOP: DONE IMPOSING CONSTRAINTS
(   8.463) LOOP: START GENERATING (program 240)
(   8.463) GENERATE: START SOLVING
(   8.470) GENERATE: DONE SOLVING
(   8.471) LOOP: DONE GENERATING (program 240)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_succ(A,D,C),c_5(D).
(   8.471) LOOP: START TESTING
(   8.472) LOOP: DONE TESTING ('none', 'none')
(   8.472) LOOP: START IMPOSING CONSTRAINTS
(   8.472) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.472) GENERATE: START GROUNDING (impose_constraints)
(   8.531) GENERATE: DONE GROUNDING (impose_constraints)
(   8.531) LOOP: DONE IMPOSING CONSTRAINTS
(   8.531) LOOP: START GENERATING (program 241)
(   8.531) GENERATE: START SOLVING
(   8.542) GENERATE: DONE SOLVING
(   8.542) LOOP: DONE GENERATING (program 241)
PROGRAM:
  next_value(A,B) :- c_0(D),c_3(B),my_true_value(A,C),my_succ(A,D,C).
(   8.542) LOOP: START TESTING
(   8.544) LOOP: DONE TESTING ('none', 'none')
(   8.544) LOOP: START IMPOSING CONSTRAINTS
(   8.544) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.544) GENERATE: START GROUNDING (impose_constraints)
(   8.603) GENERATE: DONE GROUNDING (impose_constraints)
(   8.603) LOOP: DONE IMPOSING CONSTRAINTS
(   8.603) LOOP: START GENERATING (program 242)
(   8.603) GENERATE: START SOLVING
(   8.612) GENERATE: DONE SOLVING
(   8.613) LOOP: DONE GENERATING (program 242)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_1(D),c_4(B).
(   8.613) LOOP: START TESTING
(   8.615) LOOP: DONE TESTING ('none', 'some')
(   8.615) LOOP: START IMPOSING CONSTRAINTS
(   8.615) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.615) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   8.615) GENERATE: START GROUNDING (impose_constraints)
(   8.671) GENERATE: DONE GROUNDING (impose_constraints)
(   8.672) LOOP: DONE IMPOSING CONSTRAINTS
(   8.672) LOOP: START GENERATING (program 243)
(   8.672) GENERATE: START SOLVING
(   8.681) GENERATE: DONE SOLVING
(   8.681) LOOP: DONE GENERATING (program 243)
PROGRAM:
  next_value(A,B) :- c_3(B),my_true_value(A,C),my_succ(A,D,C),c_1(D).
(   8.681) LOOP: START TESTING
(   8.683) LOOP: DONE TESTING ('none', 'some')
(   8.683) LOOP: START IMPOSING CONSTRAINTS
(   8.683) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.683) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   8.683) GENERATE: START GROUNDING (impose_constraints)
(   8.740) GENERATE: DONE GROUNDING (impose_constraints)
(   8.740) LOOP: DONE IMPOSING CONSTRAINTS
(   8.740) LOOP: START GENERATING (program 244)
(   8.740) GENERATE: START SOLVING
(   8.749) GENERATE: DONE SOLVING
(   8.749) LOOP: DONE GENERATING (program 244)
PROGRAM:
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,D,C),c_4(B).
(   8.749) LOOP: START TESTING
(   8.751) LOOP: DONE TESTING ('none', 'some')
(   8.751) LOOP: START IMPOSING CONSTRAINTS
(   8.751) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.751) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   8.751) GENERATE: START GROUNDING (impose_constraints)
(   8.813) GENERATE: DONE GROUNDING (impose_constraints)
(   8.813) LOOP: DONE IMPOSING CONSTRAINTS
(   8.813) LOOP: START GENERATING (program 245)
(   8.813) GENERATE: START SOLVING
(   8.829) GENERATE: DONE SOLVING
(   8.830) LOOP: DONE GENERATING (program 245)
PROGRAM:
  next_value(A,B) :- c_5(D),my_true_value(A,C),my_succ(A,D,C),c_4(B).
(   8.830) LOOP: START TESTING
(   8.832) LOOP: DONE TESTING ('none', 'none')
(   8.832) LOOP: START IMPOSING CONSTRAINTS
(   8.832) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.833) GENERATE: START GROUNDING (impose_constraints)
(   8.895) GENERATE: DONE GROUNDING (impose_constraints)
(   8.895) LOOP: DONE IMPOSING CONSTRAINTS
(   8.895) LOOP: START GENERATING (program 246)
(   8.895) GENERATE: START SOLVING
(   8.904) GENERATE: DONE SOLVING
(   8.904) LOOP: DONE GENERATING (program 246)
PROGRAM:
  next_value(A,B) :- c_3(B),c_3(D),my_true_value(A,C),my_succ(A,D,C).
(   8.904) LOOP: START TESTING
(   8.906) LOOP: DONE TESTING ('none', 'some')
(   8.906) LOOP: START IMPOSING CONSTRAINTS
(   8.906) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.906) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   8.906) GENERATE: START GROUNDING (impose_constraints)
(   8.964) GENERATE: DONE GROUNDING (impose_constraints)
(   8.964) LOOP: DONE IMPOSING CONSTRAINTS
(   8.964) LOOP: START GENERATING (program 247)
(   8.964) GENERATE: START SOLVING
(   8.972) GENERATE: DONE SOLVING
(   8.972) LOOP: DONE GENERATING (program 247)
PROGRAM:
  next_value(A,B) :- c_3(B),my_true_value(A,C),my_succ(A,D,C),c_5(D).
(   8.972) LOOP: START TESTING
(   8.974) LOOP: DONE TESTING ('none', 'none')
(   8.974) LOOP: START IMPOSING CONSTRAINTS
(   8.974) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   8.974) GENERATE: START GROUNDING (impose_constraints)
(   9.035) GENERATE: DONE GROUNDING (impose_constraints)
(   9.035) LOOP: DONE IMPOSING CONSTRAINTS
(   9.035) LOOP: START GENERATING (program 248)
(   9.035) GENERATE: START SOLVING
(   9.093) GENERATE: DONE SOLVING
(   9.093) LOOP: DONE GENERATING (program 248)
PROGRAM:
  next_value(A,B) :- c_0(B),c_pressButton(D),c_player(C),does(A,C,D).
(   9.093) LOOP: START TESTING
(   9.095) LOOP: DONE TESTING ('none', 'some')
(   9.095) LOOP: START IMPOSING CONSTRAINTS
(   9.095) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.095) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   9.095) GENERATE: START GROUNDING (impose_constraints)
(   9.155) GENERATE: DONE GROUNDING (impose_constraints)
(   9.155) LOOP: DONE IMPOSING CONSTRAINTS
(   9.155) LOOP: START GENERATING (program 249)
(   9.155) GENERATE: START SOLVING
(   9.162) GENERATE: DONE SOLVING
(   9.162) LOOP: DONE GENERATING (program 249)
PROGRAM:
  next_value(A,B) :- c_0(B),c_noop(D),c_player(C),does(A,C,D).
(   9.162) LOOP: START TESTING
(   9.164) LOOP: DONE TESTING ('none', 'some')
(   9.164) LOOP: START IMPOSING CONSTRAINTS
(   9.164) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.164) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   9.164) GENERATE: START GROUNDING (impose_constraints)
(   9.226) GENERATE: DONE GROUNDING (impose_constraints)
(   9.226) LOOP: DONE IMPOSING CONSTRAINTS
(   9.226) LOOP: START GENERATING (program 250)
(   9.226) GENERATE: START SOLVING
(   9.237) GENERATE: DONE SOLVING
(   9.237) LOOP: DONE GENERATING (program 250)
PROGRAM:
  next_value(A,B) :- c_2(B),c_noop(D),c_player(C),does(A,C,D).
(   9.237) LOOP: START TESTING
(   9.239) LOOP: DONE TESTING ('some', 'some')
(   9.239) LOOP: START IMPOSING CONSTRAINTS
(   9.239) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   9.239) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   9.239) GENERATE: START GROUNDING (impose_constraints)
(   9.298) GENERATE: DONE GROUNDING (impose_constraints)
(   9.298) LOOP: DONE IMPOSING CONSTRAINTS
(   9.298) LOOP: START GENERATING (program 251)
(   9.298) GENERATE: START SOLVING
(   9.306) GENERATE: DONE SOLVING
(   9.307) LOOP: DONE GENERATING (program 251)
PROGRAM:
  next_value(A,B) :- c_2(B),c_pressButton(D),c_player(C),does(A,C,D).
(   9.307) LOOP: START TESTING
(   9.308) LOOP: DONE TESTING ('none', 'some')
(   9.308) LOOP: START IMPOSING CONSTRAINTS
(   9.308) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.308) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   9.309) GENERATE: START GROUNDING (impose_constraints)
(   9.368) GENERATE: DONE GROUNDING (impose_constraints)
(   9.368) LOOP: DONE IMPOSING CONSTRAINTS
(   9.368) LOOP: START GENERATING (program 252)
(   9.368) GENERATE: START SOLVING
(   9.377) GENERATE: DONE SOLVING
(   9.377) LOOP: DONE GENERATING (program 252)
PROGRAM:
  next_value(A,B) :- c_noop(D),c_3(B),c_player(C),does(A,C,D).
(   9.377) LOOP: START TESTING
(   9.379) LOOP: DONE TESTING ('none', 'some')
(   9.379) LOOP: START IMPOSING CONSTRAINTS
(   9.379) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.379) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   9.379) GENERATE: START GROUNDING (impose_constraints)
(   9.440) GENERATE: DONE GROUNDING (impose_constraints)
(   9.440) LOOP: DONE IMPOSING CONSTRAINTS
(   9.440) LOOP: START GENERATING (program 253)
(   9.440) GENERATE: START SOLVING
(   9.448) GENERATE: DONE SOLVING
(   9.448) LOOP: DONE GENERATING (program 253)
PROGRAM:
  next_value(A,B) :- c_noop(D),c_player(C),does(A,C,D),c_4(B).
(   9.448) LOOP: START TESTING
(   9.450) LOOP: DONE TESTING ('none', 'some')
(   9.450) LOOP: START IMPOSING CONSTRAINTS
(   9.450) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.450) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   9.450) GENERATE: START GROUNDING (impose_constraints)
(   9.515) GENERATE: DONE GROUNDING (impose_constraints)
(   9.515) LOOP: DONE IMPOSING CONSTRAINTS
(   9.515) LOOP: START GENERATING (program 254)
(   9.515) GENERATE: START SOLVING
(   9.530) GENERATE: DONE SOLVING
(   9.531) LOOP: DONE GENERATING (program 254)
PROGRAM:
  next_value(A,B) :- c_1(B),c_noop(D),c_player(C),does(A,C,D).
(   9.531) LOOP: START TESTING
(   9.534) LOOP: DONE TESTING ('some', 'some')
(   9.534) LOOP: START IMPOSING CONSTRAINTS
(   9.534) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   9.534) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   9.534) GENERATE: START GROUNDING (impose_constraints)
(   9.599) GENERATE: DONE GROUNDING (impose_constraints)
(   9.599) LOOP: DONE IMPOSING CONSTRAINTS
(   9.599) LOOP: START GENERATING (program 255)
(   9.599) GENERATE: START SOLVING
(   9.610) GENERATE: DONE SOLVING
(   9.611) LOOP: DONE GENERATING (program 255)
PROGRAM:
  next_value(A,B) :- c_5(B),c_noop(D),c_player(C),does(A,C,D).
(   9.611) LOOP: START TESTING
(   9.612) LOOP: DONE TESTING ('none', 'some')
(   9.612) LOOP: START IMPOSING CONSTRAINTS
(   9.612) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.612) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   9.612) GENERATE: START GROUNDING (impose_constraints)
(   9.679) GENERATE: DONE GROUNDING (impose_constraints)
(   9.679) LOOP: DONE IMPOSING CONSTRAINTS
(   9.679) LOOP: START GENERATING (program 256)
(   9.679) GENERATE: START SOLVING
(   9.688) GENERATE: DONE SOLVING
(   9.688) LOOP: DONE GENERATING (program 256)
PROGRAM:
  next_value(A,B) :- c_3(B),c_pressButton(D),c_player(C),does(A,C,D).
(   9.688) LOOP: START TESTING
(   9.690) LOOP: DONE TESTING ('none', 'some')
(   9.690) LOOP: START IMPOSING CONSTRAINTS
(   9.690) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.690) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   9.690) GENERATE: START GROUNDING (impose_constraints)
(   9.753) GENERATE: DONE GROUNDING (impose_constraints)
(   9.753) LOOP: DONE IMPOSING CONSTRAINTS
(   9.753) LOOP: START GENERATING (program 257)
(   9.753) GENERATE: START SOLVING
(   9.766) GENERATE: DONE SOLVING
(   9.767) LOOP: DONE GENERATING (program 257)
PROGRAM:
  next_value(A,B) :- c_pressButton(D),c_player(C),does(A,C,D),c_4(B).
(   9.767) LOOP: START TESTING
(   9.769) LOOP: DONE TESTING ('none', 'some')
(   9.769) LOOP: START IMPOSING CONSTRAINTS
(   9.769) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.769) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   9.769) GENERATE: START GROUNDING (impose_constraints)
(   9.832) GENERATE: DONE GROUNDING (impose_constraints)
(   9.832) LOOP: DONE IMPOSING CONSTRAINTS
(   9.832) LOOP: START GENERATING (program 258)
(   9.832) GENERATE: START SOLVING
(   9.840) GENERATE: DONE SOLVING
(   9.840) LOOP: DONE GENERATING (program 258)
PROGRAM:
  next_value(A,B) :- c_5(B),c_pressButton(D),c_player(C),does(A,C,D).
(   9.841) LOOP: START TESTING
(   9.842) LOOP: DONE TESTING ('some', 'none')
(   9.842) LOOP: START IMPOSING CONSTRAINTS
(   9.842) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(   9.842) GENERATE: START GROUNDING (impose_constraints)
(   9.904) GENERATE: DONE GROUNDING (impose_constraints)
(   9.904) LOOP: DONE IMPOSING CONSTRAINTS
(   9.904) LOOP: START GENERATING (program 259)
(   9.904) GENERATE: START SOLVING
(   9.912) GENERATE: DONE SOLVING
(   9.913) LOOP: DONE GENERATING (program 259)
PROGRAM:
  next_value(A,B) :- c_1(B),c_pressButton(D),c_player(C),does(A,C,D).
(   9.913) LOOP: START TESTING
(   9.914) LOOP: DONE TESTING ('none', 'some')
(   9.914) LOOP: START IMPOSING CONSTRAINTS
(   9.914) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.914) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(   9.914) GENERATE: START GROUNDING (impose_constraints)
(   9.977) GENERATE: DONE GROUNDING (impose_constraints)
(   9.977) LOOP: DONE IMPOSING CONSTRAINTS
(   9.977) LOOP: START GENERATING (program 260)
(   9.977) GENERATE: START SOLVING
(   9.986) GENERATE: DONE SOLVING
(   9.986) LOOP: DONE GENERATING (program 260)
PROGRAM:
  next_value(A,B) :- c_0(B),c_3(D),my_succ(A,D,C),c_1(C).
(   9.986) LOOP: START TESTING
(   9.988) LOOP: DONE TESTING ('none', 'none')
(   9.988) LOOP: START IMPOSING CONSTRAINTS
(   9.988) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(   9.988) GENERATE: START GROUNDING (impose_constraints)
(  10.050) GENERATE: DONE GROUNDING (impose_constraints)
(  10.050) LOOP: DONE IMPOSING CONSTRAINTS
(  10.050) LOOP: START GENERATING (program 261)
(  10.050) GENERATE: START SOLVING
(  10.061) GENERATE: DONE SOLVING
(  10.062) LOOP: DONE GENERATING (program 261)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,D,C),c_1(C),c_4(B).
(  10.062) LOOP: START TESTING
(  10.063) LOOP: DONE TESTING ('none', 'none')
(  10.063) LOOP: START IMPOSING CONSTRAINTS
(  10.064) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  10.064) GENERATE: START GROUNDING (impose_constraints)
(  10.128) GENERATE: DONE GROUNDING (impose_constraints)
(  10.128) LOOP: DONE IMPOSING CONSTRAINTS
(  10.128) LOOP: START GENERATING (program 262)
(  10.128) GENERATE: START SOLVING
(  10.140) GENERATE: DONE SOLVING
(  10.140) LOOP: DONE GENERATING (program 262)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_3(D),c_1(C).
(  10.140) LOOP: START TESTING
(  10.142) LOOP: DONE TESTING ('none', 'none')
(  10.143) LOOP: START IMPOSING CONSTRAINTS
(  10.143) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  10.143) GENERATE: START GROUNDING (impose_constraints)
(  10.209) GENERATE: DONE GROUNDING (impose_constraints)
(  10.209) LOOP: DONE IMPOSING CONSTRAINTS
(  10.209) LOOP: START GENERATING (program 263)
(  10.209) GENERATE: START SOLVING
(  10.218) GENERATE: DONE SOLVING
(  10.218) LOOP: DONE GENERATING (program 263)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_3(D),c_4(C).
(  10.218) LOOP: START TESTING
(  10.220) LOOP: DONE TESTING ('none', 'none')
(  10.220) LOOP: START IMPOSING CONSTRAINTS
(  10.220) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  10.220) GENERATE: START GROUNDING (impose_constraints)
(  10.285) GENERATE: DONE GROUNDING (impose_constraints)
(  10.285) LOOP: DONE IMPOSING CONSTRAINTS
(  10.285) LOOP: START GENERATING (program 264)
(  10.285) GENERATE: START SOLVING
(  10.299) GENERATE: DONE SOLVING
(  10.299) LOOP: DONE GENERATING (program 264)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_3(D),c_3(C).
(  10.299) LOOP: START TESTING
(  10.301) LOOP: DONE TESTING ('none', 'none')
(  10.301) LOOP: START IMPOSING CONSTRAINTS
(  10.301) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  10.301) GENERATE: START GROUNDING (impose_constraints)
(  10.364) GENERATE: DONE GROUNDING (impose_constraints)
(  10.364) LOOP: DONE IMPOSING CONSTRAINTS
(  10.364) LOOP: START GENERATING (program 265)
(  10.364) GENERATE: START SOLVING
(  10.376) GENERATE: DONE SOLVING
(  10.376) LOOP: DONE GENERATING (program 265)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_3(D),c_5(C).
(  10.376) LOOP: START TESTING
(  10.377) LOOP: DONE TESTING ('none', 'none')
(  10.377) LOOP: START IMPOSING CONSTRAINTS
(  10.378) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  10.378) GENERATE: START GROUNDING (impose_constraints)
(  10.441) GENERATE: DONE GROUNDING (impose_constraints)
(  10.441) LOOP: DONE IMPOSING CONSTRAINTS
(  10.441) LOOP: START GENERATING (program 266)
(  10.441) GENERATE: START SOLVING
(  10.450) GENERATE: DONE SOLVING
(  10.450) LOOP: DONE GENERATING (program 266)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_3(D),c_0(C).
(  10.450) LOOP: START TESTING
(  10.452) LOOP: DONE TESTING ('none', 'none')
(  10.452) LOOP: START IMPOSING CONSTRAINTS
(  10.452) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  10.452) GENERATE: START GROUNDING (impose_constraints)
(  10.516) GENERATE: DONE GROUNDING (impose_constraints)
(  10.516) LOOP: DONE IMPOSING CONSTRAINTS
(  10.516) LOOP: START GENERATING (program 267)
(  10.516) GENERATE: START SOLVING
(  10.525) GENERATE: DONE SOLVING
(  10.525) LOOP: DONE GENERATING (program 267)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_2(D),c_1(C).
(  10.525) LOOP: START TESTING
(  10.527) LOOP: DONE TESTING ('none', 'some')
(  10.527) LOOP: START IMPOSING CONSTRAINTS
(  10.527) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  10.527) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  10.527) GENERATE: START GROUNDING (impose_constraints)
(  10.591) GENERATE: DONE GROUNDING (impose_constraints)
(  10.592) LOOP: DONE IMPOSING CONSTRAINTS
(  10.592) LOOP: START GENERATING (program 268)
(  10.592) GENERATE: START SOLVING
(  10.607) GENERATE: DONE SOLVING
(  10.607) LOOP: DONE GENERATING (program 268)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,D,C),c_3(C),c_4(B).
(  10.607) LOOP: START TESTING
(  10.609) LOOP: DONE TESTING ('none', 'none')
(  10.609) LOOP: START IMPOSING CONSTRAINTS
(  10.609) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  10.609) GENERATE: START GROUNDING (impose_constraints)
(  10.674) GENERATE: DONE GROUNDING (impose_constraints)
(  10.674) LOOP: DONE IMPOSING CONSTRAINTS
(  10.674) LOOP: START GENERATING (program 269)
(  10.674) GENERATE: START SOLVING
(  10.685) GENERATE: DONE SOLVING
(  10.685) LOOP: DONE GENERATING (program 269)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,D,C),c_2(D),c_3(C).
(  10.685) LOOP: START TESTING
(  10.687) LOOP: DONE TESTING ('some', 'some')
(  10.687) LOOP: START IMPOSING CONSTRAINTS
(  10.687) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(  10.687) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  10.687) GENERATE: START GROUNDING (impose_constraints)
(  10.754) GENERATE: DONE GROUNDING (impose_constraints)
(  10.754) LOOP: DONE IMPOSING CONSTRAINTS
(  10.754) LOOP: START GENERATING (program 270)
(  10.754) GENERATE: START SOLVING
(  10.766) GENERATE: DONE SOLVING
(  10.766) LOOP: DONE GENERATING (program 270)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_2(B),c_3(C).
(  10.766) LOOP: START TESTING
(  10.768) LOOP: DONE TESTING ('none', 'none')
(  10.768) LOOP: START IMPOSING CONSTRAINTS
(  10.768) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  10.768) GENERATE: START GROUNDING (impose_constraints)
(  10.841) GENERATE: DONE GROUNDING (impose_constraints)
(  10.841) LOOP: DONE IMPOSING CONSTRAINTS
(  10.841) LOOP: START GENERATING (program 271)
(  10.841) GENERATE: START SOLVING
(  10.854) GENERATE: DONE SOLVING
(  10.854) LOOP: DONE GENERATING (program 271)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_1(B),c_3(C).
(  10.854) LOOP: START TESTING
(  10.856) LOOP: DONE TESTING ('none', 'none')
(  10.856) LOOP: START IMPOSING CONSTRAINTS
(  10.856) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  10.856) GENERATE: START GROUNDING (impose_constraints)
(  10.923) GENERATE: DONE GROUNDING (impose_constraints)
(  10.923) LOOP: DONE IMPOSING CONSTRAINTS
(  10.923) LOOP: START GENERATING (program 272)
(  10.923) GENERATE: START SOLVING
(  10.932) GENERATE: DONE SOLVING
(  10.933) LOOP: DONE GENERATING (program 272)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_3(C),c_4(D).
(  10.933) LOOP: START TESTING
(  10.934) LOOP: DONE TESTING ('none', 'some')
(  10.934) LOOP: START IMPOSING CONSTRAINTS
(  10.934) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  10.934) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  10.935) GENERATE: START GROUNDING (impose_constraints)
(  11.003) GENERATE: DONE GROUNDING (impose_constraints)
(  11.003) LOOP: DONE IMPOSING CONSTRAINTS
(  11.003) LOOP: START GENERATING (program 273)
(  11.003) GENERATE: START SOLVING
(  11.018) GENERATE: DONE SOLVING
(  11.019) LOOP: DONE GENERATING (program 273)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_0(D),c_3(C).
(  11.019) LOOP: START TESTING
(  11.021) LOOP: DONE TESTING ('none', 'none')
(  11.021) LOOP: START IMPOSING CONSTRAINTS
(  11.021) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  11.021) GENERATE: START GROUNDING (impose_constraints)
(  11.087) GENERATE: DONE GROUNDING (impose_constraints)
(  11.087) LOOP: DONE IMPOSING CONSTRAINTS
(  11.087) LOOP: START GENERATING (program 274)
(  11.087) GENERATE: START SOLVING
(  11.097) GENERATE: DONE SOLVING
(  11.097) LOOP: DONE GENERATING (program 274)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_5(D),c_3(C).
(  11.097) LOOP: START TESTING
(  11.099) LOOP: DONE TESTING ('none', 'none')
(  11.099) LOOP: START IMPOSING CONSTRAINTS
(  11.099) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  11.099) GENERATE: START GROUNDING (impose_constraints)
(  11.164) GENERATE: DONE GROUNDING (impose_constraints)
(  11.164) LOOP: DONE IMPOSING CONSTRAINTS
(  11.164) LOOP: START GENERATING (program 275)
(  11.164) GENERATE: START SOLVING
(  11.173) GENERATE: DONE SOLVING
(  11.173) LOOP: DONE GENERATING (program 275)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_2(D),c_5(C).
(  11.173) LOOP: START TESTING
(  11.175) LOOP: DONE TESTING ('none', 'none')
(  11.175) LOOP: START IMPOSING CONSTRAINTS
(  11.175) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  11.175) GENERATE: START GROUNDING (impose_constraints)
(  11.243) GENERATE: DONE GROUNDING (impose_constraints)
(  11.243) LOOP: DONE IMPOSING CONSTRAINTS
(  11.243) LOOP: START GENERATING (program 276)
(  11.243) GENERATE: START SOLVING
(  11.257) GENERATE: DONE SOLVING
(  11.257) LOOP: DONE GENERATING (program 276)
PROGRAM:
  next_value(A,B) :- c_3(D),c_3(B),my_succ(A,D,C),c_3(C).
(  11.257) LOOP: START TESTING
(  11.259) LOOP: DONE TESTING ('none', 'none')
(  11.259) LOOP: START IMPOSING CONSTRAINTS
(  11.259) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  11.259) GENERATE: START GROUNDING (impose_constraints)
(  11.324) GENERATE: DONE GROUNDING (impose_constraints)
(  11.324) LOOP: DONE IMPOSING CONSTRAINTS
(  11.324) LOOP: START GENERATING (program 277)
(  11.324) GENERATE: START SOLVING
(  11.336) GENERATE: DONE SOLVING
(  11.336) LOOP: DONE GENERATING (program 277)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,D,C),c_2(D),c_3(C).
(  11.336) LOOP: START TESTING
(  11.338) LOOP: DONE TESTING ('some', 'some')
(  11.338) LOOP: START IMPOSING CONSTRAINTS
(  11.338) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(  11.338) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  11.338) GENERATE: START GROUNDING (impose_constraints)
(  11.415) GENERATE: DONE GROUNDING (impose_constraints)
(  11.415) LOOP: DONE IMPOSING CONSTRAINTS
(  11.415) LOOP: START GENERATING (program 278)
(  11.415) GENERATE: START SOLVING
(  11.424) GENERATE: DONE SOLVING
(  11.424) LOOP: DONE GENERATING (program 278)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),c_2(D),c_3(C),c_4(B).
(  11.424) LOOP: START TESTING
(  11.426) LOOP: DONE TESTING ('none', 'some')
(  11.426) LOOP: START IMPOSING CONSTRAINTS
(  11.426) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  11.426) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  11.426) GENERATE: START GROUNDING (impose_constraints)
(  11.499) GENERATE: DONE GROUNDING (impose_constraints)
(  11.499) LOOP: DONE IMPOSING CONSTRAINTS
(  11.499) LOOP: START GENERATING (program 279)
(  11.499) GENERATE: START SOLVING
(  11.510) GENERATE: DONE SOLVING
(  11.510) LOOP: DONE GENERATING (program 279)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_2(D),c_3(C).
(  11.510) LOOP: START TESTING
(  11.512) LOOP: DONE TESTING ('none', 'none')
(  11.512) LOOP: START IMPOSING CONSTRAINTS
(  11.512) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  11.512) GENERATE: START GROUNDING (impose_constraints)
(  11.577) GENERATE: DONE GROUNDING (impose_constraints)
(  11.577) LOOP: DONE IMPOSING CONSTRAINTS
(  11.577) LOOP: START GENERATING (program 280)
(  11.577) GENERATE: START SOLVING
(  11.587) GENERATE: DONE SOLVING
(  11.587) LOOP: DONE GENERATING (program 280)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,D,C),c_1(D),c_3(C).
(  11.587) LOOP: START TESTING
(  11.589) LOOP: DONE TESTING ('none', 'none')
(  11.589) LOOP: START IMPOSING CONSTRAINTS
(  11.589) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  11.589) GENERATE: START GROUNDING (impose_constraints)
(  11.661) GENERATE: DONE GROUNDING (impose_constraints)
(  11.661) LOOP: DONE IMPOSING CONSTRAINTS
(  11.661) LOOP: START GENERATING (program 281)
(  11.661) GENERATE: START SOLVING
(  11.673) GENERATE: DONE SOLVING
(  11.674) LOOP: DONE GENERATING (program 281)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_3(B),c_2(C).
(  11.674) LOOP: START TESTING
(  11.676) LOOP: DONE TESTING ('none', 'some')
(  11.676) LOOP: START IMPOSING CONSTRAINTS
(  11.676) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  11.676) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  11.676) GENERATE: START GROUNDING (impose_constraints)
(  11.742) GENERATE: DONE GROUNDING (impose_constraints)
(  11.742) LOOP: DONE IMPOSING CONSTRAINTS
(  11.742) LOOP: START GENERATING (program 282)
(  11.742) GENERATE: START SOLVING
(  11.752) GENERATE: DONE SOLVING
(  11.753) LOOP: DONE GENERATING (program 282)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,D,C),c_3(C),c_4(D).
(  11.753) LOOP: START TESTING
(  11.754) LOOP: DONE TESTING ('none', 'none')
(  11.754) LOOP: START IMPOSING CONSTRAINTS
(  11.754) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  11.754) GENERATE: START GROUNDING (impose_constraints)
(  11.820) GENERATE: DONE GROUNDING (impose_constraints)
(  11.820) LOOP: DONE IMPOSING CONSTRAINTS
(  11.820) LOOP: START GENERATING (program 283)
(  11.820) GENERATE: START SOLVING
(  11.829) GENERATE: DONE SOLVING
(  11.830) LOOP: DONE GENERATING (program 283)
PROGRAM:
  next_value(A,B) :- c_0(D),c_2(B),my_succ(A,D,C),c_3(C).
(  11.830) LOOP: START TESTING
(  11.831) LOOP: DONE TESTING ('none', 'none')
(  11.831) LOOP: START IMPOSING CONSTRAINTS
(  11.831) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  11.832) GENERATE: START GROUNDING (impose_constraints)
(  11.900) GENERATE: DONE GROUNDING (impose_constraints)
(  11.900) LOOP: DONE IMPOSING CONSTRAINTS
(  11.900) LOOP: START GENERATING (program 284)
(  11.900) GENERATE: START SOLVING
(  11.914) GENERATE: DONE SOLVING
(  11.914) LOOP: DONE GENERATING (program 284)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,D,C),c_5(D),c_3(C).
(  11.914) LOOP: START TESTING
(  11.916) LOOP: DONE TESTING ('none', 'none')
(  11.916) LOOP: START IMPOSING CONSTRAINTS
(  11.916) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  11.916) GENERATE: START GROUNDING (impose_constraints)
(  11.983) GENERATE: DONE GROUNDING (impose_constraints)
(  11.983) LOOP: DONE IMPOSING CONSTRAINTS
(  11.983) LOOP: START GENERATING (program 285)
(  11.983) GENERATE: START SOLVING
(  11.993) GENERATE: DONE SOLVING
(  11.993) LOOP: DONE GENERATING (program 285)
PROGRAM:
  next_value(A,B) :- c_3(B),my_succ(A,D,C),c_1(D),c_3(C).
(  11.993) LOOP: START TESTING
(  11.995) LOOP: DONE TESTING ('none', 'none')
(  11.995) LOOP: START IMPOSING CONSTRAINTS
(  11.995) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  11.995) GENERATE: START GROUNDING (impose_constraints)
(  12.064) GENERATE: DONE GROUNDING (impose_constraints)
(  12.064) LOOP: DONE IMPOSING CONSTRAINTS
(  12.064) LOOP: START GENERATING (program 286)
(  12.064) GENERATE: START SOLVING
(  12.085) GENERATE: DONE SOLVING
(  12.085) LOOP: DONE GENERATING (program 286)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_5(C),c_4(B).
(  12.085) LOOP: START TESTING
(  12.088) LOOP: DONE TESTING ('none', 'none')
(  12.088) LOOP: START IMPOSING CONSTRAINTS
(  12.088) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  12.088) GENERATE: START GROUNDING (impose_constraints)
(  12.160) GENERATE: DONE GROUNDING (impose_constraints)
(  12.160) LOOP: DONE IMPOSING CONSTRAINTS
(  12.160) LOOP: START GENERATING (program 287)
(  12.160) GENERATE: START SOLVING
(  12.171) GENERATE: DONE SOLVING
(  12.171) LOOP: DONE GENERATING (program 287)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,D,C),c_4(D),c_2(C).
(  12.172) LOOP: START TESTING
(  12.173) LOOP: DONE TESTING ('none', 'none')
(  12.173) LOOP: START IMPOSING CONSTRAINTS
(  12.173) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  12.173) GENERATE: START GROUNDING (impose_constraints)
(  12.247) GENERATE: DONE GROUNDING (impose_constraints)
(  12.247) LOOP: DONE IMPOSING CONSTRAINTS
(  12.247) LOOP: START GENERATING (program 288)
(  12.247) GENERATE: START SOLVING
(  12.259) GENERATE: DONE SOLVING
(  12.259) LOOP: DONE GENERATING (program 288)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),c_1(D),c_2(C),c_4(B).
(  12.259) LOOP: START TESTING
(  12.261) LOOP: DONE TESTING ('none', 'some')
(  12.261) LOOP: START IMPOSING CONSTRAINTS
(  12.261) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  12.261) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  12.261) GENERATE: START GROUNDING (impose_constraints)
(  12.329) GENERATE: DONE GROUNDING (impose_constraints)
(  12.329) LOOP: DONE IMPOSING CONSTRAINTS
(  12.329) LOOP: START GENERATING (program 289)
(  12.329) GENERATE: START SOLVING
(  12.338) GENERATE: DONE SOLVING
(  12.338) LOOP: DONE GENERATING (program 289)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),c_4(D),c_2(C),c_4(B).
(  12.338) LOOP: START TESTING
(  12.340) LOOP: DONE TESTING ('none', 'none')
(  12.340) LOOP: START IMPOSING CONSTRAINTS
(  12.340) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  12.340) GENERATE: START GROUNDING (impose_constraints)
(  12.414) GENERATE: DONE GROUNDING (impose_constraints)
(  12.414) LOOP: DONE IMPOSING CONSTRAINTS
(  12.414) LOOP: START GENERATING (program 290)
(  12.414) GENERATE: START SOLVING
(  12.425) GENERATE: DONE SOLVING
(  12.425) LOOP: DONE GENERATING (program 290)
PROGRAM:
  next_value(A,B) :- c_0(D),my_succ(A,D,C),c_2(C),c_4(B).
(  12.425) LOOP: START TESTING
(  12.427) LOOP: DONE TESTING ('none', 'none')
(  12.427) LOOP: START IMPOSING CONSTRAINTS
(  12.427) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  12.428) GENERATE: START GROUNDING (impose_constraints)
(  12.495) GENERATE: DONE GROUNDING (impose_constraints)
(  12.495) LOOP: DONE IMPOSING CONSTRAINTS
(  12.495) LOOP: START GENERATING (program 291)
(  12.495) GENERATE: START SOLVING
(  12.504) GENERATE: DONE SOLVING
(  12.505) LOOP: DONE GENERATING (program 291)
PROGRAM:
  next_value(A,B) :- c_3(B),my_succ(A,D,C),c_1(D),c_2(C).
(  12.505) LOOP: START TESTING
(  12.506) LOOP: DONE TESTING ('none', 'some')
(  12.506) LOOP: START IMPOSING CONSTRAINTS
(  12.506) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  12.506) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  12.507) GENERATE: START GROUNDING (impose_constraints)
(  12.580) GENERATE: DONE GROUNDING (impose_constraints)
(  12.580) LOOP: DONE IMPOSING CONSTRAINTS
(  12.580) LOOP: START GENERATING (program 292)
(  12.580) GENERATE: START SOLVING
(  12.591) GENERATE: DONE SOLVING
(  12.592) LOOP: DONE GENERATING (program 292)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_5(D),c_2(C).
(  12.592) LOOP: START TESTING
(  12.593) LOOP: DONE TESTING ('none', 'none')
(  12.593) LOOP: START IMPOSING CONSTRAINTS
(  12.593) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  12.593) GENERATE: START GROUNDING (impose_constraints)
(  12.663) GENERATE: DONE GROUNDING (impose_constraints)
(  12.663) LOOP: DONE IMPOSING CONSTRAINTS
(  12.663) LOOP: START GENERATING (program 293)
(  12.663) GENERATE: START SOLVING
(  12.672) GENERATE: DONE SOLVING
(  12.673) LOOP: DONE GENERATING (program 293)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_5(D),c_2(C).
(  12.673) LOOP: START TESTING
(  12.674) LOOP: DONE TESTING ('none', 'none')
(  12.674) LOOP: START IMPOSING CONSTRAINTS
(  12.674) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  12.675) GENERATE: START GROUNDING (impose_constraints)
(  12.757) GENERATE: DONE GROUNDING (impose_constraints)
(  12.757) LOOP: DONE IMPOSING CONSTRAINTS
(  12.757) LOOP: START GENERATING (program 294)
(  12.757) GENERATE: START SOLVING
(  12.767) GENERATE: DONE SOLVING
(  12.767) LOOP: DONE GENERATING (program 294)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),c_2(C),c_4(B).
(  12.767) LOOP: START TESTING
(  12.769) LOOP: DONE TESTING ('none', 'none')
(  12.769) LOOP: START IMPOSING CONSTRAINTS
(  12.769) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  12.769) GENERATE: START GROUNDING (impose_constraints)
(  12.839) GENERATE: DONE GROUNDING (impose_constraints)
(  12.839) LOOP: DONE IMPOSING CONSTRAINTS
(  12.839) LOOP: START GENERATING (program 295)
(  12.839) GENERATE: START SOLVING
(  12.848) GENERATE: DONE SOLVING
(  12.848) LOOP: DONE GENERATING (program 295)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_5(D),c_2(C).
(  12.848) LOOP: START TESTING
(  12.850) LOOP: DONE TESTING ('none', 'none')
(  12.850) LOOP: START IMPOSING CONSTRAINTS
(  12.850) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  12.850) GENERATE: START GROUNDING (impose_constraints)
(  12.923) GENERATE: DONE GROUNDING (impose_constraints)
(  12.923) LOOP: DONE IMPOSING CONSTRAINTS
(  12.923) LOOP: START GENERATING (program 296)
(  12.923) GENERATE: START SOLVING
(  12.934) GENERATE: DONE SOLVING
(  12.934) LOOP: DONE GENERATING (program 296)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_1(D),c_2(C).
(  12.934) LOOP: START TESTING
(  12.936) LOOP: DONE TESTING ('none', 'none')
(  12.936) LOOP: START IMPOSING CONSTRAINTS
(  12.936) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  12.936) GENERATE: START GROUNDING (impose_constraints)
(  13.006) GENERATE: DONE GROUNDING (impose_constraints)
(  13.006) LOOP: DONE IMPOSING CONSTRAINTS
(  13.006) LOOP: START GENERATING (program 297)
(  13.006) GENERATE: START SOLVING
(  13.016) GENERATE: DONE SOLVING
(  13.016) LOOP: DONE GENERATING (program 297)
PROGRAM:
  next_value(A,B) :- c_3(B),my_succ(A,D,C),c_4(D),c_2(C).
(  13.016) LOOP: START TESTING
(  13.018) LOOP: DONE TESTING ('none', 'none')
(  13.018) LOOP: START IMPOSING CONSTRAINTS
(  13.018) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  13.018) GENERATE: START GROUNDING (impose_constraints)
(  13.092) GENERATE: DONE GROUNDING (impose_constraints)
(  13.092) LOOP: DONE IMPOSING CONSTRAINTS
(  13.092) LOOP: START GENERATING (program 298)
(  13.092) GENERATE: START SOLVING
(  13.102) GENERATE: DONE SOLVING
(  13.102) LOOP: DONE GENERATING (program 298)
PROGRAM:
  next_value(A,B) :- c_0(D),c_3(B),my_succ(A,D,C),c_2(C).
(  13.102) LOOP: START TESTING
(  13.104) LOOP: DONE TESTING ('none', 'none')
(  13.104) LOOP: START IMPOSING CONSTRAINTS
(  13.104) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  13.104) GENERATE: START GROUNDING (impose_constraints)
(  13.173) GENERATE: DONE GROUNDING (impose_constraints)
(  13.173) LOOP: DONE IMPOSING CONSTRAINTS
(  13.173) LOOP: START GENERATING (program 299)
(  13.173) GENERATE: START SOLVING
(  13.182) GENERATE: DONE SOLVING
(  13.183) LOOP: DONE GENERATING (program 299)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,D,C),c_4(D),c_2(C).
(  13.183) LOOP: START TESTING
(  13.184) LOOP: DONE TESTING ('none', 'none')
(  13.184) LOOP: START IMPOSING CONSTRAINTS
(  13.185) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  13.185) GENERATE: START GROUNDING (impose_constraints)
(  13.258) GENERATE: DONE GROUNDING (impose_constraints)
(  13.258) LOOP: DONE IMPOSING CONSTRAINTS
(  13.258) LOOP: START GENERATING (program 300)
(  13.258) GENERATE: START SOLVING
(  13.269) GENERATE: DONE SOLVING
(  13.270) LOOP: DONE GENERATING (program 300)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_4(D),c_2(C),c_4(B).
(  13.270) LOOP: START TESTING
(  13.272) LOOP: DONE TESTING ('none', 'none')
(  13.272) LOOP: START IMPOSING CONSTRAINTS
(  13.272) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  13.272) GENERATE: START GROUNDING (impose_constraints)
(  13.342) GENERATE: DONE GROUNDING (impose_constraints)
(  13.342) LOOP: DONE IMPOSING CONSTRAINTS
(  13.342) LOOP: START GENERATING (program 301)
(  13.342) GENERATE: START SOLVING
(  13.353) GENERATE: DONE SOLVING
(  13.354) LOOP: DONE GENERATING (program 301)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_4(D),c_2(C).
(  13.354) LOOP: START TESTING
(  13.355) LOOP: DONE TESTING ('none', 'none')
(  13.355) LOOP: START IMPOSING CONSTRAINTS
(  13.355) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  13.356) GENERATE: START GROUNDING (impose_constraints)
(  13.428) GENERATE: DONE GROUNDING (impose_constraints)
(  13.428) LOOP: DONE IMPOSING CONSTRAINTS
(  13.428) LOOP: START GENERATING (program 302)
(  13.428) GENERATE: START SOLVING
(  13.441) GENERATE: DONE SOLVING
(  13.441) LOOP: DONE GENERATING (program 302)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_0(D),c_2(C).
(  13.441) LOOP: START TESTING
(  13.443) LOOP: DONE TESTING ('none', 'none')
(  13.443) LOOP: START IMPOSING CONSTRAINTS
(  13.443) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  13.443) GENERATE: START GROUNDING (impose_constraints)
(  13.513) GENERATE: DONE GROUNDING (impose_constraints)
(  13.513) LOOP: DONE IMPOSING CONSTRAINTS
(  13.513) LOOP: START GENERATING (program 303)
(  13.513) GENERATE: START SOLVING
(  13.524) GENERATE: DONE SOLVING
(  13.525) LOOP: DONE GENERATING (program 303)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_2(C),c_4(B).
(  13.525) LOOP: START TESTING
(  13.527) LOOP: DONE TESTING ('none', 'none')
(  13.527) LOOP: START IMPOSING CONSTRAINTS
(  13.527) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  13.527) GENERATE: START GROUNDING (impose_constraints)
(  13.599) GENERATE: DONE GROUNDING (impose_constraints)
(  13.599) LOOP: DONE IMPOSING CONSTRAINTS
(  13.599) LOOP: START GENERATING (program 304)
(  13.599) GENERATE: START SOLVING
(  13.614) GENERATE: DONE SOLVING
(  13.614) LOOP: DONE GENERATING (program 304)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_4(D),c_2(C).
(  13.614) LOOP: START TESTING
(  13.616) LOOP: DONE TESTING ('none', 'none')
(  13.616) LOOP: START IMPOSING CONSTRAINTS
(  13.616) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  13.616) GENERATE: START GROUNDING (impose_constraints)
(  13.688) GENERATE: DONE GROUNDING (impose_constraints)
(  13.688) LOOP: DONE IMPOSING CONSTRAINTS
(  13.688) LOOP: START GENERATING (program 305)
(  13.688) GENERATE: START SOLVING
(  13.700) GENERATE: DONE SOLVING
(  13.700) LOOP: DONE GENERATING (program 305)
PROGRAM:
  next_value(A,B) :- c_3(D),c_3(B),my_succ(A,D,C),c_2(C).
(  13.701) LOOP: START TESTING
(  13.702) LOOP: DONE TESTING ('none', 'none')
(  13.702) LOOP: START IMPOSING CONSTRAINTS
(  13.702) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  13.702) GENERATE: START GROUNDING (impose_constraints)
(  13.773) GENERATE: DONE GROUNDING (impose_constraints)
(  13.774) LOOP: DONE IMPOSING CONSTRAINTS
(  13.774) LOOP: START GENERATING (program 306)
(  13.774) GENERATE: START SOLVING
(  13.786) GENERATE: DONE SOLVING
(  13.787) LOOP: DONE GENERATING (program 306)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_3(B),c_2(C).
(  13.787) LOOP: START TESTING
(  13.789) LOOP: DONE TESTING ('none', 'none')
(  13.789) LOOP: START IMPOSING CONSTRAINTS
(  13.789) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  13.789) GENERATE: START GROUNDING (impose_constraints)
(  13.861) GENERATE: DONE GROUNDING (impose_constraints)
(  13.861) LOOP: DONE IMPOSING CONSTRAINTS
(  13.861) LOOP: START GENERATING (program 307)
(  13.861) GENERATE: START SOLVING
(  13.872) GENERATE: DONE SOLVING
(  13.872) LOOP: DONE GENERATING (program 307)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_4(D),c_2(C).
(  13.872) LOOP: START TESTING
(  13.874) LOOP: DONE TESTING ('none', 'none')
(  13.874) LOOP: START IMPOSING CONSTRAINTS
(  13.874) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  13.874) GENERATE: START GROUNDING (impose_constraints)
(  13.945) GENERATE: DONE GROUNDING (impose_constraints)
(  13.945) LOOP: DONE IMPOSING CONSTRAINTS
(  13.945) LOOP: START GENERATING (program 308)
(  13.945) GENERATE: START SOLVING
(  13.955) GENERATE: DONE SOLVING
(  13.956) LOOP: DONE GENERATING (program 308)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,D,C),c_2(C),c_4(B).
(  13.956) LOOP: START TESTING
(  13.957) LOOP: DONE TESTING ('none', 'none')
(  13.957) LOOP: START IMPOSING CONSTRAINTS
(  13.957) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  13.957) GENERATE: START GROUNDING (impose_constraints)
(  14.033) GENERATE: DONE GROUNDING (impose_constraints)
(  14.033) LOOP: DONE IMPOSING CONSTRAINTS
(  14.033) LOOP: START GENERATING (program 309)
(  14.033) GENERATE: START SOLVING
(  14.044) GENERATE: DONE SOLVING
(  14.045) LOOP: DONE GENERATING (program 309)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_0(D),c_2(C).
(  14.045) LOOP: START TESTING
(  14.047) LOOP: DONE TESTING ('none', 'none')
(  14.047) LOOP: START IMPOSING CONSTRAINTS
(  14.047) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  14.047) GENERATE: START GROUNDING (impose_constraints)
(  14.119) GENERATE: DONE GROUNDING (impose_constraints)
(  14.119) LOOP: DONE IMPOSING CONSTRAINTS
(  14.119) LOOP: START GENERATING (program 310)
(  14.119) GENERATE: START SOLVING
(  14.130) GENERATE: DONE SOLVING
(  14.130) LOOP: DONE GENERATING (program 310)
PROGRAM:
  next_value(A,B) :- c_1(B),c_3(D),my_succ(A,D,C),c_2(C).
(  14.130) LOOP: START TESTING
(  14.132) LOOP: DONE TESTING ('none', 'none')
(  14.132) LOOP: START IMPOSING CONSTRAINTS
(  14.132) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  14.132) GENERATE: START GROUNDING (impose_constraints)
(  14.206) GENERATE: DONE GROUNDING (impose_constraints)
(  14.206) LOOP: DONE IMPOSING CONSTRAINTS
(  14.206) LOOP: START GENERATING (program 311)
(  14.206) GENERATE: START SOLVING
(  14.223) GENERATE: DONE SOLVING
(  14.223) LOOP: DONE GENERATING (program 311)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,D,C),c_1(D),c_5(C).
(  14.223) LOOP: START TESTING
(  14.225) LOOP: DONE TESTING ('none', 'none')
(  14.225) LOOP: START IMPOSING CONSTRAINTS
(  14.225) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  14.225) GENERATE: START GROUNDING (impose_constraints)
(  14.299) GENERATE: DONE GROUNDING (impose_constraints)
(  14.299) LOOP: DONE IMPOSING CONSTRAINTS
(  14.299) LOOP: START GENERATING (program 312)
(  14.299) GENERATE: START SOLVING
(  14.310) GENERATE: DONE SOLVING
(  14.311) LOOP: DONE GENERATING (program 312)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_1(D),c_3(C).
(  14.311) LOOP: START TESTING
(  14.313) LOOP: DONE TESTING ('none', 'none')
(  14.313) LOOP: START IMPOSING CONSTRAINTS
(  14.313) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  14.313) GENERATE: START GROUNDING (impose_constraints)
(  14.389) GENERATE: DONE GROUNDING (impose_constraints)
(  14.389) LOOP: DONE IMPOSING CONSTRAINTS
(  14.389) LOOP: START GENERATING (program 313)
(  14.389) GENERATE: START SOLVING
(  14.400) GENERATE: DONE SOLVING
(  14.400) LOOP: DONE GENERATING (program 313)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_1(D),c_5(C).
(  14.400) LOOP: START TESTING
(  14.402) LOOP: DONE TESTING ('none', 'none')
(  14.402) LOOP: START IMPOSING CONSTRAINTS
(  14.402) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  14.402) GENERATE: START GROUNDING (impose_constraints)
(  14.481) GENERATE: DONE GROUNDING (impose_constraints)
(  14.481) LOOP: DONE IMPOSING CONSTRAINTS
(  14.481) LOOP: START GENERATING (program 314)
(  14.481) GENERATE: START SOLVING
(  14.492) GENERATE: DONE SOLVING
(  14.493) LOOP: DONE GENERATING (program 314)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_1(D),c_0(C).
(  14.493) LOOP: START TESTING
(  14.495) LOOP: DONE TESTING ('some', 'some')
(  14.495) LOOP: START IMPOSING CONSTRAINTS
(  14.495) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(  14.495) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  14.495) GENERATE: START GROUNDING (impose_constraints)
(  14.569) GENERATE: DONE GROUNDING (impose_constraints)
(  14.569) LOOP: DONE IMPOSING CONSTRAINTS
(  14.569) LOOP: START GENERATING (program 315)
(  14.569) GENERATE: START SOLVING
(  14.580) GENERATE: DONE SOLVING
(  14.580) LOOP: DONE GENERATING (program 315)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_1(D),c_4(C).
(  14.581) LOOP: START TESTING
(  14.582) LOOP: DONE TESTING ('none', 'none')
(  14.582) LOOP: START IMPOSING CONSTRAINTS
(  14.582) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  14.582) GENERATE: START GROUNDING (impose_constraints)
(  14.656) GENERATE: DONE GROUNDING (impose_constraints)
(  14.656) LOOP: DONE IMPOSING CONSTRAINTS
(  14.656) LOOP: START GENERATING (program 316)
(  14.656) GENERATE: START SOLVING
(  14.671) GENERATE: DONE SOLVING
(  14.671) LOOP: DONE GENERATING (program 316)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_5(D),c_3(C).
(  14.671) LOOP: START TESTING
(  14.673) LOOP: DONE TESTING ('none', 'none')
(  14.673) LOOP: START IMPOSING CONSTRAINTS
(  14.673) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  14.673) GENERATE: START GROUNDING (impose_constraints)
(  14.747) GENERATE: DONE GROUNDING (impose_constraints)
(  14.747) LOOP: DONE IMPOSING CONSTRAINTS
(  14.747) LOOP: START GENERATING (program 317)
(  14.747) GENERATE: START SOLVING
(  14.758) GENERATE: DONE SOLVING
(  14.758) LOOP: DONE GENERATING (program 317)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_3(C),c_4(D).
(  14.759) LOOP: START TESTING
(  14.760) LOOP: DONE TESTING ('some', 'some')
(  14.760) LOOP: START IMPOSING CONSTRAINTS
(  14.760) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(  14.760) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  14.761) GENERATE: START GROUNDING (impose_constraints)
(  14.835) GENERATE: DONE GROUNDING (impose_constraints)
(  14.835) LOOP: DONE IMPOSING CONSTRAINTS
(  14.835) LOOP: START GENERATING (program 318)
(  14.835) GENERATE: START SOLVING
(  14.846) GENERATE: DONE SOLVING
(  14.846) LOOP: DONE GENERATING (program 318)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_0(D),c_3(C).
(  14.846) LOOP: START TESTING
(  14.848) LOOP: DONE TESTING ('none', 'none')
(  14.848) LOOP: START IMPOSING CONSTRAINTS
(  14.848) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  14.848) GENERATE: START GROUNDING (impose_constraints)
(  14.923) GENERATE: DONE GROUNDING (impose_constraints)
(  14.923) LOOP: DONE IMPOSING CONSTRAINTS
(  14.923) LOOP: START GENERATING (program 319)
(  14.923) GENERATE: START SOLVING
(  14.940) GENERATE: DONE SOLVING
(  14.940) LOOP: DONE GENERATING (program 319)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_2(D),c_5(C).
(  14.940) LOOP: START TESTING
(  14.942) LOOP: DONE TESTING ('none', 'none')
(  14.942) LOOP: START IMPOSING CONSTRAINTS
(  14.942) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  14.942) GENERATE: START GROUNDING (impose_constraints)
(  15.017) GENERATE: DONE GROUNDING (impose_constraints)
(  15.017) LOOP: DONE IMPOSING CONSTRAINTS
(  15.017) LOOP: START GENERATING (program 320)
(  15.017) GENERATE: START SOLVING
(  15.029) GENERATE: DONE SOLVING
(  15.029) LOOP: DONE GENERATING (program 320)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_1(D),c_3(C).
(  15.029) LOOP: START TESTING
(  15.031) LOOP: DONE TESTING ('none', 'none')
(  15.031) LOOP: START IMPOSING CONSTRAINTS
(  15.031) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  15.031) GENERATE: START GROUNDING (impose_constraints)
(  15.108) GENERATE: DONE GROUNDING (impose_constraints)
(  15.108) LOOP: DONE IMPOSING CONSTRAINTS
(  15.108) LOOP: START GENERATING (program 321)
(  15.108) GENERATE: START SOLVING
(  15.119) GENERATE: DONE SOLVING
(  15.119) LOOP: DONE GENERATING (program 321)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_1(D),c_3(C).
(  15.120) LOOP: START TESTING
(  15.121) LOOP: DONE TESTING ('none', 'none')
(  15.121) LOOP: START IMPOSING CONSTRAINTS
(  15.121) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  15.121) GENERATE: START GROUNDING (impose_constraints)
(  15.196) GENERATE: DONE GROUNDING (impose_constraints)
(  15.196) LOOP: DONE IMPOSING CONSTRAINTS
(  15.196) LOOP: START GENERATING (program 322)
(  15.197) GENERATE: START SOLVING
(  15.214) GENERATE: DONE SOLVING
(  15.214) LOOP: DONE GENERATING (program 322)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_1(D),c_5(C).
(  15.214) LOOP: START TESTING
(  15.216) LOOP: DONE TESTING ('none', 'none')
(  15.216) LOOP: START IMPOSING CONSTRAINTS
(  15.216) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  15.216) GENERATE: START GROUNDING (impose_constraints)
(  15.297) GENERATE: DONE GROUNDING (impose_constraints)
(  15.297) LOOP: DONE IMPOSING CONSTRAINTS
(  15.297) LOOP: START GENERATING (program 323)
(  15.297) GENERATE: START SOLVING
(  15.320) GENERATE: DONE SOLVING
(  15.320) LOOP: DONE GENERATING (program 323)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_5(D),c_3(C).
(  15.320) LOOP: START TESTING
(  15.323) LOOP: DONE TESTING ('none', 'none')
(  15.323) LOOP: START IMPOSING CONSTRAINTS
(  15.323) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  15.323) GENERATE: START GROUNDING (impose_constraints)
(  15.403) GENERATE: DONE GROUNDING (impose_constraints)
(  15.403) LOOP: DONE IMPOSING CONSTRAINTS
(  15.403) LOOP: START GENERATING (program 324)
(  15.403) GENERATE: START SOLVING
(  15.414) GENERATE: DONE SOLVING
(  15.414) LOOP: DONE GENERATING (program 324)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_1(D),c_0(C).
(  15.414) LOOP: START TESTING
(  15.416) LOOP: DONE TESTING ('none', 'some')
(  15.416) LOOP: START IMPOSING CONSTRAINTS
(  15.416) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  15.416) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  15.416) GENERATE: START GROUNDING (impose_constraints)
(  15.496) GENERATE: DONE GROUNDING (impose_constraints)
(  15.496) LOOP: DONE IMPOSING CONSTRAINTS
(  15.496) LOOP: START GENERATING (program 325)
(  15.496) GENERATE: START SOLVING
(  15.507) GENERATE: DONE SOLVING
(  15.508) LOOP: DONE GENERATING (program 325)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_5(D),c_5(C).
(  15.508) LOOP: START TESTING
(  15.509) LOOP: DONE TESTING ('none', 'none')
(  15.509) LOOP: START IMPOSING CONSTRAINTS
(  15.509) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  15.510) GENERATE: START GROUNDING (impose_constraints)
(  15.591) GENERATE: DONE GROUNDING (impose_constraints)
(  15.591) LOOP: DONE IMPOSING CONSTRAINTS
(  15.591) LOOP: START GENERATING (program 326)
(  15.591) GENERATE: START SOLVING
(  15.606) GENERATE: DONE SOLVING
(  15.607) LOOP: DONE GENERATING (program 326)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_2(D),c_5(C).
(  15.607) LOOP: START TESTING
(  15.608) LOOP: DONE TESTING ('none', 'none')
(  15.608) LOOP: START IMPOSING CONSTRAINTS
(  15.608) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  15.608) GENERATE: START GROUNDING (impose_constraints)
(  15.687) GENERATE: DONE GROUNDING (impose_constraints)
(  15.687) LOOP: DONE IMPOSING CONSTRAINTS
(  15.687) LOOP: START GENERATING (program 327)
(  15.687) GENERATE: START SOLVING
(  15.708) GENERATE: DONE SOLVING
(  15.709) LOOP: DONE GENERATING (program 327)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_3(B),c_3(C).
(  15.709) LOOP: START TESTING
(  15.711) LOOP: DONE TESTING ('none', 'none')
(  15.711) LOOP: START IMPOSING CONSTRAINTS
(  15.711) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  15.711) GENERATE: START GROUNDING (impose_constraints)
(  15.786) GENERATE: DONE GROUNDING (impose_constraints)
(  15.786) LOOP: DONE IMPOSING CONSTRAINTS
(  15.786) LOOP: START GENERATING (program 328)
(  15.786) GENERATE: START SOLVING
(  15.799) GENERATE: DONE SOLVING
(  15.799) LOOP: DONE GENERATING (program 328)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_3(C),c_4(D).
(  15.799) LOOP: START TESTING
(  15.801) LOOP: DONE TESTING ('none', 'some')
(  15.801) LOOP: START IMPOSING CONSTRAINTS
(  15.801) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  15.801) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  15.801) GENERATE: START GROUNDING (impose_constraints)
(  15.879) GENERATE: DONE GROUNDING (impose_constraints)
(  15.879) LOOP: DONE IMPOSING CONSTRAINTS
(  15.879) LOOP: START GENERATING (program 329)
(  15.879) GENERATE: START SOLVING
(  15.890) GENERATE: DONE SOLVING
(  15.891) LOOP: DONE GENERATING (program 329)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),c_3(C),c_4(B).
(  15.891) LOOP: START TESTING
(  15.893) LOOP: DONE TESTING ('none', 'none')
(  15.893) LOOP: START IMPOSING CONSTRAINTS
(  15.893) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  15.893) GENERATE: START GROUNDING (impose_constraints)
(  15.971) GENERATE: DONE GROUNDING (impose_constraints)
(  15.971) LOOP: DONE IMPOSING CONSTRAINTS
(  15.971) LOOP: START GENERATING (program 330)
(  15.971) GENERATE: START SOLVING
(  15.988) GENERATE: DONE SOLVING
(  15.988) LOOP: DONE GENERATING (program 330)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_3(C),c_4(B).
(  15.988) LOOP: START TESTING
(  15.990) LOOP: DONE TESTING ('none', 'none')
(  15.990) LOOP: START IMPOSING CONSTRAINTS
(  15.990) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  15.990) GENERATE: START GROUNDING (impose_constraints)
(  16.067) GENERATE: DONE GROUNDING (impose_constraints)
(  16.067) LOOP: DONE IMPOSING CONSTRAINTS
(  16.067) LOOP: START GENERATING (program 331)
(  16.067) GENERATE: START SOLVING
(  16.079) GENERATE: DONE SOLVING
(  16.079) LOOP: DONE GENERATING (program 331)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(C),c_4(D),c_4(B).
(  16.079) LOOP: START TESTING
(  16.081) LOOP: DONE TESTING ('none', 'some')
(  16.081) LOOP: START IMPOSING CONSTRAINTS
(  16.081) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  16.081) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  16.081) GENERATE: START GROUNDING (impose_constraints)
(  16.159) GENERATE: DONE GROUNDING (impose_constraints)
(  16.159) LOOP: DONE IMPOSING CONSTRAINTS
(  16.159) LOOP: START GENERATING (program 332)
(  16.159) GENERATE: START SOLVING
(  16.170) GENERATE: DONE SOLVING
(  16.171) LOOP: DONE GENERATING (program 332)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_5(D),c_3(C).
(  16.171) LOOP: START TESTING
(  16.172) LOOP: DONE TESTING ('none', 'none')
(  16.172) LOOP: START IMPOSING CONSTRAINTS
(  16.172) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  16.172) GENERATE: START GROUNDING (impose_constraints)
(  16.253) GENERATE: DONE GROUNDING (impose_constraints)
(  16.253) LOOP: DONE IMPOSING CONSTRAINTS
(  16.253) LOOP: START GENERATING (program 333)
(  16.253) GENERATE: START SOLVING
(  16.266) GENERATE: DONE SOLVING
(  16.266) LOOP: DONE GENERATING (program 333)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_0(D),c_3(C).
(  16.266) LOOP: START TESTING
(  16.268) LOOP: DONE TESTING ('none', 'none')
(  16.268) LOOP: START IMPOSING CONSTRAINTS
(  16.268) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  16.268) GENERATE: START GROUNDING (impose_constraints)
(  16.344) GENERATE: DONE GROUNDING (impose_constraints)
(  16.344) LOOP: DONE IMPOSING CONSTRAINTS
(  16.344) LOOP: START GENERATING (program 334)
(  16.344) GENERATE: START SOLVING
(  16.356) GENERATE: DONE SOLVING
(  16.357) LOOP: DONE GENERATING (program 334)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_3(C),c_4(D).
(  16.357) LOOP: START TESTING
(  16.359) LOOP: DONE TESTING ('some', 'some')
(  16.359) LOOP: START IMPOSING CONSTRAINTS
(  16.359) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(  16.359) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  16.359) GENERATE: START GROUNDING (impose_constraints)
(  16.439) GENERATE: DONE GROUNDING (impose_constraints)
(  16.439) LOOP: DONE IMPOSING CONSTRAINTS
(  16.439) LOOP: START GENERATING (program 335)
(  16.439) GENERATE: START SOLVING
(  16.451) GENERATE: DONE SOLVING
(  16.451) LOOP: DONE GENERATING (program 335)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_1(D),c_1(C).
(  16.451) LOOP: START TESTING
(  16.453) LOOP: DONE TESTING ('none', 'none')
(  16.453) LOOP: START IMPOSING CONSTRAINTS
(  16.454) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  16.454) GENERATE: START GROUNDING (impose_constraints)
(  16.536) GENERATE: DONE GROUNDING (impose_constraints)
(  16.536) LOOP: DONE IMPOSING CONSTRAINTS
(  16.536) LOOP: START GENERATING (program 336)
(  16.536) GENERATE: START SOLVING
(  16.549) GENERATE: DONE SOLVING
(  16.549) LOOP: DONE GENERATING (program 336)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_2(D),c_0(C).
(  16.549) LOOP: START TESTING
(  16.551) LOOP: DONE TESTING ('none', 'none')
(  16.551) LOOP: START IMPOSING CONSTRAINTS
(  16.551) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  16.551) GENERATE: START GROUNDING (impose_constraints)
(  16.630) GENERATE: DONE GROUNDING (impose_constraints)
(  16.630) LOOP: DONE IMPOSING CONSTRAINTS
(  16.630) LOOP: START GENERATING (program 337)
(  16.630) GENERATE: START SOLVING
(  16.642) GENERATE: DONE SOLVING
(  16.642) LOOP: DONE GENERATING (program 337)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_5(D),c_5(C).
(  16.642) LOOP: START TESTING
(  16.644) LOOP: DONE TESTING ('none', 'none')
(  16.644) LOOP: START IMPOSING CONSTRAINTS
(  16.644) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  16.644) GENERATE: START GROUNDING (impose_constraints)
(  16.723) GENERATE: DONE GROUNDING (impose_constraints)
(  16.723) LOOP: DONE IMPOSING CONSTRAINTS
(  16.723) LOOP: START GENERATING (program 338)
(  16.723) GENERATE: START SOLVING
(  16.734) GENERATE: DONE SOLVING
(  16.735) LOOP: DONE GENERATING (program 338)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_0(D),c_1(C).
(  16.735) LOOP: START TESTING
(  16.736) LOOP: DONE TESTING ('none', 'none')
(  16.736) LOOP: START IMPOSING CONSTRAINTS
(  16.736) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  16.737) GENERATE: START GROUNDING (impose_constraints)
(  16.818) GENERATE: DONE GROUNDING (impose_constraints)
(  16.818) LOOP: DONE IMPOSING CONSTRAINTS
(  16.818) LOOP: START GENERATING (program 339)
(  16.818) GENERATE: START SOLVING
(  16.829) GENERATE: DONE SOLVING
(  16.830) LOOP: DONE GENERATING (program 339)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_4(D),c_5(C).
(  16.830) LOOP: START TESTING
(  16.831) LOOP: DONE TESTING ('none', 'none')
(  16.831) LOOP: START IMPOSING CONSTRAINTS
(  16.831) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  16.832) GENERATE: START GROUNDING (impose_constraints)
(  16.909) GENERATE: DONE GROUNDING (impose_constraints)
(  16.909) LOOP: DONE IMPOSING CONSTRAINTS
(  16.909) LOOP: START GENERATING (program 340)
(  16.909) GENERATE: START SOLVING
(  16.921) GENERATE: DONE SOLVING
(  16.921) LOOP: DONE GENERATING (program 340)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_5(D),c_4(C).
(  16.921) LOOP: START TESTING
(  16.923) LOOP: DONE TESTING ('some', 'some')
(  16.923) LOOP: START IMPOSING CONSTRAINTS
(  16.923) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(  16.923) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  16.923) GENERATE: START GROUNDING (impose_constraints)
(  17.002) GENERATE: DONE GROUNDING (impose_constraints)
(  17.002) LOOP: DONE IMPOSING CONSTRAINTS
(  17.002) LOOP: START GENERATING (program 341)
(  17.002) GENERATE: START SOLVING
(  17.019) GENERATE: DONE SOLVING
(  17.019) LOOP: DONE GENERATING (program 341)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),c_1(D),c_3(C),c_4(B).
(  17.019) LOOP: START TESTING
(  17.022) LOOP: DONE TESTING ('none', 'none')
(  17.022) LOOP: START IMPOSING CONSTRAINTS
(  17.022) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  17.022) GENERATE: START GROUNDING (impose_constraints)
(  17.103) GENERATE: DONE GROUNDING (impose_constraints)
(  17.103) LOOP: DONE IMPOSING CONSTRAINTS
(  17.103) LOOP: START GENERATING (program 342)
(  17.103) GENERATE: START SOLVING
(  17.116) GENERATE: DONE SOLVING
(  17.116) LOOP: DONE GENERATING (program 342)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_5(D),c_0(C).
(  17.117) LOOP: START TESTING
(  17.118) LOOP: DONE TESTING ('none', 'none')
(  17.118) LOOP: START IMPOSING CONSTRAINTS
(  17.118) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  17.118) GENERATE: START GROUNDING (impose_constraints)
(  17.198) GENERATE: DONE GROUNDING (impose_constraints)
(  17.198) LOOP: DONE IMPOSING CONSTRAINTS
(  17.198) LOOP: START GENERATING (program 343)
(  17.198) GENERATE: START SOLVING
(  17.213) GENERATE: DONE SOLVING
(  17.213) LOOP: DONE GENERATING (program 343)
PROGRAM:
  next_value(A,B) :- c_0(B),my_succ(A,D,C),c_1(D),c_1(C).
(  17.213) LOOP: START TESTING
(  17.215) LOOP: DONE TESTING ('none', 'none')
(  17.215) LOOP: START IMPOSING CONSTRAINTS
(  17.215) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  17.215) GENERATE: START GROUNDING (impose_constraints)
(  17.295) GENERATE: DONE GROUNDING (impose_constraints)
(  17.295) LOOP: DONE IMPOSING CONSTRAINTS
(  17.295) LOOP: START GENERATING (program 344)
(  17.295) GENERATE: START SOLVING
(  17.307) GENERATE: DONE SOLVING
(  17.307) LOOP: DONE GENERATING (program 344)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_4(D),c_1(C).
(  17.307) LOOP: START TESTING
(  17.309) LOOP: DONE TESTING ('none', 'none')
(  17.309) LOOP: START IMPOSING CONSTRAINTS
(  17.309) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  17.309) GENERATE: START GROUNDING (impose_constraints)
(  17.397) GENERATE: DONE GROUNDING (impose_constraints)
(  17.397) LOOP: DONE IMPOSING CONSTRAINTS
(  17.397) LOOP: START GENERATING (program 345)
(  17.397) GENERATE: START SOLVING
(  17.412) GENERATE: DONE SOLVING
(  17.412) LOOP: DONE GENERATING (program 345)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_4(D),c_0(C).
(  17.412) LOOP: START TESTING
(  17.414) LOOP: DONE TESTING ('none', 'none')
(  17.414) LOOP: START IMPOSING CONSTRAINTS
(  17.414) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  17.414) GENERATE: START GROUNDING (impose_constraints)
(  17.496) GENERATE: DONE GROUNDING (impose_constraints)
(  17.496) LOOP: DONE IMPOSING CONSTRAINTS
(  17.496) LOOP: START GENERATING (program 346)
(  17.496) GENERATE: START SOLVING
(  17.508) GENERATE: DONE SOLVING
(  17.508) LOOP: DONE GENERATING (program 346)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_0(D),c_4(C).
(  17.509) LOOP: START TESTING
(  17.510) LOOP: DONE TESTING ('none', 'none')
(  17.510) LOOP: START IMPOSING CONSTRAINTS
(  17.510) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  17.510) GENERATE: START GROUNDING (impose_constraints)
(  17.593) GENERATE: DONE GROUNDING (impose_constraints)
(  17.593) LOOP: DONE IMPOSING CONSTRAINTS
(  17.593) LOOP: START GENERATING (program 347)
(  17.593) GENERATE: START SOLVING
(  17.605) GENERATE: DONE SOLVING
(  17.606) LOOP: DONE GENERATING (program 347)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_4(D),c_4(C).
(  17.606) LOOP: START TESTING
(  17.607) LOOP: DONE TESTING ('none', 'none')
(  17.607) LOOP: START IMPOSING CONSTRAINTS
(  17.607) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  17.607) GENERATE: START GROUNDING (impose_constraints)
(  17.689) GENERATE: DONE GROUNDING (impose_constraints)
(  17.689) LOOP: DONE IMPOSING CONSTRAINTS
(  17.689) LOOP: START GENERATING (program 348)
(  17.689) GENERATE: START SOLVING
(  17.713) GENERATE: DONE SOLVING
(  17.714) LOOP: DONE GENERATING (program 348)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_1(D),c_4(C).
(  17.714) LOOP: START TESTING
(  17.715) LOOP: DONE TESTING ('none', 'none')
(  17.715) LOOP: START IMPOSING CONSTRAINTS
(  17.716) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  17.716) GENERATE: START GROUNDING (impose_constraints)
(  17.796) GENERATE: DONE GROUNDING (impose_constraints)
(  17.796) LOOP: DONE IMPOSING CONSTRAINTS
(  17.796) LOOP: START GENERATING (program 349)
(  17.796) GENERATE: START SOLVING
(  17.809) GENERATE: DONE SOLVING
(  17.810) LOOP: DONE GENERATING (program 349)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(D),c_5(C),c_4(B).
(  17.810) LOOP: START TESTING
(  17.811) LOOP: DONE TESTING ('none', 'none')
(  17.811) LOOP: START IMPOSING CONSTRAINTS
(  17.811) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  17.812) GENERATE: START GROUNDING (impose_constraints)
(  17.894) GENERATE: DONE GROUNDING (impose_constraints)
(  17.894) LOOP: DONE IMPOSING CONSTRAINTS
(  17.894) LOOP: START GENERATING (program 350)
(  17.894) GENERATE: START SOLVING
(  17.907) GENERATE: DONE SOLVING
(  17.907) LOOP: DONE GENERATING (program 350)
PROGRAM:
  next_value(A,B) :- c_0(B),c_0(D),my_succ(A,D,C),c_4(C).
(  17.908) LOOP: START TESTING
(  17.909) LOOP: DONE TESTING ('none', 'none')
(  17.909) LOOP: START IMPOSING CONSTRAINTS
(  17.909) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  17.909) GENERATE: START GROUNDING (impose_constraints)
(  17.991) GENERATE: DONE GROUNDING (impose_constraints)
(  17.991) LOOP: DONE IMPOSING CONSTRAINTS
(  17.991) LOOP: START GENERATING (program 351)
(  17.991) GENERATE: START SOLVING
(  18.005) GENERATE: DONE SOLVING
(  18.006) LOOP: DONE GENERATING (program 351)
PROGRAM:
  next_value(A,B) :- c_0(D),my_succ(A,D,C),c_4(B),c_4(C).
(  18.006) LOOP: START TESTING
(  18.008) LOOP: DONE TESTING ('none', 'none')
(  18.008) LOOP: START IMPOSING CONSTRAINTS
(  18.008) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  18.008) GENERATE: START GROUNDING (impose_constraints)
(  18.090) GENERATE: DONE GROUNDING (impose_constraints)
(  18.090) LOOP: DONE IMPOSING CONSTRAINTS
(  18.090) LOOP: START GENERATING (program 352)
(  18.090) GENERATE: START SOLVING
(  18.102) GENERATE: DONE SOLVING
(  18.102) LOOP: DONE GENERATING (program 352)
PROGRAM:
  next_value(A,B) :- c_0(D),c_1(B),my_succ(A,D,C),c_4(C).
(  18.102) LOOP: START TESTING
(  18.104) LOOP: DONE TESTING ('none', 'none')
(  18.104) LOOP: START IMPOSING CONSTRAINTS
(  18.104) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  18.104) GENERATE: START GROUNDING (impose_constraints)
(  18.184) GENERATE: DONE GROUNDING (impose_constraints)
(  18.184) LOOP: DONE IMPOSING CONSTRAINTS
(  18.184) LOOP: START GENERATING (program 353)
(  18.184) GENERATE: START SOLVING
(  18.196) GENERATE: DONE SOLVING
(  18.196) LOOP: DONE GENERATING (program 353)
PROGRAM:
  next_value(A,B) :- c_0(B),c_0(D),my_succ(A,D,C),c_5(C).
(  18.196) LOOP: START TESTING
(  18.198) LOOP: DONE TESTING ('none', 'none')
(  18.198) LOOP: START IMPOSING CONSTRAINTS
(  18.198) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  18.198) GENERATE: START GROUNDING (impose_constraints)
(  18.279) GENERATE: DONE GROUNDING (impose_constraints)
(  18.279) LOOP: DONE IMPOSING CONSTRAINTS
(  18.279) LOOP: START GENERATING (program 354)
(  18.279) GENERATE: START SOLVING
(  18.291) GENERATE: DONE SOLVING
(  18.292) LOOP: DONE GENERATING (program 354)
PROGRAM:
  next_value(A,B) :- c_0(B),c_0(D),my_succ(A,D,C),c_0(C).
(  18.292) LOOP: START TESTING
(  18.293) LOOP: DONE TESTING ('none', 'none')
(  18.293) LOOP: START IMPOSING CONSTRAINTS
(  18.293) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  18.294) GENERATE: START GROUNDING (impose_constraints)
(  18.375) GENERATE: DONE GROUNDING (impose_constraints)
(  18.375) LOOP: DONE IMPOSING CONSTRAINTS
(  18.375) LOOP: START GENERATING (program 355)
(  18.375) GENERATE: START SOLVING
(  18.389) GENERATE: DONE SOLVING
(  18.389) LOOP: DONE GENERATING (program 355)
PROGRAM:
  next_value(A,B) :- c_0(D),c_1(B),my_succ(A,D,C),c_2(C).
(  18.389) LOOP: START TESTING
(  18.391) LOOP: DONE TESTING ('none', 'none')
(  18.391) LOOP: START IMPOSING CONSTRAINTS
(  18.391) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  18.391) GENERATE: START GROUNDING (impose_constraints)
(  18.472) GENERATE: DONE GROUNDING (impose_constraints)
(  18.472) LOOP: DONE IMPOSING CONSTRAINTS
(  18.472) LOOP: START GENERATING (program 356)
(  18.472) GENERATE: START SOLVING
(  18.490) GENERATE: DONE SOLVING
(  18.490) LOOP: DONE GENERATING (program 356)
PROGRAM:
  next_value(A,B) :- c_0(D),my_succ(A,D,C),c_3(C),c_4(B).
(  18.491) LOOP: START TESTING
(  18.492) LOOP: DONE TESTING ('none', 'none')
(  18.492) LOOP: START IMPOSING CONSTRAINTS
(  18.492) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  18.492) GENERATE: START GROUNDING (impose_constraints)
(  18.574) GENERATE: DONE GROUNDING (impose_constraints)
(  18.574) LOOP: DONE IMPOSING CONSTRAINTS
(  18.574) LOOP: START GENERATING (program 357)
(  18.574) GENERATE: START SOLVING
(  18.587) GENERATE: DONE SOLVING
(  18.588) LOOP: DONE GENERATING (program 357)
PROGRAM:
  next_value(A,B) :- c_0(B),my_succ(A,D,C),c_4(D),c_4(C).
(  18.588) LOOP: START TESTING
(  18.589) LOOP: DONE TESTING ('none', 'none')
(  18.589) LOOP: START IMPOSING CONSTRAINTS
(  18.589) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  18.590) GENERATE: START GROUNDING (impose_constraints)
(  18.671) GENERATE: DONE GROUNDING (impose_constraints)
(  18.671) LOOP: DONE IMPOSING CONSTRAINTS
(  18.671) LOOP: START GENERATING (program 358)
(  18.671) GENERATE: START SOLVING
(  18.684) GENERATE: DONE SOLVING
(  18.684) LOOP: DONE GENERATING (program 358)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_0(D),c_4(C).
(  18.684) LOOP: START TESTING
(  18.686) LOOP: DONE TESTING ('none', 'none')
(  18.686) LOOP: START IMPOSING CONSTRAINTS
(  18.686) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  18.686) GENERATE: START GROUNDING (impose_constraints)
(  18.770) GENERATE: DONE GROUNDING (impose_constraints)
(  18.770) LOOP: DONE IMPOSING CONSTRAINTS
(  18.770) LOOP: START GENERATING (program 359)
(  18.770) GENERATE: START SOLVING
(  18.783) GENERATE: DONE SOLVING
(  18.784) LOOP: DONE GENERATING (program 359)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_0(D),c_5(C).
(  18.784) LOOP: START TESTING
(  18.785) LOOP: DONE TESTING ('none', 'none')
(  18.785) LOOP: START IMPOSING CONSTRAINTS
(  18.785) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  18.785) GENERATE: START GROUNDING (impose_constraints)
(  18.868) GENERATE: DONE GROUNDING (impose_constraints)
(  18.868) LOOP: DONE IMPOSING CONSTRAINTS
(  18.868) LOOP: START GENERATING (program 360)
(  18.868) GENERATE: START SOLVING
(  18.885) GENERATE: DONE SOLVING
(  18.886) LOOP: DONE GENERATING (program 360)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_0(D),c_1(C).
(  18.886) LOOP: START TESTING
(  18.887) LOOP: DONE TESTING ('none', 'none')
(  18.887) LOOP: START IMPOSING CONSTRAINTS
(  18.887) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  18.887) GENERATE: START GROUNDING (impose_constraints)
(  18.968) GENERATE: DONE GROUNDING (impose_constraints)
(  18.968) LOOP: DONE IMPOSING CONSTRAINTS
(  18.968) LOOP: START GENERATING (program 361)
(  18.968) GENERATE: START SOLVING
(  18.981) GENERATE: DONE SOLVING
(  18.981) LOOP: DONE GENERATING (program 361)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_4(D),c_5(C).
(  18.981) LOOP: START TESTING
(  18.983) LOOP: DONE TESTING ('none', 'none')
(  18.983) LOOP: START IMPOSING CONSTRAINTS
(  18.983) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  18.983) GENERATE: START GROUNDING (impose_constraints)
(  19.066) GENERATE: DONE GROUNDING (impose_constraints)
(  19.066) LOOP: DONE IMPOSING CONSTRAINTS
(  19.066) LOOP: START GENERATING (program 362)
(  19.066) GENERATE: START SOLVING
(  19.080) GENERATE: DONE SOLVING
(  19.080) LOOP: DONE GENERATING (program 362)
PROGRAM:
  next_value(A,B) :- c_0(D),c_1(B),my_succ(A,D,C),c_3(C).
(  19.080) LOOP: START TESTING
(  19.082) LOOP: DONE TESTING ('none', 'none')
(  19.082) LOOP: START IMPOSING CONSTRAINTS
(  19.082) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  19.082) GENERATE: START GROUNDING (impose_constraints)
(  19.168) GENERATE: DONE GROUNDING (impose_constraints)
(  19.168) LOOP: DONE IMPOSING CONSTRAINTS
(  19.168) LOOP: START GENERATING (program 363)
(  19.168) GENERATE: START SOLVING
(  19.181) GENERATE: DONE SOLVING
(  19.182) LOOP: DONE GENERATING (program 363)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_4(D),c_1(C).
(  19.182) LOOP: START TESTING
(  19.183) LOOP: DONE TESTING ('none', 'none')
(  19.184) LOOP: START IMPOSING CONSTRAINTS
(  19.184) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  19.184) GENERATE: START GROUNDING (impose_constraints)
(  19.269) GENERATE: DONE GROUNDING (impose_constraints)
(  19.269) LOOP: DONE IMPOSING CONSTRAINTS
(  19.269) LOOP: START GENERATING (program 364)
(  19.269) GENERATE: START SOLVING
(  19.288) GENERATE: DONE SOLVING
(  19.288) LOOP: DONE GENERATING (program 364)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_5(D),c_1(C).
(  19.289) LOOP: START TESTING
(  19.290) LOOP: DONE TESTING ('none', 'none')
(  19.290) LOOP: START IMPOSING CONSTRAINTS
(  19.290) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  19.291) GENERATE: START GROUNDING (impose_constraints)
(  19.375) GENERATE: DONE GROUNDING (impose_constraints)
(  19.375) LOOP: DONE IMPOSING CONSTRAINTS
(  19.375) LOOP: START GENERATING (program 365)
(  19.375) GENERATE: START SOLVING
(  19.389) GENERATE: DONE SOLVING
(  19.389) LOOP: DONE GENERATING (program 365)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_4(B),c_4(C).
(  19.389) LOOP: START TESTING
(  19.391) LOOP: DONE TESTING ('none', 'none')
(  19.391) LOOP: START IMPOSING CONSTRAINTS
(  19.391) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  19.391) GENERATE: START GROUNDING (impose_constraints)
(  19.475) GENERATE: DONE GROUNDING (impose_constraints)
(  19.475) LOOP: DONE IMPOSING CONSTRAINTS
(  19.475) LOOP: START GENERATING (program 366)
(  19.475) GENERATE: START SOLVING
(  19.495) GENERATE: DONE SOLVING
(  19.496) LOOP: DONE GENERATING (program 366)
PROGRAM:
  next_value(A,B) :- c_4(C),c_3(B),my_succ(A,D,C),c_1(D).
(  19.496) LOOP: START TESTING
(  19.497) LOOP: DONE TESTING ('none', 'none')
(  19.497) LOOP: START IMPOSING CONSTRAINTS
(  19.498) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  19.498) GENERATE: START GROUNDING (impose_constraints)
(  19.584) GENERATE: DONE GROUNDING (impose_constraints)
(  19.584) LOOP: DONE IMPOSING CONSTRAINTS
(  19.584) LOOP: START GENERATING (program 367)
(  19.584) GENERATE: START SOLVING
(  19.599) GENERATE: DONE SOLVING
(  19.599) LOOP: DONE GENERATING (program 367)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_2(D),c_5(C).
(  19.599) LOOP: START TESTING
(  19.601) LOOP: DONE TESTING ('none', 'none')
(  19.601) LOOP: START IMPOSING CONSTRAINTS
(  19.601) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  19.601) GENERATE: START GROUNDING (impose_constraints)
(  19.688) GENERATE: DONE GROUNDING (impose_constraints)
(  19.688) LOOP: DONE IMPOSING CONSTRAINTS
(  19.688) LOOP: START GENERATING (program 368)
(  19.688) GENERATE: START SOLVING
(  19.703) GENERATE: DONE SOLVING
(  19.703) LOOP: DONE GENERATING (program 368)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(D),c_5(C),c_4(B).
(  19.703) LOOP: START TESTING
(  19.705) LOOP: DONE TESTING ('none', 'none')
(  19.705) LOOP: START IMPOSING CONSTRAINTS
(  19.705) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  19.705) GENERATE: START GROUNDING (impose_constraints)
(  19.787) GENERATE: DONE GROUNDING (impose_constraints)
(  19.787) LOOP: DONE IMPOSING CONSTRAINTS
(  19.787) LOOP: START GENERATING (program 369)
(  19.787) GENERATE: START SOLVING
(  19.799) GENERATE: DONE SOLVING
(  19.800) LOOP: DONE GENERATING (program 369)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_1(D),c_4(C).
(  19.800) LOOP: START TESTING
(  19.801) LOOP: DONE TESTING ('none', 'none')
(  19.801) LOOP: START IMPOSING CONSTRAINTS
(  19.801) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  19.802) GENERATE: START GROUNDING (impose_constraints)
(  19.885) GENERATE: DONE GROUNDING (impose_constraints)
(  19.885) LOOP: DONE IMPOSING CONSTRAINTS
(  19.885) LOOP: START GENERATING (program 370)
(  19.885) GENERATE: START SOLVING
(  19.897) GENERATE: DONE SOLVING
(  19.897) LOOP: DONE GENERATING (program 370)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_1(B),c_4(C).
(  19.897) LOOP: START TESTING
(  19.899) LOOP: DONE TESTING ('none', 'none')
(  19.899) LOOP: START IMPOSING CONSTRAINTS
(  19.899) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  19.899) GENERATE: START GROUNDING (impose_constraints)
(  19.984) GENERATE: DONE GROUNDING (impose_constraints)
(  19.984) LOOP: DONE IMPOSING CONSTRAINTS
(  19.984) LOOP: START GENERATING (program 371)
(  19.984) GENERATE: START SOLVING
(  20.002) GENERATE: DONE SOLVING
(  20.002) LOOP: DONE GENERATING (program 371)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_5(D),c_4(C).
(  20.002) LOOP: START TESTING
(  20.004) LOOP: DONE TESTING ('some', 'some')
(  20.004) LOOP: START IMPOSING CONSTRAINTS
(  20.004) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(  20.004) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  20.004) GENERATE: START GROUNDING (impose_constraints)
(  20.087) GENERATE: DONE GROUNDING (impose_constraints)
(  20.087) LOOP: DONE IMPOSING CONSTRAINTS
(  20.087) LOOP: START GENERATING (program 372)
(  20.087) GENERATE: START SOLVING
(  20.101) GENERATE: DONE SOLVING
(  20.101) LOOP: DONE GENERATING (program 372)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_0(D),c_4(C).
(  20.101) LOOP: START TESTING
(  20.103) LOOP: DONE TESTING ('none', 'none')
(  20.103) LOOP: START IMPOSING CONSTRAINTS
(  20.103) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  20.103) GENERATE: START GROUNDING (impose_constraints)
(  20.188) GENERATE: DONE GROUNDING (impose_constraints)
(  20.188) LOOP: DONE IMPOSING CONSTRAINTS
(  20.188) LOOP: START GENERATING (program 373)
(  20.188) GENERATE: START SOLVING
(  20.201) GENERATE: DONE SOLVING
(  20.202) LOOP: DONE GENERATING (program 373)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(D),c_0(C),c_4(B).
(  20.202) LOOP: START TESTING
(  20.204) LOOP: DONE TESTING ('none', 'some')
(  20.204) LOOP: START IMPOSING CONSTRAINTS
(  20.204) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  20.204) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  20.205) GENERATE: START GROUNDING (impose_constraints)
(  20.292) GENERATE: DONE GROUNDING (impose_constraints)
(  20.292) LOOP: DONE IMPOSING CONSTRAINTS
(  20.292) LOOP: START GENERATING (program 374)
(  20.292) GENERATE: START SOLVING
(  20.306) GENERATE: DONE SOLVING
(  20.307) LOOP: DONE GENERATING (program 374)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_5(C),c_4(B).
(  20.307) LOOP: START TESTING
(  20.308) LOOP: DONE TESTING ('none', 'none')
(  20.308) LOOP: START IMPOSING CONSTRAINTS
(  20.308) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  20.308) GENERATE: START GROUNDING (impose_constraints)
(  20.393) GENERATE: DONE GROUNDING (impose_constraints)
(  20.393) LOOP: DONE IMPOSING CONSTRAINTS
(  20.393) LOOP: START GENERATING (program 375)
(  20.393) GENERATE: START SOLVING
(  20.407) GENERATE: DONE SOLVING
(  20.407) LOOP: DONE GENERATING (program 375)
PROGRAM:
  next_value(A,B) :- c_3(B),my_succ(A,D,C),c_4(D),c_4(C).
(  20.407) LOOP: START TESTING
(  20.409) LOOP: DONE TESTING ('none', 'none')
(  20.409) LOOP: START IMPOSING CONSTRAINTS
(  20.409) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  20.409) GENERATE: START GROUNDING (impose_constraints)
(  20.496) GENERATE: DONE GROUNDING (impose_constraints)
(  20.496) LOOP: DONE IMPOSING CONSTRAINTS
(  20.496) LOOP: START GENERATING (program 376)
(  20.496) GENERATE: START SOLVING
(  20.510) GENERATE: DONE SOLVING
(  20.510) LOOP: DONE GENERATING (program 376)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_3(B),c_5(C).
(  20.510) LOOP: START TESTING
(  20.512) LOOP: DONE TESTING ('none', 'none')
(  20.512) LOOP: START IMPOSING CONSTRAINTS
(  20.512) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  20.513) GENERATE: START GROUNDING (impose_constraints)
(  20.603) GENERATE: DONE GROUNDING (impose_constraints)
(  20.603) LOOP: DONE IMPOSING CONSTRAINTS
(  20.603) LOOP: START GENERATING (program 377)
(  20.603) GENERATE: START SOLVING
(  20.617) GENERATE: DONE SOLVING
(  20.617) LOOP: DONE GENERATING (program 377)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_4(B),c_4(C).
(  20.617) LOOP: START TESTING
(  20.619) LOOP: DONE TESTING ('none', 'none')
(  20.619) LOOP: START IMPOSING CONSTRAINTS
(  20.619) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  20.619) GENERATE: START GROUNDING (impose_constraints)
(  20.708) GENERATE: DONE GROUNDING (impose_constraints)
(  20.708) LOOP: DONE IMPOSING CONSTRAINTS
(  20.708) LOOP: START GENERATING (program 378)
(  20.708) GENERATE: START SOLVING
(  20.729) GENERATE: DONE SOLVING
(  20.729) LOOP: DONE GENERATING (program 378)
PROGRAM:
  next_value(A,B) :- c_0(D),c_3(B),my_succ(A,D,C),c_3(C).
(  20.729) LOOP: START TESTING
(  20.731) LOOP: DONE TESTING ('none', 'none')
(  20.731) LOOP: START IMPOSING CONSTRAINTS
(  20.731) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  20.731) GENERATE: START GROUNDING (impose_constraints)
(  20.817) GENERATE: DONE GROUNDING (impose_constraints)
(  20.817) LOOP: DONE IMPOSING CONSTRAINTS
(  20.817) LOOP: START GENERATING (program 379)
(  20.817) GENERATE: START SOLVING
(  20.830) GENERATE: DONE SOLVING
(  20.830) LOOP: DONE GENERATING (program 379)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_3(B),c_4(C).
(  20.830) LOOP: START TESTING
(  20.832) LOOP: DONE TESTING ('none', 'none')
(  20.832) LOOP: START IMPOSING CONSTRAINTS
(  20.832) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  20.832) GENERATE: START GROUNDING (impose_constraints)
(  20.919) GENERATE: DONE GROUNDING (impose_constraints)
(  20.919) LOOP: DONE IMPOSING CONSTRAINTS
(  20.919) LOOP: START GENERATING (program 380)
(  20.919) GENERATE: START SOLVING
(  20.933) GENERATE: DONE SOLVING
(  20.933) LOOP: DONE GENERATING (program 380)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_4(D),c_4(B),c_4(C).
(  20.933) LOOP: START TESTING
(  20.935) LOOP: DONE TESTING ('none', 'none')
(  20.935) LOOP: START IMPOSING CONSTRAINTS
(  20.935) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  20.935) GENERATE: START GROUNDING (impose_constraints)
(  21.027) GENERATE: DONE GROUNDING (impose_constraints)
(  21.027) LOOP: DONE IMPOSING CONSTRAINTS
(  21.027) LOOP: START GENERATING (program 381)
(  21.027) GENERATE: START SOLVING
(  21.042) GENERATE: DONE SOLVING
(  21.042) LOOP: DONE GENERATING (program 381)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(D),c_4(B),c_4(C).
(  21.042) LOOP: START TESTING
(  21.044) LOOP: DONE TESTING ('none', 'none')
(  21.044) LOOP: START IMPOSING CONSTRAINTS
(  21.044) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  21.044) GENERATE: START GROUNDING (impose_constraints)
(  21.133) GENERATE: DONE GROUNDING (impose_constraints)
(  21.133) LOOP: DONE IMPOSING CONSTRAINTS
(  21.133) LOOP: START GENERATING (program 382)
(  21.133) GENERATE: START SOLVING
(  21.149) GENERATE: DONE SOLVING
(  21.150) LOOP: DONE GENERATING (program 382)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),c_4(B),c_4(C).
(  21.150) LOOP: START TESTING
(  21.152) LOOP: DONE TESTING ('none', 'some')
(  21.152) LOOP: START IMPOSING CONSTRAINTS
(  21.152) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  21.152) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  21.152) GENERATE: START GROUNDING (impose_constraints)
(  21.241) GENERATE: DONE GROUNDING (impose_constraints)
(  21.241) LOOP: DONE IMPOSING CONSTRAINTS
(  21.241) LOOP: START GENERATING (program 383)
(  21.241) GENERATE: START SOLVING
(  21.255) GENERATE: DONE SOLVING
(  21.256) LOOP: DONE GENERATING (program 383)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_4(D),c_4(C).
(  21.256) LOOP: START TESTING
(  21.257) LOOP: DONE TESTING ('none', 'none')
(  21.257) LOOP: START IMPOSING CONSTRAINTS
(  21.257) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  21.258) GENERATE: START GROUNDING (impose_constraints)
(  21.348) GENERATE: DONE GROUNDING (impose_constraints)
(  21.348) LOOP: DONE IMPOSING CONSTRAINTS
(  21.348) LOOP: START GENERATING (program 384)
(  21.348) GENERATE: START SOLVING
(  21.361) GENERATE: DONE SOLVING
(  21.361) LOOP: DONE GENERATING (program 384)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_3(B),c_4(C).
(  21.361) LOOP: START TESTING
(  21.363) LOOP: DONE TESTING ('none', 'none')
(  21.363) LOOP: START IMPOSING CONSTRAINTS
(  21.363) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  21.363) GENERATE: START GROUNDING (impose_constraints)
(  21.450) GENERATE: DONE GROUNDING (impose_constraints)
(  21.450) LOOP: DONE IMPOSING CONSTRAINTS
(  21.450) LOOP: START GENERATING (program 385)
(  21.450) GENERATE: START SOLVING
(  21.464) GENERATE: DONE SOLVING
(  21.464) LOOP: DONE GENERATING (program 385)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_4(C),c_3(B),c_1(D).
(  21.464) LOOP: START TESTING
(  21.466) LOOP: DONE TESTING ('none', 'none')
(  21.466) LOOP: START IMPOSING CONSTRAINTS
(  21.466) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  21.466) GENERATE: START GROUNDING (impose_constraints)
(  21.556) GENERATE: DONE GROUNDING (impose_constraints)
(  21.556) LOOP: DONE IMPOSING CONSTRAINTS
(  21.556) LOOP: START GENERATING (program 386)
(  21.556) GENERATE: START SOLVING
(  21.571) GENERATE: DONE SOLVING
(  21.571) LOOP: DONE GENERATING (program 386)
PROGRAM:
  next_value(A,B) :- c_0(D),c_1(C),c_3(B),my_succ(A,D,C).
(  21.571) LOOP: START TESTING
(  21.573) LOOP: DONE TESTING ('none', 'some')
(  21.573) LOOP: START IMPOSING CONSTRAINTS
(  21.573) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  21.573) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  21.573) GENERATE: START GROUNDING (impose_constraints)
(  21.661) GENERATE: DONE GROUNDING (impose_constraints)
(  21.661) LOOP: DONE IMPOSING CONSTRAINTS
(  21.661) LOOP: START GENERATING (program 387)
(  21.661) GENERATE: START SOLVING
(  21.681) GENERATE: DONE SOLVING
(  21.681) LOOP: DONE GENERATING (program 387)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_3(B),c_1(C).
(  21.681) LOOP: START TESTING
(  21.683) LOOP: DONE TESTING ('none', 'none')
(  21.683) LOOP: START IMPOSING CONSTRAINTS
(  21.683) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  21.683) GENERATE: START GROUNDING (impose_constraints)
(  21.772) GENERATE: DONE GROUNDING (impose_constraints)
(  21.772) LOOP: DONE IMPOSING CONSTRAINTS
(  21.772) LOOP: START GENERATING (program 388)
(  21.772) GENERATE: START SOLVING
(  21.785) GENERATE: DONE SOLVING
(  21.786) LOOP: DONE GENERATING (program 388)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_1(C),c_4(B).
(  21.786) LOOP: START TESTING
(  21.788) LOOP: DONE TESTING ('none', 'none')
(  21.788) LOOP: START IMPOSING CONSTRAINTS
(  21.788) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  21.788) GENERATE: START GROUNDING (impose_constraints)
(  21.875) GENERATE: DONE GROUNDING (impose_constraints)
(  21.875) LOOP: DONE IMPOSING CONSTRAINTS
(  21.875) LOOP: START GENERATING (program 389)
(  21.875) GENERATE: START SOLVING
(  21.888) GENERATE: DONE SOLVING
(  21.889) LOOP: DONE GENERATING (program 389)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_0(D),c_1(C).
(  21.889) LOOP: START TESTING
(  21.891) LOOP: DONE TESTING ('none', 'none')
(  21.891) LOOP: START IMPOSING CONSTRAINTS
(  21.891) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  21.891) GENERATE: START GROUNDING (impose_constraints)
(  21.977) GENERATE: DONE GROUNDING (impose_constraints)
(  21.977) LOOP: DONE IMPOSING CONSTRAINTS
(  21.977) LOOP: START GENERATING (program 390)
(  21.977) GENERATE: START SOLVING
(  21.991) GENERATE: DONE SOLVING
(  21.991) LOOP: DONE GENERATING (program 390)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_1(D),c_1(C).
(  21.992) LOOP: START TESTING
(  21.993) LOOP: DONE TESTING ('none', 'none')
(  21.993) LOOP: START IMPOSING CONSTRAINTS
(  21.993) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  21.993) GENERATE: START GROUNDING (impose_constraints)
(  22.084) GENERATE: DONE GROUNDING (impose_constraints)
(  22.084) LOOP: DONE IMPOSING CONSTRAINTS
(  22.084) LOOP: START GENERATING (program 391)
(  22.084) GENERATE: START SOLVING
(  22.098) GENERATE: DONE SOLVING
(  22.099) LOOP: DONE GENERATING (program 391)
PROGRAM:
  next_value(A,B) :- c_0(D),c_1(B),my_succ(A,D,C),c_1(C).
(  22.099) LOOP: START TESTING
(  22.101) LOOP: DONE TESTING ('some', 'some')
(  22.101) LOOP: START IMPOSING CONSTRAINTS
(  22.101) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not clause(1).
(  22.101) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  22.101) GENERATE: START GROUNDING (impose_constraints)
(  22.193) GENERATE: DONE GROUNDING (impose_constraints)
(  22.193) LOOP: DONE IMPOSING CONSTRAINTS
(  22.193) LOOP: START GENERATING (program 392)
(  22.193) GENERATE: START SOLVING
(  22.207) GENERATE: DONE SOLVING
(  22.207) LOOP: DONE GENERATING (program 392)
PROGRAM:
  next_value(A,B) :- c_3(B),my_succ(A,D,C),c_5(D),c_1(C).
(  22.207) LOOP: START TESTING
(  22.209) LOOP: DONE TESTING ('none', 'none')
(  22.209) LOOP: START IMPOSING CONSTRAINTS
(  22.209) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  22.209) GENERATE: START GROUNDING (impose_constraints)
(  22.296) GENERATE: DONE GROUNDING (impose_constraints)
(  22.296) LOOP: DONE IMPOSING CONSTRAINTS
(  22.296) LOOP: START GENERATING (program 393)
(  22.296) GENERATE: START SOLVING
(  22.312) GENERATE: DONE SOLVING
(  22.313) LOOP: DONE GENERATING (program 393)
PROGRAM:
  next_value(A,B) :- c_0(D),c_3(B),my_succ(A,D,C),c_5(C).
(  22.313) LOOP: START TESTING
(  22.314) LOOP: DONE TESTING ('none', 'none')
(  22.314) LOOP: START IMPOSING CONSTRAINTS
(  22.315) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  22.315) GENERATE: START GROUNDING (impose_constraints)
(  22.405) GENERATE: DONE GROUNDING (impose_constraints)
(  22.405) LOOP: DONE IMPOSING CONSTRAINTS
(  22.405) LOOP: START GENERATING (program 394)
(  22.405) GENERATE: START SOLVING
(  22.419) GENERATE: DONE SOLVING
(  22.420) LOOP: DONE GENERATING (program 394)
PROGRAM:
  next_value(A,B) :- c_0(D),c_3(B),my_succ(A,D,C),c_0(C).
(  22.420) LOOP: START TESTING
(  22.421) LOOP: DONE TESTING ('none', 'none')
(  22.421) LOOP: START IMPOSING CONSTRAINTS
(  22.421) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  22.421) GENERATE: START GROUNDING (impose_constraints)
(  22.515) GENERATE: DONE GROUNDING (impose_constraints)
(  22.515) LOOP: DONE IMPOSING CONSTRAINTS
(  22.515) LOOP: START GENERATING (program 395)
(  22.516) GENERATE: START SOLVING
(  22.536) GENERATE: DONE SOLVING
(  22.536) LOOP: DONE GENERATING (program 395)
PROGRAM:
  next_value(A,B) :- c_0(D),my_succ(A,D,C),c_5(C),c_4(B).
(  22.536) LOOP: START TESTING
(  22.538) LOOP: DONE TESTING ('none', 'none')
(  22.538) LOOP: START IMPOSING CONSTRAINTS
(  22.538) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  22.538) GENERATE: START GROUNDING (impose_constraints)
(  22.627) GENERATE: DONE GROUNDING (impose_constraints)
(  22.627) LOOP: DONE IMPOSING CONSTRAINTS
(  22.627) LOOP: START GENERATING (program 396)
(  22.627) GENERATE: START SOLVING
(  22.641) GENERATE: DONE SOLVING
(  22.641) LOOP: DONE GENERATING (program 396)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_5(D),c_4(C).
(  22.641) LOOP: START TESTING
(  22.643) LOOP: DONE TESTING ('none', 'some')
(  22.643) LOOP: START IMPOSING CONSTRAINTS
(  22.643) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  22.643) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2.
(  22.643) GENERATE: START GROUNDING (impose_constraints)
(  22.733) GENERATE: DONE GROUNDING (impose_constraints)
(  22.733) LOOP: DONE IMPOSING CONSTRAINTS
(  22.733) LOOP: START GENERATING (program 397)
(  22.733) GENERATE: START SOLVING
(  22.746) GENERATE: DONE SOLVING
(  22.747) LOOP: DONE GENERATING (program 397)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_0(C),c_4(B).
(  22.747) LOOP: START TESTING
(  22.749) LOOP: DONE TESTING ('none', 'none')
(  22.749) LOOP: START IMPOSING CONSTRAINTS
(  22.749) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  22.749) GENERATE: START GROUNDING (impose_constraints)
(  22.838) GENERATE: DONE GROUNDING (impose_constraints)
(  22.838) LOOP: DONE IMPOSING CONSTRAINTS
(  22.838) LOOP: START GENERATING (program 398)
(  22.838) GENERATE: START SOLVING
(  22.854) GENERATE: DONE SOLVING
(  22.854) LOOP: DONE GENERATING (program 398)
PROGRAM:
  next_value(A,B) :- c_0(D),c_1(B),my_succ(A,D,C),c_5(C).
(  22.854) LOOP: START TESTING
(  22.856) LOOP: DONE TESTING ('none', 'none')
(  22.856) LOOP: START IMPOSING CONSTRAINTS
(  22.856) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  22.856) GENERATE: START GROUNDING (impose_constraints)
(  22.947) GENERATE: DONE GROUNDING (impose_constraints)
(  22.947) LOOP: DONE IMPOSING CONSTRAINTS
(  22.947) LOOP: START GENERATING (program 399)
(  22.947) GENERATE: START SOLVING
(  22.962) GENERATE: DONE SOLVING
(  22.962) LOOP: DONE GENERATING (program 399)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_0(D),c_5(C).
(  22.962) LOOP: START TESTING
(  22.964) LOOP: DONE TESTING ('none', 'none')
(  22.964) LOOP: START IMPOSING CONSTRAINTS
(  22.964) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  22.964) GENERATE: START GROUNDING (impose_constraints)
(  23.056) GENERATE: DONE GROUNDING (impose_constraints)
(  23.056) LOOP: DONE IMPOSING CONSTRAINTS
(  23.056) LOOP: START GENERATING (program 400)
(  23.056) GENERATE: START SOLVING
(  23.076) GENERATE: DONE SOLVING
(  23.076) LOOP: DONE GENERATING (program 400)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_0(D),c_0(C).
(  23.077) LOOP: START TESTING
(  23.078) LOOP: DONE TESTING ('none', 'none')
(  23.078) LOOP: START IMPOSING CONSTRAINTS
(  23.078) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  23.078) GENERATE: START GROUNDING (impose_constraints)
(  23.169) GENERATE: DONE GROUNDING (impose_constraints)
(  23.169) LOOP: DONE IMPOSING CONSTRAINTS
(  23.169) LOOP: START GENERATING (program 401)
(  23.169) GENERATE: START SOLVING
(  23.183) GENERATE: DONE SOLVING
(  23.184) LOOP: DONE GENERATING (program 401)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_4(D),c_1(C),c_4(B).
(  23.184) LOOP: START TESTING
(  23.186) LOOP: DONE TESTING ('none', 'none')
(  23.186) LOOP: START IMPOSING CONSTRAINTS
(  23.186) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  23.186) GENERATE: START GROUNDING (impose_constraints)
(  23.276) GENERATE: DONE GROUNDING (impose_constraints)
(  23.276) LOOP: DONE IMPOSING CONSTRAINTS
(  23.276) LOOP: START GENERATING (program 402)
(  23.276) GENERATE: START SOLVING
(  23.290) GENERATE: DONE SOLVING
(  23.290) LOOP: DONE GENERATING (program 402)
PROGRAM:
  next_value(A,B) :- c_5(D),my_succ(A,D,C),c_4(B),c_4(C).
(  23.290) LOOP: START TESTING
(  23.292) LOOP: DONE TESTING ('none', 'none')
(  23.292) LOOP: START IMPOSING CONSTRAINTS
(  23.292) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  23.292) GENERATE: START GROUNDING (impose_constraints)
(  23.382) GENERATE: DONE GROUNDING (impose_constraints)
(  23.382) LOOP: DONE IMPOSING CONSTRAINTS
(  23.382) LOOP: START GENERATING (program 403)
(  23.382) GENERATE: START SOLVING
(  23.397) GENERATE: DONE SOLVING
(  23.398) LOOP: DONE GENERATING (program 403)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,D,C),c_5(D),c_4(C).
(  23.398) LOOP: START TESTING
(  23.399) LOOP: DONE TESTING ('none', 'none')
(  23.399) LOOP: START IMPOSING CONSTRAINTS
(  23.399) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  23.399) GENERATE: START GROUNDING (impose_constraints)
(  23.491) GENERATE: DONE GROUNDING (impose_constraints)
(  23.491) LOOP: DONE IMPOSING CONSTRAINTS
(  23.491) LOOP: START GENERATING (program 404)
(  23.491) GENERATE: START SOLVING
(  23.506) GENERATE: DONE SOLVING
(  23.506) LOOP: DONE GENERATING (program 404)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_5(D),c_1(C).
(  23.506) LOOP: START TESTING
(  23.508) LOOP: DONE TESTING ('none', 'none')
(  23.508) LOOP: START IMPOSING CONSTRAINTS
(  23.508) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  23.508) GENERATE: START GROUNDING (impose_constraints)
(  23.602) GENERATE: DONE GROUNDING (impose_constraints)
(  23.602) LOOP: DONE IMPOSING CONSTRAINTS
(  23.602) LOOP: START GENERATING (program 405)
(  23.602) GENERATE: START SOLVING
(  23.623) GENERATE: DONE SOLVING
(  23.623) LOOP: DONE GENERATING (program 405)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),c_1(C),c_4(B).
(  23.623) LOOP: START TESTING
(  23.625) LOOP: DONE TESTING ('none', 'none')
(  23.625) LOOP: START IMPOSING CONSTRAINTS
(  23.625) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  23.625) GENERATE: START GROUNDING (impose_constraints)
(  23.720) GENERATE: DONE GROUNDING (impose_constraints)
(  23.720) LOOP: DONE IMPOSING CONSTRAINTS
(  23.720) LOOP: START GENERATING (program 406)
(  23.720) GENERATE: START SOLVING
(  23.735) GENERATE: DONE SOLVING
(  23.735) LOOP: DONE GENERATING (program 406)
PROGRAM:
  next_value(A,B) :- c_1(B),c_1(D),my_succ(A,D,C),c_4(C).
(  23.735) LOOP: START TESTING
(  23.737) LOOP: DONE TESTING ('none', 'none')
(  23.737) LOOP: START IMPOSING CONSTRAINTS
(  23.737) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  23.737) GENERATE: START GROUNDING (impose_constraints)
(  23.831) GENERATE: DONE GROUNDING (impose_constraints)
(  23.831) LOOP: DONE IMPOSING CONSTRAINTS
(  23.831) LOOP: START GENERATING (program 407)
(  23.831) GENERATE: START SOLVING
(  23.846) GENERATE: DONE SOLVING
(  23.846) LOOP: DONE GENERATING (program 407)
PROGRAM:
  next_value(A,B) :- c_3(B),my_succ(A,D,C),c_5(D),c_4(C).
(  23.846) LOOP: START TESTING
(  23.848) LOOP: DONE TESTING ('none', 'none')
(  23.848) LOOP: START IMPOSING CONSTRAINTS
(  23.848) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  23.848) GENERATE: START GROUNDING (impose_constraints)
(  23.941) GENERATE: DONE GROUNDING (impose_constraints)
(  23.941) LOOP: DONE IMPOSING CONSTRAINTS
(  23.941) LOOP: START GENERATING (program 408)
(  23.941) GENERATE: START SOLVING
(  23.955) GENERATE: DONE SOLVING
(  23.956) LOOP: DONE GENERATING (program 408)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_1(B),c_1(C).
(  23.956) LOOP: START TESTING
(  23.957) LOOP: DONE TESTING ('none', 'none')
(  23.957) LOOP: START IMPOSING CONSTRAINTS
(  23.957) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  23.957) GENERATE: START GROUNDING (impose_constraints)
(  24.054) GENERATE: DONE GROUNDING (impose_constraints)
(  24.054) LOOP: DONE IMPOSING CONSTRAINTS
(  24.054) LOOP: START GENERATING (program 409)
(  24.054) GENERATE: START SOLVING
(  24.071) GENERATE: DONE SOLVING
(  24.071) LOOP: DONE GENERATING (program 409)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),c_1(D),c_1(C),c_4(B).
(  24.071) LOOP: START TESTING
(  24.073) LOOP: DONE TESTING ('none', 'none')
(  24.073) LOOP: START IMPOSING CONSTRAINTS
(  24.073) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  24.073) GENERATE: START GROUNDING (impose_constraints)
(  24.169) GENERATE: DONE GROUNDING (impose_constraints)
(  24.169) LOOP: DONE IMPOSING CONSTRAINTS
(  24.169) LOOP: START GENERATING (program 410)
(  24.169) GENERATE: START SOLVING
(  24.184) GENERATE: DONE SOLVING
(  24.184) LOOP: DONE GENERATING (program 410)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_5(D),c_1(C).
(  24.184) LOOP: START TESTING
(  24.187) LOOP: DONE TESTING ('none', 'none')
(  24.187) LOOP: START IMPOSING CONSTRAINTS
(  24.187) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  24.187) GENERATE: START GROUNDING (impose_constraints)
(  24.281) GENERATE: DONE GROUNDING (impose_constraints)
(  24.281) LOOP: DONE IMPOSING CONSTRAINTS
(  24.281) LOOP: START GENERATING (program 411)
(  24.281) GENERATE: START SOLVING
(  24.302) GENERATE: DONE SOLVING
(  24.303) LOOP: DONE GENERATING (program 411)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,D,C),c_5(D),c_1(C).
(  24.303) LOOP: START TESTING
(  24.304) LOOP: DONE TESTING ('none', 'none')
(  24.304) LOOP: START IMPOSING CONSTRAINTS
(  24.304) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  24.305) GENERATE: START GROUNDING (impose_constraints)
(  24.395) GENERATE: DONE GROUNDING (impose_constraints)
(  24.395) LOOP: DONE IMPOSING CONSTRAINTS
(  24.395) LOOP: START GENERATING (program 412)
(  24.395) GENERATE: START SOLVING
(  24.411) GENERATE: DONE SOLVING
(  24.412) LOOP: DONE GENERATING (program 412)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),c_5(C),c_4(B).
(  24.412) LOOP: START TESTING
(  24.414) LOOP: DONE TESTING ('none', 'none')
(  24.414) LOOP: START IMPOSING CONSTRAINTS
(  24.414) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  24.414) GENERATE: START GROUNDING (impose_constraints)
(  24.505) GENERATE: DONE GROUNDING (impose_constraints)
(  24.505) LOOP: DONE IMPOSING CONSTRAINTS
(  24.506) LOOP: START GENERATING (program 413)
(  24.506) GENERATE: START SOLVING
(  24.523) GENERATE: DONE SOLVING
(  24.523) LOOP: DONE GENERATING (program 413)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,D,C),c_5(D),c_3(C).
(  24.523) LOOP: START TESTING
(  24.525) LOOP: DONE TESTING ('none', 'none')
(  24.525) LOOP: START IMPOSING CONSTRAINTS
(  24.525) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  24.525) GENERATE: START GROUNDING (impose_constraints)
(  24.619) GENERATE: DONE GROUNDING (impose_constraints)
(  24.619) LOOP: DONE IMPOSING CONSTRAINTS
(  24.619) LOOP: START GENERATING (program 414)
(  24.619) GENERATE: START SOLVING
(  24.636) GENERATE: DONE SOLVING
(  24.637) LOOP: DONE GENERATING (program 414)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_3(B),c_5(C).
(  24.637) LOOP: START TESTING
(  24.639) LOOP: DONE TESTING ('none', 'none')
(  24.639) LOOP: START IMPOSING CONSTRAINTS
(  24.639) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  24.639) GENERATE: START GROUNDING (impose_constraints)
(  24.734) GENERATE: DONE GROUNDING (impose_constraints)
(  24.734) LOOP: DONE IMPOSING CONSTRAINTS
(  24.734) LOOP: START GENERATING (program 415)
(  24.734) GENERATE: START SOLVING
(  24.755) GENERATE: DONE SOLVING
(  24.755) LOOP: DONE GENERATING (program 415)
PROGRAM:
  next_value(A,B) :- c_3(B),my_succ(A,D,C),c_5(D),c_5(C).
(  24.755) LOOP: START TESTING
(  24.757) LOOP: DONE TESTING ('none', 'none')
(  24.757) LOOP: START IMPOSING CONSTRAINTS
(  24.757) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  24.757) GENERATE: START GROUNDING (impose_constraints)
(  24.852) GENERATE: DONE GROUNDING (impose_constraints)
(  24.852) LOOP: DONE IMPOSING CONSTRAINTS
(  24.852) LOOP: START GENERATING (program 416)
(  24.852) GENERATE: START SOLVING
(  24.873) GENERATE: DONE SOLVING
(  24.873) LOOP: DONE GENERATING (program 416)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_5(D),c_5(C).
(  24.873) LOOP: START TESTING
(  24.875) LOOP: DONE TESTING ('none', 'none')
(  24.875) LOOP: START IMPOSING CONSTRAINTS
(  24.875) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  24.875) GENERATE: START GROUNDING (impose_constraints)
(  24.966) GENERATE: DONE GROUNDING (impose_constraints)
(  24.966) LOOP: DONE IMPOSING CONSTRAINTS
(  24.966) LOOP: START GENERATING (program 417)
(  24.966) GENERATE: START SOLVING
(  24.981) GENERATE: DONE SOLVING
(  24.981) LOOP: NO MORE PROGRAMS (with 5 literals)
(  24.981) GENERATE: START SETTING PROGRAM SIZE (6)
(  24.991) GENERATE: START GROUNDING (set_program_size)
(  24.992) GENERATE: DONE GROUNDING (set_program_size)
(  24.992) GENERATE: DONE SETTING PROGRAM SIZE
(  24.992) LOOP: START GENERATING (program 417)
(  24.992) GENERATE: START SOLVING
(  25.365) GENERATE: DONE SOLVING
(  25.365) LOOP: DONE GENERATING (program 417)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),my_true_value(A,B).
(  25.365) LOOP: START TESTING
(  25.368) LOOP: DONE TESTING ('some', 'some')
(  25.368) LOOP: START IMPOSING CONSTRAINTS
(  25.368) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(  25.368) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,not clause(2).
(  25.368) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0.
(  25.369) GENERATE: START GROUNDING (impose_constraints)
(  25.462) GENERATE: DONE GROUNDING (impose_constraints)
(  25.462) LOOP: DONE IMPOSING CONSTRAINTS
(  25.462) LOOP: START GENERATING (program 418)
(  25.462) GENERATE: START SOLVING
(  27.081) GENERATE: DONE SOLVING
(  27.082) LOOP: DONE GENERATING (program 418)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),my_true_value(A,B).
(  27.082) LOOP: START TESTING
(  27.084) LOOP: DONE TESTING ('none', 'some')
(  27.084) LOOP: START IMPOSING CONSTRAINTS
(  27.084) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,not recursive.
(  27.084) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(  27.084) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,not recursive.
(  27.084) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0.
(  27.085) GENERATE: START GROUNDING (impose_constraints)
(  27.179) GENERATE: DONE GROUNDING (impose_constraints)
(  27.179) LOOP: DONE IMPOSING CONSTRAINTS
(  27.179) LOOP: START GENERATING (program 419)
(  27.179) GENERATE: START SOLVING
(  27.475) GENERATE: DONE SOLVING
(  27.475) LOOP: DONE GENERATING (program 419)
PROGRAM:
  next_value(A,B) :- my_true_value(A,B),c_4(B).
  next_value(A,B) :- c_3(B),my_true_value(A,B).
(  27.475) LOOP: START TESTING
(  27.478) LOOP: DONE TESTING ('none', 'some')
(  27.478) LOOP: START IMPOSING CONSTRAINTS
(  27.478) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,not recursive.
(  27.478) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,not recursive.
(  27.478) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,not recursive.
(  27.478) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V1,)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0.
(  27.478) GENERATE: START GROUNDING (impose_constraints)
(  27.572) GENERATE: DONE GROUNDING (impose_constraints)
(  27.572) LOOP: DONE IMPOSING CONSTRAINTS
(  27.573) LOOP: START GENERATING (program 420)
(  27.573) GENERATE: START SOLVING
(  27.865) GENERATE: DONE SOLVING
(  27.865) LOOP: NO MORE PROGRAMS (with 6 literals)
(  27.865) GENERATE: START SETTING PROGRAM SIZE (7)
(  27.878) GENERATE: START GROUNDING (set_program_size)
(  27.879) GENERATE: DONE GROUNDING (set_program_size)
(  27.879) GENERATE: DONE SETTING PROGRAM SIZE
(  27.879) LOOP: START GENERATING (program 420)
(  27.879) GENERATE: START SOLVING
(  28.446) GENERATE: DONE SOLVING
(  28.446) LOOP: DONE GENERATING (program 420)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  28.447) LOOP: START TESTING
(  28.449) LOOP: DONE TESTING ('some', 'some')
(  28.449) LOOP: START IMPOSING CONSTRAINTS
(  28.449) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  28.449) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(  28.449) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0.
(  28.449) GENERATE: START GROUNDING (impose_constraints)
(  28.544) GENERATE: DONE GROUNDING (impose_constraints)
(  28.544) LOOP: DONE IMPOSING CONSTRAINTS
(  28.544) LOOP: START GENERATING (program 421)
(  28.544) GENERATE: START SOLVING
(  30.034) GENERATE: DONE SOLVING
(  30.034) LOOP: DONE GENERATING (program 421)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,B),my_succ(C,B,D),my_succ(C,D,B).
(  30.034) LOOP: START TESTING
(  30.037) LOOP: DONE TESTING ('some', 'none')
(  30.037) LOOP: START IMPOSING CONSTRAINTS
(  30.037) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V1,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  30.037) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V1,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  30.037) GENERATE: START GROUNDING (impose_constraints)
(  30.142) GENERATE: DONE GROUNDING (impose_constraints)
(  30.142) LOOP: DONE IMPOSING CONSTRAINTS
(  30.142) LOOP: START GENERATING (program 422)
(  30.142) GENERATE: START SOLVING
(  31.487) GENERATE: DONE SOLVING
(  31.488) LOOP: DONE GENERATING (program 422)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),my_succ(C,B,D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  31.488) LOOP: START TESTING
(  31.491) LOOP: DONE TESTING ('some', 'some')
(  31.491) LOOP: START IMPOSING CONSTRAINTS
(  31.491) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V1,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  31.491) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V1,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  31.491) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V1,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  31.491) GENERATE: START GROUNDING (impose_constraints)
(  31.588) GENERATE: DONE GROUNDING (impose_constraints)
(  31.588) LOOP: DONE IMPOSING CONSTRAINTS
(  31.588) LOOP: START GENERATING (program 423)
(  31.588) GENERATE: START SOLVING
(  31.635) GENERATE: DONE SOLVING
(  31.635) LOOP: DONE GENERATING (program 423)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),my_succ(C,D,B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  31.635) LOOP: START TESTING
(  31.638) LOOP: DONE TESTING ('some', 'some')
(  31.638) LOOP: START IMPOSING CONSTRAINTS
(  31.638) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  31.638) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  31.638) GENERATE: START GROUNDING (impose_constraints)
(  31.735) GENERATE: DONE GROUNDING (impose_constraints)
(  31.735) LOOP: DONE IMPOSING CONSTRAINTS
(  31.735) LOOP: START GENERATING (program 424)
(  31.735) GENERATE: START SOLVING
(  33.473) GENERATE: DONE SOLVING
(  33.474) LOOP: DONE GENERATING (program 424)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,D,C),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  33.474) LOOP: START TESTING
(  33.477) LOOP: DONE TESTING ('some', 'none')
(  33.477) LOOP: START IMPOSING CONSTRAINTS
(  33.477) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  33.477) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  33.477) GENERATE: START GROUNDING (impose_constraints)
(  33.574) GENERATE: DONE GROUNDING (impose_constraints)
(  33.575) LOOP: DONE IMPOSING CONSTRAINTS
(  33.575) LOOP: START GENERATING (program 425)
(  33.575) GENERATE: START SOLVING
(  33.732) GENERATE: DONE SOLVING
(  33.732) LOOP: DONE GENERATING (program 425)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_succ(A,C,B).
(  33.732) LOOP: START TESTING
(  33.735) LOOP: DONE TESTING ('some', 'none')
(  33.735) LOOP: START IMPOSING CONSTRAINTS
(  33.735) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  33.735) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  33.735) GENERATE: START GROUNDING (impose_constraints)
(  33.832) GENERATE: DONE GROUNDING (impose_constraints)
(  33.832) LOOP: DONE IMPOSING CONSTRAINTS
(  33.832) LOOP: START GENERATING (program 426)
(  33.832) GENERATE: START SOLVING
(  34.419) GENERATE: DONE SOLVING
(  34.420) LOOP: DONE GENERATING (program 426)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_1(C).
(  34.420) LOOP: START TESTING
(  34.422) LOOP: DONE TESTING ('some', 'none')
(  34.422) LOOP: START IMPOSING CONSTRAINTS
(  34.422) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  34.422) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  34.422) GENERATE: START GROUNDING (impose_constraints)
(  34.522) GENERATE: DONE GROUNDING (impose_constraints)
(  34.522) LOOP: DONE IMPOSING CONSTRAINTS
(  34.522) LOOP: START GENERATING (program 427)
(  34.522) GENERATE: START SOLVING
(  34.542) GENERATE: DONE SOLVING
(  34.542) LOOP: DONE GENERATING (program 427)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(B),my_true_value(A,C),my_succ(A,C,B).
(  34.542) LOOP: START TESTING
(  34.545) LOOP: DONE TESTING ('some', 'some')
(  34.545) LOOP: START IMPOSING CONSTRAINTS
(  34.545) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  34.545) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  34.545) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  34.545) GENERATE: START GROUNDING (impose_constraints)
(  34.643) GENERATE: DONE GROUNDING (impose_constraints)
(  34.643) LOOP: DONE IMPOSING CONSTRAINTS
(  34.643) LOOP: START GENERATING (program 428)
(  34.643) GENERATE: START SOLVING
(  34.661) GENERATE: DONE SOLVING
(  34.661) LOOP: DONE GENERATING (program 428)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(B).
(  34.661) LOOP: START TESTING
(  34.664) LOOP: DONE TESTING ('some', 'some')
(  34.664) LOOP: START IMPOSING CONSTRAINTS
(  34.664) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  34.664) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  34.664) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  34.664) GENERATE: START GROUNDING (impose_constraints)
(  34.763) GENERATE: DONE GROUNDING (impose_constraints)
(  34.763) LOOP: DONE IMPOSING CONSTRAINTS
(  34.763) LOOP: START GENERATING (program 429)
(  34.763) GENERATE: START SOLVING
(  34.780) GENERATE: DONE SOLVING
(  34.781) LOOP: DONE GENERATING (program 429)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),my_true_value(A,C),my_succ(A,C,B).
(  34.781) LOOP: START TESTING
(  34.783) LOOP: DONE TESTING ('some', 'none')
(  34.783) LOOP: START IMPOSING CONSTRAINTS
(  34.783) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  34.783) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  34.784) GENERATE: START GROUNDING (impose_constraints)
(  34.886) GENERATE: DONE GROUNDING (impose_constraints)
(  34.886) LOOP: DONE IMPOSING CONSTRAINTS
(  34.886) LOOP: START GENERATING (program 430)
(  34.886) GENERATE: START SOLVING
(  34.903) GENERATE: DONE SOLVING
(  34.904) LOOP: DONE GENERATING (program 430)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_succ(A,C,B).
(  34.904) LOOP: START TESTING
(  34.907) LOOP: DONE TESTING ('some', 'some')
(  34.907) LOOP: START IMPOSING CONSTRAINTS
(  34.907) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  34.907) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  34.907) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  34.907) GENERATE: START GROUNDING (impose_constraints)
(  35.008) GENERATE: DONE GROUNDING (impose_constraints)
(  35.008) LOOP: DONE IMPOSING CONSTRAINTS
(  35.008) LOOP: START GENERATING (program 431)
(  35.008) GENERATE: START SOLVING
(  35.026) GENERATE: DONE SOLVING
(  35.026) LOOP: DONE GENERATING (program 431)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
(  35.027) LOOP: START TESTING
(  35.029) LOOP: DONE TESTING ('some', 'none')
(  35.029) LOOP: START IMPOSING CONSTRAINTS
(  35.029) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  35.029) GENERATE: START GROUNDING (impose_constraints)
(  35.129) GENERATE: DONE GROUNDING (impose_constraints)
(  35.129) LOOP: DONE IMPOSING CONSTRAINTS
(  35.129) LOOP: START GENERATING (program 432)
(  35.129) GENERATE: START SOLVING
(  35.148) GENERATE: DONE SOLVING
(  35.148) LOOP: DONE GENERATING (program 432)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
(  35.148) LOOP: START TESTING
(  35.151) LOOP: DONE TESTING ('some', 'none')
(  35.151) LOOP: START IMPOSING CONSTRAINTS
(  35.151) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  35.151) GENERATE: START GROUNDING (impose_constraints)
(  35.254) GENERATE: DONE GROUNDING (impose_constraints)
(  35.254) LOOP: DONE IMPOSING CONSTRAINTS
(  35.254) LOOP: START GENERATING (program 433)
(  35.254) GENERATE: START SOLVING
(  35.269) GENERATE: DONE SOLVING
(  35.270) LOOP: DONE GENERATING (program 433)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(A,B).
(  35.270) LOOP: START TESTING
(  35.272) LOOP: DONE TESTING ('some', 'none')
(  35.272) LOOP: START IMPOSING CONSTRAINTS
(  35.272) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  35.272) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  35.272) GENERATE: START GROUNDING (impose_constraints)
(  35.376) GENERATE: DONE GROUNDING (impose_constraints)
(  35.376) LOOP: DONE IMPOSING CONSTRAINTS
(  35.376) LOOP: START GENERATING (program 434)
(  35.376) GENERATE: START SOLVING
(  35.481) GENERATE: DONE SOLVING
(  35.481) LOOP: DONE GENERATING (program 434)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),c_0(C).
(  35.481) LOOP: START TESTING
(  35.484) LOOP: DONE TESTING ('some', 'none')
(  35.484) LOOP: START IMPOSING CONSTRAINTS
(  35.484) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  35.484) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  35.484) GENERATE: START GROUNDING (impose_constraints)
(  35.584) GENERATE: DONE GROUNDING (impose_constraints)
(  35.584) LOOP: DONE IMPOSING CONSTRAINTS
(  35.584) LOOP: START GENERATING (program 435)
(  35.584) GENERATE: START SOLVING
(  37.589) GENERATE: DONE SOLVING
(  37.590) LOOP: DONE GENERATING (program 435)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_0(B),my_true_value(A,C).
(  37.590) LOOP: START TESTING
(  37.592) LOOP: DONE TESTING ('some', 'none')
(  37.592) LOOP: START IMPOSING CONSTRAINTS
(  37.592) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  37.592) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  37.593) GENERATE: START GROUNDING (impose_constraints)
(  37.694) GENERATE: DONE GROUNDING (impose_constraints)
(  37.694) LOOP: DONE IMPOSING CONSTRAINTS
(  37.694) LOOP: START GENERATING (program 436)
(  37.694) GENERATE: START SOLVING
(  38.956) GENERATE: DONE SOLVING
(  38.957) LOOP: DONE GENERATING (program 436)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
(  38.957) LOOP: START TESTING
(  38.959) LOOP: DONE TESTING ('some', 'none')
(  38.959) LOOP: START IMPOSING CONSTRAINTS
(  38.959) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  38.959) GENERATE: START GROUNDING (impose_constraints)
(  39.062) GENERATE: DONE GROUNDING (impose_constraints)
(  39.062) LOOP: DONE IMPOSING CONSTRAINTS
(  39.062) LOOP: START GENERATING (program 437)
(  39.062) GENERATE: START SOLVING
(  39.755) GENERATE: DONE SOLVING
(  39.755) LOOP: DONE GENERATING (program 437)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  39.755) LOOP: START TESTING
(  39.758) LOOP: DONE TESTING ('some', 'none')
(  39.758) LOOP: START IMPOSING CONSTRAINTS
(  39.758) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  39.758) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(  39.758) GENERATE: START GROUNDING (impose_constraints)
(  39.862) GENERATE: DONE GROUNDING (impose_constraints)
(  39.862) LOOP: DONE IMPOSING CONSTRAINTS
(  39.862) LOOP: START GENERATING (program 438)
(  39.862) GENERATE: START SOLVING
(  41.047) GENERATE: DONE SOLVING
(  41.048) LOOP: DONE GENERATING (program 438)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(C),c_2(C).
(  41.048) LOOP: START TESTING
(  41.050) LOOP: DONE TESTING ('some', 'none')
(  41.050) LOOP: START IMPOSING CONSTRAINTS
(  41.051) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  41.051) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  41.051) GENERATE: START GROUNDING (impose_constraints)
(  41.153) GENERATE: DONE GROUNDING (impose_constraints)
(  41.153) LOOP: DONE IMPOSING CONSTRAINTS
(  41.153) LOOP: START GENERATING (program 439)
(  41.153) GENERATE: START SOLVING
(  41.188) GENERATE: DONE SOLVING
(  41.189) LOOP: DONE GENERATING (program 439)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_2(C).
(  41.189) LOOP: START TESTING
(  41.191) LOOP: DONE TESTING ('some', 'none')
(  41.191) LOOP: START IMPOSING CONSTRAINTS
(  41.191) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  41.191) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  41.191) GENERATE: START GROUNDING (impose_constraints)
(  41.294) GENERATE: DONE GROUNDING (impose_constraints)
(  41.294) LOOP: DONE IMPOSING CONSTRAINTS
(  41.294) LOOP: START GENERATING (program 440)
(  41.294) GENERATE: START SOLVING
(  41.328) GENERATE: DONE SOLVING
(  41.328) LOOP: DONE GENERATING (program 440)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_5(B),c_2(C).
(  41.328) LOOP: START TESTING
(  41.331) LOOP: DONE TESTING ('some', 'none')
(  41.331) LOOP: START IMPOSING CONSTRAINTS
(  41.331) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  41.331) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  41.331) GENERATE: START GROUNDING (impose_constraints)
(  41.434) GENERATE: DONE GROUNDING (impose_constraints)
(  41.434) LOOP: DONE IMPOSING CONSTRAINTS
(  41.434) LOOP: START GENERATING (program 441)
(  41.434) GENERATE: START SOLVING
(  41.484) GENERATE: DONE SOLVING
(  41.484) LOOP: DONE GENERATING (program 441)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_5(B),c_3(C).
(  41.484) LOOP: START TESTING
(  41.487) LOOP: DONE TESTING ('some', 'none')
(  41.487) LOOP: START IMPOSING CONSTRAINTS
(  41.487) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  41.487) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  41.487) GENERATE: START GROUNDING (impose_constraints)
(  41.605) GENERATE: DONE GROUNDING (impose_constraints)
(  41.605) LOOP: DONE IMPOSING CONSTRAINTS
(  41.605) LOOP: START GENERATING (program 442)
(  41.605) GENERATE: START SOLVING
(  41.624) GENERATE: DONE SOLVING
(  41.624) LOOP: DONE GENERATING (program 442)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(C),c_4(B).
(  41.624) LOOP: START TESTING
(  41.627) LOOP: DONE TESTING ('some', 'none')
(  41.627) LOOP: START IMPOSING CONSTRAINTS
(  41.627) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  41.627) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  41.628) GENERATE: START GROUNDING (impose_constraints)
(  41.735) GENERATE: DONE GROUNDING (impose_constraints)
(  41.735) LOOP: DONE IMPOSING CONSTRAINTS
(  41.735) LOOP: START GENERATING (program 443)
(  41.735) GENERATE: START SOLVING
(  41.757) GENERATE: DONE SOLVING
(  41.758) LOOP: DONE GENERATING (program 443)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(C),c_4(B).
(  41.758) LOOP: START TESTING
(  41.760) LOOP: DONE TESTING ('some', 'none')
(  41.760) LOOP: START IMPOSING CONSTRAINTS
(  41.760) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  41.760) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  41.761) GENERATE: START GROUNDING (impose_constraints)
(  41.868) GENERATE: DONE GROUNDING (impose_constraints)
(  41.868) LOOP: DONE IMPOSING CONSTRAINTS
(  41.868) LOOP: START GENERATING (program 444)
(  41.868) GENERATE: START SOLVING
(  41.932) GENERATE: DONE SOLVING
(  41.933) LOOP: DONE GENERATING (program 444)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_true_value(A,B).
(  41.933) LOOP: START TESTING
(  41.935) LOOP: DONE TESTING ('some', 'some')
(  41.935) LOOP: START IMPOSING CONSTRAINTS
(  41.935) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  41.935) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  41.935) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  41.936) GENERATE: START GROUNDING (impose_constraints)
(  42.078) GENERATE: DONE GROUNDING (impose_constraints)
(  42.078) LOOP: DONE IMPOSING CONSTRAINTS
(  42.078) LOOP: START GENERATING (program 445)
(  42.078) GENERATE: START SOLVING
(  42.103) GENERATE: DONE SOLVING
(  42.104) LOOP: DONE GENERATING (program 445)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,B),c_2(C).
(  42.104) LOOP: START TESTING
(  42.106) LOOP: DONE TESTING ('some', 'none')
(  42.106) LOOP: START IMPOSING CONSTRAINTS
(  42.106) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  42.106) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  42.107) GENERATE: START GROUNDING (impose_constraints)
(  42.277) GENERATE: DONE GROUNDING (impose_constraints)
(  42.277) LOOP: DONE IMPOSING CONSTRAINTS
(  42.277) LOOP: START GENERATING (program 446)
(  42.277) GENERATE: START SOLVING
(  42.294) GENERATE: DONE SOLVING
(  42.295) LOOP: DONE GENERATING (program 446)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_true_value(A,B).
(  42.295) LOOP: START TESTING
(  42.297) LOOP: DONE TESTING ('some', 'none')
(  42.297) LOOP: START IMPOSING CONSTRAINTS
(  42.298) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  42.298) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  42.298) GENERATE: START GROUNDING (impose_constraints)
(  42.404) GENERATE: DONE GROUNDING (impose_constraints)
(  42.404) LOOP: DONE IMPOSING CONSTRAINTS
(  42.404) LOOP: START GENERATING (program 447)
(  42.404) GENERATE: START SOLVING
(  42.421) GENERATE: DONE SOLVING
(  42.421) LOOP: DONE GENERATING (program 447)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(B).
(  42.421) LOOP: START TESTING
(  42.424) LOOP: DONE TESTING ('some', 'some')
(  42.424) LOOP: START IMPOSING CONSTRAINTS
(  42.424) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  42.424) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  42.424) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  42.425) GENERATE: START GROUNDING (impose_constraints)
(  42.531) GENERATE: DONE GROUNDING (impose_constraints)
(  42.531) LOOP: DONE IMPOSING CONSTRAINTS
(  42.531) LOOP: START GENERATING (program 448)
(  42.531) GENERATE: START SOLVING
(  42.549) GENERATE: DONE SOLVING
(  42.550) LOOP: DONE GENERATING (program 448)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
(  42.550) LOOP: START TESTING
(  42.552) LOOP: DONE TESTING ('some', 'some')
(  42.552) LOOP: START IMPOSING CONSTRAINTS
(  42.552) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  42.552) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  42.553) GENERATE: START GROUNDING (impose_constraints)
(  42.659) GENERATE: DONE GROUNDING (impose_constraints)
(  42.659) LOOP: DONE IMPOSING CONSTRAINTS
(  42.659) LOOP: START GENERATING (program 449)
(  42.659) GENERATE: START SOLVING
(  42.676) GENERATE: DONE SOLVING
(  42.677) LOOP: DONE GENERATING (program 449)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_5(B),my_true_value(A,C).
(  42.677) LOOP: START TESTING
(  42.679) LOOP: DONE TESTING ('some', 'none')
(  42.680) LOOP: START IMPOSING CONSTRAINTS
(  42.680) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  42.680) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  42.680) GENERATE: START GROUNDING (impose_constraints)
(  42.790) GENERATE: DONE GROUNDING (impose_constraints)
(  42.790) LOOP: DONE IMPOSING CONSTRAINTS
(  42.790) LOOP: START GENERATING (program 450)
(  42.790) GENERATE: START SOLVING
(  42.813) GENERATE: DONE SOLVING
(  42.813) LOOP: DONE GENERATING (program 450)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_4(B).
(  42.813) LOOP: START TESTING
(  42.816) LOOP: DONE TESTING ('some', 'some')
(  42.816) LOOP: START IMPOSING CONSTRAINTS
(  42.816) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  42.816) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  42.816) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  42.816) GENERATE: START GROUNDING (impose_constraints)
(  42.925) GENERATE: DONE GROUNDING (impose_constraints)
(  42.925) LOOP: DONE IMPOSING CONSTRAINTS
(  42.925) LOOP: START GENERATING (program 451)
(  42.925) GENERATE: START SOLVING
(  42.944) GENERATE: DONE SOLVING
(  42.944) LOOP: DONE GENERATING (program 451)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
(  42.944) LOOP: START TESTING
(  42.947) LOOP: DONE TESTING ('some', 'some')
(  42.947) LOOP: START IMPOSING CONSTRAINTS
(  42.947) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  42.947) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  42.947) GENERATE: START GROUNDING (impose_constraints)
(  43.060) GENERATE: DONE GROUNDING (impose_constraints)
(  43.060) LOOP: DONE IMPOSING CONSTRAINTS
(  43.060) LOOP: START GENERATING (program 452)
(  43.060) GENERATE: START SOLVING
(  43.079) GENERATE: DONE SOLVING
(  43.079) LOOP: DONE GENERATING (program 452)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(B),c_3(C).
(  43.079) LOOP: START TESTING
(  43.082) LOOP: DONE TESTING ('some', 'none')
(  43.082) LOOP: START IMPOSING CONSTRAINTS
(  43.082) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  43.082) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  43.082) GENERATE: START GROUNDING (impose_constraints)
(  43.192) GENERATE: DONE GROUNDING (impose_constraints)
(  43.192) LOOP: DONE IMPOSING CONSTRAINTS
(  43.192) LOOP: START GENERATING (program 453)
(  43.192) GENERATE: START SOLVING
(  43.216) GENERATE: DONE SOLVING
(  43.217) LOOP: DONE GENERATING (program 453)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_0(B),c_3(C).
(  43.217) LOOP: START TESTING
(  43.219) LOOP: DONE TESTING ('some', 'none')
(  43.219) LOOP: START IMPOSING CONSTRAINTS
(  43.219) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  43.219) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  43.220) GENERATE: START GROUNDING (impose_constraints)
(  43.336) GENERATE: DONE GROUNDING (impose_constraints)
(  43.336) LOOP: DONE IMPOSING CONSTRAINTS
(  43.336) LOOP: START GENERATING (program 454)
(  43.336) GENERATE: START SOLVING
(  43.356) GENERATE: DONE SOLVING
(  43.356) LOOP: DONE GENERATING (program 454)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
(  43.356) LOOP: START TESTING
(  43.359) LOOP: DONE TESTING ('some', 'some')
(  43.359) LOOP: START IMPOSING CONSTRAINTS
(  43.359) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  43.359) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  43.359) GENERATE: START GROUNDING (impose_constraints)
(  43.470) GENERATE: DONE GROUNDING (impose_constraints)
(  43.470) LOOP: DONE IMPOSING CONSTRAINTS
(  43.470) LOOP: START GENERATING (program 455)
(  43.470) GENERATE: START SOLVING
(  43.487) GENERATE: DONE SOLVING
(  43.488) LOOP: DONE GENERATING (program 455)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_3(C).
(  43.488) LOOP: START TESTING
(  43.490) LOOP: DONE TESTING ('some', 'none')
(  43.490) LOOP: START IMPOSING CONSTRAINTS
(  43.490) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  43.490) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  43.491) GENERATE: START GROUNDING (impose_constraints)
(  43.603) GENERATE: DONE GROUNDING (impose_constraints)
(  43.603) LOOP: DONE IMPOSING CONSTRAINTS
(  43.603) LOOP: START GENERATING (program 456)
(  43.603) GENERATE: START SOLVING
(  43.623) GENERATE: DONE SOLVING
(  43.623) LOOP: DONE GENERATING (program 456)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
(  43.623) LOOP: START TESTING
(  43.626) LOOP: DONE TESTING ('some', 'some')
(  43.626) LOOP: START IMPOSING CONSTRAINTS
(  43.626) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  43.626) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  43.626) GENERATE: START GROUNDING (impose_constraints)
(  43.740) GENERATE: DONE GROUNDING (impose_constraints)
(  43.740) LOOP: DONE IMPOSING CONSTRAINTS
(  43.740) LOOP: START GENERATING (program 457)
(  43.740) GENERATE: START SOLVING
(  43.766) GENERATE: DONE SOLVING
(  43.766) LOOP: DONE GENERATING (program 457)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
(  43.766) LOOP: START TESTING
(  43.769) LOOP: DONE TESTING ('some', 'some')
(  43.769) LOOP: START IMPOSING CONSTRAINTS
(  43.769) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  43.769) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  43.769) GENERATE: START GROUNDING (impose_constraints)
(  43.880) GENERATE: DONE GROUNDING (impose_constraints)
(  43.880) LOOP: DONE IMPOSING CONSTRAINTS
(  43.880) LOOP: START GENERATING (program 458)
(  43.880) GENERATE: START SOLVING
(  43.899) GENERATE: DONE SOLVING
(  43.899) LOOP: DONE GENERATING (program 458)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(B),c_2(C).
(  43.899) LOOP: START TESTING
(  43.902) LOOP: DONE TESTING ('some', 'none')
(  43.902) LOOP: START IMPOSING CONSTRAINTS
(  43.902) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  43.902) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  43.902) GENERATE: START GROUNDING (impose_constraints)
(  44.015) GENERATE: DONE GROUNDING (impose_constraints)
(  44.015) LOOP: DONE IMPOSING CONSTRAINTS
(  44.015) LOOP: START GENERATING (program 459)
(  44.015) GENERATE: START SOLVING
(  44.035) GENERATE: DONE SOLVING
(  44.035) LOOP: DONE GENERATING (program 459)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_0(B),c_2(C).
(  44.035) LOOP: START TESTING
(  44.038) LOOP: DONE TESTING ('some', 'none')
(  44.038) LOOP: START IMPOSING CONSTRAINTS
(  44.038) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  44.038) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  44.038) GENERATE: START GROUNDING (impose_constraints)
(  44.149) GENERATE: DONE GROUNDING (impose_constraints)
(  44.150) LOOP: DONE IMPOSING CONSTRAINTS
(  44.150) LOOP: START GENERATING (program 460)
(  44.150) GENERATE: START SOLVING
(  44.168) GENERATE: DONE SOLVING
(  44.168) LOOP: DONE GENERATING (program 460)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
(  44.168) LOOP: START TESTING
(  44.171) LOOP: DONE TESTING ('some', 'some')
(  44.171) LOOP: START IMPOSING CONSTRAINTS
(  44.171) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  44.171) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  44.171) GENERATE: START GROUNDING (impose_constraints)
(  44.283) GENERATE: DONE GROUNDING (impose_constraints)
(  44.283) LOOP: DONE IMPOSING CONSTRAINTS
(  44.283) LOOP: START GENERATING (program 461)
(  44.283) GENERATE: START SOLVING
(  45.193) GENERATE: DONE SOLVING
(  45.193) LOOP: DONE GENERATING (program 461)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(A,B).
(  45.193) LOOP: START TESTING
(  45.195) LOOP: DONE TESTING ('some', 'some')
(  45.195) LOOP: START IMPOSING CONSTRAINTS
(  45.196) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  45.196) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  45.196) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  45.196) GENERATE: START GROUNDING (impose_constraints)
(  45.310) GENERATE: DONE GROUNDING (impose_constraints)
(  45.310) LOOP: DONE IMPOSING CONSTRAINTS
(  45.310) LOOP: START GENERATING (program 462)
(  45.310) GENERATE: START SOLVING
(  45.339) GENERATE: DONE SOLVING
(  45.339) LOOP: DONE GENERATING (program 462)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
(  45.339) LOOP: START TESTING
(  45.342) LOOP: DONE TESTING ('some', 'some')
(  45.342) LOOP: START IMPOSING CONSTRAINTS
(  45.342) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  45.342) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  45.342) GENERATE: START GROUNDING (impose_constraints)
(  45.457) GENERATE: DONE GROUNDING (impose_constraints)
(  45.457) LOOP: DONE IMPOSING CONSTRAINTS
(  45.457) LOOP: START GENERATING (program 463)
(  45.457) GENERATE: START SOLVING
(  45.478) GENERATE: DONE SOLVING
(  45.479) LOOP: DONE GENERATING (program 463)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(B),my_succ(A,C,B),c_4(C).
(  45.479) LOOP: START TESTING
(  45.481) LOOP: DONE TESTING ('some', 'none')
(  45.481) LOOP: START IMPOSING CONSTRAINTS
(  45.481) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  45.481) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  45.481) GENERATE: START GROUNDING (impose_constraints)
(  45.596) GENERATE: DONE GROUNDING (impose_constraints)
(  45.597) LOOP: DONE IMPOSING CONSTRAINTS
(  45.597) LOOP: START GENERATING (program 464)
(  45.597) GENERATE: START SOLVING
(  45.616) GENERATE: DONE SOLVING
(  45.617) LOOP: DONE GENERATING (program 464)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,B),c_1(C),c_4(C).
(  45.617) LOOP: START TESTING
(  45.619) LOOP: DONE TESTING ('some', 'none')
(  45.619) LOOP: START IMPOSING CONSTRAINTS
(  45.619) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  45.619) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  45.620) GENERATE: START GROUNDING (impose_constraints)
(  45.737) GENERATE: DONE GROUNDING (impose_constraints)
(  45.737) LOOP: DONE IMPOSING CONSTRAINTS
(  45.737) LOOP: START GENERATING (program 465)
(  45.737) GENERATE: START SOLVING
(  46.617) GENERATE: DONE SOLVING
(  46.618) LOOP: DONE GENERATING (program 465)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  46.618) LOOP: START TESTING
(  46.620) LOOP: DONE TESTING ('some', 'none')
(  46.620) LOOP: START IMPOSING CONSTRAINTS
(  46.620) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(  46.620) GENERATE: START GROUNDING (impose_constraints)
(  46.734) GENERATE: DONE GROUNDING (impose_constraints)
(  46.734) LOOP: DONE IMPOSING CONSTRAINTS
(  46.734) LOOP: START GENERATING (program 466)
(  46.734) GENERATE: START SOLVING
(  47.447) GENERATE: DONE SOLVING
(  47.447) LOOP: DONE GENERATING (program 466)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  47.447) LOOP: START TESTING
(  47.450) LOOP: DONE TESTING ('some', 'some')
(  47.450) LOOP: START IMPOSING CONSTRAINTS
(  47.450) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  47.450) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(  47.450) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0.
(  47.450) GENERATE: START GROUNDING (impose_constraints)
(  47.563) GENERATE: DONE GROUNDING (impose_constraints)
(  47.563) LOOP: DONE IMPOSING CONSTRAINTS
(  47.563) LOOP: START GENERATING (program 467)
(  47.563) GENERATE: START SOLVING
(  47.607) GENERATE: DONE SOLVING
(  47.607) LOOP: DONE GENERATING (program 467)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  47.607) LOOP: START TESTING
(  47.610) LOOP: DONE TESTING ('some', 'none')
(  47.610) LOOP: START IMPOSING CONSTRAINTS
(  47.610) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(  47.610) GENERATE: START GROUNDING (impose_constraints)
(  47.756) GENERATE: DONE GROUNDING (impose_constraints)
(  47.756) LOOP: DONE IMPOSING CONSTRAINTS
(  47.756) LOOP: START GENERATING (program 468)
(  47.756) GENERATE: START SOLVING
(  47.787) GENERATE: DONE SOLVING
(  47.788) LOOP: DONE GENERATING (program 468)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  47.788) LOOP: START TESTING
(  47.792) LOOP: DONE TESTING ('some', 'none')
(  47.792) LOOP: START IMPOSING CONSTRAINTS
(  47.792) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(  47.792) GENERATE: START GROUNDING (impose_constraints)
(  47.919) GENERATE: DONE GROUNDING (impose_constraints)
(  47.919) LOOP: DONE IMPOSING CONSTRAINTS
(  47.919) LOOP: START GENERATING (program 469)
(  47.919) GENERATE: START SOLVING
(  48.239) GENERATE: DONE SOLVING
(  48.240) LOOP: DONE GENERATING (program 469)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(C),my_true_value(A,C),my_true_value(A,B).
(  48.240) LOOP: START TESTING
(  48.242) LOOP: DONE TESTING ('some', 'none')
(  48.242) LOOP: START IMPOSING CONSTRAINTS
(  48.242) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  48.242) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  48.242) GENERATE: START GROUNDING (impose_constraints)
(  48.358) GENERATE: DONE GROUNDING (impose_constraints)
(  48.358) LOOP: DONE IMPOSING CONSTRAINTS
(  48.358) LOOP: START GENERATING (program 470)
(  48.358) GENERATE: START SOLVING
(  48.379) GENERATE: DONE SOLVING
(  48.379) LOOP: DONE GENERATING (program 470)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_2(C).
(  48.379) LOOP: START TESTING
(  48.382) LOOP: DONE TESTING ('some', 'some')
(  48.382) LOOP: START IMPOSING CONSTRAINTS
(  48.382) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  48.382) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  48.382) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  48.382) GENERATE: START GROUNDING (impose_constraints)
(  48.497) GENERATE: DONE GROUNDING (impose_constraints)
(  48.497) LOOP: DONE IMPOSING CONSTRAINTS
(  48.497) LOOP: START GENERATING (program 471)
(  48.497) GENERATE: START SOLVING
(  48.514) GENERATE: DONE SOLVING
(  48.514) LOOP: DONE GENERATING (program 471)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_4(C).
(  48.514) LOOP: START TESTING
(  48.517) LOOP: DONE TESTING ('some', 'some')
(  48.517) LOOP: START IMPOSING CONSTRAINTS
(  48.517) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  48.517) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  48.517) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  48.517) GENERATE: START GROUNDING (impose_constraints)
(  48.632) GENERATE: DONE GROUNDING (impose_constraints)
(  48.632) LOOP: DONE IMPOSING CONSTRAINTS
(  48.632) LOOP: START GENERATING (program 472)
(  48.632) GENERATE: START SOLVING
(  48.649) GENERATE: DONE SOLVING
(  48.649) LOOP: DONE GENERATING (program 472)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
(  48.649) LOOP: START TESTING
(  48.652) LOOP: DONE TESTING ('some', 'none')
(  48.652) LOOP: START IMPOSING CONSTRAINTS
(  48.652) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  48.652) GENERATE: START GROUNDING (impose_constraints)
(  48.770) GENERATE: DONE GROUNDING (impose_constraints)
(  48.770) LOOP: DONE IMPOSING CONSTRAINTS
(  48.770) LOOP: START GENERATING (program 473)
(  48.770) GENERATE: START SOLVING
(  48.788) GENERATE: DONE SOLVING
(  48.788) LOOP: DONE GENERATING (program 473)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),c_3(C),my_true_value(A,B).
(  48.788) LOOP: START TESTING
(  48.791) LOOP: DONE TESTING ('some', 'some')
(  48.791) LOOP: START IMPOSING CONSTRAINTS
(  48.791) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  48.791) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  48.791) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  48.792) GENERATE: START GROUNDING (impose_constraints)
(  48.911) GENERATE: DONE GROUNDING (impose_constraints)
(  48.911) LOOP: DONE IMPOSING CONSTRAINTS
(  48.911) LOOP: START GENERATING (program 474)
(  48.911) GENERATE: START SOLVING
(  49.033) GENERATE: DONE SOLVING
(  49.033) LOOP: DONE GENERATING (program 474)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(B),my_succ(A,C,B),c_1(C).
(  49.033) LOOP: START TESTING
(  49.035) LOOP: DONE TESTING ('some', 'none')
(  49.035) LOOP: START IMPOSING CONSTRAINTS
(  49.036) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  49.036) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  49.036) GENERATE: START GROUNDING (impose_constraints)
(  49.152) GENERATE: DONE GROUNDING (impose_constraints)
(  49.152) LOOP: DONE IMPOSING CONSTRAINTS
(  49.152) LOOP: START GENERATING (program 475)
(  49.152) GENERATE: START SOLVING
(  49.208) GENERATE: DONE SOLVING
(  49.208) LOOP: DONE GENERATING (program 475)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),my_succ(A,C,B),c_1(C).
(  49.208) LOOP: START TESTING
(  49.211) LOOP: DONE TESTING ('some', 'none')
(  49.211) LOOP: START IMPOSING CONSTRAINTS
(  49.211) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  49.211) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  49.211) GENERATE: START GROUNDING (impose_constraints)
(  49.329) GENERATE: DONE GROUNDING (impose_constraints)
(  49.329) LOOP: DONE IMPOSING CONSTRAINTS
(  49.329) LOOP: START GENERATING (program 476)
(  49.329) GENERATE: START SOLVING
(  49.400) GENERATE: DONE SOLVING
(  49.400) LOOP: DONE GENERATING (program 476)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_0(C),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  49.400) LOOP: START TESTING
(  49.403) LOOP: DONE TESTING ('some', 'none')
(  49.403) LOOP: START IMPOSING CONSTRAINTS
(  49.403) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  49.403) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(  49.403) GENERATE: START GROUNDING (impose_constraints)
(  49.519) GENERATE: DONE GROUNDING (impose_constraints)
(  49.519) LOOP: DONE IMPOSING CONSTRAINTS
(  49.519) LOOP: START GENERATING (program 477)
(  49.519) GENERATE: START SOLVING
(  49.558) GENERATE: DONE SOLVING
(  49.558) LOOP: DONE GENERATING (program 477)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,B),c_1(C),c_4(B).
(  49.558) LOOP: START TESTING
(  49.561) LOOP: DONE TESTING ('some', 'none')
(  49.561) LOOP: START IMPOSING CONSTRAINTS
(  49.561) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  49.561) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  49.561) GENERATE: START GROUNDING (impose_constraints)
(  49.682) GENERATE: DONE GROUNDING (impose_constraints)
(  49.682) LOOP: DONE IMPOSING CONSTRAINTS
(  49.682) LOOP: START GENERATING (program 478)
(  49.682) GENERATE: START SOLVING
(  49.706) GENERATE: DONE SOLVING
(  49.707) LOOP: DONE GENERATING (program 478)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  49.707) LOOP: START TESTING
(  49.709) LOOP: DONE TESTING ('some', 'none')
(  49.709) LOOP: START IMPOSING CONSTRAINTS
(  49.709) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  49.709) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(  49.709) GENERATE: START GROUNDING (impose_constraints)
(  49.831) GENERATE: DONE GROUNDING (impose_constraints)
(  49.831) LOOP: DONE IMPOSING CONSTRAINTS
(  49.831) LOOP: START GENERATING (program 479)
(  49.831) GENERATE: START SOLVING
(  49.849) GENERATE: DONE SOLVING
(  49.850) LOOP: DONE GENERATING (program 479)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  49.850) LOOP: START TESTING
(  49.852) LOOP: DONE TESTING ('some', 'none')
(  49.852) LOOP: START IMPOSING CONSTRAINTS
(  49.852) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  49.852) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(  49.853) GENERATE: START GROUNDING (impose_constraints)
(  49.976) GENERATE: DONE GROUNDING (impose_constraints)
(  49.976) LOOP: DONE IMPOSING CONSTRAINTS
(  49.976) LOOP: START GENERATING (program 480)
(  49.976) GENERATE: START SOLVING
(  50.002) GENERATE: DONE SOLVING
(  50.002) LOOP: DONE GENERATING (program 480)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  50.003) LOOP: START TESTING
(  50.006) LOOP: DONE TESTING ('some', 'some')
(  50.006) LOOP: START IMPOSING CONSTRAINTS
(  50.006) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(  50.006) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0.
(  50.006) GENERATE: START GROUNDING (impose_constraints)
(  50.133) GENERATE: DONE GROUNDING (impose_constraints)
(  50.133) LOOP: DONE IMPOSING CONSTRAINTS
(  50.133) LOOP: START GENERATING (program 481)
(  50.133) GENERATE: START SOLVING
(  50.154) GENERATE: DONE SOLVING
(  50.155) LOOP: DONE GENERATING (program 481)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_0(C),c_4(B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  50.155) LOOP: START TESTING
(  50.158) LOOP: DONE TESTING ('some', 'none')
(  50.158) LOOP: START IMPOSING CONSTRAINTS
(  50.158) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  50.158) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(  50.159) GENERATE: START GROUNDING (impose_constraints)
(  50.281) GENERATE: DONE GROUNDING (impose_constraints)
(  50.281) LOOP: DONE IMPOSING CONSTRAINTS
(  50.281) LOOP: START GENERATING (program 482)
(  50.281) GENERATE: START SOLVING
(  50.307) GENERATE: DONE SOLVING
(  50.308) LOOP: DONE GENERATING (program 482)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),my_succ(A,C,B),c_4(C).
(  50.308) LOOP: START TESTING
(  50.310) LOOP: DONE TESTING ('some', 'none')
(  50.310) LOOP: START IMPOSING CONSTRAINTS
(  50.310) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  50.310) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  50.310) GENERATE: START GROUNDING (impose_constraints)
(  50.436) GENERATE: DONE GROUNDING (impose_constraints)
(  50.436) LOOP: DONE IMPOSING CONSTRAINTS
(  50.436) LOOP: START GENERATING (program 483)
(  50.436) GENERATE: START SOLVING
(  50.457) GENERATE: DONE SOLVING
(  50.458) LOOP: DONE GENERATING (program 483)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,B),c_4(B),c_4(C).
(  50.458) LOOP: START TESTING
(  50.460) LOOP: DONE TESTING ('some', 'none')
(  50.460) LOOP: START IMPOSING CONSTRAINTS
(  50.460) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  50.460) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  50.461) GENERATE: START GROUNDING (impose_constraints)
(  50.585) GENERATE: DONE GROUNDING (impose_constraints)
(  50.585) LOOP: DONE IMPOSING CONSTRAINTS
(  50.585) LOOP: START GENERATING (program 484)
(  50.585) GENERATE: START SOLVING
(  50.605) GENERATE: DONE SOLVING
(  50.605) LOOP: DONE GENERATING (program 484)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_4(C).
(  50.606) LOOP: START TESTING
(  50.608) LOOP: DONE TESTING ('some', 'none')
(  50.608) LOOP: START IMPOSING CONSTRAINTS
(  50.608) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  50.608) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  50.608) GENERATE: START GROUNDING (impose_constraints)
(  50.732) GENERATE: DONE GROUNDING (impose_constraints)
(  50.732) LOOP: DONE IMPOSING CONSTRAINTS
(  50.732) LOOP: START GENERATING (program 485)
(  50.732) GENERATE: START SOLVING
(  50.751) GENERATE: DONE SOLVING
(  50.752) LOOP: DONE GENERATING (program 485)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_4(C).
(  50.752) LOOP: START TESTING
(  50.754) LOOP: DONE TESTING ('some', 'none')
(  50.754) LOOP: START IMPOSING CONSTRAINTS
(  50.754) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  50.754) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  50.754) GENERATE: START GROUNDING (impose_constraints)
(  50.877) GENERATE: DONE GROUNDING (impose_constraints)
(  50.877) LOOP: DONE IMPOSING CONSTRAINTS
(  50.877) LOOP: START GENERATING (program 486)
(  50.877) GENERATE: START SOLVING
(  50.898) GENERATE: DONE SOLVING
(  50.898) LOOP: DONE GENERATING (program 486)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_1(C).
(  50.898) LOOP: START TESTING
(  50.901) LOOP: DONE TESTING ('some', 'none')
(  50.901) LOOP: START IMPOSING CONSTRAINTS
(  50.901) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  50.901) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  50.901) GENERATE: START GROUNDING (impose_constraints)
(  51.024) GENERATE: DONE GROUNDING (impose_constraints)
(  51.024) LOOP: DONE IMPOSING CONSTRAINTS
(  51.024) LOOP: START GENERATING (program 487)
(  51.024) GENERATE: START SOLVING
(  51.044) GENERATE: DONE SOLVING
(  51.045) LOOP: DONE GENERATING (program 487)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(B),my_succ(A,C,B),c_0(C).
(  51.045) LOOP: START TESTING
(  51.047) LOOP: DONE TESTING ('some', 'none')
(  51.047) LOOP: START IMPOSING CONSTRAINTS
(  51.047) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  51.047) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  51.047) GENERATE: START GROUNDING (impose_constraints)
(  51.173) GENERATE: DONE GROUNDING (impose_constraints)
(  51.173) LOOP: DONE IMPOSING CONSTRAINTS
(  51.173) LOOP: START GENERATING (program 488)
(  51.173) GENERATE: START SOLVING
(  51.209) GENERATE: DONE SOLVING
(  51.210) LOOP: DONE GENERATING (program 488)
PROGRAM:
  next_value(A,B) :- c_0(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  51.210) LOOP: START TESTING
(  51.213) LOOP: DONE TESTING ('some', 'none')
(  51.213) LOOP: START IMPOSING CONSTRAINTS
(  51.213) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
(  51.213) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
(  51.213) GENERATE: START GROUNDING (impose_constraints)
(  51.345) GENERATE: DONE GROUNDING (impose_constraints)
(  51.345) LOOP: DONE IMPOSING CONSTRAINTS
(  51.345) LOOP: START GENERATING (program 489)
(  51.345) GENERATE: START SOLVING
(  51.369) GENERATE: DONE SOLVING
(  51.369) LOOP: DONE GENERATING (program 489)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_0(C).
(  51.370) LOOP: START TESTING
(  51.372) LOOP: DONE TESTING ('some', 'none')
(  51.372) LOOP: START IMPOSING CONSTRAINTS
(  51.372) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
(  51.372) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  51.372) GENERATE: START GROUNDING (impose_constraints)
(  51.504) GENERATE: DONE GROUNDING (impose_constraints)
(  51.504) LOOP: DONE IMPOSING CONSTRAINTS
(  51.504) LOOP: START GENERATING (program 490)
(  51.504) GENERATE: START SOLVING
(  51.524) GENERATE: DONE SOLVING
(  51.524) LOOP: DONE GENERATING (program 490)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
(  51.524) LOOP: START TESTING
(  51.527) LOOP: DONE TESTING ('some', 'some')
(  51.527) LOOP: START IMPOSING CONSTRAINTS
(  51.527) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  51.527) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  51.527) GENERATE: START GROUNDING (impose_constraints)
(  51.650) GENERATE: DONE GROUNDING (impose_constraints)
(  51.650) LOOP: DONE IMPOSING CONSTRAINTS
(  51.650) LOOP: START GENERATING (program 491)
(  51.650) GENERATE: START SOLVING
(  51.697) GENERATE: DONE SOLVING
(  51.697) LOOP: NO MORE PROGRAMS (with 7 literals)
(  51.697) GENERATE: START SETTING PROGRAM SIZE (8)
(  51.711) GENERATE: START GROUNDING (set_program_size)
(  51.712) GENERATE: DONE GROUNDING (set_program_size)
(  51.712) GENERATE: DONE SETTING PROGRAM SIZE
(  51.712) LOOP: START GENERATING (program 491)
(  51.712) GENERATE: START SOLVING
(  53.172) GENERATE: DONE SOLVING
(  53.172) LOOP: DONE GENERATING (program 491)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,D,C),c_5(C),my_succ(A,D,B),my_true_value(A,B).
(  53.172) LOOP: START TESTING
(  53.175) LOOP: DONE TESTING ('some', 'none')
(  53.175) LOOP: START IMPOSING CONSTRAINTS
(  53.175) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  53.175) GENERATE: START GROUNDING (impose_constraints)
(  53.322) GENERATE: DONE GROUNDING (impose_constraints)
(  53.322) LOOP: DONE IMPOSING CONSTRAINTS
(  53.322) LOOP: START GENERATING (program 492)
(  53.322) GENERATE: START SOLVING
(  53.466) GENERATE: DONE SOLVING
(  53.466) LOOP: DONE GENERATING (program 492)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,D,C),c_4(D),my_succ(A,D,B),c_5(C).
(  53.466) LOOP: START TESTING
(  53.469) LOOP: DONE TESTING ('some', 'some')
(  53.469) LOOP: START IMPOSING CONSTRAINTS
(  53.469) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  53.469) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  53.469) GENERATE: START GROUNDING (impose_constraints)
(  53.637) GENERATE: DONE GROUNDING (impose_constraints)
(  53.637) LOOP: DONE IMPOSING CONSTRAINTS
(  53.637) LOOP: START GENERATING (program 493)
(  53.637) GENERATE: START SOLVING
(  54.075) GENERATE: DONE SOLVING
(  54.075) LOOP: DONE GENERATING (program 493)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_true_value(C,D),my_succ(C,D,B),my_true_value(A,B).
(  54.075) LOOP: START TESTING
(  54.078) LOOP: DONE TESTING ('some', 'some')
(  54.078) LOOP: START IMPOSING CONSTRAINTS
(  54.078) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  54.078) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  54.078) GENERATE: START GROUNDING (impose_constraints)
(  54.206) GENERATE: DONE GROUNDING (impose_constraints)
(  54.206) LOOP: DONE IMPOSING CONSTRAINTS
(  54.206) LOOP: START GENERATING (program 494)
(  54.206) GENERATE: START SOLVING
(  54.252) GENERATE: DONE SOLVING
(  54.252) LOOP: DONE GENERATING (program 494)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
(  54.252) LOOP: START TESTING
(  54.255) LOOP: DONE TESTING ('some', 'some')
(  54.255) LOOP: START IMPOSING CONSTRAINTS
(  54.255) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  54.255) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  54.256) GENERATE: START GROUNDING (impose_constraints)
(  54.380) GENERATE: DONE GROUNDING (impose_constraints)
(  54.380) LOOP: DONE IMPOSING CONSTRAINTS
(  54.380) LOOP: START GENERATING (program 495)
(  54.380) GENERATE: START SOLVING
(  54.670) GENERATE: DONE SOLVING
(  54.670) LOOP: DONE GENERATING (program 495)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
(  54.670) LOOP: START TESTING
(  54.673) LOOP: DONE TESTING ('some', 'some')
(  54.673) LOOP: START IMPOSING CONSTRAINTS
(  54.673) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  54.673) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  54.673) GENERATE: START GROUNDING (impose_constraints)
(  54.799) GENERATE: DONE GROUNDING (impose_constraints)
(  54.799) LOOP: DONE IMPOSING CONSTRAINTS
(  54.799) LOOP: START GENERATING (program 496)
(  54.799) GENERATE: START SOLVING
(  55.161) GENERATE: DONE SOLVING
(  55.161) LOOP: DONE GENERATING (program 496)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
(  55.161) LOOP: START TESTING
(  55.164) LOOP: DONE TESTING ('some', 'some')
(  55.164) LOOP: START IMPOSING CONSTRAINTS
(  55.164) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  55.164) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  55.164) GENERATE: START GROUNDING (impose_constraints)
(  55.295) GENERATE: DONE GROUNDING (impose_constraints)
(  55.296) LOOP: DONE IMPOSING CONSTRAINTS
(  55.296) LOOP: START GENERATING (program 497)
(  55.296) GENERATE: START SOLVING
(  55.478) GENERATE: DONE SOLVING
(  55.478) LOOP: DONE GENERATING (program 497)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  55.478) LOOP: START TESTING
(  55.481) LOOP: DONE TESTING ('some', 'none')
(  55.481) LOOP: START IMPOSING CONSTRAINTS
(  55.481) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  55.481) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  55.481) GENERATE: START GROUNDING (impose_constraints)
(  55.612) GENERATE: DONE GROUNDING (impose_constraints)
(  55.612) LOOP: DONE IMPOSING CONSTRAINTS
(  55.612) LOOP: START GENERATING (program 498)
(  55.612) GENERATE: START SOLVING
(  55.964) GENERATE: DONE SOLVING
(  55.965) LOOP: DONE GENERATING (program 498)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),my_succ(A,C,B),c_1(D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  55.965) LOOP: START TESTING
(  55.967) LOOP: DONE TESTING ('some', 'some')
(  55.967) LOOP: START IMPOSING CONSTRAINTS
(  55.968) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  55.968) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  55.968) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  55.968) GENERATE: START GROUNDING (impose_constraints)
(  56.101) GENERATE: DONE GROUNDING (impose_constraints)
(  56.101) LOOP: DONE IMPOSING CONSTRAINTS
(  56.101) LOOP: START GENERATING (program 499)
(  56.101) GENERATE: START SOLVING
(  56.199) GENERATE: DONE SOLVING
(  56.199) LOOP: DONE GENERATING (program 499)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,B,D),my_true_value(A,D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  56.199) LOOP: START TESTING
(  56.202) LOOP: DONE TESTING ('some', 'some')
(  56.202) LOOP: START IMPOSING CONSTRAINTS
(  56.202) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  56.202) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  56.202) GENERATE: START GROUNDING (impose_constraints)
(  56.334) GENERATE: DONE GROUNDING (impose_constraints)
(  56.334) LOOP: DONE IMPOSING CONSTRAINTS
(  56.334) LOOP: START GENERATING (program 500)
(  56.334) GENERATE: START SOLVING
(  56.362) GENERATE: DONE SOLVING
(  56.362) LOOP: DONE GENERATING (program 500)
PROGRAM:
  next_value(A,B) :- c_2(D),my_succ(A,C,B),my_succ(A,B,D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  56.363) LOOP: START TESTING
(  56.366) LOOP: DONE TESTING ('some', 'some')
(  56.366) LOOP: START IMPOSING CONSTRAINTS
(  56.366) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  56.366) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  56.367) GENERATE: START GROUNDING (impose_constraints)
(  56.501) GENERATE: DONE GROUNDING (impose_constraints)
(  56.501) LOOP: DONE IMPOSING CONSTRAINTS
(  56.501) LOOP: START GENERATING (program 501)
(  56.501) GENERATE: START SOLVING
(  56.664) GENERATE: DONE SOLVING
(  56.664) LOOP: DONE GENERATING (program 501)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,D,C),c_0(C),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  56.665) LOOP: START TESTING
(  56.667) LOOP: DONE TESTING ('some', 'none')
(  56.667) LOOP: START IMPOSING CONSTRAINTS
(  56.667) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  56.667) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  56.668) GENERATE: START GROUNDING (impose_constraints)
(  56.803) GENERATE: DONE GROUNDING (impose_constraints)
(  56.803) LOOP: DONE IMPOSING CONSTRAINTS
(  56.803) LOOP: START GENERATING (program 502)
(  56.803) GENERATE: START SOLVING
(  56.897) GENERATE: DONE SOLVING
(  56.898) LOOP: DONE GENERATING (program 502)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
(  56.898) LOOP: START TESTING
(  56.901) LOOP: DONE TESTING ('some', 'some')
(  56.901) LOOP: START IMPOSING CONSTRAINTS
(  56.901) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  56.901) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  56.901) GENERATE: START GROUNDING (impose_constraints)
(  57.037) GENERATE: DONE GROUNDING (impose_constraints)
(  57.037) LOOP: DONE IMPOSING CONSTRAINTS
(  57.037) LOOP: START GENERATING (program 503)
(  57.037) GENERATE: START SOLVING
(  57.064) GENERATE: DONE SOLVING
(  57.065) LOOP: DONE GENERATING (program 503)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
(  57.065) LOOP: START TESTING
(  57.067) LOOP: DONE TESTING ('some', 'some')
(  57.067) LOOP: START IMPOSING CONSTRAINTS
(  57.067) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  57.067) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  57.068) GENERATE: START GROUNDING (impose_constraints)
(  57.210) GENERATE: DONE GROUNDING (impose_constraints)
(  57.210) LOOP: DONE IMPOSING CONSTRAINTS
(  57.210) LOOP: START GENERATING (program 504)
(  57.210) GENERATE: START SOLVING
(  57.335) GENERATE: DONE SOLVING
(  57.335) LOOP: DONE GENERATING (program 504)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B),c_4(C).
(  57.335) LOOP: START TESTING
(  57.338) LOOP: DONE TESTING ('some', 'some')
(  57.338) LOOP: START IMPOSING CONSTRAINTS
(  57.338) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  57.338) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  57.338) GENERATE: START GROUNDING (impose_constraints)
(  57.473) GENERATE: DONE GROUNDING (impose_constraints)
(  57.473) LOOP: DONE IMPOSING CONSTRAINTS
(  57.473) LOOP: START GENERATING (program 505)
(  57.473) GENERATE: START SOLVING
(  57.542) GENERATE: DONE SOLVING
(  57.542) LOOP: DONE GENERATING (program 505)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
(  57.542) LOOP: START TESTING
(  57.545) LOOP: DONE TESTING ('some', 'some')
(  57.545) LOOP: START IMPOSING CONSTRAINTS
(  57.545) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  57.545) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  57.545) GENERATE: START GROUNDING (impose_constraints)
(  57.679) GENERATE: DONE GROUNDING (impose_constraints)
(  57.679) LOOP: DONE IMPOSING CONSTRAINTS
(  57.679) LOOP: START GENERATING (program 506)
(  57.679) GENERATE: START SOLVING
(  58.046) GENERATE: DONE SOLVING
(  58.046) LOOP: DONE GENERATING (program 506)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
(  58.046) LOOP: START TESTING
(  58.049) LOOP: DONE TESTING ('some', 'some')
(  58.049) LOOP: START IMPOSING CONSTRAINTS
(  58.049) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  58.049) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  58.049) GENERATE: START GROUNDING (impose_constraints)
(  58.184) GENERATE: DONE GROUNDING (impose_constraints)
(  58.184) LOOP: DONE IMPOSING CONSTRAINTS
(  58.184) LOOP: START GENERATING (program 507)
(  58.184) GENERATE: START SOLVING
(  58.281) GENERATE: DONE SOLVING
(  58.281) LOOP: DONE GENERATING (program 507)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),c_0(C),my_succ(D,C,B).
(  58.281) LOOP: START TESTING
(  58.284) LOOP: DONE TESTING ('some', 'some')
(  58.284) LOOP: START IMPOSING CONSTRAINTS
(  58.284) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  58.284) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  58.284) GENERATE: START GROUNDING (impose_constraints)
(  58.419) GENERATE: DONE GROUNDING (impose_constraints)
(  58.419) LOOP: DONE IMPOSING CONSTRAINTS
(  58.419) LOOP: START GENERATING (program 508)
(  58.419) GENERATE: START SOLVING
(  58.590) GENERATE: DONE SOLVING
(  58.590) LOOP: DONE GENERATING (program 508)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
(  58.590) LOOP: START TESTING
(  58.593) LOOP: DONE TESTING ('some', 'some')
(  58.593) LOOP: START IMPOSING CONSTRAINTS
(  58.593) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  58.593) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  58.594) GENERATE: START GROUNDING (impose_constraints)
(  58.729) GENERATE: DONE GROUNDING (impose_constraints)
(  58.729) LOOP: DONE IMPOSING CONSTRAINTS
(  58.729) LOOP: START GENERATING (program 509)
(  58.729) GENERATE: START SOLVING
(  58.851) GENERATE: DONE SOLVING
(  58.852) LOOP: DONE GENERATING (program 509)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_succ(A,D,C),c_1(D).
(  58.852) LOOP: START TESTING
(  58.854) LOOP: DONE TESTING ('some', 'some')
(  58.854) LOOP: START IMPOSING CONSTRAINTS
(  58.854) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  58.854) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  58.855) GENERATE: START GROUNDING (impose_constraints)
(  58.993) GENERATE: DONE GROUNDING (impose_constraints)
(  58.993) LOOP: DONE IMPOSING CONSTRAINTS
(  58.993) LOOP: START GENERATING (program 510)
(  58.993) GENERATE: START SOLVING
(  59.159) GENERATE: DONE SOLVING
(  59.160) LOOP: DONE GENERATING (program 510)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),my_true_value(A,C),c_4(D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  59.160) LOOP: START TESTING
(  59.163) LOOP: DONE TESTING ('some', 'some')
(  59.163) LOOP: START IMPOSING CONSTRAINTS
(  59.163) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  59.163) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  59.163) GENERATE: START GROUNDING (impose_constraints)
(  59.298) GENERATE: DONE GROUNDING (impose_constraints)
(  59.298) LOOP: DONE IMPOSING CONSTRAINTS
(  59.298) LOOP: START GENERATING (program 511)
(  59.298) GENERATE: START SOLVING
(  59.990) GENERATE: DONE SOLVING
(  59.990) LOOP: DONE GENERATING (program 511)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(A,D),my_succ(A,B,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  59.991) LOOP: START TESTING
(  59.994) LOOP: DONE TESTING ('some', 'none')
(  59.994) LOOP: START IMPOSING CONSTRAINTS
(  59.994) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  59.994) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  59.994) GENERATE: START GROUNDING (impose_constraints)
(  60.132) GENERATE: DONE GROUNDING (impose_constraints)
(  60.132) LOOP: DONE IMPOSING CONSTRAINTS
(  60.132) LOOP: START GENERATING (program 512)
(  60.132) GENERATE: START SOLVING
(  60.232) GENERATE: DONE SOLVING
(  60.232) LOOP: DONE GENERATING (program 512)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,B,D),my_true_value(A,D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  60.232) LOOP: START TESTING
(  60.235) LOOP: DONE TESTING ('some', 'none')
(  60.235) LOOP: START IMPOSING CONSTRAINTS
(  60.235) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  60.235) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  60.235) GENERATE: START GROUNDING (impose_constraints)
(  60.380) GENERATE: DONE GROUNDING (impose_constraints)
(  60.380) LOOP: DONE IMPOSING CONSTRAINTS
(  60.380) LOOP: START GENERATING (program 513)
(  60.380) GENERATE: START SOLVING
(  60.428) GENERATE: DONE SOLVING
(  60.428) LOOP: DONE GENERATING (program 513)
PROGRAM:
  next_value(A,B) :- c_2(D),my_true_value(A,C),my_succ(A,B,D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  60.428) LOOP: START TESTING
(  60.432) LOOP: DONE TESTING ('some', 'some')
(  60.432) LOOP: START IMPOSING CONSTRAINTS
(  60.432) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  60.432) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  60.432) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  60.432) GENERATE: START GROUNDING (impose_constraints)
(  60.574) GENERATE: DONE GROUNDING (impose_constraints)
(  60.574) LOOP: DONE IMPOSING CONSTRAINTS
(  60.574) LOOP: START GENERATING (program 514)
(  60.574) GENERATE: START SOLVING
(  60.630) GENERATE: DONE SOLVING
(  60.630) LOOP: DONE GENERATING (program 514)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_2(D),my_true_value(A,D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  60.630) LOOP: START TESTING
(  60.633) LOOP: DONE TESTING ('some', 'some')
(  60.633) LOOP: START IMPOSING CONSTRAINTS
(  60.633) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  60.633) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  60.633) GENERATE: START GROUNDING (impose_constraints)
(  60.775) GENERATE: DONE GROUNDING (impose_constraints)
(  60.775) LOOP: DONE IMPOSING CONSTRAINTS
(  60.775) LOOP: START GENERATING (program 515)
(  60.775) GENERATE: START SOLVING
(  60.884) GENERATE: DONE SOLVING
(  60.884) LOOP: DONE GENERATING (program 515)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),my_true_value(A,D),c_5(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  60.885) LOOP: START TESTING
(  60.887) LOOP: DONE TESTING ('some', 'none')
(  60.887) LOOP: START IMPOSING CONSTRAINTS
(  60.887) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  60.887) GENERATE: START GROUNDING (impose_constraints)
(  61.026) GENERATE: DONE GROUNDING (impose_constraints)
(  61.026) LOOP: DONE IMPOSING CONSTRAINTS
(  61.026) LOOP: START GENERATING (program 516)
(  61.026) GENERATE: START SOLVING
(  61.329) GENERATE: DONE SOLVING
(  61.330) LOOP: DONE GENERATING (program 516)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  61.330) LOOP: START TESTING
(  61.332) LOOP: DONE TESTING ('some', 'none')
(  61.332) LOOP: START IMPOSING CONSTRAINTS
(  61.332) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  61.332) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  61.333) GENERATE: START GROUNDING (impose_constraints)
(  61.470) GENERATE: DONE GROUNDING (impose_constraints)
(  61.470) LOOP: DONE IMPOSING CONSTRAINTS
(  61.470) LOOP: START GENERATING (program 517)
(  61.470) GENERATE: START SOLVING
(  61.582) GENERATE: DONE SOLVING
(  61.582) LOOP: DONE GENERATING (program 517)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
(  61.583) LOOP: START TESTING
(  61.585) LOOP: DONE TESTING ('some', 'none')
(  61.585) LOOP: START IMPOSING CONSTRAINTS
(  61.585) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  61.585) GENERATE: START GROUNDING (impose_constraints)
(  61.724) GENERATE: DONE GROUNDING (impose_constraints)
(  61.724) LOOP: DONE IMPOSING CONSTRAINTS
(  61.724) LOOP: START GENERATING (program 518)
(  61.724) GENERATE: START SOLVING
(  61.810) GENERATE: DONE SOLVING
(  61.811) LOOP: DONE GENERATING (program 518)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(D),my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,B).
(  61.811) LOOP: START TESTING
(  61.814) LOOP: DONE TESTING ('some', 'none')
(  61.814) LOOP: START IMPOSING CONSTRAINTS
(  61.814) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  61.814) GENERATE: START GROUNDING (impose_constraints)
(  61.953) GENERATE: DONE GROUNDING (impose_constraints)
(  61.953) LOOP: DONE IMPOSING CONSTRAINTS
(  61.953) LOOP: START GENERATING (program 519)
(  61.953) GENERATE: START SOLVING
(  62.109) GENERATE: DONE SOLVING
(  62.109) LOOP: DONE GENERATING (program 519)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),my_succ(C,D,B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
(  62.109) LOOP: START TESTING
(  62.112) LOOP: DONE TESTING ('some', 'some')
(  62.112) LOOP: START IMPOSING CONSTRAINTS
(  62.112) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  62.112) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  62.112) GENERATE: START GROUNDING (impose_constraints)
(  62.254) GENERATE: DONE GROUNDING (impose_constraints)
(  62.254) LOOP: DONE IMPOSING CONSTRAINTS
(  62.254) LOOP: START GENERATING (program 520)
(  62.254) GENERATE: START SOLVING
(  62.494) GENERATE: DONE SOLVING
(  62.494) LOOP: DONE GENERATING (program 520)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_true_value(A,D),my_succ(A,B,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  62.494) LOOP: START TESTING
(  62.497) LOOP: DONE TESTING ('some', 'some')
(  62.497) LOOP: START IMPOSING CONSTRAINTS
(  62.497) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  62.497) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  62.497) GENERATE: START GROUNDING (impose_constraints)
(  62.639) GENERATE: DONE GROUNDING (impose_constraints)
(  62.639) LOOP: DONE IMPOSING CONSTRAINTS
(  62.639) LOOP: START GENERATING (program 521)
(  62.639) GENERATE: START SOLVING
(  62.674) GENERATE: DONE SOLVING
(  62.675) LOOP: DONE GENERATING (program 521)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),c_2(C).
(  62.675) LOOP: START TESTING
(  62.678) LOOP: DONE TESTING ('some', 'some')
(  62.678) LOOP: START IMPOSING CONSTRAINTS
(  62.678) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  62.678) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  62.678) GENERATE: START GROUNDING (impose_constraints)
(  62.821) GENERATE: DONE GROUNDING (impose_constraints)
(  62.821) LOOP: DONE IMPOSING CONSTRAINTS
(  62.821) LOOP: START GENERATING (program 522)
(  62.821) GENERATE: START SOLVING
(  62.989) GENERATE: DONE SOLVING
(  62.989) LOOP: DONE GENERATING (program 522)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,B,D),my_true_value(A,D),c_2(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  62.989) LOOP: START TESTING
(  62.992) LOOP: DONE TESTING ('some', 'some')
(  62.992) LOOP: START IMPOSING CONSTRAINTS
(  62.992) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  62.992) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  62.992) GENERATE: START GROUNDING (impose_constraints)
(  63.136) GENERATE: DONE GROUNDING (impose_constraints)
(  63.136) LOOP: DONE IMPOSING CONSTRAINTS
(  63.136) LOOP: START GENERATING (program 523)
(  63.136) GENERATE: START SOLVING
(  63.164) GENERATE: DONE SOLVING
(  63.164) LOOP: DONE GENERATING (program 523)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(C,D),my_succ(C,D,B),my_true_value(A,D),my_true_value(C,B).
(  63.164) LOOP: START TESTING
(  63.167) LOOP: DONE TESTING ('some', 'none')
(  63.167) LOOP: START IMPOSING CONSTRAINTS
(  63.167) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  63.167) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  63.167) GENERATE: START GROUNDING (impose_constraints)
(  63.309) GENERATE: DONE GROUNDING (impose_constraints)
(  63.309) LOOP: DONE IMPOSING CONSTRAINTS
(  63.309) LOOP: START GENERATING (program 524)
(  63.309) GENERATE: START SOLVING
(  63.385) GENERATE: DONE SOLVING
(  63.385) LOOP: DONE GENERATING (program 524)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(C,D,B),c_4(D),my_succ(A,D,B),my_true_value(C,B).
(  63.385) LOOP: START TESTING
(  63.388) LOOP: DONE TESTING ('some', 'some')
(  63.388) LOOP: START IMPOSING CONSTRAINTS
(  63.388) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  63.388) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  63.388) GENERATE: START GROUNDING (impose_constraints)
(  63.532) GENERATE: DONE GROUNDING (impose_constraints)
(  63.532) LOOP: DONE IMPOSING CONSTRAINTS
(  63.532) LOOP: START GENERATING (program 525)
(  63.532) GENERATE: START SOLVING
(  63.954) GENERATE: DONE SOLVING
(  63.954) LOOP: DONE GENERATING (program 525)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_5(D),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  63.955) LOOP: START TESTING
(  63.957) LOOP: DONE TESTING ('some', 'none')
(  63.957) LOOP: START IMPOSING CONSTRAINTS
(  63.957) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  63.957) GENERATE: START GROUNDING (impose_constraints)
(  64.100) GENERATE: DONE GROUNDING (impose_constraints)
(  64.100) LOOP: DONE IMPOSING CONSTRAINTS
(  64.100) LOOP: START GENERATING (program 526)
(  64.100) GENERATE: START SOLVING
(  64.331) GENERATE: DONE SOLVING
(  64.331) LOOP: DONE GENERATING (program 526)
PROGRAM:
  next_value(A,B) :- c_0(D),my_true_value(A,C),my_succ(A,C,B),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  64.331) LOOP: START TESTING
(  64.334) LOOP: DONE TESTING ('some', 'some')
(  64.334) LOOP: START IMPOSING CONSTRAINTS
(  64.334) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  64.334) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  64.334) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  64.334) GENERATE: START GROUNDING (impose_constraints)
(  64.480) GENERATE: DONE GROUNDING (impose_constraints)
(  64.480) LOOP: DONE IMPOSING CONSTRAINTS
(  64.480) LOOP: START GENERATING (program 527)
(  64.480) GENERATE: START SOLVING
(  64.617) GENERATE: DONE SOLVING
(  64.617) LOOP: DONE GENERATING (program 527)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_succ(C,D,B),my_succ(A,D,B),my_true_value(C,B).
(  64.617) LOOP: START TESTING
(  64.620) LOOP: DONE TESTING ('some', 'none')
(  64.620) LOOP: START IMPOSING CONSTRAINTS
(  64.620) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  64.620) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  64.620) GENERATE: START GROUNDING (impose_constraints)
(  64.762) GENERATE: DONE GROUNDING (impose_constraints)
(  64.762) LOOP: DONE IMPOSING CONSTRAINTS
(  64.762) LOOP: START GENERATING (program 528)
(  64.762) GENERATE: START SOLVING
(  64.793) GENERATE: DONE SOLVING
(  64.794) LOOP: DONE GENERATING (program 528)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_true_value(C,D),my_succ(C,D,B),my_succ(A,D,B).
(  64.794) LOOP: START TESTING
(  64.796) LOOP: DONE TESTING ('some', 'some')
(  64.796) LOOP: START IMPOSING CONSTRAINTS
(  64.797) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  64.797) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  64.797) GENERATE: START GROUNDING (impose_constraints)
(  64.941) GENERATE: DONE GROUNDING (impose_constraints)
(  64.941) LOOP: DONE IMPOSING CONSTRAINTS
(  64.941) LOOP: START GENERATING (program 529)
(  64.941) GENERATE: START SOLVING
(  65.017) GENERATE: DONE SOLVING
(  65.017) LOOP: DONE GENERATING (program 529)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),my_succ(C,D,B),my_succ(A,D,B),my_true_value(C,B).
(  65.017) LOOP: START TESTING
(  65.020) LOOP: DONE TESTING ('some', 'some')
(  65.020) LOOP: START IMPOSING CONSTRAINTS
(  65.020) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  65.020) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  65.020) GENERATE: START GROUNDING (impose_constraints)
(  65.168) GENERATE: DONE GROUNDING (impose_constraints)
(  65.168) LOOP: DONE IMPOSING CONSTRAINTS
(  65.168) LOOP: START GENERATING (program 530)
(  65.168) GENERATE: START SOLVING
(  65.194) GENERATE: DONE SOLVING
(  65.195) LOOP: DONE GENERATING (program 530)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),my_true_value(C,D),my_succ(C,D,B),my_succ(A,D,B).
(  65.195) LOOP: START TESTING
(  65.197) LOOP: DONE TESTING ('some', 'none')
(  65.197) LOOP: START IMPOSING CONSTRAINTS
(  65.197) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  65.197) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  65.198) GENERATE: START GROUNDING (impose_constraints)
(  65.344) GENERATE: DONE GROUNDING (impose_constraints)
(  65.344) LOOP: DONE IMPOSING CONSTRAINTS
(  65.344) LOOP: START GENERATING (program 531)
(  65.344) GENERATE: START SOLVING
(  65.373) GENERATE: DONE SOLVING
(  65.373) LOOP: DONE GENERATING (program 531)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),my_true_value(C,D),my_succ(C,D,B),my_succ(A,D,B).
(  65.373) LOOP: START TESTING
(  65.376) LOOP: DONE TESTING ('some', 'none')
(  65.376) LOOP: START IMPOSING CONSTRAINTS
(  65.376) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  65.376) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  65.376) GENERATE: START GROUNDING (impose_constraints)
(  65.525) GENERATE: DONE GROUNDING (impose_constraints)
(  65.525) LOOP: DONE IMPOSING CONSTRAINTS
(  65.525) LOOP: START GENERATING (program 532)
(  65.525) GENERATE: START SOLVING
(  65.777) GENERATE: DONE SOLVING
(  65.777) LOOP: DONE GENERATING (program 532)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
(  65.777) LOOP: START TESTING
(  65.780) LOOP: DONE TESTING ('some', 'some')
(  65.780) LOOP: START IMPOSING CONSTRAINTS
(  65.780) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  65.780) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  65.780) GENERATE: START GROUNDING (impose_constraints)
(  65.932) GENERATE: DONE GROUNDING (impose_constraints)
(  65.932) LOOP: DONE IMPOSING CONSTRAINTS
(  65.932) LOOP: START GENERATING (program 533)
(  65.932) GENERATE: START SOLVING
(  66.413) GENERATE: DONE SOLVING
(  66.414) LOOP: DONE GENERATING (program 533)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,B),c_2(C).
(  66.414) LOOP: START TESTING
(  66.416) LOOP: DONE TESTING ('some', 'none')
(  66.416) LOOP: START IMPOSING CONSTRAINTS
(  66.416) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  66.416) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  66.417) GENERATE: START GROUNDING (impose_constraints)
(  66.564) GENERATE: DONE GROUNDING (impose_constraints)
(  66.564) LOOP: DONE IMPOSING CONSTRAINTS
(  66.564) LOOP: START GENERATING (program 534)
(  66.564) GENERATE: START SOLVING
(  66.702) GENERATE: DONE SOLVING
(  66.703) LOOP: DONE GENERATING (program 534)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(C),my_succ(D,B,C),my_true_value(D,B),my_true_value(A,B).
(  66.703) LOOP: START TESTING
(  66.706) LOOP: DONE TESTING ('some', 'none')
(  66.706) LOOP: START IMPOSING CONSTRAINTS
(  66.706) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  66.706) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  66.706) GENERATE: START GROUNDING (impose_constraints)
(  66.854) GENERATE: DONE GROUNDING (impose_constraints)
(  66.854) LOOP: DONE IMPOSING CONSTRAINTS
(  66.854) LOOP: START GENERATING (program 535)
(  66.854) GENERATE: START SOLVING
(  66.898) GENERATE: DONE SOLVING
(  66.899) LOOP: DONE GENERATING (program 535)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_2(C).
(  66.899) LOOP: START TESTING
(  66.901) LOOP: DONE TESTING ('some', 'some')
(  66.901) LOOP: START IMPOSING CONSTRAINTS
(  66.902) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  66.902) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  66.902) GENERATE: START GROUNDING (impose_constraints)
(  67.052) GENERATE: DONE GROUNDING (impose_constraints)
(  67.052) LOOP: DONE IMPOSING CONSTRAINTS
(  67.052) LOOP: START GENERATING (program 536)
(  67.052) GENERATE: START SOLVING
(  67.241) GENERATE: DONE SOLVING
(  67.241) LOOP: DONE GENERATING (program 536)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(C),my_succ(D,B,C),my_true_value(D,B),my_true_value(A,B).
(  67.242) LOOP: START TESTING
(  67.244) LOOP: DONE TESTING ('some', 'some')
(  67.244) LOOP: START IMPOSING CONSTRAINTS
(  67.244) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  67.244) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  67.244) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  67.245) GENERATE: START GROUNDING (impose_constraints)
(  67.401) GENERATE: DONE GROUNDING (impose_constraints)
(  67.401) LOOP: DONE IMPOSING CONSTRAINTS
(  67.401) LOOP: START GENERATING (program 537)
(  67.401) GENERATE: START SOLVING
(  67.446) GENERATE: DONE SOLVING
(  67.447) LOOP: DONE GENERATING (program 537)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_5(C),my_succ(D,B,C),my_true_value(D,B),my_true_value(A,B).
(  67.447) LOOP: START TESTING
(  67.449) LOOP: DONE TESTING ('some', 'some')
(  67.449) LOOP: START IMPOSING CONSTRAINTS
(  67.449) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  67.449) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  67.449) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  67.450) GENERATE: START GROUNDING (impose_constraints)
(  67.602) GENERATE: DONE GROUNDING (impose_constraints)
(  67.602) LOOP: DONE IMPOSING CONSTRAINTS
(  67.602) LOOP: START GENERATING (program 538)
(  67.602) GENERATE: START SOLVING
(  67.623) GENERATE: DONE SOLVING
(  67.624) LOOP: DONE GENERATING (program 538)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(D,B,C),my_true_value(D,B),my_true_value(A,B),c_4(C).
(  67.624) LOOP: START TESTING
(  67.626) LOOP: DONE TESTING ('some', 'some')
(  67.626) LOOP: START IMPOSING CONSTRAINTS
(  67.627) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  67.627) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  67.627) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  67.627) GENERATE: START GROUNDING (impose_constraints)
(  67.777) GENERATE: DONE GROUNDING (impose_constraints)
(  67.777) LOOP: DONE IMPOSING CONSTRAINTS
(  67.777) LOOP: START GENERATING (program 539)
(  67.777) GENERATE: START SOLVING
(  67.801) GENERATE: DONE SOLVING
(  67.801) LOOP: DONE GENERATING (program 539)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(C),my_succ(D,B,C),my_true_value(D,B),my_true_value(A,B).
(  67.801) LOOP: START TESTING
(  67.804) LOOP: DONE TESTING ('some', 'none')
(  67.804) LOOP: START IMPOSING CONSTRAINTS
(  67.804) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  67.804) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  67.804) GENERATE: START GROUNDING (impose_constraints)
(  67.957) GENERATE: DONE GROUNDING (impose_constraints)
(  67.957) LOOP: DONE IMPOSING CONSTRAINTS
(  67.957) LOOP: START GENERATING (program 540)
(  67.957) GENERATE: START SOLVING
(  67.980) GENERATE: DONE SOLVING
(  67.980) LOOP: DONE GENERATING (program 540)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(C),my_succ(D,B,C),my_true_value(D,B),my_true_value(A,B).
(  67.980) LOOP: START TESTING
(  67.983) LOOP: DONE TESTING ('some', 'some')
(  67.983) LOOP: START IMPOSING CONSTRAINTS
(  67.983) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  67.983) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  67.983) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  67.983) GENERATE: START GROUNDING (impose_constraints)
(  68.138) GENERATE: DONE GROUNDING (impose_constraints)
(  68.138) LOOP: DONE IMPOSING CONSTRAINTS
(  68.138) LOOP: START GENERATING (program 541)
(  68.138) GENERATE: START SOLVING
(  68.161) GENERATE: DONE SOLVING
(  68.162) LOOP: DONE GENERATING (program 541)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_succ(D,B,C),my_true_value(D,B).
(  68.162) LOOP: START TESTING
(  68.164) LOOP: DONE TESTING ('some', 'none')
(  68.164) LOOP: START IMPOSING CONSTRAINTS
(  68.164) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  68.164) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  68.165) GENERATE: START GROUNDING (impose_constraints)
(  68.320) GENERATE: DONE GROUNDING (impose_constraints)
(  68.320) LOOP: DONE IMPOSING CONSTRAINTS
(  68.320) LOOP: START GENERATING (program 542)
(  68.320) GENERATE: START SOLVING
(  68.344) GENERATE: DONE SOLVING
(  68.345) LOOP: DONE GENERATING (program 542)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_0(B),my_succ(D,B,C),my_true_value(D,B).
(  68.345) LOOP: START TESTING
(  68.348) LOOP: DONE TESTING ('some', 'some')
(  68.348) LOOP: START IMPOSING CONSTRAINTS
(  68.348) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  68.348) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  68.348) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  68.348) GENERATE: START GROUNDING (impose_constraints)
(  68.502) GENERATE: DONE GROUNDING (impose_constraints)
(  68.502) LOOP: DONE IMPOSING CONSTRAINTS
(  68.502) LOOP: START GENERATING (program 543)
(  68.502) GENERATE: START SOLVING
(  68.524) GENERATE: DONE SOLVING
(  68.524) LOOP: DONE GENERATING (program 543)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(B),my_succ(D,B,C),my_true_value(D,B).
(  68.524) LOOP: START TESTING
(  68.527) LOOP: DONE TESTING ('some', 'some')
(  68.527) LOOP: START IMPOSING CONSTRAINTS
(  68.527) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  68.527) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  68.527) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  68.527) GENERATE: START GROUNDING (impose_constraints)
(  68.688) GENERATE: DONE GROUNDING (impose_constraints)
(  68.688) LOOP: DONE IMPOSING CONSTRAINTS
(  68.688) LOOP: START GENERATING (program 544)
(  68.688) GENERATE: START SOLVING
(  68.712) GENERATE: DONE SOLVING
(  68.712) LOOP: DONE GENERATING (program 544)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,B),c_4(B).
(  68.713) LOOP: START TESTING
(  68.715) LOOP: DONE TESTING ('some', 'some')
(  68.715) LOOP: START IMPOSING CONSTRAINTS
(  68.715) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  68.715) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  68.715) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  68.716) GENERATE: START GROUNDING (impose_constraints)
(  68.871) GENERATE: DONE GROUNDING (impose_constraints)
(  68.871) LOOP: DONE IMPOSING CONSTRAINTS
(  68.871) LOOP: START GENERATING (program 545)
(  68.871) GENERATE: START SOLVING
(  68.894) GENERATE: DONE SOLVING
(  68.895) LOOP: DONE GENERATING (program 545)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_succ(D,B,C),my_true_value(D,B).
(  68.895) LOOP: START TESTING
(  68.898) LOOP: DONE TESTING ('some', 'some')
(  68.898) LOOP: START IMPOSING CONSTRAINTS
(  68.898) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  68.898) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  68.898) GENERATE: START GROUNDING (impose_constraints)
(  69.055) GENERATE: DONE GROUNDING (impose_constraints)
(  69.055) LOOP: DONE IMPOSING CONSTRAINTS
(  69.055) LOOP: START GENERATING (program 546)
(  69.055) GENERATE: START SOLVING
(  69.082) GENERATE: DONE SOLVING
(  69.083) LOOP: DONE GENERATING (program 546)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_5(B),my_succ(D,B,C),my_true_value(D,B).
(  69.083) LOOP: START TESTING
(  69.086) LOOP: DONE TESTING ('some', 'none')
(  69.086) LOOP: START IMPOSING CONSTRAINTS
(  69.086) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  69.086) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  69.086) GENERATE: START GROUNDING (impose_constraints)
(  69.240) GENERATE: DONE GROUNDING (impose_constraints)
(  69.240) LOOP: DONE IMPOSING CONSTRAINTS
(  69.240) LOOP: START GENERATING (program 547)
(  69.240) GENERATE: START SOLVING
(  69.264) GENERATE: DONE SOLVING
(  69.264) LOOP: DONE GENERATING (program 547)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_succ(D,B,C),my_true_value(D,B).
(  69.264) LOOP: START TESTING
(  69.267) LOOP: DONE TESTING ('some', 'some')
(  69.267) LOOP: START IMPOSING CONSTRAINTS
(  69.267) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  69.267) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  69.267) GENERATE: START GROUNDING (impose_constraints)
(  69.424) GENERATE: DONE GROUNDING (impose_constraints)
(  69.425) LOOP: DONE IMPOSING CONSTRAINTS
(  69.425) LOOP: START GENERATING (program 548)
(  69.425) GENERATE: START SOLVING
(  69.456) GENERATE: DONE SOLVING
(  69.456) LOOP: DONE GENERATING (program 548)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,B),my_true_value(A,B).
(  69.456) LOOP: START TESTING
(  69.459) LOOP: DONE TESTING ('some', 'some')
(  69.459) LOOP: START IMPOSING CONSTRAINTS
(  69.459) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  69.459) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  69.459) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  69.459) GENERATE: START GROUNDING (impose_constraints)
(  69.619) GENERATE: DONE GROUNDING (impose_constraints)
(  69.619) LOOP: DONE IMPOSING CONSTRAINTS
(  69.619) LOOP: START GENERATING (program 549)
(  69.619) GENERATE: START SOLVING
(  69.643) GENERATE: DONE SOLVING
(  69.644) LOOP: DONE GENERATING (program 549)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_1(C).
(  69.644) LOOP: START TESTING
(  69.646) LOOP: DONE TESTING ('some', 'none')
(  69.646) LOOP: START IMPOSING CONSTRAINTS
(  69.646) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  69.646) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  69.647) GENERATE: START GROUNDING (impose_constraints)
(  69.805) GENERATE: DONE GROUNDING (impose_constraints)
(  69.805) LOOP: DONE IMPOSING CONSTRAINTS
(  69.805) LOOP: START GENERATING (program 550)
(  69.805) GENERATE: START SOLVING
(  69.830) GENERATE: DONE SOLVING
(  69.830) LOOP: DONE GENERATING (program 550)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_1(B),my_true_value(D,C).
(  69.830) LOOP: START TESTING
(  69.833) LOOP: DONE TESTING ('some', 'some')
(  69.833) LOOP: START IMPOSING CONSTRAINTS
(  69.833) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  69.833) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  69.833) GENERATE: START GROUNDING (impose_constraints)
(  70.017) GENERATE: DONE GROUNDING (impose_constraints)
(  70.017) LOOP: DONE IMPOSING CONSTRAINTS
(  70.017) LOOP: START GENERATING (program 551)
(  70.017) GENERATE: START SOLVING
(  70.047) GENERATE: DONE SOLVING
(  70.048) LOOP: DONE GENERATING (program 551)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_0(B),my_succ(D,B,C),my_true_value(D,C).
(  70.048) LOOP: START TESTING
(  70.050) LOOP: DONE TESTING ('some', 'none')
(  70.050) LOOP: START IMPOSING CONSTRAINTS
(  70.050) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  70.050) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  70.051) GENERATE: START GROUNDING (impose_constraints)
(  70.218) GENERATE: DONE GROUNDING (impose_constraints)
(  70.218) LOOP: DONE IMPOSING CONSTRAINTS
(  70.218) LOOP: START GENERATING (program 552)
(  70.218) GENERATE: START SOLVING
(  70.246) GENERATE: DONE SOLVING
(  70.247) LOOP: DONE GENERATING (program 552)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_3(B),my_true_value(D,C).
(  70.247) LOOP: START TESTING
(  70.250) LOOP: DONE TESTING ('some', 'some')
(  70.250) LOOP: START IMPOSING CONSTRAINTS
(  70.250) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  70.250) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  70.250) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  70.250) GENERATE: START GROUNDING (impose_constraints)
(  70.412) GENERATE: DONE GROUNDING (impose_constraints)
(  70.412) LOOP: DONE IMPOSING CONSTRAINTS
(  70.412) LOOP: START GENERATING (program 553)
(  70.412) GENERATE: START SOLVING
(  70.437) GENERATE: DONE SOLVING
(  70.437) LOOP: DONE GENERATING (program 553)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_4(B).
(  70.437) LOOP: START TESTING
(  70.440) LOOP: DONE TESTING ('some', 'some')
(  70.440) LOOP: START IMPOSING CONSTRAINTS
(  70.440) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  70.440) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  70.440) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  70.440) GENERATE: START GROUNDING (impose_constraints)
(  70.601) GENERATE: DONE GROUNDING (impose_constraints)
(  70.601) LOOP: DONE IMPOSING CONSTRAINTS
(  70.601) LOOP: START GENERATING (program 554)
(  70.601) GENERATE: START SOLVING
(  70.630) GENERATE: DONE SOLVING
(  70.630) LOOP: DONE GENERATING (program 554)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_2(B),my_true_value(D,C).
(  70.630) LOOP: START TESTING
(  70.633) LOOP: DONE TESTING ('some', 'some')
(  70.633) LOOP: START IMPOSING CONSTRAINTS
(  70.633) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  70.633) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  70.633) GENERATE: START GROUNDING (impose_constraints)
(  70.793) GENERATE: DONE GROUNDING (impose_constraints)
(  70.793) LOOP: DONE IMPOSING CONSTRAINTS
(  70.793) LOOP: START GENERATING (program 555)
(  70.793) GENERATE: START SOLVING
(  70.817) GENERATE: DONE SOLVING
(  70.818) LOOP: DONE GENERATING (program 555)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_3(C),my_true_value(D,C).
(  70.818) LOOP: START TESTING
(  70.821) LOOP: DONE TESTING ('some', 'some')
(  70.821) LOOP: START IMPOSING CONSTRAINTS
(  70.821) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  70.821) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  70.821) GENERATE: START GROUNDING (impose_constraints)
(  70.985) GENERATE: DONE GROUNDING (impose_constraints)
(  70.985) LOOP: DONE IMPOSING CONSTRAINTS
(  70.985) LOOP: START GENERATING (program 556)
(  70.985) GENERATE: START SOLVING
(  71.006) GENERATE: DONE SOLVING
(  71.006) LOOP: DONE GENERATING (program 556)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_5(B),my_true_value(D,C).
(  71.007) LOOP: START TESTING
(  71.009) LOOP: DONE TESTING ('some', 'none')
(  71.009) LOOP: START IMPOSING CONSTRAINTS
(  71.009) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  71.009) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  71.009) GENERATE: START GROUNDING (impose_constraints)
(  71.189) GENERATE: DONE GROUNDING (impose_constraints)
(  71.189) LOOP: DONE IMPOSING CONSTRAINTS
(  71.189) LOOP: START GENERATING (program 557)
(  71.189) GENERATE: START SOLVING
(  71.259) GENERATE: DONE SOLVING
(  71.260) LOOP: DONE GENERATING (program 557)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
(  71.260) LOOP: START TESTING
(  71.263) LOOP: DONE TESTING ('some', 'some')
(  71.263) LOOP: START IMPOSING CONSTRAINTS
(  71.263) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  71.263) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  71.263) GENERATE: START GROUNDING (impose_constraints)
(  71.440) GENERATE: DONE GROUNDING (impose_constraints)
(  71.440) LOOP: DONE IMPOSING CONSTRAINTS
(  71.440) LOOP: START GENERATING (program 558)
(  71.440) GENERATE: START SOLVING
(  71.466) GENERATE: DONE SOLVING
(  71.466) LOOP: DONE GENERATING (program 558)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_5(C).
(  71.467) LOOP: START TESTING
(  71.469) LOOP: DONE TESTING ('some', 'some')
(  71.469) LOOP: START IMPOSING CONSTRAINTS
(  71.469) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  71.469) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  71.469) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  71.469) GENERATE: START GROUNDING (impose_constraints)
(  71.637) GENERATE: DONE GROUNDING (impose_constraints)
(  71.638) LOOP: DONE IMPOSING CONSTRAINTS
(  71.638) LOOP: START GENERATING (program 559)
(  71.638) GENERATE: START SOLVING
(  71.664) GENERATE: DONE SOLVING
(  71.665) LOOP: DONE GENERATING (program 559)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
(  71.665) LOOP: START TESTING
(  71.667) LOOP: DONE TESTING ('some', 'none')
(  71.667) LOOP: START IMPOSING CONSTRAINTS
(  71.667) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  71.667) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  71.668) GENERATE: START GROUNDING (impose_constraints)
(  71.837) GENERATE: DONE GROUNDING (impose_constraints)
(  71.837) LOOP: DONE IMPOSING CONSTRAINTS
(  71.837) LOOP: START GENERATING (program 560)
(  71.837) GENERATE: START SOLVING
(  71.868) GENERATE: DONE SOLVING
(  71.869) LOOP: DONE GENERATING (program 560)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
(  71.869) LOOP: START TESTING
(  71.871) LOOP: DONE TESTING ('some', 'some')
(  71.871) LOOP: START IMPOSING CONSTRAINTS
(  71.871) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  71.871) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  71.871) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  71.872) GENERATE: START GROUNDING (impose_constraints)
(  72.043) GENERATE: DONE GROUNDING (impose_constraints)
(  72.043) LOOP: DONE IMPOSING CONSTRAINTS
(  72.043) LOOP: START GENERATING (program 561)
(  72.043) GENERATE: START SOLVING
(  72.074) GENERATE: DONE SOLVING
(  72.075) LOOP: DONE GENERATING (program 561)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_4(B).
(  72.075) LOOP: START TESTING
(  72.077) LOOP: DONE TESTING ('some', 'some')
(  72.077) LOOP: START IMPOSING CONSTRAINTS
(  72.077) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  72.077) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  72.077) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  72.078) GENERATE: START GROUNDING (impose_constraints)
(  72.251) GENERATE: DONE GROUNDING (impose_constraints)
(  72.251) LOOP: DONE IMPOSING CONSTRAINTS
(  72.251) LOOP: START GENERATING (program 562)
(  72.251) GENERATE: START SOLVING
(  72.279) GENERATE: DONE SOLVING
(  72.279) LOOP: DONE GENERATING (program 562)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_4(C).
(  72.279) LOOP: START TESTING
(  72.282) LOOP: DONE TESTING ('some', 'some')
(  72.282) LOOP: START IMPOSING CONSTRAINTS
(  72.282) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  72.282) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  72.282) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  72.282) GENERATE: START GROUNDING (impose_constraints)
(  72.453) GENERATE: DONE GROUNDING (impose_constraints)
(  72.453) LOOP: DONE IMPOSING CONSTRAINTS
(  72.453) LOOP: START GENERATING (program 563)
(  72.453) GENERATE: START SOLVING
(  72.475) GENERATE: DONE SOLVING
(  72.475) LOOP: DONE GENERATING (program 563)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_0(C).
(  72.475) LOOP: START TESTING
(  72.478) LOOP: DONE TESTING ('some', 'none')
(  72.478) LOOP: START IMPOSING CONSTRAINTS
(  72.478) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  72.478) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  72.478) GENERATE: START GROUNDING (impose_constraints)
(  72.648) GENERATE: DONE GROUNDING (impose_constraints)
(  72.648) LOOP: DONE IMPOSING CONSTRAINTS
(  72.648) LOOP: START GENERATING (program 564)
(  72.648) GENERATE: START SOLVING
(  72.672) GENERATE: DONE SOLVING
(  72.673) LOOP: DONE GENERATING (program 564)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
(  72.673) LOOP: START TESTING
(  72.676) LOOP: DONE TESTING ('some', 'none')
(  72.676) LOOP: START IMPOSING CONSTRAINTS
(  72.676) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  72.676) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  72.676) GENERATE: START GROUNDING (impose_constraints)
(  72.848) GENERATE: DONE GROUNDING (impose_constraints)
(  72.848) LOOP: DONE IMPOSING CONSTRAINTS
(  72.848) LOOP: START GENERATING (program 565)
(  72.848) GENERATE: START SOLVING
(  72.871) GENERATE: DONE SOLVING
(  72.871) LOOP: DONE GENERATING (program 565)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
(  72.871) LOOP: START TESTING
(  72.874) LOOP: DONE TESTING ('some', 'some')
(  72.874) LOOP: START IMPOSING CONSTRAINTS
(  72.874) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  72.874) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  72.874) GENERATE: START GROUNDING (impose_constraints)
(  73.051) GENERATE: DONE GROUNDING (impose_constraints)
(  73.051) LOOP: DONE IMPOSING CONSTRAINTS
(  73.051) LOOP: START GENERATING (program 566)
(  73.051) GENERATE: START SOLVING
(  73.075) GENERATE: DONE SOLVING
(  73.076) LOOP: DONE GENERATING (program 566)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
(  73.076) LOOP: START TESTING
(  73.078) LOOP: DONE TESTING ('some', 'some')
(  73.078) LOOP: START IMPOSING CONSTRAINTS
(  73.079) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  73.079) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  73.079) GENERATE: START GROUNDING (impose_constraints)
(  73.257) GENERATE: DONE GROUNDING (impose_constraints)
(  73.257) LOOP: DONE IMPOSING CONSTRAINTS
(  73.257) LOOP: START GENERATING (program 567)
(  73.257) GENERATE: START SOLVING
(  73.283) GENERATE: DONE SOLVING
(  73.284) LOOP: DONE GENERATING (program 567)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
(  73.284) LOOP: START TESTING
(  73.286) LOOP: DONE TESTING ('some', 'some')
(  73.286) LOOP: START IMPOSING CONSTRAINTS
(  73.287) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  73.287) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  73.287) GENERATE: START GROUNDING (impose_constraints)
(  73.469) GENERATE: DONE GROUNDING (impose_constraints)
(  73.469) LOOP: DONE IMPOSING CONSTRAINTS
(  73.469) LOOP: START GENERATING (program 568)
(  73.469) GENERATE: START SOLVING
(  73.494) GENERATE: DONE SOLVING
(  73.495) LOOP: DONE GENERATING (program 568)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B),c_2(C).
(  73.495) LOOP: START TESTING
(  73.498) LOOP: DONE TESTING ('some', 'none')
(  73.498) LOOP: START IMPOSING CONSTRAINTS
(  73.498) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  73.498) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  73.498) GENERATE: START GROUNDING (impose_constraints)
(  73.675) GENERATE: DONE GROUNDING (impose_constraints)
(  73.675) LOOP: DONE IMPOSING CONSTRAINTS
(  73.675) LOOP: START GENERATING (program 569)
(  73.675) GENERATE: START SOLVING
(  73.698) GENERATE: DONE SOLVING
(  73.698) LOOP: DONE GENERATING (program 569)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
(  73.699) LOOP: START TESTING
(  73.701) LOOP: DONE TESTING ('some', 'none')
(  73.701) LOOP: START IMPOSING CONSTRAINTS
(  73.701) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  73.701) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  73.701) GENERATE: START GROUNDING (impose_constraints)
(  73.872) GENERATE: DONE GROUNDING (impose_constraints)
(  73.872) LOOP: DONE IMPOSING CONSTRAINTS
(  73.872) LOOP: START GENERATING (program 570)
(  73.872) GENERATE: START SOLVING
(  73.897) GENERATE: DONE SOLVING
(  73.898) LOOP: DONE GENERATING (program 570)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B),c_1(C).
(  73.898) LOOP: START TESTING
(  73.901) LOOP: DONE TESTING ('some', 'none')
(  73.901) LOOP: START IMPOSING CONSTRAINTS
(  73.901) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  73.901) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  73.901) GENERATE: START GROUNDING (impose_constraints)
(  74.090) GENERATE: DONE GROUNDING (impose_constraints)
(  74.090) LOOP: DONE IMPOSING CONSTRAINTS
(  74.090) LOOP: START GENERATING (program 571)
(  74.090) GENERATE: START SOLVING
(  74.117) GENERATE: DONE SOLVING
(  74.118) LOOP: DONE GENERATING (program 571)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B),c_5(C).
(  74.118) LOOP: START TESTING
(  74.120) LOOP: DONE TESTING ('some', 'some')
(  74.120) LOOP: START IMPOSING CONSTRAINTS
(  74.121) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  74.121) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  74.121) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  74.121) GENERATE: START GROUNDING (impose_constraints)
(  74.313) GENERATE: DONE GROUNDING (impose_constraints)
(  74.313) LOOP: DONE IMPOSING CONSTRAINTS
(  74.313) LOOP: START GENERATING (program 572)
(  74.313) GENERATE: START SOLVING
(  74.346) GENERATE: DONE SOLVING
(  74.346) LOOP: DONE GENERATING (program 572)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
(  74.347) LOOP: START TESTING
(  74.349) LOOP: DONE TESTING ('some', 'none')
(  74.349) LOOP: START IMPOSING CONSTRAINTS
(  74.349) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  74.349) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  74.350) GENERATE: START GROUNDING (impose_constraints)
(  74.539) GENERATE: DONE GROUNDING (impose_constraints)
(  74.539) LOOP: DONE IMPOSING CONSTRAINTS
(  74.539) LOOP: START GENERATING (program 573)
(  74.539) GENERATE: START SOLVING
(  74.565) GENERATE: DONE SOLVING
(  74.566) LOOP: DONE GENERATING (program 573)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(B),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
(  74.566) LOOP: START TESTING
(  74.568) LOOP: DONE TESTING ('some', 'some')
(  74.568) LOOP: START IMPOSING CONSTRAINTS
(  74.568) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  74.568) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  74.568) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  74.569) GENERATE: START GROUNDING (impose_constraints)
(  74.746) GENERATE: DONE GROUNDING (impose_constraints)
(  74.746) LOOP: DONE IMPOSING CONSTRAINTS
(  74.746) LOOP: START GENERATING (program 574)
(  74.746) GENERATE: START SOLVING
(  74.770) GENERATE: DONE SOLVING
(  74.770) LOOP: DONE GENERATING (program 574)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B),c_4(B).
(  74.770) LOOP: START TESTING
(  74.773) LOOP: DONE TESTING ('some', 'some')
(  74.773) LOOP: START IMPOSING CONSTRAINTS
(  74.773) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  74.773) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  74.773) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  74.773) GENERATE: START GROUNDING (impose_constraints)
(  74.955) GENERATE: DONE GROUNDING (impose_constraints)
(  74.955) LOOP: DONE IMPOSING CONSTRAINTS
(  74.955) LOOP: START GENERATING (program 575)
(  74.955) GENERATE: START SOLVING
(  74.981) GENERATE: DONE SOLVING
(  74.981) LOOP: DONE GENERATING (program 575)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B),c_4(C).
(  74.981) LOOP: START TESTING
(  74.984) LOOP: DONE TESTING ('some', 'some')
(  74.984) LOOP: START IMPOSING CONSTRAINTS
(  74.984) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  74.984) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  74.984) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  74.984) GENERATE: START GROUNDING (impose_constraints)
(  75.167) GENERATE: DONE GROUNDING (impose_constraints)
(  75.167) LOOP: DONE IMPOSING CONSTRAINTS
(  75.167) LOOP: START GENERATING (program 576)
(  75.167) GENERATE: START SOLVING
(  75.194) GENERATE: DONE SOLVING
(  75.195) LOOP: DONE GENERATING (program 576)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B),c_0(C).
(  75.195) LOOP: START TESTING
(  75.198) LOOP: DONE TESTING ('some', 'none')
(  75.198) LOOP: START IMPOSING CONSTRAINTS
(  75.198) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  75.198) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  75.198) GENERATE: START GROUNDING (impose_constraints)
(  75.380) GENERATE: DONE GROUNDING (impose_constraints)
(  75.380) LOOP: DONE IMPOSING CONSTRAINTS
(  75.380) LOOP: START GENERATING (program 577)
(  75.380) GENERATE: START SOLVING
(  75.406) GENERATE: DONE SOLVING
(  75.406) LOOP: DONE GENERATING (program 577)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
(  75.406) LOOP: START TESTING
(  75.409) LOOP: DONE TESTING ('some', 'none')
(  75.409) LOOP: START IMPOSING CONSTRAINTS
(  75.409) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  75.409) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  75.409) GENERATE: START GROUNDING (impose_constraints)
(  75.589) GENERATE: DONE GROUNDING (impose_constraints)
(  75.589) LOOP: DONE IMPOSING CONSTRAINTS
(  75.589) LOOP: START GENERATING (program 578)
(  75.589) GENERATE: START SOLVING
(  75.616) GENERATE: DONE SOLVING
(  75.616) LOOP: DONE GENERATING (program 578)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
(  75.616) LOOP: START TESTING
(  75.619) LOOP: DONE TESTING ('some', 'some')
(  75.619) LOOP: START IMPOSING CONSTRAINTS
(  75.619) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  75.619) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  75.619) GENERATE: START GROUNDING (impose_constraints)
(  75.800) GENERATE: DONE GROUNDING (impose_constraints)
(  75.800) LOOP: DONE IMPOSING CONSTRAINTS
(  75.800) LOOP: START GENERATING (program 579)
(  75.800) GENERATE: START SOLVING
(  75.824) GENERATE: DONE SOLVING
(  75.825) LOOP: DONE GENERATING (program 579)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
(  75.825) LOOP: START TESTING
(  75.827) LOOP: DONE TESTING ('some', 'some')
(  75.827) LOOP: START IMPOSING CONSTRAINTS
(  75.828) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  75.828) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  75.828) GENERATE: START GROUNDING (impose_constraints)
(  76.011) GENERATE: DONE GROUNDING (impose_constraints)
(  76.011) LOOP: DONE IMPOSING CONSTRAINTS
(  76.011) LOOP: START GENERATING (program 580)
(  76.011) GENERATE: START SOLVING
(  76.036) GENERATE: DONE SOLVING
(  76.037) LOOP: DONE GENERATING (program 580)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
(  76.037) LOOP: START TESTING
(  76.039) LOOP: DONE TESTING ('some', 'some')
(  76.039) LOOP: START IMPOSING CONSTRAINTS
(  76.039) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  76.039) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  76.040) GENERATE: START GROUNDING (impose_constraints)
(  76.219) GENERATE: DONE GROUNDING (impose_constraints)
(  76.219) LOOP: DONE IMPOSING CONSTRAINTS
(  76.219) LOOP: START GENERATING (program 581)
(  76.219) GENERATE: START SOLVING
(  76.242) GENERATE: DONE SOLVING
(  76.242) LOOP: DONE GENERATING (program 581)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B),my_true_value(A,B).
(  76.242) LOOP: START TESTING
(  76.245) LOOP: DONE TESTING ('some', 'none')
(  76.245) LOOP: START IMPOSING CONSTRAINTS
(  76.245) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  76.245) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  76.245) GENERATE: START GROUNDING (impose_constraints)
(  76.423) GENERATE: DONE GROUNDING (impose_constraints)
(  76.423) LOOP: DONE IMPOSING CONSTRAINTS
(  76.423) LOOP: START GENERATING (program 582)
(  76.423) GENERATE: START SOLVING
(  76.446) GENERATE: DONE SOLVING
(  76.446) LOOP: DONE GENERATING (program 582)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),my_true_value(D,B).
(  76.446) LOOP: START TESTING
(  76.449) LOOP: DONE TESTING ('some', 'none')
(  76.449) LOOP: START IMPOSING CONSTRAINTS
(  76.449) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  76.449) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  76.449) GENERATE: START GROUNDING (impose_constraints)
(  76.637) GENERATE: DONE GROUNDING (impose_constraints)
(  76.637) LOOP: DONE IMPOSING CONSTRAINTS
(  76.637) LOOP: START GENERATING (program 583)
(  76.637) GENERATE: START SOLVING
(  76.807) GENERATE: DONE SOLVING
(  76.808) LOOP: DONE GENERATING (program 583)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),c_3(B),my_succ(C,D,B),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  76.808) LOOP: START TESTING
(  76.811) LOOP: DONE TESTING ('some', 'some')
(  76.811) LOOP: START IMPOSING CONSTRAINTS
(  76.811) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  76.811) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  76.811) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  76.811) GENERATE: START GROUNDING (impose_constraints)
(  77.010) GENERATE: DONE GROUNDING (impose_constraints)
(  77.010) LOOP: DONE IMPOSING CONSTRAINTS
(  77.010) LOOP: START GENERATING (program 584)
(  77.010) GENERATE: START SOLVING
(  77.197) GENERATE: DONE SOLVING
(  77.198) LOOP: DONE GENERATING (program 584)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
(  77.198) LOOP: START TESTING
(  77.200) LOOP: DONE TESTING ('some', 'none')
(  77.200) LOOP: START IMPOSING CONSTRAINTS
(  77.200) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  77.200) GENERATE: START GROUNDING (impose_constraints)
(  77.386) GENERATE: DONE GROUNDING (impose_constraints)
(  77.386) LOOP: DONE IMPOSING CONSTRAINTS
(  77.386) LOOP: START GENERATING (program 585)
(  77.386) GENERATE: START SOLVING
(  77.421) GENERATE: DONE SOLVING
(  77.421) LOOP: DONE GENERATING (program 585)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
(  77.421) LOOP: START TESTING
(  77.424) LOOP: DONE TESTING ('some', 'none')
(  77.424) LOOP: START IMPOSING CONSTRAINTS
(  77.424) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  77.424) GENERATE: START GROUNDING (impose_constraints)
(  77.603) GENERATE: DONE GROUNDING (impose_constraints)
(  77.603) LOOP: DONE IMPOSING CONSTRAINTS
(  77.603) LOOP: START GENERATING (program 586)
(  77.603) GENERATE: START SOLVING
(  77.674) GENERATE: DONE SOLVING
(  77.675) LOOP: DONE GENERATING (program 586)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
(  77.675) LOOP: START TESTING
(  77.677) LOOP: DONE TESTING ('some', 'some')
(  77.677) LOOP: START IMPOSING CONSTRAINTS
(  77.677) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  77.677) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  77.677) GENERATE: START GROUNDING (impose_constraints)
(  77.856) GENERATE: DONE GROUNDING (impose_constraints)
(  77.856) LOOP: DONE IMPOSING CONSTRAINTS
(  77.856) LOOP: START GENERATING (program 587)
(  77.856) GENERATE: START SOLVING
(  77.959) GENERATE: DONE SOLVING
(  77.959) LOOP: DONE GENERATING (program 587)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
(  77.959) LOOP: START TESTING
(  77.962) LOOP: DONE TESTING ('some', 'some')
(  77.962) LOOP: START IMPOSING CONSTRAINTS
(  77.962) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  77.962) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  77.962) GENERATE: START GROUNDING (impose_constraints)
(  78.142) GENERATE: DONE GROUNDING (impose_constraints)
(  78.142) LOOP: DONE IMPOSING CONSTRAINTS
(  78.142) LOOP: START GENERATING (program 588)
(  78.142) GENERATE: START SOLVING
(  79.407) GENERATE: DONE SOLVING
(  79.407) LOOP: DONE GENERATING (program 588)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),my_true_value(A,D),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  79.407) LOOP: START TESTING
(  79.410) LOOP: DONE TESTING ('some', 'none')
(  79.410) LOOP: START IMPOSING CONSTRAINTS
(  79.410) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  79.410) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  79.411) GENERATE: START GROUNDING (impose_constraints)
(  79.594) GENERATE: DONE GROUNDING (impose_constraints)
(  79.594) LOOP: DONE IMPOSING CONSTRAINTS
(  79.594) LOOP: START GENERATING (program 589)
(  79.594) GENERATE: START SOLVING
(  79.658) GENERATE: DONE SOLVING
(  79.658) LOOP: DONE GENERATING (program 589)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
(  79.658) LOOP: START TESTING
(  79.661) LOOP: DONE TESTING ('some', 'some')
(  79.661) LOOP: START IMPOSING CONSTRAINTS
(  79.661) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  79.661) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  79.661) GENERATE: START GROUNDING (impose_constraints)
(  79.850) GENERATE: DONE GROUNDING (impose_constraints)
(  79.850) LOOP: DONE IMPOSING CONSTRAINTS
(  79.850) LOOP: START GENERATING (program 590)
(  79.850) GENERATE: START SOLVING
(  79.987) GENERATE: DONE SOLVING
(  79.987) LOOP: DONE GENERATING (program 590)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_true_value(A,B),my_succ(D,C,B).
(  79.987) LOOP: START TESTING
(  79.990) LOOP: DONE TESTING ('some', 'none')
(  79.990) LOOP: START IMPOSING CONSTRAINTS
(  79.990) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  79.990) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  79.990) GENERATE: START GROUNDING (impose_constraints)
(  80.179) GENERATE: DONE GROUNDING (impose_constraints)
(  80.179) LOOP: DONE IMPOSING CONSTRAINTS
(  80.179) LOOP: START GENERATING (program 591)
(  80.179) GENERATE: START SOLVING
(  80.353) GENERATE: DONE SOLVING
(  80.354) LOOP: DONE GENERATING (program 591)
PROGRAM:
  next_value(A,B) :- c_0(D),my_true_value(A,C),my_succ(A,D,C),my_succ(A,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  80.354) LOOP: START TESTING
(  80.357) LOOP: DONE TESTING ('some', 'none')
(  80.357) LOOP: START IMPOSING CONSTRAINTS
(  80.357) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  80.357) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  80.357) GENERATE: START GROUNDING (impose_constraints)
(  80.547) GENERATE: DONE GROUNDING (impose_constraints)
(  80.547) LOOP: DONE IMPOSING CONSTRAINTS
(  80.547) LOOP: START GENERATING (program 592)
(  80.547) GENERATE: START SOLVING
(  80.596) GENERATE: DONE SOLVING
(  80.596) LOOP: DONE GENERATING (program 592)
PROGRAM:
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,D,C),my_succ(A,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  80.597) LOOP: START TESTING
(  80.600) LOOP: DONE TESTING ('some', 'none')
(  80.600) LOOP: START IMPOSING CONSTRAINTS
(  80.600) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  80.600) GENERATE: START GROUNDING (impose_constraints)
(  80.790) GENERATE: DONE GROUNDING (impose_constraints)
(  80.790) LOOP: DONE IMPOSING CONSTRAINTS
(  80.790) LOOP: START GENERATING (program 593)
(  80.790) GENERATE: START SOLVING
(  80.864) GENERATE: DONE SOLVING
(  80.865) LOOP: DONE GENERATING (program 593)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
(  80.865) LOOP: START TESTING
(  80.868) LOOP: DONE TESTING ('some', 'none')
(  80.868) LOOP: START IMPOSING CONSTRAINTS
(  80.868) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  80.868) GENERATE: START GROUNDING (impose_constraints)
(  81.052) GENERATE: DONE GROUNDING (impose_constraints)
(  81.052) LOOP: DONE IMPOSING CONSTRAINTS
(  81.052) LOOP: START GENERATING (program 594)
(  81.052) GENERATE: START SOLVING
(  81.357) GENERATE: DONE SOLVING
(  81.358) LOOP: DONE GENERATING (program 594)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),my_true_value(A,C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  81.358) LOOP: START TESTING
(  81.360) LOOP: DONE TESTING ('some', 'some')
(  81.361) LOOP: START IMPOSING CONSTRAINTS
(  81.361) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  81.361) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  81.361) GENERATE: START GROUNDING (impose_constraints)
(  81.552) GENERATE: DONE GROUNDING (impose_constraints)
(  81.553) LOOP: DONE IMPOSING CONSTRAINTS
(  81.553) LOOP: START GENERATING (program 595)
(  81.553) GENERATE: START SOLVING
(  81.641) GENERATE: DONE SOLVING
(  81.642) LOOP: DONE GENERATING (program 595)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_4(D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  81.642) LOOP: START TESTING
(  81.644) LOOP: DONE TESTING ('some', 'some')
(  81.644) LOOP: START IMPOSING CONSTRAINTS
(  81.644) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  81.644) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  81.644) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  81.645) GENERATE: START GROUNDING (impose_constraints)
(  81.835) GENERATE: DONE GROUNDING (impose_constraints)
(  81.835) LOOP: DONE IMPOSING CONSTRAINTS
(  81.835) LOOP: START GENERATING (program 596)
(  81.835) GENERATE: START SOLVING
(  82.047) GENERATE: DONE SOLVING
(  82.048) LOOP: DONE GENERATING (program 596)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(D),my_succ(A,B,D),c_2(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  82.048) LOOP: START TESTING
(  82.051) LOOP: DONE TESTING ('some', 'none')
(  82.051) LOOP: START IMPOSING CONSTRAINTS
(  82.051) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  82.051) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  82.051) GENERATE: START GROUNDING (impose_constraints)
(  82.239) GENERATE: DONE GROUNDING (impose_constraints)
(  82.239) LOOP: DONE IMPOSING CONSTRAINTS
(  82.239) LOOP: START GENERATING (program 597)
(  82.239) GENERATE: START SOLVING
(  82.305) GENERATE: DONE SOLVING
(  82.306) LOOP: DONE GENERATING (program 597)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(D),my_succ(A,B,D),c_1(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  82.306) LOOP: START TESTING
(  82.308) LOOP: DONE TESTING ('some', 'some')
(  82.308) LOOP: START IMPOSING CONSTRAINTS
(  82.309) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  82.309) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  82.309) GENERATE: START GROUNDING (impose_constraints)
(  82.506) GENERATE: DONE GROUNDING (impose_constraints)
(  82.506) LOOP: DONE IMPOSING CONSTRAINTS
(  82.506) LOOP: START GENERATING (program 598)
(  82.506) GENERATE: START SOLVING
(  83.979) GENERATE: DONE SOLVING
(  83.979) LOOP: DONE GENERATING (program 598)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_2(D),my_true_value(A,D).
(  83.979) LOOP: START TESTING
(  83.982) LOOP: DONE TESTING ('some', 'some')
(  83.982) LOOP: START IMPOSING CONSTRAINTS
(  83.982) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  83.982) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  83.982) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  83.982) GENERATE: START GROUNDING (impose_constraints)
(  84.175) GENERATE: DONE GROUNDING (impose_constraints)
(  84.175) LOOP: DONE IMPOSING CONSTRAINTS
(  84.175) LOOP: START GENERATING (program 599)
(  84.175) GENERATE: START SOLVING
(  84.793) GENERATE: DONE SOLVING
(  84.794) LOOP: DONE GENERATING (program 599)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_5(D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  84.794) LOOP: START TESTING
(  84.797) LOOP: DONE TESTING ('some', 'none')
(  84.797) LOOP: START IMPOSING CONSTRAINTS
(  84.797) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  84.797) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  84.797) GENERATE: START GROUNDING (impose_constraints)
(  84.993) GENERATE: DONE GROUNDING (impose_constraints)
(  84.993) LOOP: DONE IMPOSING CONSTRAINTS
(  84.993) LOOP: START GENERATING (program 600)
(  84.993) GENERATE: START SOLVING
(  85.719) GENERATE: DONE SOLVING
(  85.720) LOOP: DONE GENERATING (program 600)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
(  85.720) LOOP: START TESTING
(  85.723) LOOP: DONE TESTING ('some', 'some')
(  85.723) LOOP: START IMPOSING CONSTRAINTS
(  85.723) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  85.723) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  85.723) GENERATE: START GROUNDING (impose_constraints)
(  85.917) GENERATE: DONE GROUNDING (impose_constraints)
(  85.917) LOOP: DONE IMPOSING CONSTRAINTS
(  85.917) LOOP: START GENERATING (program 601)
(  85.917) GENERATE: START SOLVING
(  86.077) GENERATE: DONE SOLVING
(  86.078) LOOP: DONE GENERATING (program 601)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_2(D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  86.078) LOOP: START TESTING
(  86.080) LOOP: DONE TESTING ('some', 'some')
(  86.080) LOOP: START IMPOSING CONSTRAINTS
(  86.080) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  86.080) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  86.080) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  86.081) GENERATE: START GROUNDING (impose_constraints)
(  86.272) GENERATE: DONE GROUNDING (impose_constraints)
(  86.272) LOOP: DONE IMPOSING CONSTRAINTS
(  86.272) LOOP: START GENERATING (program 602)
(  86.272) GENERATE: START SOLVING
(  86.855) GENERATE: DONE SOLVING
(  86.855) LOOP: DONE GENERATING (program 602)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(D),my_succ(A,D,C).
(  86.855) LOOP: START TESTING
(  86.858) LOOP: DONE TESTING ('some', 'some')
(  86.858) LOOP: START IMPOSING CONSTRAINTS
(  86.858) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  86.858) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  86.858) GENERATE: START GROUNDING (impose_constraints)
(  87.051) GENERATE: DONE GROUNDING (impose_constraints)
(  87.051) LOOP: DONE IMPOSING CONSTRAINTS
(  87.051) LOOP: START GENERATING (program 603)
(  87.051) GENERATE: START SOLVING
(  87.149) GENERATE: DONE SOLVING
(  87.150) LOOP: DONE GENERATING (program 603)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_0(B),my_succ(A,D,C),c_1(D).
(  87.150) LOOP: START TESTING
(  87.153) LOOP: DONE TESTING ('some', 'none')
(  87.153) LOOP: START IMPOSING CONSTRAINTS
(  87.153) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  87.153) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  87.153) GENERATE: START GROUNDING (impose_constraints)
(  87.345) GENERATE: DONE GROUNDING (impose_constraints)
(  87.345) LOOP: DONE IMPOSING CONSTRAINTS
(  87.345) LOOP: START GENERATING (program 604)
(  87.345) GENERATE: START SOLVING
(  87.393) GENERATE: DONE SOLVING
(  87.393) LOOP: DONE GENERATING (program 604)
PROGRAM:
  next_value(A,B) :- c_3(D),my_true_value(C,D),my_succ(C,D,B),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  87.394) LOOP: START TESTING
(  87.397) LOOP: DONE TESTING ('some', 'some')
(  87.397) LOOP: START IMPOSING CONSTRAINTS
(  87.397) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  87.397) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  87.397) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  87.397) GENERATE: START GROUNDING (impose_constraints)
(  87.590) GENERATE: DONE GROUNDING (impose_constraints)
(  87.590) LOOP: DONE IMPOSING CONSTRAINTS
(  87.590) LOOP: START GENERATING (program 605)
(  87.590) GENERATE: START SOLVING
(  87.886) GENERATE: DONE SOLVING
(  87.886) LOOP: DONE GENERATING (program 605)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),my_succ(A,D,B),c_4(B).
(  87.886) LOOP: START TESTING
(  87.889) LOOP: DONE TESTING ('some', 'some')
(  87.889) LOOP: START IMPOSING CONSTRAINTS
(  87.889) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  87.889) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  87.889) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  87.889) GENERATE: START GROUNDING (impose_constraints)
(  88.082) GENERATE: DONE GROUNDING (impose_constraints)
(  88.082) LOOP: DONE IMPOSING CONSTRAINTS
(  88.082) LOOP: START GENERATING (program 606)
(  88.082) GENERATE: START SOLVING
(  88.223) GENERATE: DONE SOLVING
(  88.223) LOOP: DONE GENERATING (program 606)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
(  88.223) LOOP: START TESTING
(  88.226) LOOP: DONE TESTING ('some', 'some')
(  88.226) LOOP: START IMPOSING CONSTRAINTS
(  88.226) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  88.226) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  88.226) GENERATE: START GROUNDING (impose_constraints)
(  88.419) GENERATE: DONE GROUNDING (impose_constraints)
(  88.419) LOOP: DONE IMPOSING CONSTRAINTS
(  88.419) LOOP: START GENERATING (program 607)
(  88.419) GENERATE: START SOLVING
(  88.493) GENERATE: DONE SOLVING
(  88.493) LOOP: DONE GENERATING (program 607)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  88.493) LOOP: START TESTING
(  88.496) LOOP: DONE TESTING ('some', 'none')
(  88.496) LOOP: START IMPOSING CONSTRAINTS
(  88.496) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  88.496) GENERATE: START GROUNDING (impose_constraints)
(  88.720) GENERATE: DONE GROUNDING (impose_constraints)
(  88.720) LOOP: DONE IMPOSING CONSTRAINTS
(  88.720) LOOP: START GENERATING (program 608)
(  88.720) GENERATE: START SOLVING
(  88.845) GENERATE: DONE SOLVING
(  88.845) LOOP: DONE GENERATING (program 608)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
(  88.845) LOOP: START TESTING
(  88.848) LOOP: DONE TESTING ('some', 'some')
(  88.848) LOOP: START IMPOSING CONSTRAINTS
(  88.848) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  88.848) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  88.848) GENERATE: START GROUNDING (impose_constraints)
(  89.047) GENERATE: DONE GROUNDING (impose_constraints)
(  89.047) LOOP: DONE IMPOSING CONSTRAINTS
(  89.047) LOOP: START GENERATING (program 609)
(  89.047) GENERATE: START SOLVING
(  89.366) GENERATE: DONE SOLVING
(  89.367) LOOP: DONE GENERATING (program 609)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
(  89.367) LOOP: START TESTING
(  89.370) LOOP: DONE TESTING ('some', 'some')
(  89.370) LOOP: START IMPOSING CONSTRAINTS
(  89.370) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  89.370) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  89.370) GENERATE: START GROUNDING (impose_constraints)
(  89.571) GENERATE: DONE GROUNDING (impose_constraints)
(  89.571) LOOP: DONE IMPOSING CONSTRAINTS
(  89.571) LOOP: START GENERATING (program 610)
(  89.571) GENERATE: START SOLVING
(  89.631) GENERATE: DONE SOLVING
(  89.632) LOOP: DONE GENERATING (program 610)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,D,C),c_1(D),c_3(C).
(  89.632) LOOP: START TESTING
(  89.635) LOOP: DONE TESTING ('some', 'none')
(  89.635) LOOP: START IMPOSING CONSTRAINTS
(  89.635) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  89.635) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  89.635) GENERATE: START GROUNDING (impose_constraints)
(  89.837) GENERATE: DONE GROUNDING (impose_constraints)
(  89.837) LOOP: DONE IMPOSING CONSTRAINTS
(  89.837) LOOP: START GENERATING (program 611)
(  89.837) GENERATE: START SOLVING
(  89.914) GENERATE: DONE SOLVING
(  89.914) LOOP: DONE GENERATING (program 611)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,D),c_4(D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  89.914) LOOP: START TESTING
(  89.917) LOOP: DONE TESTING ('some', 'some')
(  89.917) LOOP: START IMPOSING CONSTRAINTS
(  89.917) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  89.917) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  89.917) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  89.917) GENERATE: START GROUNDING (impose_constraints)
(  90.130) GENERATE: DONE GROUNDING (impose_constraints)
(  90.130) LOOP: DONE IMPOSING CONSTRAINTS
(  90.130) LOOP: START GENERATING (program 612)
(  90.130) GENERATE: START SOLVING
(  90.225) GENERATE: DONE SOLVING
(  90.225) LOOP: DONE GENERATING (program 612)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,D,C),c_2(D),c_3(C).
(  90.225) LOOP: START TESTING
(  90.228) LOOP: DONE TESTING ('some', 'some')
(  90.228) LOOP: START IMPOSING CONSTRAINTS
(  90.228) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  90.228) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  90.228) GENERATE: START GROUNDING (impose_constraints)
(  90.427) GENERATE: DONE GROUNDING (impose_constraints)
(  90.427) LOOP: DONE IMPOSING CONSTRAINTS
(  90.427) LOOP: START GENERATING (program 613)
(  90.427) GENERATE: START SOLVING
(  90.531) GENERATE: DONE SOLVING
(  90.531) LOOP: DONE GENERATING (program 613)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,D,C),c_4(D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  90.531) LOOP: START TESTING
(  90.534) LOOP: DONE TESTING ('some', 'none')
(  90.534) LOOP: START IMPOSING CONSTRAINTS
(  90.534) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  90.534) GENERATE: START GROUNDING (impose_constraints)
(  90.737) GENERATE: DONE GROUNDING (impose_constraints)
(  90.737) LOOP: DONE IMPOSING CONSTRAINTS
(  90.737) LOOP: START GENERATING (program 614)
(  90.737) GENERATE: START SOLVING
(  91.064) GENERATE: DONE SOLVING
(  91.064) LOOP: DONE GENERATING (program 614)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  91.064) LOOP: START TESTING
(  91.067) LOOP: DONE TESTING ('some', 'none')
(  91.067) LOOP: START IMPOSING CONSTRAINTS
(  91.067) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  91.067) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  91.067) GENERATE: START GROUNDING (impose_constraints)
(  91.269) GENERATE: DONE GROUNDING (impose_constraints)
(  91.269) LOOP: DONE IMPOSING CONSTRAINTS
(  91.269) LOOP: START GENERATING (program 615)
(  91.269) GENERATE: START SOLVING
(  91.516) GENERATE: DONE SOLVING
(  91.517) LOOP: DONE GENERATING (program 615)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  91.517) LOOP: START TESTING
(  91.519) LOOP: DONE TESTING ('some', 'none')
(  91.519) LOOP: START IMPOSING CONSTRAINTS
(  91.519) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  91.520) GENERATE: START GROUNDING (impose_constraints)
(  91.745) GENERATE: DONE GROUNDING (impose_constraints)
(  91.745) LOOP: DONE IMPOSING CONSTRAINTS
(  91.745) LOOP: START GENERATING (program 616)
(  91.745) GENERATE: START SOLVING
(  91.794) GENERATE: DONE SOLVING
(  91.794) LOOP: DONE GENERATING (program 616)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_2(D),my_succ(A,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  91.794) LOOP: START TESTING
(  91.797) LOOP: DONE TESTING ('some', 'none')
(  91.797) LOOP: START IMPOSING CONSTRAINTS
(  91.797) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  91.797) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  91.797) GENERATE: START GROUNDING (impose_constraints)
(  91.996) GENERATE: DONE GROUNDING (impose_constraints)
(  91.996) LOOP: DONE IMPOSING CONSTRAINTS
(  91.996) LOOP: START GENERATING (program 617)
(  91.996) GENERATE: START SOLVING
(  92.421) GENERATE: DONE SOLVING
(  92.422) LOOP: DONE GENERATING (program 617)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),my_true_value(A,D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  92.422) LOOP: START TESTING
(  92.425) LOOP: DONE TESTING ('some', 'none')
(  92.425) LOOP: START IMPOSING CONSTRAINTS
(  92.425) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  92.425) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  92.425) GENERATE: START GROUNDING (impose_constraints)
(  92.633) GENERATE: DONE GROUNDING (impose_constraints)
(  92.633) LOOP: DONE IMPOSING CONSTRAINTS
(  92.633) LOOP: START GENERATING (program 618)
(  92.633) GENERATE: START SOLVING
(  92.745) GENERATE: DONE SOLVING
(  92.746) LOOP: DONE GENERATING (program 618)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
(  92.746) LOOP: START TESTING
(  92.748) LOOP: DONE TESTING ('some', 'some')
(  92.748) LOOP: START IMPOSING CONSTRAINTS
(  92.748) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
(  92.748) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
(  92.749) GENERATE: START GROUNDING (impose_constraints)
(  92.955) GENERATE: DONE GROUNDING (impose_constraints)
(  92.955) LOOP: DONE IMPOSING CONSTRAINTS
(  92.955) LOOP: START GENERATING (program 619)
(  92.955) GENERATE: START SOLVING
(  93.376) GENERATE: DONE SOLVING
(  93.377) LOOP: DONE GENERATING (program 619)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,B),my_true_value(A,D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  93.377) LOOP: START TESTING
(  93.379) LOOP: DONE TESTING ('some', 'none')
(  93.379) LOOP: START IMPOSING CONSTRAINTS
(  93.379) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  93.379) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  93.379) GENERATE: START GROUNDING (impose_constraints)
(  93.581) GENERATE: DONE GROUNDING (impose_constraints)
(  93.581) LOOP: DONE IMPOSING CONSTRAINTS
(  93.581) LOOP: START GENERATING (program 620)
(  93.581) GENERATE: START SOLVING
(  93.689) GENERATE: DONE SOLVING
(  93.690) LOOP: DONE GENERATING (program 620)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),my_true_value(A,D),c_4(C).
(  93.690) LOOP: START TESTING
(  93.692) LOOP: DONE TESTING ('some', 'none')
(  93.692) LOOP: START IMPOSING CONSTRAINTS
(  93.692) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  93.693) GENERATE: START GROUNDING (impose_constraints)
(  93.923) GENERATE: DONE GROUNDING (impose_constraints)
(  93.923) LOOP: DONE IMPOSING CONSTRAINTS
(  93.923) LOOP: START GENERATING (program 621)
(  93.923) GENERATE: START SOLVING
(  94.427) GENERATE: DONE SOLVING
(  94.428) LOOP: DONE GENERATING (program 621)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),my_true_value(A,D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  94.428) LOOP: START TESTING
(  94.430) LOOP: DONE TESTING ('some', 'some')
(  94.430) LOOP: START IMPOSING CONSTRAINTS
(  94.431) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  94.431) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  94.431) GENERATE: START GROUNDING (impose_constraints)
(  94.635) GENERATE: DONE GROUNDING (impose_constraints)
(  94.635) LOOP: DONE IMPOSING CONSTRAINTS
(  94.635) LOOP: START GENERATING (program 622)
(  94.635) GENERATE: START SOLVING
(  94.702) GENERATE: DONE SOLVING
(  94.702) LOOP: DONE GENERATING (program 622)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_1(D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  94.702) LOOP: START TESTING
(  94.705) LOOP: DONE TESTING ('some', 'none')
(  94.705) LOOP: START IMPOSING CONSTRAINTS
(  94.705) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  94.705) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  94.705) GENERATE: START GROUNDING (impose_constraints)
(  94.910) GENERATE: DONE GROUNDING (impose_constraints)
(  94.910) LOOP: DONE IMPOSING CONSTRAINTS
(  94.910) LOOP: START GENERATING (program 623)
(  94.910) GENERATE: START SOLVING
(  95.014) GENERATE: DONE SOLVING
(  95.015) LOOP: DONE GENERATING (program 623)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(C),my_succ(A,B,D),c_1(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  95.015) LOOP: START TESTING
(  95.017) LOOP: DONE TESTING ('some', 'none')
(  95.017) LOOP: START IMPOSING CONSTRAINTS
(  95.017) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  95.017) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  95.018) GENERATE: START GROUNDING (impose_constraints)
(  95.221) GENERATE: DONE GROUNDING (impose_constraints)
(  95.221) LOOP: DONE IMPOSING CONSTRAINTS
(  95.221) LOOP: START GENERATING (program 624)
(  95.221) GENERATE: START SOLVING
(  95.279) GENERATE: DONE SOLVING
(  95.280) LOOP: DONE GENERATING (program 624)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
(  95.280) LOOP: START TESTING
(  95.282) LOOP: DONE TESTING ('some', 'none')
(  95.282) LOOP: START IMPOSING CONSTRAINTS
(  95.282) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  95.282) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  95.282) GENERATE: START GROUNDING (impose_constraints)
(  95.489) GENERATE: DONE GROUNDING (impose_constraints)
(  95.489) LOOP: DONE IMPOSING CONSTRAINTS
(  95.489) LOOP: START GENERATING (program 625)
(  95.489) GENERATE: START SOLVING
(  95.604) GENERATE: DONE SOLVING
(  95.605) LOOP: DONE GENERATING (program 625)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B),c_4(B).
(  95.605) LOOP: START TESTING
(  95.608) LOOP: DONE TESTING ('some', 'some')
(  95.608) LOOP: START IMPOSING CONSTRAINTS
(  95.608) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  95.608) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  95.608) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  95.608) GENERATE: START GROUNDING (impose_constraints)
(  95.814) GENERATE: DONE GROUNDING (impose_constraints)
(  95.814) LOOP: DONE IMPOSING CONSTRAINTS
(  95.814) LOOP: START GENERATING (program 626)
(  95.814) GENERATE: START SOLVING
(  95.922) GENERATE: DONE SOLVING
(  95.922) LOOP: DONE GENERATING (program 626)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
(  95.922) LOOP: START TESTING
(  95.925) LOOP: DONE TESTING ('some', 'some')
(  95.925) LOOP: START IMPOSING CONSTRAINTS
(  95.925) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  95.925) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  95.925) GENERATE: START GROUNDING (impose_constraints)
(  96.130) GENERATE: DONE GROUNDING (impose_constraints)
(  96.130) LOOP: DONE IMPOSING CONSTRAINTS
(  96.130) LOOP: START GENERATING (program 627)
(  96.130) GENERATE: START SOLVING
(  96.244) GENERATE: DONE SOLVING
(  96.245) LOOP: DONE GENERATING (program 627)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
(  96.245) LOOP: START TESTING
(  96.247) LOOP: DONE TESTING ('some', 'some')
(  96.247) LOOP: START IMPOSING CONSTRAINTS
(  96.247) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  96.247) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  96.248) GENERATE: START GROUNDING (impose_constraints)
(  96.455) GENERATE: DONE GROUNDING (impose_constraints)
(  96.455) LOOP: DONE IMPOSING CONSTRAINTS
(  96.455) LOOP: START GENERATING (program 628)
(  96.455) GENERATE: START SOLVING
(  96.536) GENERATE: DONE SOLVING
(  96.536) LOOP: DONE GENERATING (program 628)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,B),c_0(C),my_true_value(D,B),my_succ(D,C,B).
(  96.536) LOOP: START TESTING
(  96.539) LOOP: DONE TESTING ('some', 'none')
(  96.539) LOOP: START IMPOSING CONSTRAINTS
(  96.539) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
(  96.539) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  96.539) GENERATE: START GROUNDING (impose_constraints)
(  96.757) GENERATE: DONE GROUNDING (impose_constraints)
(  96.757) LOOP: DONE IMPOSING CONSTRAINTS
(  96.757) LOOP: START GENERATING (program 629)
(  96.757) GENERATE: START SOLVING
(  96.800) GENERATE: DONE SOLVING
(  96.800) LOOP: DONE GENERATING (program 629)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
(  96.801) LOOP: START TESTING
(  96.803) LOOP: DONE TESTING ('some', 'some')
(  96.803) LOOP: START IMPOSING CONSTRAINTS
(  96.803) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  96.803) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  96.804) GENERATE: START GROUNDING (impose_constraints)
(  97.013) GENERATE: DONE GROUNDING (impose_constraints)
(  97.013) LOOP: DONE IMPOSING CONSTRAINTS
(  97.013) LOOP: START GENERATING (program 630)
(  97.013) GENERATE: START SOLVING
(  97.045) GENERATE: DONE SOLVING
(  97.045) LOOP: DONE GENERATING (program 630)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
(  97.046) LOOP: START TESTING
(  97.049) LOOP: DONE TESTING ('some', 'some')
(  97.049) LOOP: START IMPOSING CONSTRAINTS
(  97.049) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  97.049) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  97.049) GENERATE: START GROUNDING (impose_constraints)
(  97.255) GENERATE: DONE GROUNDING (impose_constraints)
(  97.255) LOOP: DONE IMPOSING CONSTRAINTS
(  97.255) LOOP: START GENERATING (program 631)
(  97.255) GENERATE: START SOLVING
(  97.290) GENERATE: DONE SOLVING
(  97.291) LOOP: DONE GENERATING (program 631)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
(  97.291) LOOP: START TESTING
(  97.293) LOOP: DONE TESTING ('some', 'some')
(  97.293) LOOP: START IMPOSING CONSTRAINTS
(  97.293) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
(  97.293) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
(  97.294) GENERATE: START GROUNDING (impose_constraints)
(  97.504) GENERATE: DONE GROUNDING (impose_constraints)
(  97.504) LOOP: DONE IMPOSING CONSTRAINTS
(  97.504) LOOP: START GENERATING (program 632)
(  97.504) GENERATE: START SOLVING
(  98.301) GENERATE: DONE SOLVING
(  98.301) LOOP: DONE GENERATING (program 632)
PROGRAM:
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,C,B),my_succ(A,B,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  98.301) LOOP: START TESTING
(  98.304) LOOP: DONE TESTING ('some', 'none')
(  98.304) LOOP: START IMPOSING CONSTRAINTS
(  98.304) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  98.304) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  98.304) GENERATE: START GROUNDING (impose_constraints)
(  98.512) GENERATE: DONE GROUNDING (impose_constraints)
(  98.512) LOOP: DONE IMPOSING CONSTRAINTS
(  98.512) LOOP: START GENERATING (program 633)
(  98.512) GENERATE: START SOLVING
(  98.628) GENERATE: DONE SOLVING
(  98.628) LOOP: DONE GENERATING (program 633)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_1(D),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  98.628) LOOP: START TESTING
(  98.631) LOOP: DONE TESTING ('some', 'none')
(  98.631) LOOP: START IMPOSING CONSTRAINTS
(  98.631) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
(  98.631) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  98.631) GENERATE: START GROUNDING (impose_constraints)
(  98.844) GENERATE: DONE GROUNDING (impose_constraints)
(  98.844) LOOP: DONE IMPOSING CONSTRAINTS
(  98.844) LOOP: START GENERATING (program 634)
(  98.844) GENERATE: START SOLVING
(  99.090) GENERATE: DONE SOLVING
(  99.091) LOOP: DONE GENERATING (program 634)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(A,D),c_4(D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  99.091) LOOP: START TESTING
(  99.093) LOOP: DONE TESTING ('some', 'none')
(  99.093) LOOP: START IMPOSING CONSTRAINTS
(  99.094) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  99.094) GENERATE: START GROUNDING (impose_constraints)
(  99.303) GENERATE: DONE GROUNDING (impose_constraints)
(  99.303) LOOP: DONE IMPOSING CONSTRAINTS
(  99.303) LOOP: START GENERATING (program 635)
(  99.303) GENERATE: START SOLVING
(  99.455) GENERATE: DONE SOLVING
(  99.456) LOOP: DONE GENERATING (program 635)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(A,D),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
(  99.456) LOOP: START TESTING
(  99.459) LOOP: DONE TESTING ('some', 'some')
(  99.459) LOOP: START IMPOSING CONSTRAINTS
(  99.459) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
(  99.459) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
(  99.459) GENERATE: START GROUNDING (impose_constraints)
(  99.671) GENERATE: DONE GROUNDING (impose_constraints)
(  99.671) LOOP: DONE IMPOSING CONSTRAINTS
(  99.671) LOOP: START GENERATING (program 636)
(  99.671) GENERATE: START SOLVING
( 100.539) GENERATE: DONE SOLVING
( 100.540) LOOP: DONE GENERATING (program 636)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),c_3(B).
( 100.540) LOOP: START TESTING
( 100.542) LOOP: DONE TESTING ('some', 'none')
( 100.542) LOOP: START IMPOSING CONSTRAINTS
( 100.542) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 100.542) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 100.543) GENERATE: START GROUNDING (impose_constraints)
( 100.755) GENERATE: DONE GROUNDING (impose_constraints)
( 100.755) LOOP: DONE IMPOSING CONSTRAINTS
( 100.755) LOOP: START GENERATING (program 637)
( 100.755) GENERATE: START SOLVING
( 100.823) GENERATE: DONE SOLVING
( 100.824) LOOP: DONE GENERATING (program 637)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_1(D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 100.824) LOOP: START TESTING
( 100.827) LOOP: DONE TESTING ('some', 'some')
( 100.827) LOOP: START IMPOSING CONSTRAINTS
( 100.827) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 100.827) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 100.827) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 100.827) GENERATE: START GROUNDING (impose_constraints)
( 101.044) GENERATE: DONE GROUNDING (impose_constraints)
( 101.044) LOOP: DONE IMPOSING CONSTRAINTS
( 101.044) LOOP: START GENERATING (program 638)
( 101.044) GENERATE: START SOLVING
( 101.269) GENERATE: DONE SOLVING
( 101.270) LOOP: DONE GENERATING (program 638)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,B,D),c_2(C),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 101.270) LOOP: START TESTING
( 101.273) LOOP: DONE TESTING ('some', 'some')
( 101.273) LOOP: START IMPOSING CONSTRAINTS
( 101.273) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 101.273) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 101.273) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 101.273) GENERATE: START GROUNDING (impose_constraints)
( 101.489) GENERATE: DONE GROUNDING (impose_constraints)
( 101.489) LOOP: DONE IMPOSING CONSTRAINTS
( 101.489) LOOP: START GENERATING (program 639)
( 101.489) GENERATE: START SOLVING
( 101.685) GENERATE: DONE SOLVING
( 101.686) LOOP: DONE GENERATING (program 639)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 101.686) LOOP: START TESTING
( 101.689) LOOP: DONE TESTING ('some', 'none')
( 101.689) LOOP: START IMPOSING CONSTRAINTS
( 101.689) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 101.689) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 101.689) GENERATE: START GROUNDING (impose_constraints)
( 101.903) GENERATE: DONE GROUNDING (impose_constraints)
( 101.903) LOOP: DONE IMPOSING CONSTRAINTS
( 101.903) LOOP: START GENERATING (program 640)
( 101.903) GENERATE: START SOLVING
( 102.036) GENERATE: DONE SOLVING
( 102.036) LOOP: DONE GENERATING (program 640)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 102.036) LOOP: START TESTING
( 102.039) LOOP: DONE TESTING ('some', 'some')
( 102.039) LOOP: START IMPOSING CONSTRAINTS
( 102.039) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 102.039) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 102.039) GENERATE: START GROUNDING (impose_constraints)
( 102.256) GENERATE: DONE GROUNDING (impose_constraints)
( 102.256) LOOP: DONE IMPOSING CONSTRAINTS
( 102.256) LOOP: START GENERATING (program 641)
( 102.256) GENERATE: START SOLVING
( 102.797) GENERATE: DONE SOLVING
( 102.797) LOOP: DONE GENERATING (program 641)
PROGRAM:
  next_value(A,B) :- c_0(D),my_succ(A,C,B),my_succ(A,D,C),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 102.797) LOOP: START TESTING
( 102.800) LOOP: DONE TESTING ('some', 'none')
( 102.800) LOOP: START IMPOSING CONSTRAINTS
( 102.800) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 102.800) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 102.800) GENERATE: START GROUNDING (impose_constraints)
( 103.024) GENERATE: DONE GROUNDING (impose_constraints)
( 103.024) LOOP: DONE IMPOSING CONSTRAINTS
( 103.024) LOOP: START GENERATING (program 642)
( 103.024) GENERATE: START SOLVING
( 103.086) GENERATE: DONE SOLVING
( 103.086) LOOP: DONE GENERATING (program 642)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_0(C),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 103.086) LOOP: START TESTING
( 103.089) LOOP: DONE TESTING ('some', 'none')
( 103.089) LOOP: START IMPOSING CONSTRAINTS
( 103.089) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 103.089) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 103.089) GENERATE: START GROUNDING (impose_constraints)
( 103.306) GENERATE: DONE GROUNDING (impose_constraints)
( 103.306) LOOP: DONE IMPOSING CONSTRAINTS
( 103.306) LOOP: START GENERATING (program 643)
( 103.306) GENERATE: START SOLVING
( 103.536) GENERATE: DONE SOLVING
( 103.537) LOOP: DONE GENERATING (program 643)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_1(D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 103.537) LOOP: START TESTING
( 103.540) LOOP: DONE TESTING ('some', 'some')
( 103.540) LOOP: START IMPOSING CONSTRAINTS
( 103.540) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 103.540) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 103.540) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 103.540) GENERATE: START GROUNDING (impose_constraints)
( 103.757) GENERATE: DONE GROUNDING (impose_constraints)
( 103.757) LOOP: DONE IMPOSING CONSTRAINTS
( 103.757) LOOP: START GENERATING (program 644)
( 103.757) GENERATE: START SOLVING
( 103.791) GENERATE: DONE SOLVING
( 103.791) LOOP: DONE GENERATING (program 644)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_4(D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 103.791) LOOP: START TESTING
( 103.794) LOOP: DONE TESTING ('some', 'some')
( 103.794) LOOP: START IMPOSING CONSTRAINTS
( 103.794) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 103.794) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 103.794) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 103.794) GENERATE: START GROUNDING (impose_constraints)
( 104.013) GENERATE: DONE GROUNDING (impose_constraints)
( 104.013) LOOP: DONE IMPOSING CONSTRAINTS
( 104.013) LOOP: START GENERATING (program 645)
( 104.013) GENERATE: START SOLVING
( 104.095) GENERATE: DONE SOLVING
( 104.096) LOOP: DONE GENERATING (program 645)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(D),c_2(C),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 104.096) LOOP: START TESTING
( 104.099) LOOP: DONE TESTING ('some', 'none')
( 104.099) LOOP: START IMPOSING CONSTRAINTS
( 104.099) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 104.099) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 104.099) GENERATE: START GROUNDING (impose_constraints)
( 104.317) GENERATE: DONE GROUNDING (impose_constraints)
( 104.317) LOOP: DONE IMPOSING CONSTRAINTS
( 104.317) LOOP: START GENERATING (program 646)
( 104.317) GENERATE: START SOLVING
( 104.868) GENERATE: DONE SOLVING
( 104.868) LOOP: DONE GENERATING (program 646)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(D),c_3(C),my_succ(A,B,D).
( 104.869) LOOP: START TESTING
( 104.871) LOOP: DONE TESTING ('some', 'none')
( 104.871) LOOP: START IMPOSING CONSTRAINTS
( 104.871) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 104.871) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 104.871) GENERATE: START GROUNDING (impose_constraints)
( 105.104) GENERATE: DONE GROUNDING (impose_constraints)
( 105.104) LOOP: DONE IMPOSING CONSTRAINTS
( 105.104) LOOP: START GENERATING (program 647)
( 105.104) GENERATE: START SOLVING
( 105.194) GENERATE: DONE SOLVING
( 105.195) LOOP: DONE GENERATING (program 647)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),my_true_value(A,D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 105.195) LOOP: START TESTING
( 105.197) LOOP: DONE TESTING ('some', 'none')
( 105.197) LOOP: START IMPOSING CONSTRAINTS
( 105.198) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 105.198) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 105.198) GENERATE: START GROUNDING (impose_constraints)
( 105.417) GENERATE: DONE GROUNDING (impose_constraints)
( 105.417) LOOP: DONE IMPOSING CONSTRAINTS
( 105.417) LOOP: START GENERATING (program 648)
( 105.417) GENERATE: START SOLVING
( 106.020) GENERATE: DONE SOLVING
( 106.020) LOOP: DONE GENERATING (program 648)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,B),c_0(C),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 106.020) LOOP: START TESTING
( 106.023) LOOP: DONE TESTING ('some', 'some')
( 106.023) LOOP: START IMPOSING CONSTRAINTS
( 106.023) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 106.023) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 106.023) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 106.023) GENERATE: START GROUNDING (impose_constraints)
( 106.243) GENERATE: DONE GROUNDING (impose_constraints)
( 106.243) LOOP: DONE IMPOSING CONSTRAINTS
( 106.243) LOOP: START GENERATING (program 649)
( 106.244) GENERATE: START SOLVING
( 106.945) GENERATE: DONE SOLVING
( 106.945) LOOP: DONE GENERATING (program 649)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_2(D),my_true_value(A,B).
( 106.945) LOOP: START TESTING
( 106.948) LOOP: DONE TESTING ('some', 'some')
( 106.948) LOOP: START IMPOSING CONSTRAINTS
( 106.948) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 106.948) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 106.948) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 106.948) GENERATE: START GROUNDING (impose_constraints)
( 107.168) GENERATE: DONE GROUNDING (impose_constraints)
( 107.168) LOOP: DONE IMPOSING CONSTRAINTS
( 107.168) LOOP: START GENERATING (program 650)
( 107.168) GENERATE: START SOLVING
( 107.223) GENERATE: DONE SOLVING
( 107.223) LOOP: DONE GENERATING (program 650)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 107.224) LOOP: START TESTING
( 107.226) LOOP: DONE TESTING ('some', 'some')
( 107.226) LOOP: START IMPOSING CONSTRAINTS
( 107.226) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 107.226) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 107.226) GENERATE: START GROUNDING (impose_constraints)
( 107.446) GENERATE: DONE GROUNDING (impose_constraints)
( 107.446) LOOP: DONE IMPOSING CONSTRAINTS
( 107.446) LOOP: START GENERATING (program 651)
( 107.446) GENERATE: START SOLVING
( 107.478) GENERATE: DONE SOLVING
( 107.479) LOOP: DONE GENERATING (program 651)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 107.479) LOOP: START TESTING
( 107.481) LOOP: DONE TESTING ('some', 'some')
( 107.481) LOOP: START IMPOSING CONSTRAINTS
( 107.481) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 107.481) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 107.482) GENERATE: START GROUNDING (impose_constraints)
( 107.702) GENERATE: DONE GROUNDING (impose_constraints)
( 107.702) LOOP: DONE IMPOSING CONSTRAINTS
( 107.702) LOOP: START GENERATING (program 652)
( 107.702) GENERATE: START SOLVING
( 107.737) GENERATE: DONE SOLVING
( 107.738) LOOP: DONE GENERATING (program 652)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 107.738) LOOP: START TESTING
( 107.741) LOOP: DONE TESTING ('some', 'some')
( 107.741) LOOP: START IMPOSING CONSTRAINTS
( 107.741) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 107.741) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 107.741) GENERATE: START GROUNDING (impose_constraints)
( 107.963) GENERATE: DONE GROUNDING (impose_constraints)
( 107.963) LOOP: DONE IMPOSING CONSTRAINTS
( 107.963) LOOP: START GENERATING (program 653)
( 107.963) GENERATE: START SOLVING
( 107.995) GENERATE: DONE SOLVING
( 107.996) LOOP: DONE GENERATING (program 653)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 107.996) LOOP: START TESTING
( 107.998) LOOP: DONE TESTING ('some', 'some')
( 107.999) LOOP: START IMPOSING CONSTRAINTS
( 107.999) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 107.999) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 107.999) GENERATE: START GROUNDING (impose_constraints)
( 108.231) GENERATE: DONE GROUNDING (impose_constraints)
( 108.231) LOOP: DONE IMPOSING CONSTRAINTS
( 108.231) LOOP: START GENERATING (program 654)
( 108.231) GENERATE: START SOLVING
( 108.273) GENERATE: DONE SOLVING
( 108.273) LOOP: DONE GENERATING (program 654)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
( 108.273) LOOP: START TESTING
( 108.276) LOOP: DONE TESTING ('some', 'none')
( 108.276) LOOP: START IMPOSING CONSTRAINTS
( 108.276) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 108.276) GENERATE: START GROUNDING (impose_constraints)
( 108.505) GENERATE: DONE GROUNDING (impose_constraints)
( 108.505) LOOP: DONE IMPOSING CONSTRAINTS
( 108.505) LOOP: START GENERATING (program 655)
( 108.505) GENERATE: START SOLVING
( 108.567) GENERATE: DONE SOLVING
( 108.567) LOOP: DONE GENERATING (program 655)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
( 108.567) LOOP: START TESTING
( 108.570) LOOP: DONE TESTING ('some', 'none')
( 108.570) LOOP: START IMPOSING CONSTRAINTS
( 108.570) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 108.570) GENERATE: START GROUNDING (impose_constraints)
( 108.790) GENERATE: DONE GROUNDING (impose_constraints)
( 108.790) LOOP: DONE IMPOSING CONSTRAINTS
( 108.790) LOOP: START GENERATING (program 656)
( 108.790) GENERATE: START SOLVING
( 109.152) GENERATE: DONE SOLVING
( 109.152) LOOP: DONE GENERATING (program 656)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 109.152) LOOP: START TESTING
( 109.155) LOOP: DONE TESTING ('some', 'some')
( 109.155) LOOP: START IMPOSING CONSTRAINTS
( 109.155) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 109.155) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 109.156) GENERATE: START GROUNDING (impose_constraints)
( 109.412) GENERATE: DONE GROUNDING (impose_constraints)
( 109.412) LOOP: DONE IMPOSING CONSTRAINTS
( 109.412) LOOP: START GENERATING (program 657)
( 109.412) GENERATE: START SOLVING
( 109.586) GENERATE: DONE SOLVING
( 109.587) LOOP: DONE GENERATING (program 657)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(D),c_2(C),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 109.587) LOOP: START TESTING
( 109.590) LOOP: DONE TESTING ('some', 'none')
( 109.590) LOOP: START IMPOSING CONSTRAINTS
( 109.590) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 109.590) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 109.591) GENERATE: START GROUNDING (impose_constraints)
( 109.887) GENERATE: DONE GROUNDING (impose_constraints)
( 109.887) LOOP: DONE IMPOSING CONSTRAINTS
( 109.887) LOOP: START GENERATING (program 658)
( 109.887) GENERATE: START SOLVING
( 110.005) GENERATE: DONE SOLVING
( 110.005) LOOP: DONE GENERATING (program 658)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_4(D),my_true_value(A,B).
( 110.005) LOOP: START TESTING
( 110.008) LOOP: DONE TESTING ('some', 'none')
( 110.008) LOOP: START IMPOSING CONSTRAINTS
( 110.008) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 110.009) GENERATE: START GROUNDING (impose_constraints)
( 110.267) GENERATE: DONE GROUNDING (impose_constraints)
( 110.267) LOOP: DONE IMPOSING CONSTRAINTS
( 110.267) LOOP: START GENERATING (program 659)
( 110.267) GENERATE: START SOLVING
( 111.683) GENERATE: DONE SOLVING
( 111.684) LOOP: DONE GENERATING (program 659)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
( 111.684) LOOP: START TESTING
( 111.686) LOOP: DONE TESTING ('some', 'none')
( 111.686) LOOP: START IMPOSING CONSTRAINTS
( 111.686) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 111.687) GENERATE: START GROUNDING (impose_constraints)
( 111.942) GENERATE: DONE GROUNDING (impose_constraints)
( 111.942) LOOP: DONE IMPOSING CONSTRAINTS
( 111.942) LOOP: START GENERATING (program 660)
( 111.942) GENERATE: START SOLVING
( 112.079) GENERATE: DONE SOLVING
( 112.079) LOOP: DONE GENERATING (program 660)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),c_4(B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 112.079) LOOP: START TESTING
( 112.083) LOOP: DONE TESTING ('some', 'none')
( 112.083) LOOP: START IMPOSING CONSTRAINTS
( 112.083) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 112.083) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 112.083) GENERATE: START GROUNDING (impose_constraints)
( 112.367) GENERATE: DONE GROUNDING (impose_constraints)
( 112.367) LOOP: DONE IMPOSING CONSTRAINTS
( 112.367) LOOP: START GENERATING (program 661)
( 112.367) GENERATE: START SOLVING
( 112.414) GENERATE: DONE SOLVING
( 112.415) LOOP: DONE GENERATING (program 661)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 112.416) LOOP: START TESTING
( 112.420) LOOP: DONE TESTING ('some', 'some')
( 112.420) LOOP: START IMPOSING CONSTRAINTS
( 112.420) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 112.420) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 112.420) GENERATE: START GROUNDING (impose_constraints)
( 112.683) GENERATE: DONE GROUNDING (impose_constraints)
( 112.683) LOOP: DONE IMPOSING CONSTRAINTS
( 112.683) LOOP: START GENERATING (program 662)
( 112.683) GENERATE: START SOLVING
( 112.725) GENERATE: DONE SOLVING
( 112.725) LOOP: DONE GENERATING (program 662)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 112.725) LOOP: START TESTING
( 112.728) LOOP: DONE TESTING ('some', 'none')
( 112.728) LOOP: START IMPOSING CONSTRAINTS
( 112.728) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 112.728) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 112.728) GENERATE: START GROUNDING (impose_constraints)
( 112.990) GENERATE: DONE GROUNDING (impose_constraints)
( 112.990) LOOP: DONE IMPOSING CONSTRAINTS
( 112.990) LOOP: START GENERATING (program 663)
( 112.990) GENERATE: START SOLVING
( 113.025) GENERATE: DONE SOLVING
( 113.025) LOOP: DONE GENERATING (program 663)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 113.025) LOOP: START TESTING
( 113.029) LOOP: DONE TESTING ('some', 'some')
( 113.029) LOOP: START IMPOSING CONSTRAINTS
( 113.029) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 113.029) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 113.029) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 113.029) GENERATE: START GROUNDING (impose_constraints)
( 113.312) GENERATE: DONE GROUNDING (impose_constraints)
( 113.312) LOOP: DONE IMPOSING CONSTRAINTS
( 113.312) LOOP: START GENERATING (program 664)
( 113.312) GENERATE: START SOLVING
( 113.345) GENERATE: DONE SOLVING
( 113.347) LOOP: DONE GENERATING (program 664)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B),c_4(B).
( 113.347) LOOP: START TESTING
( 113.352) LOOP: DONE TESTING ('some', 'some')
( 113.352) LOOP: START IMPOSING CONSTRAINTS
( 113.352) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 113.352) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 113.353) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 113.353) GENERATE: START GROUNDING (impose_constraints)
( 113.630) GENERATE: DONE GROUNDING (impose_constraints)
( 113.630) LOOP: DONE IMPOSING CONSTRAINTS
( 113.630) LOOP: START GENERATING (program 665)
( 113.630) GENERATE: START SOLVING
( 113.672) GENERATE: DONE SOLVING
( 113.673) LOOP: DONE GENERATING (program 665)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 113.673) LOOP: START TESTING
( 113.676) LOOP: DONE TESTING ('some', 'some')
( 113.676) LOOP: START IMPOSING CONSTRAINTS
( 113.676) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 113.676) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 113.676) GENERATE: START GROUNDING (impose_constraints)
( 113.948) GENERATE: DONE GROUNDING (impose_constraints)
( 113.948) LOOP: DONE IMPOSING CONSTRAINTS
( 113.948) LOOP: START GENERATING (program 666)
( 113.948) GENERATE: START SOLVING
( 114.312) GENERATE: DONE SOLVING
( 114.313) LOOP: DONE GENERATING (program 666)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(B),my_succ(A,D,C),c_1(D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 114.313) LOOP: START TESTING
( 114.315) LOOP: DONE TESTING ('some', 'none')
( 114.315) LOOP: START IMPOSING CONSTRAINTS
( 114.316) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 114.316) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 114.316) GENERATE: START GROUNDING (impose_constraints)
( 114.592) GENERATE: DONE GROUNDING (impose_constraints)
( 114.592) LOOP: DONE IMPOSING CONSTRAINTS
( 114.592) LOOP: START GENERATING (program 667)
( 114.592) GENERATE: START SOLVING
( 114.822) GENERATE: DONE SOLVING
( 114.822) LOOP: DONE GENERATING (program 667)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_1(D),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 114.822) LOOP: START TESTING
( 114.825) LOOP: DONE TESTING ('some', 'none')
( 114.825) LOOP: START IMPOSING CONSTRAINTS
( 114.825) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 114.825) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 114.826) GENERATE: START GROUNDING (impose_constraints)
( 115.095) GENERATE: DONE GROUNDING (impose_constraints)
( 115.095) LOOP: DONE IMPOSING CONSTRAINTS
( 115.095) LOOP: START GENERATING (program 668)
( 115.095) GENERATE: START SOLVING
( 115.620) GENERATE: DONE SOLVING
( 115.620) LOOP: DONE GENERATING (program 668)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_1(D),my_true_value(A,D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 115.620) LOOP: START TESTING
( 115.623) LOOP: DONE TESTING ('some', 'none')
( 115.623) LOOP: START IMPOSING CONSTRAINTS
( 115.623) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 115.623) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 115.623) GENERATE: START GROUNDING (impose_constraints)
( 115.882) GENERATE: DONE GROUNDING (impose_constraints)
( 115.882) LOOP: DONE IMPOSING CONSTRAINTS
( 115.882) LOOP: START GENERATING (program 669)
( 115.882) GENERATE: START SOLVING
( 116.093) GENERATE: DONE SOLVING
( 116.093) LOOP: DONE GENERATING (program 669)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,C,B),my_true_value(A,D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 116.093) LOOP: START TESTING
( 116.096) LOOP: DONE TESTING ('some', 'some')
( 116.096) LOOP: START IMPOSING CONSTRAINTS
( 116.096) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 116.096) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 116.097) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 116.097) GENERATE: START GROUNDING (impose_constraints)
( 116.333) GENERATE: DONE GROUNDING (impose_constraints)
( 116.333) LOOP: DONE IMPOSING CONSTRAINTS
( 116.333) LOOP: START GENERATING (program 670)
( 116.333) GENERATE: START SOLVING
( 116.401) GENERATE: DONE SOLVING
( 116.401) LOOP: DONE GENERATING (program 670)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_0(C),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 116.402) LOOP: START TESTING
( 116.404) LOOP: DONE TESTING ('some', 'none')
( 116.404) LOOP: START IMPOSING CONSTRAINTS
( 116.404) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 116.404) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 116.404) GENERATE: START GROUNDING (impose_constraints)
( 116.645) GENERATE: DONE GROUNDING (impose_constraints)
( 116.645) LOOP: DONE IMPOSING CONSTRAINTS
( 116.645) LOOP: START GENERATING (program 671)
( 116.645) GENERATE: START SOLVING
( 117.665) GENERATE: DONE SOLVING
( 117.666) LOOP: DONE GENERATING (program 671)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
( 117.666) LOOP: START TESTING
( 117.668) LOOP: DONE TESTING ('some', 'none')
( 117.668) LOOP: START IMPOSING CONSTRAINTS
( 117.668) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 117.669) GENERATE: START GROUNDING (impose_constraints)
( 117.902) GENERATE: DONE GROUNDING (impose_constraints)
( 117.902) LOOP: DONE IMPOSING CONSTRAINTS
( 117.902) LOOP: START GENERATING (program 672)
( 117.902) GENERATE: START SOLVING
( 118.028) GENERATE: DONE SOLVING
( 118.028) LOOP: DONE GENERATING (program 672)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
( 118.028) LOOP: START TESTING
( 118.031) LOOP: DONE TESTING ('some', 'none')
( 118.031) LOOP: START IMPOSING CONSTRAINTS
( 118.031) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 118.031) GENERATE: START GROUNDING (impose_constraints)
( 118.261) GENERATE: DONE GROUNDING (impose_constraints)
( 118.261) LOOP: DONE IMPOSING CONSTRAINTS
( 118.261) LOOP: START GENERATING (program 673)
( 118.261) GENERATE: START SOLVING
( 118.438) GENERATE: DONE SOLVING
( 118.439) LOOP: DONE GENERATING (program 673)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_1(D),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 118.439) LOOP: START TESTING
( 118.441) LOOP: DONE TESTING ('some', 'none')
( 118.441) LOOP: START IMPOSING CONSTRAINTS
( 118.441) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 118.441) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 118.442) GENERATE: START GROUNDING (impose_constraints)
( 118.681) GENERATE: DONE GROUNDING (impose_constraints)
( 118.681) LOOP: DONE IMPOSING CONSTRAINTS
( 118.681) LOOP: START GENERATING (program 674)
( 118.681) GENERATE: START SOLVING
( 118.810) GENERATE: DONE SOLVING
( 118.811) LOOP: DONE GENERATING (program 674)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),my_succ(A,C,B),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 118.811) LOOP: START TESTING
( 118.813) LOOP: DONE TESTING ('some', 'some')
( 118.813) LOOP: START IMPOSING CONSTRAINTS
( 118.813) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 118.813) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 118.813) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 118.814) GENERATE: START GROUNDING (impose_constraints)
( 119.046) GENERATE: DONE GROUNDING (impose_constraints)
( 119.046) LOOP: DONE IMPOSING CONSTRAINTS
( 119.046) LOOP: START GENERATING (program 675)
( 119.046) GENERATE: START SOLVING
( 119.102) GENERATE: DONE SOLVING
( 119.103) LOOP: DONE GENERATING (program 675)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_0(D),my_true_value(A,C),my_true_value(A,B).
( 119.103) LOOP: START TESTING
( 119.105) LOOP: DONE TESTING ('some', 'none')
( 119.105) LOOP: START IMPOSING CONSTRAINTS
( 119.105) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 119.105) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 119.106) GENERATE: START GROUNDING (impose_constraints)
( 119.339) GENERATE: DONE GROUNDING (impose_constraints)
( 119.339) LOOP: DONE IMPOSING CONSTRAINTS
( 119.339) LOOP: START GENERATING (program 676)
( 119.339) GENERATE: START SOLVING
( 119.428) GENERATE: DONE SOLVING
( 119.428) LOOP: DONE GENERATING (program 676)
PROGRAM:
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_true_value(D,C),my_true_value(D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 119.428) LOOP: START TESTING
( 119.431) LOOP: DONE TESTING ('some', 'some')
( 119.431) LOOP: START IMPOSING CONSTRAINTS
( 119.431) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 119.431) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 119.431) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 119.431) GENERATE: START GROUNDING (impose_constraints)
( 119.669) GENERATE: DONE GROUNDING (impose_constraints)
( 119.669) LOOP: DONE IMPOSING CONSTRAINTS
( 119.669) LOOP: START GENERATING (program 677)
( 119.669) GENERATE: START SOLVING
( 120.488) GENERATE: DONE SOLVING
( 120.488) LOOP: DONE GENERATING (program 677)
PROGRAM:
  next_value(A,B) :- c_0(D),c_5(B),my_succ(A,C,B),my_succ(A,D,C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 120.488) LOOP: START TESTING
( 120.491) LOOP: DONE TESTING ('some', 'none')
( 120.491) LOOP: START IMPOSING CONSTRAINTS
( 120.491) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 120.491) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 120.491) GENERATE: START GROUNDING (impose_constraints)
( 120.728) GENERATE: DONE GROUNDING (impose_constraints)
( 120.728) LOOP: DONE IMPOSING CONSTRAINTS
( 120.728) LOOP: START GENERATING (program 678)
( 120.728) GENERATE: START SOLVING
( 121.576) GENERATE: DONE SOLVING
( 121.576) LOOP: DONE GENERATING (program 678)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
( 121.576) LOOP: START TESTING
( 121.579) LOOP: DONE TESTING ('some', 'some')
( 121.579) LOOP: START IMPOSING CONSTRAINTS
( 121.579) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 121.579) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 121.579) GENERATE: START GROUNDING (impose_constraints)
( 121.816) GENERATE: DONE GROUNDING (impose_constraints)
( 121.816) LOOP: DONE IMPOSING CONSTRAINTS
( 121.816) LOOP: START GENERATING (program 679)
( 121.816) GENERATE: START SOLVING
( 122.029) GENERATE: DONE SOLVING
( 122.029) LOOP: DONE GENERATING (program 679)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),c_3(C),my_succ(A,B,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 122.030) LOOP: START TESTING
( 122.032) LOOP: DONE TESTING ('some', 'none')
( 122.032) LOOP: START IMPOSING CONSTRAINTS
( 122.032) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 122.032) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 122.032) GENERATE: START GROUNDING (impose_constraints)
( 122.272) GENERATE: DONE GROUNDING (impose_constraints)
( 122.272) LOOP: DONE IMPOSING CONSTRAINTS
( 122.272) LOOP: START GENERATING (program 680)
( 122.272) GENERATE: START SOLVING
( 122.495) GENERATE: DONE SOLVING
( 122.495) LOOP: DONE GENERATING (program 680)
PROGRAM:
  next_value(A,B) :- c_3(D),c_5(B),my_true_value(A,C),my_succ(A,D,C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 122.495) LOOP: START TESTING
( 122.498) LOOP: DONE TESTING ('some', 'none')
( 122.498) LOOP: START IMPOSING CONSTRAINTS
( 122.498) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 122.498) GENERATE: START GROUNDING (impose_constraints)
( 122.741) GENERATE: DONE GROUNDING (impose_constraints)
( 122.741) LOOP: DONE IMPOSING CONSTRAINTS
( 122.741) LOOP: START GENERATING (program 681)
( 122.741) GENERATE: START SOLVING
( 122.994) GENERATE: DONE SOLVING
( 122.994) LOOP: DONE GENERATING (program 681)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_5(D),my_true_value(A,B).
( 122.994) LOOP: START TESTING
( 122.997) LOOP: DONE TESTING ('some', 'none')
( 122.997) LOOP: START IMPOSING CONSTRAINTS
( 122.997) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 122.997) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 122.997) GENERATE: START GROUNDING (impose_constraints)
( 123.238) GENERATE: DONE GROUNDING (impose_constraints)
( 123.238) LOOP: DONE IMPOSING CONSTRAINTS
( 123.238) LOOP: START GENERATING (program 682)
( 123.238) GENERATE: START SOLVING
( 123.390) GENERATE: DONE SOLVING
( 123.390) LOOP: DONE GENERATING (program 682)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,D),my_succ(A,D,B),c_4(C).
( 123.390) LOOP: START TESTING
( 123.393) LOOP: DONE TESTING ('some', 'none')
( 123.393) LOOP: START IMPOSING CONSTRAINTS
( 123.393) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 123.393) GENERATE: START GROUNDING (impose_constraints)
( 123.647) GENERATE: DONE GROUNDING (impose_constraints)
( 123.647) LOOP: DONE IMPOSING CONSTRAINTS
( 123.647) LOOP: START GENERATING (program 683)
( 123.647) GENERATE: START SOLVING
( 123.690) GENERATE: DONE SOLVING
( 123.690) LOOP: DONE GENERATING (program 683)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(D),my_succ(A,C,B),my_succ(A,D,B),c_4(C).
( 123.690) LOOP: START TESTING
( 123.693) LOOP: DONE TESTING ('some', 'none')
( 123.693) LOOP: START IMPOSING CONSTRAINTS
( 123.693) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 123.693) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 123.693) GENERATE: START GROUNDING (impose_constraints)
( 123.935) GENERATE: DONE GROUNDING (impose_constraints)
( 123.935) LOOP: DONE IMPOSING CONSTRAINTS
( 123.935) LOOP: START GENERATING (program 684)
( 123.935) GENERATE: START SOLVING
( 124.286) GENERATE: DONE SOLVING
( 124.286) LOOP: DONE GENERATING (program 684)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),c_1(D),c_2(C),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 124.286) LOOP: START TESTING
( 124.289) LOOP: DONE TESTING ('some', 'some')
( 124.289) LOOP: START IMPOSING CONSTRAINTS
( 124.289) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 124.289) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 124.289) GENERATE: START GROUNDING (impose_constraints)
( 124.527) GENERATE: DONE GROUNDING (impose_constraints)
( 124.527) LOOP: DONE IMPOSING CONSTRAINTS
( 124.527) LOOP: START GENERATING (program 685)
( 124.527) GENERATE: START SOLVING
( 124.592) GENERATE: DONE SOLVING
( 124.592) LOOP: DONE GENERATING (program 685)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_3(C),my_succ(A,D,B).
( 124.593) LOOP: START TESTING
( 124.595) LOOP: DONE TESTING ('some', 'some')
( 124.595) LOOP: START IMPOSING CONSTRAINTS
( 124.595) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 124.595) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 124.596) GENERATE: START GROUNDING (impose_constraints)
( 124.835) GENERATE: DONE GROUNDING (impose_constraints)
( 124.835) LOOP: DONE IMPOSING CONSTRAINTS
( 124.835) LOOP: START GENERATING (program 686)
( 124.835) GENERATE: START SOLVING
( 125.166) GENERATE: DONE SOLVING
( 125.167) LOOP: DONE GENERATING (program 686)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_true_value(A,C),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 125.167) LOOP: START TESTING
( 125.169) LOOP: DONE TESTING ('some', 'some')
( 125.169) LOOP: START IMPOSING CONSTRAINTS
( 125.169) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 125.169) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 125.170) GENERATE: START GROUNDING (impose_constraints)
( 125.411) GENERATE: DONE GROUNDING (impose_constraints)
( 125.412) LOOP: DONE IMPOSING CONSTRAINTS
( 125.412) LOOP: START GENERATING (program 687)
( 125.412) GENERATE: START SOLVING
( 125.860) GENERATE: DONE SOLVING
( 125.860) LOOP: DONE GENERATING (program 687)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(D),my_true_value(A,D).
( 125.861) LOOP: START TESTING
( 125.863) LOOP: DONE TESTING ('some', 'some')
( 125.863) LOOP: START IMPOSING CONSTRAINTS
( 125.863) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 125.863) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 125.864) GENERATE: START GROUNDING (impose_constraints)
( 126.107) GENERATE: DONE GROUNDING (impose_constraints)
( 126.107) LOOP: DONE IMPOSING CONSTRAINTS
( 126.107) LOOP: START GENERATING (program 688)
( 126.107) GENERATE: START SOLVING
( 126.179) GENERATE: DONE SOLVING
( 126.179) LOOP: DONE GENERATING (program 688)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 126.179) LOOP: START TESTING
( 126.182) LOOP: DONE TESTING ('some', 'some')
( 126.182) LOOP: START IMPOSING CONSTRAINTS
( 126.182) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 126.182) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 126.182) GENERATE: START GROUNDING (impose_constraints)
( 126.426) GENERATE: DONE GROUNDING (impose_constraints)
( 126.426) LOOP: DONE IMPOSING CONSTRAINTS
( 126.426) LOOP: START GENERATING (program 689)
( 126.426) GENERATE: START SOLVING
( 126.485) GENERATE: DONE SOLVING
( 126.485) LOOP: DONE GENERATING (program 689)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 126.485) LOOP: START TESTING
( 126.488) LOOP: DONE TESTING ('some', 'some')
( 126.488) LOOP: START IMPOSING CONSTRAINTS
( 126.488) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 126.488) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 126.488) GENERATE: START GROUNDING (impose_constraints)
( 126.731) GENERATE: DONE GROUNDING (impose_constraints)
( 126.731) LOOP: DONE IMPOSING CONSTRAINTS
( 126.731) LOOP: START GENERATING (program 690)
( 126.731) GENERATE: START SOLVING
( 126.951) GENERATE: DONE SOLVING
( 126.952) LOOP: DONE GENERATING (program 690)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 126.952) LOOP: START TESTING
( 126.954) LOOP: DONE TESTING ('some', 'some')
( 126.954) LOOP: START IMPOSING CONSTRAINTS
( 126.954) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 126.954) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 126.955) GENERATE: START GROUNDING (impose_constraints)
( 127.202) GENERATE: DONE GROUNDING (impose_constraints)
( 127.202) LOOP: DONE IMPOSING CONSTRAINTS
( 127.202) LOOP: START GENERATING (program 691)
( 127.202) GENERATE: START SOLVING
( 127.591) GENERATE: DONE SOLVING
( 127.592) LOOP: DONE GENERATING (program 691)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_true_value(A,C),c_1(D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 127.592) LOOP: START TESTING
( 127.594) LOOP: DONE TESTING ('some', 'none')
( 127.594) LOOP: START IMPOSING CONSTRAINTS
( 127.595) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 127.595) GENERATE: START GROUNDING (impose_constraints)
( 127.840) GENERATE: DONE GROUNDING (impose_constraints)
( 127.840) LOOP: DONE IMPOSING CONSTRAINTS
( 127.840) LOOP: START GENERATING (program 692)
( 127.840) GENERATE: START SOLVING
( 127.902) GENERATE: DONE SOLVING
( 127.902) LOOP: DONE GENERATING (program 692)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_5(D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 127.902) LOOP: START TESTING
( 127.905) LOOP: DONE TESTING ('some', 'some')
( 127.905) LOOP: START IMPOSING CONSTRAINTS
( 127.905) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 127.905) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 127.905) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 127.905) GENERATE: START GROUNDING (impose_constraints)
( 128.146) GENERATE: DONE GROUNDING (impose_constraints)
( 128.146) LOOP: DONE IMPOSING CONSTRAINTS
( 128.146) LOOP: START GENERATING (program 693)
( 128.146) GENERATE: START SOLVING
( 128.239) GENERATE: DONE SOLVING
( 128.240) LOOP: DONE GENERATING (program 693)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,D,B),c_0(C),c_4(B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 128.240) LOOP: START TESTING
( 128.242) LOOP: DONE TESTING ('some', 'none')
( 128.242) LOOP: START IMPOSING CONSTRAINTS
( 128.242) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 128.242) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 128.243) GENERATE: START GROUNDING (impose_constraints)
( 128.505) GENERATE: DONE GROUNDING (impose_constraints)
( 128.505) LOOP: DONE IMPOSING CONSTRAINTS
( 128.505) LOOP: START GENERATING (program 694)
( 128.505) GENERATE: START SOLVING
( 128.858) GENERATE: DONE SOLVING
( 128.859) LOOP: DONE GENERATING (program 694)
PROGRAM:
  next_value(A,B) :- my_true_value(A,B),my_succ(C,D,B),my_succ(A,D,B),my_true_value(C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 128.859) LOOP: START TESTING
( 128.862) LOOP: DONE TESTING ('some', 'some')
( 128.862) LOOP: START IMPOSING CONSTRAINTS
( 128.862) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 128.862) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 128.862) GENERATE: START GROUNDING (impose_constraints)
( 129.106) GENERATE: DONE GROUNDING (impose_constraints)
( 129.106) LOOP: DONE IMPOSING CONSTRAINTS
( 129.106) LOOP: START GENERATING (program 695)
( 129.106) GENERATE: START SOLVING
( 129.500) GENERATE: DONE SOLVING
( 129.500) LOOP: DONE GENERATING (program 695)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 129.500) LOOP: START TESTING
( 129.503) LOOP: DONE TESTING ('some', 'some')
( 129.503) LOOP: START IMPOSING CONSTRAINTS
( 129.503) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 129.503) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 129.503) GENERATE: START GROUNDING (impose_constraints)
( 129.753) GENERATE: DONE GROUNDING (impose_constraints)
( 129.753) LOOP: DONE IMPOSING CONSTRAINTS
( 129.753) LOOP: START GENERATING (program 696)
( 129.753) GENERATE: START SOLVING
( 129.803) GENERATE: DONE SOLVING
( 129.804) LOOP: DONE GENERATING (program 696)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,D),my_succ(A,B,D),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 129.804) LOOP: START TESTING
( 129.807) LOOP: DONE TESTING ('some', 'some')
( 129.807) LOOP: START IMPOSING CONSTRAINTS
( 129.807) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 129.807) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 129.807) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 129.807) GENERATE: START GROUNDING (impose_constraints)
( 130.059) GENERATE: DONE GROUNDING (impose_constraints)
( 130.059) LOOP: DONE IMPOSING CONSTRAINTS
( 130.059) LOOP: START GENERATING (program 697)
( 130.059) GENERATE: START SOLVING
( 130.368) GENERATE: DONE SOLVING
( 130.369) LOOP: DONE GENERATING (program 697)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),c_2(D),c_3(C),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 130.369) LOOP: START TESTING
( 130.371) LOOP: DONE TESTING ('some', 'some')
( 130.371) LOOP: START IMPOSING CONSTRAINTS
( 130.372) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 130.372) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 130.372) GENERATE: START GROUNDING (impose_constraints)
( 130.616) GENERATE: DONE GROUNDING (impose_constraints)
( 130.616) LOOP: DONE IMPOSING CONSTRAINTS
( 130.616) LOOP: START GENERATING (program 698)
( 130.616) GENERATE: START SOLVING
( 130.656) GENERATE: DONE SOLVING
( 130.657) LOOP: DONE GENERATING (program 698)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(D),c_3(C),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 130.657) LOOP: START TESTING
( 130.660) LOOP: DONE TESTING ('some', 'none')
( 130.660) LOOP: START IMPOSING CONSTRAINTS
( 130.660) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 130.660) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 130.660) GENERATE: START GROUNDING (impose_constraints)
( 130.907) GENERATE: DONE GROUNDING (impose_constraints)
( 130.907) LOOP: DONE IMPOSING CONSTRAINTS
( 130.907) LOOP: START GENERATING (program 699)
( 130.907) GENERATE: START SOLVING
( 130.944) GENERATE: DONE SOLVING
( 130.944) LOOP: DONE GENERATING (program 699)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_2(D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 130.944) LOOP: START TESTING
( 130.947) LOOP: DONE TESTING ('some', 'none')
( 130.947) LOOP: START IMPOSING CONSTRAINTS
( 130.947) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 130.947) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 130.947) GENERATE: START GROUNDING (impose_constraints)
( 131.206) GENERATE: DONE GROUNDING (impose_constraints)
( 131.206) LOOP: DONE IMPOSING CONSTRAINTS
( 131.206) LOOP: START GENERATING (program 700)
( 131.206) GENERATE: START SOLVING
( 131.280) GENERATE: DONE SOLVING
( 131.280) LOOP: DONE GENERATING (program 700)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(D),c_0(C),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 131.280) LOOP: START TESTING
( 131.283) LOOP: DONE TESTING ('some', 'none')
( 131.283) LOOP: START IMPOSING CONSTRAINTS
( 131.283) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 131.283) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 131.283) GENERATE: START GROUNDING (impose_constraints)
( 131.534) GENERATE: DONE GROUNDING (impose_constraints)
( 131.534) LOOP: DONE IMPOSING CONSTRAINTS
( 131.534) LOOP: START GENERATING (program 701)
( 131.534) GENERATE: START SOLVING
( 131.612) GENERATE: DONE SOLVING
( 131.613) LOOP: DONE GENERATING (program 701)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_4(D),my_succ(A,D,B),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 131.613) LOOP: START TESTING
( 131.615) LOOP: DONE TESTING ('some', 'none')
( 131.615) LOOP: START IMPOSING CONSTRAINTS
( 131.615) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 131.615) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 131.615) GENERATE: START GROUNDING (impose_constraints)
( 131.861) GENERATE: DONE GROUNDING (impose_constraints)
( 131.861) LOOP: DONE IMPOSING CONSTRAINTS
( 131.861) LOOP: START GENERATING (program 702)
( 131.861) GENERATE: START SOLVING
( 132.206) GENERATE: DONE SOLVING
( 132.206) LOOP: DONE GENERATING (program 702)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 132.207) LOOP: START TESTING
( 132.209) LOOP: DONE TESTING ('some', 'some')
( 132.209) LOOP: START IMPOSING CONSTRAINTS
( 132.209) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 132.209) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 132.210) GENERATE: START GROUNDING (impose_constraints)
( 132.464) GENERATE: DONE GROUNDING (impose_constraints)
( 132.464) LOOP: DONE IMPOSING CONSTRAINTS
( 132.464) LOOP: START GENERATING (program 703)
( 132.464) GENERATE: START SOLVING
( 132.547) GENERATE: DONE SOLVING
( 132.548) LOOP: DONE GENERATING (program 703)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),my_true_value(A,C),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 132.548) LOOP: START TESTING
( 132.551) LOOP: DONE TESTING ('some', 'some')
( 132.551) LOOP: START IMPOSING CONSTRAINTS
( 132.551) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 132.551) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 132.551) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 132.551) GENERATE: START GROUNDING (impose_constraints)
( 132.808) GENERATE: DONE GROUNDING (impose_constraints)
( 132.808) LOOP: DONE IMPOSING CONSTRAINTS
( 132.808) LOOP: START GENERATING (program 704)
( 132.808) GENERATE: START SOLVING
( 132.934) GENERATE: DONE SOLVING
( 132.935) LOOP: DONE GENERATING (program 704)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_true_value(D,B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 132.935) LOOP: START TESTING
( 132.937) LOOP: DONE TESTING ('some', 'some')
( 132.937) LOOP: START IMPOSING CONSTRAINTS
( 132.937) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 132.937) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 132.938) GENERATE: START GROUNDING (impose_constraints)
( 133.197) GENERATE: DONE GROUNDING (impose_constraints)
( 133.197) LOOP: DONE IMPOSING CONSTRAINTS
( 133.197) LOOP: START GENERATING (program 705)
( 133.197) GENERATE: START SOLVING
( 133.329) GENERATE: DONE SOLVING
( 133.330) LOOP: DONE GENERATING (program 705)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
( 133.330) LOOP: START TESTING
( 133.332) LOOP: DONE TESTING ('some', 'some')
( 133.332) LOOP: START IMPOSING CONSTRAINTS
( 133.333) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 133.333) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 133.333) GENERATE: START GROUNDING (impose_constraints)
( 133.588) GENERATE: DONE GROUNDING (impose_constraints)
( 133.588) LOOP: DONE IMPOSING CONSTRAINTS
( 133.588) LOOP: START GENERATING (program 706)
( 133.588) GENERATE: START SOLVING
( 133.664) GENERATE: DONE SOLVING
( 133.664) LOOP: DONE GENERATING (program 706)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 133.664) LOOP: START TESTING
( 133.667) LOOP: DONE TESTING ('some', 'some')
( 133.667) LOOP: START IMPOSING CONSTRAINTS
( 133.667) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 133.667) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 133.667) GENERATE: START GROUNDING (impose_constraints)
( 133.919) GENERATE: DONE GROUNDING (impose_constraints)
( 133.919) LOOP: DONE IMPOSING CONSTRAINTS
( 133.919) LOOP: START GENERATING (program 707)
( 133.919) GENERATE: START SOLVING
( 134.064) GENERATE: DONE SOLVING
( 134.065) LOOP: DONE GENERATING (program 707)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,D),c_2(C),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 134.065) LOOP: START TESTING
( 134.067) LOOP: DONE TESTING ('some', 'some')
( 134.067) LOOP: START IMPOSING CONSTRAINTS
( 134.068) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 134.068) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 134.068) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 134.068) GENERATE: START GROUNDING (impose_constraints)
( 134.328) GENERATE: DONE GROUNDING (impose_constraints)
( 134.328) LOOP: DONE IMPOSING CONSTRAINTS
( 134.328) LOOP: START GENERATING (program 708)
( 134.328) GENERATE: START SOLVING
( 134.992) GENERATE: DONE SOLVING
( 134.993) LOOP: DONE GENERATING (program 708)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 134.993) LOOP: START TESTING
( 134.995) LOOP: DONE TESTING ('some', 'some')
( 134.995) LOOP: START IMPOSING CONSTRAINTS
( 134.995) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 134.995) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 134.995) GENERATE: START GROUNDING (impose_constraints)
( 135.257) GENERATE: DONE GROUNDING (impose_constraints)
( 135.257) LOOP: DONE IMPOSING CONSTRAINTS
( 135.257) LOOP: START GENERATING (program 709)
( 135.257) GENERATE: START SOLVING
( 135.775) GENERATE: DONE SOLVING
( 135.776) LOOP: DONE GENERATING (program 709)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
( 135.776) LOOP: START TESTING
( 135.779) LOOP: DONE TESTING ('some', 'some')
( 135.779) LOOP: START IMPOSING CONSTRAINTS
( 135.779) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 135.779) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 135.779) GENERATE: START GROUNDING (impose_constraints)
( 136.038) GENERATE: DONE GROUNDING (impose_constraints)
( 136.038) LOOP: DONE IMPOSING CONSTRAINTS
( 136.038) LOOP: START GENERATING (program 710)
( 136.038) GENERATE: START SOLVING
( 136.186) GENERATE: DONE SOLVING
( 136.186) LOOP: DONE GENERATING (program 710)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
( 136.186) LOOP: START TESTING
( 136.189) LOOP: DONE TESTING ('some', 'none')
( 136.189) LOOP: START IMPOSING CONSTRAINTS
( 136.189) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 136.189) GENERATE: START GROUNDING (impose_constraints)
( 136.443) GENERATE: DONE GROUNDING (impose_constraints)
( 136.443) LOOP: DONE IMPOSING CONSTRAINTS
( 136.443) LOOP: START GENERATING (program 711)
( 136.443) GENERATE: START SOLVING
( 136.936) GENERATE: DONE SOLVING
( 136.936) LOOP: DONE GENERATING (program 711)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(D),my_succ(A,B,D),c_2(C).
( 136.936) LOOP: START TESTING
( 136.939) LOOP: DONE TESTING ('some', 'some')
( 136.939) LOOP: START IMPOSING CONSTRAINTS
( 136.939) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 136.939) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 136.939) GENERATE: START GROUNDING (impose_constraints)
( 137.217) GENERATE: DONE GROUNDING (impose_constraints)
( 137.217) LOOP: DONE IMPOSING CONSTRAINTS
( 137.217) LOOP: START GENERATING (program 712)
( 137.217) GENERATE: START SOLVING
( 137.279) GENERATE: DONE SOLVING
( 137.280) LOOP: DONE GENERATING (program 712)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 137.280) LOOP: START TESTING
( 137.282) LOOP: DONE TESTING ('some', 'some')
( 137.282) LOOP: START IMPOSING CONSTRAINTS
( 137.282) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 137.282) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 137.283) GENERATE: START GROUNDING (impose_constraints)
( 137.538) GENERATE: DONE GROUNDING (impose_constraints)
( 137.538) LOOP: DONE IMPOSING CONSTRAINTS
( 137.538) LOOP: START GENERATING (program 713)
( 137.538) GENERATE: START SOLVING
( 137.673) GENERATE: DONE SOLVING
( 137.674) LOOP: DONE GENERATING (program 713)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_0(B),c_3(D),my_succ(A,C,D).
( 137.674) LOOP: START TESTING
( 137.676) LOOP: DONE TESTING ('some', 'none')
( 137.676) LOOP: START IMPOSING CONSTRAINTS
( 137.676) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 137.676) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 137.677) GENERATE: START GROUNDING (impose_constraints)
( 137.945) GENERATE: DONE GROUNDING (impose_constraints)
( 137.945) LOOP: DONE IMPOSING CONSTRAINTS
( 137.945) LOOP: START GENERATING (program 714)
( 137.945) GENERATE: START SOLVING
( 138.122) GENERATE: DONE SOLVING
( 138.122) LOOP: DONE GENERATING (program 714)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),c_4(D),my_true_value(A,B),my_true_value(C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 138.122) LOOP: START TESTING
( 138.125) LOOP: DONE TESTING ('some', 'some')
( 138.125) LOOP: START IMPOSING CONSTRAINTS
( 138.125) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 138.125) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 138.125) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 138.125) GENERATE: START GROUNDING (impose_constraints)
( 138.395) GENERATE: DONE GROUNDING (impose_constraints)
( 138.395) LOOP: DONE IMPOSING CONSTRAINTS
( 138.395) LOOP: START GENERATING (program 715)
( 138.395) GENERATE: START SOLVING
( 139.139) GENERATE: DONE SOLVING
( 139.140) LOOP: DONE GENERATING (program 715)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),my_true_value(A,C),my_succ(A,D,C),my_succ(A,D,B).
( 139.140) LOOP: START TESTING
( 139.142) LOOP: DONE TESTING ('some', 'none')
( 139.142) LOOP: START IMPOSING CONSTRAINTS
( 139.142) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 139.142) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 139.142) GENERATE: START GROUNDING (impose_constraints)
( 139.409) GENERATE: DONE GROUNDING (impose_constraints)
( 139.409) LOOP: DONE IMPOSING CONSTRAINTS
( 139.409) LOOP: START GENERATING (program 716)
( 139.409) GENERATE: START SOLVING
( 139.486) GENERATE: DONE SOLVING
( 139.487) LOOP: DONE GENERATING (program 716)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,D,C),my_true_value(A,B).
( 139.487) LOOP: START TESTING
( 139.489) LOOP: DONE TESTING ('some', 'some')
( 139.489) LOOP: START IMPOSING CONSTRAINTS
( 139.489) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 139.489) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 139.489) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 139.490) GENERATE: START GROUNDING (impose_constraints)
( 139.752) GENERATE: DONE GROUNDING (impose_constraints)
( 139.752) LOOP: DONE IMPOSING CONSTRAINTS
( 139.752) LOOP: START GENERATING (program 717)
( 139.752) GENERATE: START SOLVING
( 139.797) GENERATE: DONE SOLVING
( 139.798) LOOP: DONE GENERATING (program 717)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_succ(A,D,C),my_succ(A,D,B).
( 139.798) LOOP: START TESTING
( 139.800) LOOP: DONE TESTING ('some', 'none')
( 139.800) LOOP: START IMPOSING CONSTRAINTS
( 139.800) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 139.800) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 139.801) GENERATE: START GROUNDING (impose_constraints)
( 140.060) GENERATE: DONE GROUNDING (impose_constraints)
( 140.060) LOOP: DONE IMPOSING CONSTRAINTS
( 140.060) LOOP: START GENERATING (program 718)
( 140.060) GENERATE: START SOLVING
( 140.099) GENERATE: DONE SOLVING
( 140.099) LOOP: DONE GENERATING (program 718)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_succ(A,D,C),my_succ(A,D,B).
( 140.099) LOOP: START TESTING
( 140.102) LOOP: DONE TESTING ('some', 'some')
( 140.102) LOOP: START IMPOSING CONSTRAINTS
( 140.102) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 140.102) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 140.102) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 140.103) GENERATE: START GROUNDING (impose_constraints)
( 140.366) GENERATE: DONE GROUNDING (impose_constraints)
( 140.366) LOOP: DONE IMPOSING CONSTRAINTS
( 140.366) LOOP: START GENERATING (program 719)
( 140.366) GENERATE: START SOLVING
( 140.404) GENERATE: DONE SOLVING
( 140.404) LOOP: DONE GENERATING (program 719)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_1(D),my_succ(A,D,B).
( 140.404) LOOP: START TESTING
( 140.407) LOOP: DONE TESTING ('some', 'some')
( 140.407) LOOP: START IMPOSING CONSTRAINTS
( 140.407) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 140.407) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 140.407) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 140.407) GENERATE: START GROUNDING (impose_constraints)
( 140.664) GENERATE: DONE GROUNDING (impose_constraints)
( 140.664) LOOP: DONE IMPOSING CONSTRAINTS
( 140.664) LOOP: START GENERATING (program 720)
( 140.664) GENERATE: START SOLVING
( 140.707) GENERATE: DONE SOLVING
( 140.708) LOOP: DONE GENERATING (program 720)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,D,C),my_succ(A,D,B).
( 140.708) LOOP: START TESTING
( 140.711) LOOP: DONE TESTING ('some', 'none')
( 140.711) LOOP: START IMPOSING CONSTRAINTS
( 140.711) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 140.711) GENERATE: START GROUNDING (impose_constraints)
( 140.973) GENERATE: DONE GROUNDING (impose_constraints)
( 140.973) LOOP: DONE IMPOSING CONSTRAINTS
( 140.973) LOOP: START GENERATING (program 721)
( 140.973) GENERATE: START SOLVING
( 141.338) GENERATE: DONE SOLVING
( 141.338) LOOP: DONE GENERATING (program 721)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_1(D),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 141.338) LOOP: START TESTING
( 141.341) LOOP: DONE TESTING ('some', 'some')
( 141.341) LOOP: START IMPOSING CONSTRAINTS
( 141.341) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 141.341) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 141.342) GENERATE: START GROUNDING (impose_constraints)
( 141.619) GENERATE: DONE GROUNDING (impose_constraints)
( 141.619) LOOP: DONE IMPOSING CONSTRAINTS
( 141.619) LOOP: START GENERATING (program 722)
( 141.619) GENERATE: START SOLVING
( 141.733) GENERATE: DONE SOLVING
( 141.734) LOOP: DONE GENERATING (program 722)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 141.734) LOOP: START TESTING
( 141.736) LOOP: DONE TESTING ('some', 'some')
( 141.736) LOOP: START IMPOSING CONSTRAINTS
( 141.736) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 141.736) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 141.737) GENERATE: START GROUNDING (impose_constraints)
( 142.003) GENERATE: DONE GROUNDING (impose_constraints)
( 142.003) LOOP: DONE IMPOSING CONSTRAINTS
( 142.003) LOOP: START GENERATING (program 723)
( 142.003) GENERATE: START SOLVING
( 142.164) GENERATE: DONE SOLVING
( 142.165) LOOP: DONE GENERATING (program 723)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 142.165) LOOP: START TESTING
( 142.168) LOOP: DONE TESTING ('some', 'some')
( 142.168) LOOP: START IMPOSING CONSTRAINTS
( 142.168) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 142.168) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 142.168) GENERATE: START GROUNDING (impose_constraints)
( 142.437) GENERATE: DONE GROUNDING (impose_constraints)
( 142.437) LOOP: DONE IMPOSING CONSTRAINTS
( 142.437) LOOP: START GENERATING (program 724)
( 142.437) GENERATE: START SOLVING
( 142.540) GENERATE: DONE SOLVING
( 142.541) LOOP: DONE GENERATING (program 724)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(D),my_true_value(A,C),my_succ(A,B,D),c_2(C).
( 142.541) LOOP: START TESTING
( 142.544) LOOP: DONE TESTING ('some', 'some')
( 142.544) LOOP: START IMPOSING CONSTRAINTS
( 142.544) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 142.544) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 142.544) GENERATE: START GROUNDING (impose_constraints)
( 142.812) GENERATE: DONE GROUNDING (impose_constraints)
( 142.812) LOOP: DONE IMPOSING CONSTRAINTS
( 142.812) LOOP: START GENERATING (program 725)
( 142.812) GENERATE: START SOLVING
( 142.903) GENERATE: DONE SOLVING
( 142.903) LOOP: DONE GENERATING (program 725)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
( 142.904) LOOP: START TESTING
( 142.906) LOOP: DONE TESTING ('some', 'none')
( 142.906) LOOP: START IMPOSING CONSTRAINTS
( 142.906) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 142.906) GENERATE: START GROUNDING (impose_constraints)
( 143.174) GENERATE: DONE GROUNDING (impose_constraints)
( 143.174) LOOP: DONE IMPOSING CONSTRAINTS
( 143.174) LOOP: START GENERATING (program 726)
( 143.174) GENERATE: START SOLVING
( 143.241) GENERATE: DONE SOLVING
( 143.242) LOOP: DONE GENERATING (program 726)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 143.242) LOOP: START TESTING
( 143.244) LOOP: DONE TESTING ('some', 'some')
( 143.244) LOOP: START IMPOSING CONSTRAINTS
( 143.244) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 143.244) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 143.244) GENERATE: START GROUNDING (impose_constraints)
( 143.509) GENERATE: DONE GROUNDING (impose_constraints)
( 143.509) LOOP: DONE IMPOSING CONSTRAINTS
( 143.509) LOOP: START GENERATING (program 727)
( 143.509) GENERATE: START SOLVING
( 143.833) GENERATE: DONE SOLVING
( 143.833) LOOP: DONE GENERATING (program 727)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_5(D),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 143.833) LOOP: START TESTING
( 143.836) LOOP: DONE TESTING ('some', 'some')
( 143.836) LOOP: START IMPOSING CONSTRAINTS
( 143.836) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 143.836) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 143.836) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 143.836) GENERATE: START GROUNDING (impose_constraints)
( 144.101) GENERATE: DONE GROUNDING (impose_constraints)
( 144.101) LOOP: DONE IMPOSING CONSTRAINTS
( 144.101) LOOP: START GENERATING (program 728)
( 144.101) GENERATE: START SOLVING
( 144.399) GENERATE: DONE SOLVING
( 144.400) LOOP: DONE GENERATING (program 728)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
( 144.400) LOOP: START TESTING
( 144.402) LOOP: DONE TESTING ('some', 'some')
( 144.402) LOOP: START IMPOSING CONSTRAINTS
( 144.402) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 144.402) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 144.403) GENERATE: START GROUNDING (impose_constraints)
( 144.671) GENERATE: DONE GROUNDING (impose_constraints)
( 144.671) LOOP: DONE IMPOSING CONSTRAINTS
( 144.671) LOOP: START GENERATING (program 729)
( 144.671) GENERATE: START SOLVING
( 145.089) GENERATE: DONE SOLVING
( 145.089) LOOP: DONE GENERATING (program 729)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
( 145.089) LOOP: START TESTING
( 145.092) LOOP: DONE TESTING ('some', 'some')
( 145.092) LOOP: START IMPOSING CONSTRAINTS
( 145.092) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 145.092) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 145.092) GENERATE: START GROUNDING (impose_constraints)
( 145.359) GENERATE: DONE GROUNDING (impose_constraints)
( 145.359) LOOP: DONE IMPOSING CONSTRAINTS
( 145.359) LOOP: START GENERATING (program 730)
( 145.359) GENERATE: START SOLVING
( 145.589) GENERATE: DONE SOLVING
( 145.589) LOOP: DONE GENERATING (program 730)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(C),c_5(D),my_true_value(A,D).
( 145.589) LOOP: START TESTING
( 145.592) LOOP: DONE TESTING ('some', 'some')
( 145.592) LOOP: START IMPOSING CONSTRAINTS
( 145.592) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 145.592) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 145.592) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 145.592) GENERATE: START GROUNDING (impose_constraints)
( 145.861) GENERATE: DONE GROUNDING (impose_constraints)
( 145.861) LOOP: DONE IMPOSING CONSTRAINTS
( 145.861) LOOP: START GENERATING (program 731)
( 145.861) GENERATE: START SOLVING
( 145.933) GENERATE: DONE SOLVING
( 145.933) LOOP: DONE GENERATING (program 731)
PROGRAM:
  next_value(A,B) :- c_0(D),c_3(D),my_succ(A,C,B),my_succ(A,D,C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 145.933) LOOP: START TESTING
( 145.936) LOOP: DONE TESTING ('some', 'none')
( 145.936) LOOP: START IMPOSING CONSTRAINTS
( 145.936) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 145.936) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 145.936) GENERATE: START GROUNDING (impose_constraints)
( 146.205) GENERATE: DONE GROUNDING (impose_constraints)
( 146.205) LOOP: DONE IMPOSING CONSTRAINTS
( 146.205) LOOP: START GENERATING (program 732)
( 146.205) GENERATE: START SOLVING
( 146.265) GENERATE: DONE SOLVING
( 146.266) LOOP: DONE GENERATING (program 732)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,C,B),my_succ(A,D,C),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 146.266) LOOP: START TESTING
( 146.268) LOOP: DONE TESTING ('some', 'none')
( 146.268) LOOP: START IMPOSING CONSTRAINTS
( 146.268) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 146.268) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 146.269) GENERATE: START GROUNDING (impose_constraints)
( 146.545) GENERATE: DONE GROUNDING (impose_constraints)
( 146.546) LOOP: DONE IMPOSING CONSTRAINTS
( 146.546) LOOP: START GENERATING (program 733)
( 146.546) GENERATE: START SOLVING
( 146.643) GENERATE: DONE SOLVING
( 146.644) LOOP: DONE GENERATING (program 733)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,D,C),c_3(C),my_succ(A,B,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 146.644) LOOP: START TESTING
( 146.647) LOOP: DONE TESTING ('some', 'none')
( 146.647) LOOP: START IMPOSING CONSTRAINTS
( 146.647) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 146.647) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 146.647) GENERATE: START GROUNDING (impose_constraints)
( 146.921) GENERATE: DONE GROUNDING (impose_constraints)
( 146.921) LOOP: DONE IMPOSING CONSTRAINTS
( 146.921) LOOP: START GENERATING (program 734)
( 146.921) GENERATE: START SOLVING
( 146.990) GENERATE: DONE SOLVING
( 146.991) LOOP: DONE GENERATING (program 734)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
( 146.991) LOOP: START TESTING
( 146.993) LOOP: DONE TESTING ('some', 'none')
( 146.993) LOOP: START IMPOSING CONSTRAINTS
( 146.993) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 146.994) GENERATE: START GROUNDING (impose_constraints)
( 147.265) GENERATE: DONE GROUNDING (impose_constraints)
( 147.265) LOOP: DONE IMPOSING CONSTRAINTS
( 147.265) LOOP: START GENERATING (program 735)
( 147.265) GENERATE: START SOLVING
( 147.316) GENERATE: DONE SOLVING
( 147.316) LOOP: DONE GENERATING (program 735)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 147.316) LOOP: START TESTING
( 147.319) LOOP: DONE TESTING ('some', 'some')
( 147.319) LOOP: START IMPOSING CONSTRAINTS
( 147.319) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 147.319) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 147.319) GENERATE: START GROUNDING (impose_constraints)
( 147.599) GENERATE: DONE GROUNDING (impose_constraints)
( 147.599) LOOP: DONE IMPOSING CONSTRAINTS
( 147.599) LOOP: START GENERATING (program 736)
( 147.599) GENERATE: START SOLVING
( 147.646) GENERATE: DONE SOLVING
( 147.647) LOOP: DONE GENERATING (program 736)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 147.647) LOOP: START TESTING
( 147.651) LOOP: DONE TESTING ('some', 'some')
( 147.651) LOOP: START IMPOSING CONSTRAINTS
( 147.651) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 147.651) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 147.651) GENERATE: START GROUNDING (impose_constraints)
( 147.925) GENERATE: DONE GROUNDING (impose_constraints)
( 147.925) LOOP: DONE IMPOSING CONSTRAINTS
( 147.925) LOOP: START GENERATING (program 737)
( 147.925) GENERATE: START SOLVING
( 147.998) GENERATE: DONE SOLVING
( 147.999) LOOP: DONE GENERATING (program 737)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 147.999) LOOP: START TESTING
( 148.002) LOOP: DONE TESTING ('some', 'some')
( 148.002) LOOP: START IMPOSING CONSTRAINTS
( 148.002) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 148.002) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 148.002) GENERATE: START GROUNDING (impose_constraints)
( 148.273) GENERATE: DONE GROUNDING (impose_constraints)
( 148.273) LOOP: DONE IMPOSING CONSTRAINTS
( 148.273) LOOP: START GENERATING (program 738)
( 148.273) GENERATE: START SOLVING
( 148.495) GENERATE: DONE SOLVING
( 148.496) LOOP: DONE GENERATING (program 738)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
( 148.496) LOOP: START TESTING
( 148.500) LOOP: DONE TESTING ('some', 'none')
( 148.500) LOOP: START IMPOSING CONSTRAINTS
( 148.500) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 148.500) GENERATE: START GROUNDING (impose_constraints)
( 148.792) GENERATE: DONE GROUNDING (impose_constraints)
( 148.792) LOOP: DONE IMPOSING CONSTRAINTS
( 148.792) LOOP: START GENERATING (program 739)
( 148.792) GENERATE: START SOLVING
( 148.915) GENERATE: DONE SOLVING
( 148.916) LOOP: DONE GENERATING (program 739)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 148.916) LOOP: START TESTING
( 148.919) LOOP: DONE TESTING ('some', 'some')
( 148.919) LOOP: START IMPOSING CONSTRAINTS
( 148.919) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 148.919) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 148.919) GENERATE: START GROUNDING (impose_constraints)
( 149.192) GENERATE: DONE GROUNDING (impose_constraints)
( 149.192) LOOP: DONE IMPOSING CONSTRAINTS
( 149.192) LOOP: START GENERATING (program 740)
( 149.192) GENERATE: START SOLVING
( 149.272) GENERATE: DONE SOLVING
( 149.272) LOOP: DONE GENERATING (program 740)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 149.272) LOOP: START TESTING
( 149.275) LOOP: DONE TESTING ('some', 'some')
( 149.275) LOOP: START IMPOSING CONSTRAINTS
( 149.275) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 149.275) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 149.275) GENERATE: START GROUNDING (impose_constraints)
( 149.550) GENERATE: DONE GROUNDING (impose_constraints)
( 149.550) LOOP: DONE IMPOSING CONSTRAINTS
( 149.550) LOOP: START GENERATING (program 741)
( 149.550) GENERATE: START SOLVING
( 149.966) GENERATE: DONE SOLVING
( 149.966) LOOP: DONE GENERATING (program 741)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(B),my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D).
( 149.966) LOOP: START TESTING
( 149.969) LOOP: DONE TESTING ('some', 'none')
( 149.969) LOOP: START IMPOSING CONSTRAINTS
( 149.969) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 149.969) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 149.969) GENERATE: START GROUNDING (impose_constraints)
( 150.249) GENERATE: DONE GROUNDING (impose_constraints)
( 150.249) LOOP: DONE IMPOSING CONSTRAINTS
( 150.249) LOOP: START GENERATING (program 742)
( 150.249) GENERATE: START SOLVING
( 150.290) GENERATE: DONE SOLVING
( 150.290) LOOP: DONE GENERATING (program 742)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D).
( 150.290) LOOP: START TESTING
( 150.293) LOOP: DONE TESTING ('some', 'none')
( 150.293) LOOP: START IMPOSING CONSTRAINTS
( 150.293) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 150.293) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 150.293) GENERATE: START GROUNDING (impose_constraints)
( 150.565) GENERATE: DONE GROUNDING (impose_constraints)
( 150.565) LOOP: DONE IMPOSING CONSTRAINTS
( 150.565) LOOP: START GENERATING (program 743)
( 150.565) GENERATE: START SOLVING
( 150.605) GENERATE: DONE SOLVING
( 150.605) LOOP: DONE GENERATING (program 743)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D),c_4(B).
( 150.605) LOOP: START TESTING
( 150.608) LOOP: DONE TESTING ('some', 'some')
( 150.608) LOOP: START IMPOSING CONSTRAINTS
( 150.608) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 150.608) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 150.608) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 150.608) GENERATE: START GROUNDING (impose_constraints)
( 150.883) GENERATE: DONE GROUNDING (impose_constraints)
( 150.883) LOOP: DONE IMPOSING CONSTRAINTS
( 150.883) LOOP: START GENERATING (program 744)
( 150.883) GENERATE: START SOLVING
( 150.925) GENERATE: DONE SOLVING
( 150.925) LOOP: DONE GENERATING (program 744)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D).
( 150.925) LOOP: START TESTING
( 150.928) LOOP: DONE TESTING ('some', 'some')
( 150.928) LOOP: START IMPOSING CONSTRAINTS
( 150.928) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 150.928) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 150.928) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 150.928) GENERATE: START GROUNDING (impose_constraints)
( 151.207) GENERATE: DONE GROUNDING (impose_constraints)
( 151.207) LOOP: DONE IMPOSING CONSTRAINTS
( 151.207) LOOP: START GENERATING (program 745)
( 151.207) GENERATE: START SOLVING
( 151.243) GENERATE: DONE SOLVING
( 151.244) LOOP: DONE GENERATING (program 745)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D).
( 151.244) LOOP: START TESTING
( 151.247) LOOP: DONE TESTING ('some', 'none')
( 151.247) LOOP: START IMPOSING CONSTRAINTS
( 151.247) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 151.247) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 151.247) GENERATE: START GROUNDING (impose_constraints)
( 151.529) GENERATE: DONE GROUNDING (impose_constraints)
( 151.529) LOOP: DONE IMPOSING CONSTRAINTS
( 151.529) LOOP: START GENERATING (program 746)
( 151.529) GENERATE: START SOLVING
( 151.567) GENERATE: DONE SOLVING
( 151.567) LOOP: DONE GENERATING (program 746)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D).
( 151.567) LOOP: START TESTING
( 151.570) LOOP: DONE TESTING ('some', 'some')
( 151.570) LOOP: START IMPOSING CONSTRAINTS
( 151.570) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 151.570) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 151.570) GENERATE: START GROUNDING (impose_constraints)
( 151.854) GENERATE: DONE GROUNDING (impose_constraints)
( 151.854) LOOP: DONE IMPOSING CONSTRAINTS
( 151.854) LOOP: START GENERATING (program 747)
( 151.854) GENERATE: START SOLVING
( 151.893) GENERATE: DONE SOLVING
( 151.893) LOOP: DONE GENERATING (program 747)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(D),my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D).
( 151.894) LOOP: START TESTING
( 151.896) LOOP: DONE TESTING ('some', 'some')
( 151.896) LOOP: START IMPOSING CONSTRAINTS
( 151.896) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 151.896) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 151.896) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 151.897) GENERATE: START GROUNDING (impose_constraints)
( 152.182) GENERATE: DONE GROUNDING (impose_constraints)
( 152.182) LOOP: DONE IMPOSING CONSTRAINTS
( 152.182) LOOP: START GENERATING (program 748)
( 152.182) GENERATE: START SOLVING
( 152.224) GENERATE: DONE SOLVING
( 152.225) LOOP: DONE GENERATING (program 748)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D),c_4(C).
( 152.225) LOOP: START TESTING
( 152.227) LOOP: DONE TESTING ('some', 'some')
( 152.227) LOOP: START IMPOSING CONSTRAINTS
( 152.227) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 152.227) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 152.228) GENERATE: START GROUNDING (impose_constraints)
( 152.507) GENERATE: DONE GROUNDING (impose_constraints)
( 152.507) LOOP: DONE IMPOSING CONSTRAINTS
( 152.507) LOOP: START GENERATING (program 749)
( 152.507) GENERATE: START SOLVING
( 152.546) GENERATE: DONE SOLVING
( 152.547) LOOP: DONE GENERATING (program 749)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D).
( 152.547) LOOP: START TESTING
( 152.550) LOOP: DONE TESTING ('some', 'some')
( 152.550) LOOP: START IMPOSING CONSTRAINTS
( 152.550) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 152.550) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 152.550) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 152.550) GENERATE: START GROUNDING (impose_constraints)
( 152.837) GENERATE: DONE GROUNDING (impose_constraints)
( 152.837) LOOP: DONE IMPOSING CONSTRAINTS
( 152.837) LOOP: START GENERATING (program 750)
( 152.837) GENERATE: START SOLVING
( 153.046) GENERATE: DONE SOLVING
( 153.047) LOOP: DONE GENERATING (program 750)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),c_3(D),my_succ(A,C,B),my_succ(A,D,C).
( 153.047) LOOP: START TESTING
( 153.049) LOOP: DONE TESTING ('some', 'none')
( 153.049) LOOP: START IMPOSING CONSTRAINTS
( 153.049) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 153.049) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 153.049) GENERATE: START GROUNDING (impose_constraints)
( 153.329) GENERATE: DONE GROUNDING (impose_constraints)
( 153.329) LOOP: DONE IMPOSING CONSTRAINTS
( 153.329) LOOP: START GENERATING (program 751)
( 153.329) GENERATE: START SOLVING
( 153.371) GENERATE: DONE SOLVING
( 153.371) LOOP: DONE GENERATING (program 751)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),c_0(D),my_succ(A,C,B),my_succ(A,D,C).
( 153.371) LOOP: START TESTING
( 153.374) LOOP: DONE TESTING ('some', 'none')
( 153.374) LOOP: START IMPOSING CONSTRAINTS
( 153.374) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 153.374) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 153.374) GENERATE: START GROUNDING (impose_constraints)
( 153.661) GENERATE: DONE GROUNDING (impose_constraints)
( 153.661) LOOP: DONE IMPOSING CONSTRAINTS
( 153.661) LOOP: START GENERATING (program 752)
( 153.661) GENERATE: START SOLVING
( 153.711) GENERATE: DONE SOLVING
( 153.711) LOOP: DONE GENERATING (program 752)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(D),c_3(B),my_succ(A,D,C),my_succ(A,C,B).
( 153.711) LOOP: START TESTING
( 153.714) LOOP: DONE TESTING ('some', 'none')
( 153.714) LOOP: START IMPOSING CONSTRAINTS
( 153.714) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 153.714) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 153.714) GENERATE: START GROUNDING (impose_constraints)
( 153.999) GENERATE: DONE GROUNDING (impose_constraints)
( 153.999) LOOP: DONE IMPOSING CONSTRAINTS
( 153.999) LOOP: START GENERATING (program 753)
( 153.999) GENERATE: START SOLVING
( 154.264) GENERATE: DONE SOLVING
( 154.264) LOOP: DONE GENERATING (program 753)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
( 154.264) LOOP: START TESTING
( 154.267) LOOP: DONE TESTING ('some', 'some')
( 154.267) LOOP: START IMPOSING CONSTRAINTS
( 154.267) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 154.267) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 154.267) GENERATE: START GROUNDING (impose_constraints)
( 154.549) GENERATE: DONE GROUNDING (impose_constraints)
( 154.549) LOOP: DONE IMPOSING CONSTRAINTS
( 154.549) LOOP: START GENERATING (program 754)
( 154.549) GENERATE: START SOLVING
( 154.657) GENERATE: DONE SOLVING
( 154.657) LOOP: DONE GENERATING (program 754)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_succ(A,C,B),c_2(D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 154.657) LOOP: START TESTING
( 154.660) LOOP: DONE TESTING ('some', 'none')
( 154.660) LOOP: START IMPOSING CONSTRAINTS
( 154.660) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 154.660) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 154.660) GENERATE: START GROUNDING (impose_constraints)
( 154.943) GENERATE: DONE GROUNDING (impose_constraints)
( 154.943) LOOP: DONE IMPOSING CONSTRAINTS
( 154.943) LOOP: START GENERATING (program 755)
( 154.943) GENERATE: START SOLVING
( 155.728) GENERATE: DONE SOLVING
( 155.729) LOOP: DONE GENERATING (program 755)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_4(D),c_2(C).
( 155.729) LOOP: START TESTING
( 155.731) LOOP: DONE TESTING ('some', 'none')
( 155.731) LOOP: START IMPOSING CONSTRAINTS
( 155.732) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 155.732) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 155.732) GENERATE: START GROUNDING (impose_constraints)
( 156.019) GENERATE: DONE GROUNDING (impose_constraints)
( 156.019) LOOP: DONE IMPOSING CONSTRAINTS
( 156.019) LOOP: START GENERATING (program 756)
( 156.019) GENERATE: START SOLVING
( 156.086) GENERATE: DONE SOLVING
( 156.087) LOOP: DONE GENERATING (program 756)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),c_1(B).
( 156.087) LOOP: START TESTING
( 156.090) LOOP: DONE TESTING ('some', 'some')
( 156.090) LOOP: START IMPOSING CONSTRAINTS
( 156.090) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 156.090) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 156.090) GENERATE: START GROUNDING (impose_constraints)
( 156.371) GENERATE: DONE GROUNDING (impose_constraints)
( 156.371) LOOP: DONE IMPOSING CONSTRAINTS
( 156.371) LOOP: START GENERATING (program 757)
( 156.371) GENERATE: START SOLVING
( 156.423) GENERATE: DONE SOLVING
( 156.423) LOOP: DONE GENERATING (program 757)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),c_2(B).
( 156.424) LOOP: START TESTING
( 156.426) LOOP: DONE TESTING ('some', 'none')
( 156.426) LOOP: START IMPOSING CONSTRAINTS
( 156.426) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 156.426) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 156.426) GENERATE: START GROUNDING (impose_constraints)
( 156.709) GENERATE: DONE GROUNDING (impose_constraints)
( 156.709) LOOP: DONE IMPOSING CONSTRAINTS
( 156.709) LOOP: START GENERATING (program 758)
( 156.709) GENERATE: START SOLVING
( 156.752) GENERATE: DONE SOLVING
( 156.753) LOOP: DONE GENERATING (program 758)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),c_4(D).
( 156.753) LOOP: START TESTING
( 156.755) LOOP: DONE TESTING ('some', 'none')
( 156.755) LOOP: START IMPOSING CONSTRAINTS
( 156.756) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 156.756) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 156.756) GENERATE: START GROUNDING (impose_constraints)
( 157.041) GENERATE: DONE GROUNDING (impose_constraints)
( 157.041) LOOP: DONE IMPOSING CONSTRAINTS
( 157.041) LOOP: START GENERATING (program 759)
( 157.041) GENERATE: START SOLVING
( 157.092) GENERATE: DONE SOLVING
( 157.092) LOOP: DONE GENERATING (program 759)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_3(C),c_4(D).
( 157.092) LOOP: START TESTING
( 157.095) LOOP: DONE TESTING ('some', 'some')
( 157.095) LOOP: START IMPOSING CONSTRAINTS
( 157.095) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 157.095) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 157.095) GENERATE: START GROUNDING (impose_constraints)
( 157.380) GENERATE: DONE GROUNDING (impose_constraints)
( 157.380) LOOP: DONE IMPOSING CONSTRAINTS
( 157.380) LOOP: START GENERATING (program 760)
( 157.380) GENERATE: START SOLVING
( 157.436) GENERATE: DONE SOLVING
( 157.436) LOOP: DONE GENERATING (program 760)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_0(B),my_succ(A,C,D),c_4(D).
( 157.436) LOOP: START TESTING
( 157.439) LOOP: DONE TESTING ('some', 'none')
( 157.439) LOOP: START IMPOSING CONSTRAINTS
( 157.439) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 157.439) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 157.439) GENERATE: START GROUNDING (impose_constraints)
( 157.720) GENERATE: DONE GROUNDING (impose_constraints)
( 157.720) LOOP: DONE IMPOSING CONSTRAINTS
( 157.720) LOOP: START GENERATING (program 761)
( 157.720) GENERATE: START SOLVING
( 157.863) GENERATE: DONE SOLVING
( 157.863) LOOP: DONE GENERATING (program 761)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_true_value(A,C),my_succ(A,B,D).
( 157.863) LOOP: START TESTING
( 157.866) LOOP: DONE TESTING ('some', 'some')
( 157.866) LOOP: START IMPOSING CONSTRAINTS
( 157.866) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 157.866) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 157.866) GENERATE: START GROUNDING (impose_constraints)
( 158.159) GENERATE: DONE GROUNDING (impose_constraints)
( 158.159) LOOP: DONE IMPOSING CONSTRAINTS
( 158.159) LOOP: START GENERATING (program 762)
( 158.159) GENERATE: START SOLVING
( 158.275) GENERATE: DONE SOLVING
( 158.275) LOOP: DONE GENERATING (program 762)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_2(D),my_true_value(A,D).
( 158.276) LOOP: START TESTING
( 158.278) LOOP: DONE TESTING ('some', 'some')
( 158.278) LOOP: START IMPOSING CONSTRAINTS
( 158.278) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 158.278) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 158.278) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 158.279) GENERATE: START GROUNDING (impose_constraints)
( 158.579) GENERATE: DONE GROUNDING (impose_constraints)
( 158.579) LOOP: DONE IMPOSING CONSTRAINTS
( 158.579) LOOP: START GENERATING (program 763)
( 158.579) GENERATE: START SOLVING
( 159.534) GENERATE: DONE SOLVING
( 159.534) LOOP: DONE GENERATING (program 763)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,B),c_4(D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 159.534) LOOP: START TESTING
( 159.537) LOOP: DONE TESTING ('some', 'none')
( 159.537) LOOP: START IMPOSING CONSTRAINTS
( 159.537) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 159.537) GENERATE: START GROUNDING (impose_constraints)
( 159.846) GENERATE: DONE GROUNDING (impose_constraints)
( 159.846) LOOP: DONE IMPOSING CONSTRAINTS
( 159.846) LOOP: START GENERATING (program 764)
( 159.846) GENERATE: START SOLVING
( 160.019) GENERATE: DONE SOLVING
( 160.019) LOOP: DONE GENERATING (program 764)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),my_true_value(A,B),c_4(D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 160.019) LOOP: START TESTING
( 160.022) LOOP: DONE TESTING ('some', 'none')
( 160.022) LOOP: START IMPOSING CONSTRAINTS
( 160.022) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 160.022) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 160.022) GENERATE: START GROUNDING (impose_constraints)
( 160.318) GENERATE: DONE GROUNDING (impose_constraints)
( 160.318) LOOP: DONE IMPOSING CONSTRAINTS
( 160.318) LOOP: START GENERATING (program 765)
( 160.318) GENERATE: START SOLVING
( 161.006) GENERATE: DONE SOLVING
( 161.007) LOOP: DONE GENERATING (program 765)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
( 161.007) LOOP: START TESTING
( 161.009) LOOP: DONE TESTING ('some', 'some')
( 161.009) LOOP: START IMPOSING CONSTRAINTS
( 161.009) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 161.009) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 161.010) GENERATE: START GROUNDING (impose_constraints)
( 161.298) GENERATE: DONE GROUNDING (impose_constraints)
( 161.298) LOOP: DONE IMPOSING CONSTRAINTS
( 161.298) LOOP: START GENERATING (program 766)
( 161.298) GENERATE: START SOLVING
( 161.703) GENERATE: DONE SOLVING
( 161.703) LOOP: DONE GENERATING (program 766)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,B,D),c_4(C).
( 161.703) LOOP: START TESTING
( 161.706) LOOP: DONE TESTING ('some', 'some')
( 161.706) LOOP: START IMPOSING CONSTRAINTS
( 161.706) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 161.706) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 161.706) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 161.706) GENERATE: START GROUNDING (impose_constraints)
( 162.003) GENERATE: DONE GROUNDING (impose_constraints)
( 162.003) LOOP: DONE IMPOSING CONSTRAINTS
( 162.003) LOOP: START GENERATING (program 767)
( 162.003) GENERATE: START SOLVING
( 162.430) GENERATE: DONE SOLVING
( 162.431) LOOP: DONE GENERATING (program 767)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),c_5(D),my_succ(C,D,B),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 162.431) LOOP: START TESTING
( 162.433) LOOP: DONE TESTING ('some', 'none')
( 162.433) LOOP: START IMPOSING CONSTRAINTS
( 162.434) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 162.434) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 162.434) GENERATE: START GROUNDING (impose_constraints)
( 162.723) GENERATE: DONE GROUNDING (impose_constraints)
( 162.723) LOOP: DONE IMPOSING CONSTRAINTS
( 162.723) LOOP: START GENERATING (program 768)
( 162.723) GENERATE: START SOLVING
( 163.091) GENERATE: DONE SOLVING
( 163.091) LOOP: DONE GENERATING (program 768)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,B,D),c_1(C),my_true_value(A,B).
( 163.091) LOOP: START TESTING
( 163.094) LOOP: DONE TESTING ('some', 'none')
( 163.094) LOOP: START IMPOSING CONSTRAINTS
( 163.094) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 163.094) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 163.094) GENERATE: START GROUNDING (impose_constraints)
( 163.390) GENERATE: DONE GROUNDING (impose_constraints)
( 163.390) LOOP: DONE IMPOSING CONSTRAINTS
( 163.390) LOOP: START GENERATING (program 769)
( 163.390) GENERATE: START SOLVING
( 163.514) GENERATE: DONE SOLVING
( 163.514) LOOP: DONE GENERATING (program 769)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_4(D),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 163.514) LOOP: START TESTING
( 163.517) LOOP: DONE TESTING ('some', 'none')
( 163.517) LOOP: START IMPOSING CONSTRAINTS
( 163.517) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 163.517) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 163.517) GENERATE: START GROUNDING (impose_constraints)
( 163.810) GENERATE: DONE GROUNDING (impose_constraints)
( 163.810) LOOP: DONE IMPOSING CONSTRAINTS
( 163.810) LOOP: START GENERATING (program 770)
( 163.810) GENERATE: START SOLVING
( 164.105) GENERATE: DONE SOLVING
( 164.106) LOOP: DONE GENERATING (program 770)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_3(C),my_succ(A,D,B),c_4(B).
( 164.106) LOOP: START TESTING
( 164.108) LOOP: DONE TESTING ('some', 'none')
( 164.108) LOOP: START IMPOSING CONSTRAINTS
( 164.109) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 164.109) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 164.109) GENERATE: START GROUNDING (impose_constraints)
( 164.400) GENERATE: DONE GROUNDING (impose_constraints)
( 164.400) LOOP: DONE IMPOSING CONSTRAINTS
( 164.400) LOOP: START GENERATING (program 771)
( 164.400) GENERATE: START SOLVING
( 164.693) GENERATE: DONE SOLVING
( 164.693) LOOP: DONE GENERATING (program 771)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_2(D),c_5(D).
( 164.693) LOOP: START TESTING
( 164.696) LOOP: DONE TESTING ('some', 'none')
( 164.696) LOOP: START IMPOSING CONSTRAINTS
( 164.696) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 164.696) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 164.696) GENERATE: START GROUNDING (impose_constraints)
( 164.996) GENERATE: DONE GROUNDING (impose_constraints)
( 164.996) LOOP: DONE IMPOSING CONSTRAINTS
( 164.996) LOOP: START GENERATING (program 772)
( 164.996) GENERATE: START SOLVING
( 165.307) GENERATE: DONE SOLVING
( 165.308) LOOP: DONE GENERATING (program 772)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 165.308) LOOP: START TESTING
( 165.310) LOOP: DONE TESTING ('some', 'some')
( 165.310) LOOP: START IMPOSING CONSTRAINTS
( 165.310) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 165.310) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 165.311) GENERATE: START GROUNDING (impose_constraints)
( 165.602) GENERATE: DONE GROUNDING (impose_constraints)
( 165.602) LOOP: DONE IMPOSING CONSTRAINTS
( 165.602) LOOP: START GENERATING (program 773)
( 165.602) GENERATE: START SOLVING
( 165.802) GENERATE: DONE SOLVING
( 165.802) LOOP: DONE GENERATING (program 773)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
( 165.802) LOOP: START TESTING
( 165.805) LOOP: DONE TESTING ('some', 'none')
( 165.805) LOOP: START IMPOSING CONSTRAINTS
( 165.805) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 165.805) GENERATE: START GROUNDING (impose_constraints)
( 166.093) GENERATE: DONE GROUNDING (impose_constraints)
( 166.093) LOOP: DONE IMPOSING CONSTRAINTS
( 166.093) LOOP: START GENERATING (program 774)
( 166.093) GENERATE: START SOLVING
( 166.224) GENERATE: DONE SOLVING
( 166.224) LOOP: DONE GENERATING (program 774)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 166.224) LOOP: START TESTING
( 166.227) LOOP: DONE TESTING ('some', 'some')
( 166.227) LOOP: START IMPOSING CONSTRAINTS
( 166.227) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 166.227) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 166.227) GENERATE: START GROUNDING (impose_constraints)
( 166.518) GENERATE: DONE GROUNDING (impose_constraints)
( 166.518) LOOP: DONE IMPOSING CONSTRAINTS
( 166.518) LOOP: START GENERATING (program 775)
( 166.518) GENERATE: START SOLVING
( 166.572) GENERATE: DONE SOLVING
( 166.572) LOOP: DONE GENERATING (program 775)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
( 166.573) LOOP: START TESTING
( 166.575) LOOP: DONE TESTING ('some', 'none')
( 166.575) LOOP: START IMPOSING CONSTRAINTS
( 166.575) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 166.575) GENERATE: START GROUNDING (impose_constraints)
( 166.869) GENERATE: DONE GROUNDING (impose_constraints)
( 166.869) LOOP: DONE IMPOSING CONSTRAINTS
( 166.869) LOOP: START GENERATING (program 776)
( 166.869) GENERATE: START SOLVING
( 166.922) GENERATE: DONE SOLVING
( 166.923) LOOP: DONE GENERATING (program 776)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 166.923) LOOP: START TESTING
( 166.925) LOOP: DONE TESTING ('some', 'some')
( 166.925) LOOP: START IMPOSING CONSTRAINTS
( 166.925) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 166.925) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 166.926) GENERATE: START GROUNDING (impose_constraints)
( 167.223) GENERATE: DONE GROUNDING (impose_constraints)
( 167.223) LOOP: DONE IMPOSING CONSTRAINTS
( 167.223) LOOP: START GENERATING (program 777)
( 167.223) GENERATE: START SOLVING
( 167.269) GENERATE: DONE SOLVING
( 167.270) LOOP: DONE GENERATING (program 777)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 167.270) LOOP: START TESTING
( 167.272) LOOP: DONE TESTING ('some', 'some')
( 167.272) LOOP: START IMPOSING CONSTRAINTS
( 167.272) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 167.272) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 167.273) GENERATE: START GROUNDING (impose_constraints)
( 167.568) GENERATE: DONE GROUNDING (impose_constraints)
( 167.568) LOOP: DONE IMPOSING CONSTRAINTS
( 167.568) LOOP: START GENERATING (program 778)
( 167.568) GENERATE: START SOLVING
( 167.693) GENERATE: DONE SOLVING
( 167.693) LOOP: DONE GENERATING (program 778)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 167.693) LOOP: START TESTING
( 167.696) LOOP: DONE TESTING ('some', 'some')
( 167.696) LOOP: START IMPOSING CONSTRAINTS
( 167.696) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 167.696) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 167.696) GENERATE: START GROUNDING (impose_constraints)
( 167.996) GENERATE: DONE GROUNDING (impose_constraints)
( 167.996) LOOP: DONE IMPOSING CONSTRAINTS
( 167.996) LOOP: START GENERATING (program 779)
( 167.996) GENERATE: START SOLVING
( 168.104) GENERATE: DONE SOLVING
( 168.104) LOOP: DONE GENERATING (program 779)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,C,B),my_succ(A,B,D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 168.104) LOOP: START TESTING
( 168.107) LOOP: DONE TESTING ('some', 'none')
( 168.107) LOOP: START IMPOSING CONSTRAINTS
( 168.107) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 168.107) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 168.107) GENERATE: START GROUNDING (impose_constraints)
( 168.406) GENERATE: DONE GROUNDING (impose_constraints)
( 168.406) LOOP: DONE IMPOSING CONSTRAINTS
( 168.406) LOOP: START GENERATING (program 780)
( 168.406) GENERATE: START SOLVING
( 168.456) GENERATE: DONE SOLVING
( 168.457) LOOP: DONE GENERATING (program 780)
PROGRAM:
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,B,D),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 168.457) LOOP: START TESTING
( 168.460) LOOP: DONE TESTING ('some', 'some')
( 168.460) LOOP: START IMPOSING CONSTRAINTS
( 168.460) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 168.460) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 168.460) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 168.460) GENERATE: START GROUNDING (impose_constraints)
( 168.758) GENERATE: DONE GROUNDING (impose_constraints)
( 168.758) LOOP: DONE IMPOSING CONSTRAINTS
( 168.758) LOOP: START GENERATING (program 781)
( 168.758) GENERATE: START SOLVING
( 168.942) GENERATE: DONE SOLVING
( 168.942) LOOP: DONE GENERATING (program 781)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
( 168.943) LOOP: START TESTING
( 168.945) LOOP: DONE TESTING ('some', 'some')
( 168.945) LOOP: START IMPOSING CONSTRAINTS
( 168.945) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 168.945) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 168.946) GENERATE: START GROUNDING (impose_constraints)
( 169.252) GENERATE: DONE GROUNDING (impose_constraints)
( 169.252) LOOP: DONE IMPOSING CONSTRAINTS
( 169.252) LOOP: START GENERATING (program 782)
( 169.252) GENERATE: START SOLVING
( 169.394) GENERATE: DONE SOLVING
( 169.394) LOOP: DONE GENERATING (program 782)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(D),my_true_value(A,C),my_succ(A,C,B),my_true_value(A,D).
( 169.394) LOOP: START TESTING
( 169.397) LOOP: DONE TESTING ('some', 'some')
( 169.397) LOOP: START IMPOSING CONSTRAINTS
( 169.397) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 169.397) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 169.397) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 169.397) GENERATE: START GROUNDING (impose_constraints)
( 169.706) GENERATE: DONE GROUNDING (impose_constraints)
( 169.706) LOOP: DONE IMPOSING CONSTRAINTS
( 169.706) LOOP: START GENERATING (program 783)
( 169.706) GENERATE: START SOLVING
( 169.837) GENERATE: DONE SOLVING
( 169.837) LOOP: DONE GENERATING (program 783)
PROGRAM:
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_true_value(A,D),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 169.837) LOOP: START TESTING
( 169.840) LOOP: DONE TESTING ('some', 'some')
( 169.840) LOOP: START IMPOSING CONSTRAINTS
( 169.840) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 169.840) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 169.840) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 169.840) GENERATE: START GROUNDING (impose_constraints)
( 170.148) GENERATE: DONE GROUNDING (impose_constraints)
( 170.148) LOOP: DONE IMPOSING CONSTRAINTS
( 170.148) LOOP: START GENERATING (program 784)
( 170.148) GENERATE: START SOLVING
( 170.501) GENERATE: DONE SOLVING
( 170.501) LOOP: DONE GENERATING (program 784)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),c_1(D),c_3(C),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 170.501) LOOP: START TESTING
( 170.504) LOOP: DONE TESTING ('some', 'some')
( 170.504) LOOP: START IMPOSING CONSTRAINTS
( 170.504) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 170.504) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 170.504) GENERATE: START GROUNDING (impose_constraints)
( 170.808) GENERATE: DONE GROUNDING (impose_constraints)
( 170.808) LOOP: DONE IMPOSING CONSTRAINTS
( 170.808) LOOP: START GENERATING (program 785)
( 170.808) GENERATE: START SOLVING
( 171.079) GENERATE: DONE SOLVING
( 171.080) LOOP: DONE GENERATING (program 785)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_1(D),my_succ(A,C,B),c_4(C).
( 171.080) LOOP: START TESTING
( 171.084) LOOP: DONE TESTING ('some', 'none')
( 171.084) LOOP: START IMPOSING CONSTRAINTS
( 171.084) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 171.084) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 171.084) GENERATE: START GROUNDING (impose_constraints)
( 171.393) GENERATE: DONE GROUNDING (impose_constraints)
( 171.393) LOOP: DONE IMPOSING CONSTRAINTS
( 171.393) LOOP: START GENERATING (program 786)
( 171.393) GENERATE: START SOLVING
( 171.448) GENERATE: DONE SOLVING
( 171.448) LOOP: DONE GENERATING (program 786)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_2(D),c_4(C).
( 171.448) LOOP: START TESTING
( 171.451) LOOP: DONE TESTING ('some', 'none')
( 171.451) LOOP: START IMPOSING CONSTRAINTS
( 171.451) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 171.451) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 171.451) GENERATE: START GROUNDING (impose_constraints)
( 171.757) GENERATE: DONE GROUNDING (impose_constraints)
( 171.757) LOOP: DONE IMPOSING CONSTRAINTS
( 171.757) LOOP: START GENERATING (program 787)
( 171.757) GENERATE: START SOLVING
( 171.825) GENERATE: DONE SOLVING
( 171.825) LOOP: DONE GENERATING (program 787)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_2(D),c_1(C).
( 171.825) LOOP: START TESTING
( 171.828) LOOP: DONE TESTING ('some', 'some')
( 171.828) LOOP: START IMPOSING CONSTRAINTS
( 171.828) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 171.828) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 171.828) GENERATE: START GROUNDING (impose_constraints)
( 172.136) GENERATE: DONE GROUNDING (impose_constraints)
( 172.136) LOOP: DONE IMPOSING CONSTRAINTS
( 172.136) LOOP: START GENERATING (program 788)
( 172.136) GENERATE: START SOLVING
( 172.187) GENERATE: DONE SOLVING
( 172.187) LOOP: DONE GENERATING (program 788)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_2(D),c_4(B).
( 172.188) LOOP: START TESTING
( 172.190) LOOP: DONE TESTING ('some', 'none')
( 172.190) LOOP: START IMPOSING CONSTRAINTS
( 172.190) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 172.190) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 172.190) GENERATE: START GROUNDING (impose_constraints)
( 172.496) GENERATE: DONE GROUNDING (impose_constraints)
( 172.496) LOOP: DONE IMPOSING CONSTRAINTS
( 172.496) LOOP: START GENERATING (program 789)
( 172.496) GENERATE: START SOLVING
( 172.537) GENERATE: DONE SOLVING
( 172.537) LOOP: DONE GENERATING (program 789)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_0(B),my_succ(A,C,B),c_2(D).
( 172.537) LOOP: START TESTING
( 172.540) LOOP: DONE TESTING ('some', 'none')
( 172.540) LOOP: START IMPOSING CONSTRAINTS
( 172.540) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 172.540) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 172.540) GENERATE: START GROUNDING (impose_constraints)
( 172.846) GENERATE: DONE GROUNDING (impose_constraints)
( 172.846) LOOP: DONE IMPOSING CONSTRAINTS
( 172.846) LOOP: START GENERATING (program 790)
( 172.846) GENERATE: START SOLVING
( 172.887) GENERATE: DONE SOLVING
( 172.887) LOOP: DONE GENERATING (program 790)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_2(D),my_succ(A,C,B).
( 172.888) LOOP: START TESTING
( 172.890) LOOP: DONE TESTING ('some', 'none')
( 172.890) LOOP: START IMPOSING CONSTRAINTS
( 172.890) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 172.890) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 172.890) GENERATE: START GROUNDING (impose_constraints)
( 173.194) GENERATE: DONE GROUNDING (impose_constraints)
( 173.194) LOOP: DONE IMPOSING CONSTRAINTS
( 173.194) LOOP: START GENERATING (program 791)
( 173.194) GENERATE: START SOLVING
( 173.236) GENERATE: DONE SOLVING
( 173.236) LOOP: DONE GENERATING (program 791)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_1(B),my_succ(A,C,B),c_2(D).
( 173.236) LOOP: START TESTING
( 173.239) LOOP: DONE TESTING ('some', 'none')
( 173.239) LOOP: START IMPOSING CONSTRAINTS
( 173.239) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 173.239) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 173.239) GENERATE: START GROUNDING (impose_constraints)
( 173.544) GENERATE: DONE GROUNDING (impose_constraints)
( 173.544) LOOP: DONE IMPOSING CONSTRAINTS
( 173.544) LOOP: START GENERATING (program 792)
( 173.544) GENERATE: START SOLVING
( 173.587) GENERATE: DONE SOLVING
( 173.588) LOOP: DONE GENERATING (program 792)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_2(D),my_succ(A,C,B).
( 173.588) LOOP: START TESTING
( 173.591) LOOP: DONE TESTING ('some', 'some')
( 173.591) LOOP: START IMPOSING CONSTRAINTS
( 173.591) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 173.591) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 173.591) GENERATE: START GROUNDING (impose_constraints)
( 173.895) GENERATE: DONE GROUNDING (impose_constraints)
( 173.895) LOOP: DONE IMPOSING CONSTRAINTS
( 173.895) LOOP: START GENERATING (program 793)
( 173.895) GENERATE: START SOLVING
( 173.938) GENERATE: DONE SOLVING
( 173.938) LOOP: DONE GENERATING (program 793)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_2(D),c_0(C).
( 173.938) LOOP: START TESTING
( 173.941) LOOP: DONE TESTING ('some', 'none')
( 173.941) LOOP: START IMPOSING CONSTRAINTS
( 173.941) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 173.941) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 173.941) GENERATE: START GROUNDING (impose_constraints)
( 174.251) GENERATE: DONE GROUNDING (impose_constraints)
( 174.251) LOOP: DONE IMPOSING CONSTRAINTS
( 174.251) LOOP: START GENERATING (program 794)
( 174.251) GENERATE: START SOLVING
( 174.293) GENERATE: DONE SOLVING
( 174.293) LOOP: DONE GENERATING (program 794)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_1(D),c_1(C).
( 174.293) LOOP: START TESTING
( 174.296) LOOP: DONE TESTING ('some', 'none')
( 174.296) LOOP: START IMPOSING CONSTRAINTS
( 174.296) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 174.296) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 174.296) GENERATE: START GROUNDING (impose_constraints)
( 174.609) GENERATE: DONE GROUNDING (impose_constraints)
( 174.609) LOOP: DONE IMPOSING CONSTRAINTS
( 174.609) LOOP: START GENERATING (program 795)
( 174.609) GENERATE: START SOLVING
( 174.652) GENERATE: DONE SOLVING
( 174.652) LOOP: DONE GENERATING (program 795)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_1(D),c_4(B).
( 174.652) LOOP: START TESTING
( 174.655) LOOP: DONE TESTING ('some', 'none')
( 174.655) LOOP: START IMPOSING CONSTRAINTS
( 174.655) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 174.655) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 174.655) GENERATE: START GROUNDING (impose_constraints)
( 174.965) GENERATE: DONE GROUNDING (impose_constraints)
( 174.965) LOOP: DONE IMPOSING CONSTRAINTS
( 174.965) LOOP: START GENERATING (program 796)
( 174.965) GENERATE: START SOLVING
( 175.008) GENERATE: DONE SOLVING
( 175.008) LOOP: DONE GENERATING (program 796)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_0(B),my_succ(A,C,B),c_1(D).
( 175.008) LOOP: START TESTING
( 175.011) LOOP: DONE TESTING ('some', 'none')
( 175.011) LOOP: START IMPOSING CONSTRAINTS
( 175.011) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 175.011) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 175.011) GENERATE: START GROUNDING (impose_constraints)
( 175.326) GENERATE: DONE GROUNDING (impose_constraints)
( 175.326) LOOP: DONE IMPOSING CONSTRAINTS
( 175.326) LOOP: START GENERATING (program 797)
( 175.326) GENERATE: START SOLVING
( 175.368) GENERATE: DONE SOLVING
( 175.369) LOOP: DONE GENERATING (program 797)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_3(B),my_succ(A,C,B),c_1(D).
( 175.369) LOOP: START TESTING
( 175.371) LOOP: DONE TESTING ('some', 'none')
( 175.371) LOOP: START IMPOSING CONSTRAINTS
( 175.372) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 175.372) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 175.372) GENERATE: START GROUNDING (impose_constraints)
( 175.684) GENERATE: DONE GROUNDING (impose_constraints)
( 175.684) LOOP: DONE IMPOSING CONSTRAINTS
( 175.684) LOOP: START GENERATING (program 798)
( 175.684) GENERATE: START SOLVING
( 175.727) GENERATE: DONE SOLVING
( 175.727) LOOP: DONE GENERATING (program 798)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_1(B),my_succ(A,C,B),c_1(D).
( 175.727) LOOP: START TESTING
( 175.730) LOOP: DONE TESTING ('some', 'some')
( 175.730) LOOP: START IMPOSING CONSTRAINTS
( 175.730) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 175.730) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_1,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 175.731) GENERATE: START GROUNDING (impose_constraints)
( 176.045) GENERATE: DONE GROUNDING (impose_constraints)
( 176.045) LOOP: DONE IMPOSING CONSTRAINTS
( 176.045) LOOP: START GENERATING (program 799)
( 176.045) GENERATE: START SOLVING
( 176.089) GENERATE: DONE SOLVING
( 176.089) LOOP: DONE GENERATING (program 799)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_2(B),my_succ(A,C,B),c_1(D).
( 176.089) LOOP: START TESTING
( 176.092) LOOP: DONE TESTING ('some', 'none')
( 176.092) LOOP: START IMPOSING CONSTRAINTS
( 176.092) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 176.092) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 176.092) GENERATE: START GROUNDING (impose_constraints)
( 176.404) GENERATE: DONE GROUNDING (impose_constraints)
( 176.404) LOOP: DONE IMPOSING CONSTRAINTS
( 176.404) LOOP: START GENERATING (program 800)
( 176.404) GENERATE: START SOLVING
( 176.447) GENERATE: DONE SOLVING
( 176.448) LOOP: DONE GENERATING (program 800)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_succ(A,C,B),c_1(D).
( 176.448) LOOP: START TESTING
( 176.450) LOOP: DONE TESTING ('some', 'none')
( 176.450) LOOP: START IMPOSING CONSTRAINTS
( 176.450) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 176.450) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 176.450) GENERATE: START GROUNDING (impose_constraints)
( 176.769) GENERATE: DONE GROUNDING (impose_constraints)
( 176.769) LOOP: DONE IMPOSING CONSTRAINTS
( 176.769) LOOP: START GENERATING (program 801)
( 176.769) GENERATE: START SOLVING
( 176.817) GENERATE: DONE SOLVING
( 176.818) LOOP: DONE GENERATING (program 801)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_1(D),c_0(C).
( 176.818) LOOP: START TESTING
( 176.821) LOOP: DONE TESTING ('some', 'some')
( 176.821) LOOP: START IMPOSING CONSTRAINTS
( 176.821) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 176.821) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,c_1,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 176.821) GENERATE: START GROUNDING (impose_constraints)
( 177.161) GENERATE: DONE GROUNDING (impose_constraints)
( 177.161) LOOP: DONE IMPOSING CONSTRAINTS
( 177.161) LOOP: START GENERATING (program 802)
( 177.161) GENERATE: START SOLVING
( 177.216) GENERATE: DONE SOLVING
( 177.216) LOOP: DONE GENERATING (program 802)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_2(D),c_1(D).
( 177.216) LOOP: START TESTING
( 177.220) LOOP: DONE TESTING ('some', 'none')
( 177.220) LOOP: START IMPOSING CONSTRAINTS
( 177.220) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 177.220) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 177.220) GENERATE: START GROUNDING (impose_constraints)
( 177.534) GENERATE: DONE GROUNDING (impose_constraints)
( 177.534) LOOP: DONE IMPOSING CONSTRAINTS
( 177.534) LOOP: START GENERATING (program 803)
( 177.534) GENERATE: START SOLVING
( 177.581) GENERATE: DONE SOLVING
( 177.581) LOOP: DONE GENERATING (program 803)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_5(D),c_1(C).
( 177.581) LOOP: START TESTING
( 177.584) LOOP: DONE TESTING ('some', 'none')
( 177.584) LOOP: START IMPOSING CONSTRAINTS
( 177.584) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 177.584) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 177.584) GENERATE: START GROUNDING (impose_constraints)
( 177.900) GENERATE: DONE GROUNDING (impose_constraints)
( 177.900) LOOP: DONE IMPOSING CONSTRAINTS
( 177.900) LOOP: START GENERATING (program 804)
( 177.900) GENERATE: START SOLVING
( 177.942) GENERATE: DONE SOLVING
( 177.942) LOOP: DONE GENERATING (program 804)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_5(D),my_succ(A,C,B),c_4(B).
( 177.942) LOOP: START TESTING
( 177.945) LOOP: DONE TESTING ('some', 'none')
( 177.945) LOOP: START IMPOSING CONSTRAINTS
( 177.945) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 177.945) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 177.945) GENERATE: START GROUNDING (impose_constraints)
( 178.275) GENERATE: DONE GROUNDING (impose_constraints)
( 178.275) LOOP: DONE IMPOSING CONSTRAINTS
( 178.275) LOOP: START GENERATING (program 805)
( 178.275) GENERATE: START SOLVING
( 178.320) GENERATE: DONE SOLVING
( 178.320) LOOP: DONE GENERATING (program 805)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_0(B),my_succ(A,C,B),c_5(D).
( 178.320) LOOP: START TESTING
( 178.323) LOOP: DONE TESTING ('some', 'none')
( 178.323) LOOP: START IMPOSING CONSTRAINTS
( 178.323) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 178.323) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 178.323) GENERATE: START GROUNDING (impose_constraints)
( 178.651) GENERATE: DONE GROUNDING (impose_constraints)
( 178.651) LOOP: DONE IMPOSING CONSTRAINTS
( 178.651) LOOP: START GENERATING (program 806)
( 178.651) GENERATE: START SOLVING
( 178.693) GENERATE: DONE SOLVING
( 178.693) LOOP: DONE GENERATING (program 806)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_5(D),c_3(B),my_succ(A,C,B).
( 178.693) LOOP: START TESTING
( 178.696) LOOP: DONE TESTING ('some', 'none')
( 178.696) LOOP: START IMPOSING CONSTRAINTS
( 178.696) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 178.696) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 178.696) GENERATE: START GROUNDING (impose_constraints)
( 179.019) GENERATE: DONE GROUNDING (impose_constraints)
( 179.019) LOOP: DONE IMPOSING CONSTRAINTS
( 179.019) LOOP: START GENERATING (program 807)
( 179.019) GENERATE: START SOLVING
( 179.063) GENERATE: DONE SOLVING
( 179.064) LOOP: DONE GENERATING (program 807)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_1(B),my_succ(A,C,B),c_5(D).
( 179.064) LOOP: START TESTING
( 179.066) LOOP: DONE TESTING ('some', 'none')
( 179.066) LOOP: START IMPOSING CONSTRAINTS
( 179.066) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 179.066) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 179.067) GENERATE: START GROUNDING (impose_constraints)
( 179.392) GENERATE: DONE GROUNDING (impose_constraints)
( 179.392) LOOP: DONE IMPOSING CONSTRAINTS
( 179.392) LOOP: START GENERATING (program 808)
( 179.392) GENERATE: START SOLVING
( 179.434) GENERATE: DONE SOLVING
( 179.434) LOOP: DONE GENERATING (program 808)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_2(B),my_succ(A,C,B),c_5(D).
( 179.434) LOOP: START TESTING
( 179.437) LOOP: DONE TESTING ('some', 'none')
( 179.437) LOOP: START IMPOSING CONSTRAINTS
( 179.437) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 179.437) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 179.437) GENERATE: START GROUNDING (impose_constraints)
( 179.761) GENERATE: DONE GROUNDING (impose_constraints)
( 179.761) LOOP: DONE IMPOSING CONSTRAINTS
( 179.761) LOOP: START GENERATING (program 809)
( 179.761) GENERATE: START SOLVING
( 179.804) GENERATE: DONE SOLVING
( 179.804) LOOP: DONE GENERATING (program 809)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_succ(A,C,B),c_5(D).
( 179.804) LOOP: START TESTING
( 179.807) LOOP: DONE TESTING ('some', 'some')
( 179.807) LOOP: START IMPOSING CONSTRAINTS
( 179.807) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 179.807) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 179.807) GENERATE: START GROUNDING (impose_constraints)
( 180.131) GENERATE: DONE GROUNDING (impose_constraints)
( 180.131) LOOP: DONE IMPOSING CONSTRAINTS
( 180.131) LOOP: START GENERATING (program 810)
( 180.131) GENERATE: START SOLVING
( 180.174) GENERATE: DONE SOLVING
( 180.175) LOOP: DONE GENERATING (program 810)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_5(D),c_1(D).
( 180.175) LOOP: START TESTING
( 180.177) LOOP: DONE TESTING ('some', 'none')
( 180.177) LOOP: START IMPOSING CONSTRAINTS
( 180.177) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 180.177) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 180.177) GENERATE: START GROUNDING (impose_constraints)
( 180.501) GENERATE: DONE GROUNDING (impose_constraints)
( 180.501) LOOP: DONE IMPOSING CONSTRAINTS
( 180.501) LOOP: START GENERATING (program 811)
( 180.501) GENERATE: START SOLVING
( 180.676) GENERATE: DONE SOLVING
( 180.676) LOOP: DONE GENERATING (program 811)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
( 180.676) LOOP: START TESTING
( 180.679) LOOP: DONE TESTING ('some', 'some')
( 180.679) LOOP: START IMPOSING CONSTRAINTS
( 180.679) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 180.679) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 180.679) GENERATE: START GROUNDING (impose_constraints)
( 180.997) GENERATE: DONE GROUNDING (impose_constraints)
( 180.997) LOOP: DONE IMPOSING CONSTRAINTS
( 180.997) LOOP: START GENERATING (program 812)
( 180.997) GENERATE: START SOLVING
( 181.252) GENERATE: DONE SOLVING
( 181.252) LOOP: DONE GENERATING (program 812)
PROGRAM:
  next_value(A,B) :- c_noop(D),c_player(C),does(A,C,D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 181.252) LOOP: START TESTING
( 181.255) LOOP: DONE TESTING ('some', 'some')
( 181.255) LOOP: START IMPOSING CONSTRAINTS
( 181.255) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 181.255) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 181.255) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_noop,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 181.255) GENERATE: START GROUNDING (impose_constraints)
( 181.579) GENERATE: DONE GROUNDING (impose_constraints)
( 181.579) LOOP: DONE IMPOSING CONSTRAINTS
( 181.579) LOOP: START GENERATING (program 813)
( 181.579) GENERATE: START SOLVING
( 181.640) GENERATE: DONE SOLVING
( 181.641) LOOP: DONE GENERATING (program 813)
PROGRAM:
  next_value(A,B) :- c_5(B),c_pressButton(D),c_player(C),does(A,C,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 181.641) LOOP: START TESTING
( 181.643) LOOP: DONE TESTING ('some', 'none')
( 181.643) LOOP: START IMPOSING CONSTRAINTS
( 181.643) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 181.644) GENERATE: START GROUNDING (impose_constraints)
( 181.966) GENERATE: DONE GROUNDING (impose_constraints)
( 181.966) LOOP: DONE IMPOSING CONSTRAINTS
( 181.966) LOOP: START GENERATING (program 814)
( 181.966) GENERATE: START SOLVING
( 182.010) GENERATE: DONE SOLVING
( 182.011) LOOP: DONE GENERATING (program 814)
PROGRAM:
  next_value(A,B) :- c_pressButton(D),c_player(C),does(A,C,D),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 182.011) LOOP: START TESTING
( 182.014) LOOP: DONE TESTING ('some', 'some')
( 182.014) LOOP: START IMPOSING CONSTRAINTS
( 182.014) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 182.014) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_pressButton,1,(ClId0V3,)),body_literal(ClId0,c_player,1,(ClId0V2,)),body_literal(ClId0,does,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 182.014) GENERATE: START GROUNDING (impose_constraints)
( 182.346) GENERATE: DONE GROUNDING (impose_constraints)
( 182.346) LOOP: DONE IMPOSING CONSTRAINTS
( 182.346) LOOP: START GENERATING (program 815)
( 182.346) GENERATE: START SOLVING
( 182.791) GENERATE: DONE SOLVING
( 182.791) LOOP: DONE GENERATING (program 815)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
( 182.791) LOOP: START TESTING
( 182.794) LOOP: DONE TESTING ('some', 'none')
( 182.794) LOOP: START IMPOSING CONSTRAINTS
( 182.794) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 182.794) GENERATE: START GROUNDING (impose_constraints)
( 183.124) GENERATE: DONE GROUNDING (impose_constraints)
( 183.124) LOOP: DONE IMPOSING CONSTRAINTS
( 183.124) LOOP: START GENERATING (program 816)
( 183.124) GENERATE: START SOLVING
( 183.258) GENERATE: DONE SOLVING
( 183.259) LOOP: DONE GENERATING (program 816)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
( 183.259) LOOP: START TESTING
( 183.261) LOOP: DONE TESTING ('some', 'some')
( 183.261) LOOP: START IMPOSING CONSTRAINTS
( 183.261) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 183.261) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 183.262) GENERATE: START GROUNDING (impose_constraints)
( 183.587) GENERATE: DONE GROUNDING (impose_constraints)
( 183.587) LOOP: DONE IMPOSING CONSTRAINTS
( 183.587) LOOP: START GENERATING (program 817)
( 183.587) GENERATE: START SOLVING
( 183.684) GENERATE: DONE SOLVING
( 183.685) LOOP: DONE GENERATING (program 817)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
( 183.685) LOOP: START TESTING
( 183.688) LOOP: DONE TESTING ('some', 'some')
( 183.688) LOOP: START IMPOSING CONSTRAINTS
( 183.688) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 183.688) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 183.688) GENERATE: START GROUNDING (impose_constraints)
( 184.013) GENERATE: DONE GROUNDING (impose_constraints)
( 184.013) LOOP: DONE IMPOSING CONSTRAINTS
( 184.013) LOOP: START GENERATING (program 818)
( 184.013) GENERATE: START SOLVING
( 184.221) GENERATE: DONE SOLVING
( 184.221) LOOP: DONE GENERATING (program 818)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 184.221) LOOP: START TESTING
( 184.224) LOOP: DONE TESTING ('some', 'some')
( 184.224) LOOP: START IMPOSING CONSTRAINTS
( 184.224) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 184.224) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 184.224) GENERATE: START GROUNDING (impose_constraints)
( 184.557) GENERATE: DONE GROUNDING (impose_constraints)
( 184.557) LOOP: DONE IMPOSING CONSTRAINTS
( 184.557) LOOP: START GENERATING (program 819)
( 184.557) GENERATE: START SOLVING
( 184.885) GENERATE: DONE SOLVING
( 184.886) LOOP: DONE GENERATING (program 819)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 184.886) LOOP: START TESTING
( 184.888) LOOP: DONE TESTING ('some', 'some')
( 184.888) LOOP: START IMPOSING CONSTRAINTS
( 184.889) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 184.889) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 184.889) GENERATE: START GROUNDING (impose_constraints)
( 185.208) GENERATE: DONE GROUNDING (impose_constraints)
( 185.208) LOOP: DONE IMPOSING CONSTRAINTS
( 185.208) LOOP: START GENERATING (program 820)
( 185.208) GENERATE: START SOLVING
( 185.279) GENERATE: DONE SOLVING
( 185.280) LOOP: DONE GENERATING (program 820)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_2(D),c_5(C),my_true_value(A,B).
( 185.280) LOOP: START TESTING
( 185.282) LOOP: DONE TESTING ('some', 'none')
( 185.282) LOOP: START IMPOSING CONSTRAINTS
( 185.282) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 185.282) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 185.283) GENERATE: START GROUNDING (impose_constraints)
( 185.614) GENERATE: DONE GROUNDING (impose_constraints)
( 185.615) LOOP: DONE IMPOSING CONSTRAINTS
( 185.615) LOOP: START GENERATING (program 821)
( 185.615) GENERATE: START SOLVING
( 185.863) GENERATE: DONE SOLVING
( 185.864) LOOP: DONE GENERATING (program 821)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 185.864) LOOP: START TESTING
( 185.867) LOOP: DONE TESTING ('some', 'some')
( 185.867) LOOP: START IMPOSING CONSTRAINTS
( 185.867) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 185.867) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 185.867) GENERATE: START GROUNDING (impose_constraints)
( 186.193) GENERATE: DONE GROUNDING (impose_constraints)
( 186.193) LOOP: DONE IMPOSING CONSTRAINTS
( 186.193) LOOP: START GENERATING (program 822)
( 186.193) GENERATE: START SOLVING
( 186.326) GENERATE: DONE SOLVING
( 186.326) LOOP: DONE GENERATING (program 822)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,B,D),c_2(C).
( 186.327) LOOP: START TESTING
( 186.329) LOOP: DONE TESTING ('some', 'some')
( 186.329) LOOP: START IMPOSING CONSTRAINTS
( 186.329) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 186.329) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 186.329) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 186.330) GENERATE: START GROUNDING (impose_constraints)
( 186.664) GENERATE: DONE GROUNDING (impose_constraints)
( 186.664) LOOP: DONE IMPOSING CONSTRAINTS
( 186.664) LOOP: START GENERATING (program 823)
( 186.664) GENERATE: START SOLVING
( 187.480) GENERATE: DONE SOLVING
( 187.481) LOOP: DONE GENERATING (program 823)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(C),my_true_value(A,C),my_true_value(A,D),my_succ(A,B,D).
( 187.481) LOOP: START TESTING
( 187.483) LOOP: DONE TESTING ('some', 'none')
( 187.483) LOOP: START IMPOSING CONSTRAINTS
( 187.484) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 187.484) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 187.484) GENERATE: START GROUNDING (impose_constraints)
( 187.810) GENERATE: DONE GROUNDING (impose_constraints)
( 187.810) LOOP: DONE IMPOSING CONSTRAINTS
( 187.810) LOOP: START GENERATING (program 824)
( 187.810) GENERATE: START SOLVING
( 187.940) GENERATE: DONE SOLVING
( 187.941) LOOP: DONE GENERATING (program 824)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,B,D),c_1(C).
( 187.941) LOOP: START TESTING
( 187.943) LOOP: DONE TESTING ('some', 'none')
( 187.943) LOOP: START IMPOSING CONSTRAINTS
( 187.943) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 187.943) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 187.944) GENERATE: START GROUNDING (impose_constraints)
( 188.278) GENERATE: DONE GROUNDING (impose_constraints)
( 188.278) LOOP: DONE IMPOSING CONSTRAINTS
( 188.278) LOOP: START GENERATING (program 825)
( 188.278) GENERATE: START SOLVING
( 188.731) GENERATE: DONE SOLVING
( 188.731) LOOP: DONE GENERATING (program 825)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,B,D),c_1(C),c_4(B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 188.731) LOOP: START TESTING
( 188.734) LOOP: DONE TESTING ('some', 'none')
( 188.734) LOOP: START IMPOSING CONSTRAINTS
( 188.734) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 188.734) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 188.734) GENERATE: START GROUNDING (impose_constraints)
( 189.057) GENERATE: DONE GROUNDING (impose_constraints)
( 189.057) LOOP: DONE IMPOSING CONSTRAINTS
( 189.057) LOOP: START GENERATING (program 826)
( 189.057) GENERATE: START SOLVING
( 189.585) GENERATE: DONE SOLVING
( 189.585) LOOP: DONE GENERATING (program 826)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),c_2(D),my_succ(A,B,D),c_4(C).
( 189.585) LOOP: START TESTING
( 189.588) LOOP: DONE TESTING ('some', 'some')
( 189.588) LOOP: START IMPOSING CONSTRAINTS
( 189.588) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 189.588) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 189.588) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 189.589) GENERATE: START GROUNDING (impose_constraints)
( 189.928) GENERATE: DONE GROUNDING (impose_constraints)
( 189.928) LOOP: DONE IMPOSING CONSTRAINTS
( 189.928) LOOP: START GENERATING (program 827)
( 189.928) GENERATE: START SOLVING
( 190.039) GENERATE: DONE SOLVING
( 190.040) LOOP: DONE GENERATING (program 827)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 190.040) LOOP: START TESTING
( 190.043) LOOP: DONE TESTING ('some', 'some')
( 190.043) LOOP: START IMPOSING CONSTRAINTS
( 190.043) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 190.043) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 190.043) GENERATE: START GROUNDING (impose_constraints)
( 190.402) GENERATE: DONE GROUNDING (impose_constraints)
( 190.402) LOOP: DONE IMPOSING CONSTRAINTS
( 190.402) LOOP: START GENERATING (program 828)
( 190.402) GENERATE: START SOLVING
( 190.626) GENERATE: DONE SOLVING
( 190.627) LOOP: DONE GENERATING (program 828)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 190.627) LOOP: START TESTING
( 190.630) LOOP: DONE TESTING ('some', 'some')
( 190.630) LOOP: START IMPOSING CONSTRAINTS
( 190.630) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 190.630) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 190.630) GENERATE: START GROUNDING (impose_constraints)
( 190.981) GENERATE: DONE GROUNDING (impose_constraints)
( 190.981) LOOP: DONE IMPOSING CONSTRAINTS
( 190.981) LOOP: START GENERATING (program 829)
( 190.981) GENERATE: START SOLVING
( 191.224) GENERATE: DONE SOLVING
( 191.224) LOOP: DONE GENERATING (program 829)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_5(B),my_succ(A,D,C),c_1(D).
( 191.224) LOOP: START TESTING
( 191.227) LOOP: DONE TESTING ('some', 'none')
( 191.227) LOOP: START IMPOSING CONSTRAINTS
( 191.227) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 191.227) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 191.227) GENERATE: START GROUNDING (impose_constraints)
( 191.586) GENERATE: DONE GROUNDING (impose_constraints)
( 191.586) LOOP: DONE IMPOSING CONSTRAINTS
( 191.586) LOOP: START GENERATING (program 830)
( 191.586) GENERATE: START SOLVING
( 191.814) GENERATE: DONE SOLVING
( 191.814) LOOP: DONE GENERATING (program 830)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(B),c_0(C),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 191.814) LOOP: START TESTING
( 191.817) LOOP: DONE TESTING ('some', 'none')
( 191.817) LOOP: START IMPOSING CONSTRAINTS
( 191.817) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 191.817) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 191.817) GENERATE: START GROUNDING (impose_constraints)
( 192.154) GENERATE: DONE GROUNDING (impose_constraints)
( 192.154) LOOP: DONE IMPOSING CONSTRAINTS
( 192.154) LOOP: START GENERATING (program 831)
( 192.154) GENERATE: START SOLVING
( 193.022) GENERATE: DONE SOLVING
( 193.023) LOOP: DONE GENERATING (program 831)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
( 193.023) LOOP: START TESTING
( 193.025) LOOP: DONE TESTING ('some', 'some')
( 193.025) LOOP: START IMPOSING CONSTRAINTS
( 193.025) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 193.026) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 193.026) GENERATE: START GROUNDING (impose_constraints)
( 193.361) GENERATE: DONE GROUNDING (impose_constraints)
( 193.361) LOOP: DONE IMPOSING CONSTRAINTS
( 193.361) LOOP: START GENERATING (program 832)
( 193.361) GENERATE: START SOLVING
( 193.794) GENERATE: DONE SOLVING
( 193.795) LOOP: DONE GENERATING (program 832)
PROGRAM:
  next_value(A,B) :- c_0(D),my_true_value(A,C),c_0(C),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 193.795) LOOP: START TESTING
( 193.798) LOOP: DONE TESTING ('some', 'some')
( 193.798) LOOP: START IMPOSING CONSTRAINTS
( 193.798) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 193.798) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 193.798) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 193.798) GENERATE: START GROUNDING (impose_constraints)
( 194.127) GENERATE: DONE GROUNDING (impose_constraints)
( 194.127) LOOP: DONE IMPOSING CONSTRAINTS
( 194.127) LOOP: START GENERATING (program 833)
( 194.127) GENERATE: START SOLVING
( 194.241) GENERATE: DONE SOLVING
( 194.242) LOOP: DONE GENERATING (program 833)
PROGRAM:
  next_value(A,B) :- c_0(D),my_true_value(A,C),c_5(C),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 194.242) LOOP: START TESTING
( 194.244) LOOP: DONE TESTING ('some', 'some')
( 194.244) LOOP: START IMPOSING CONSTRAINTS
( 194.244) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 194.244) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 194.244) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 194.245) GENERATE: START GROUNDING (impose_constraints)
( 194.582) GENERATE: DONE GROUNDING (impose_constraints)
( 194.582) LOOP: DONE IMPOSING CONSTRAINTS
( 194.582) LOOP: START GENERATING (program 834)
( 194.582) GENERATE: START SOLVING
( 194.901) GENERATE: DONE SOLVING
( 194.902) LOOP: DONE GENERATING (program 834)
PROGRAM:
  next_value(A,B) :- c_2(B),c_3(D),my_succ(A,C,B),my_succ(A,D,C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 194.902) LOOP: START TESTING
( 194.904) LOOP: DONE TESTING ('some', 'none')
( 194.904) LOOP: START IMPOSING CONSTRAINTS
( 194.904) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 194.904) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 194.905) GENERATE: START GROUNDING (impose_constraints)
( 195.248) GENERATE: DONE GROUNDING (impose_constraints)
( 195.248) LOOP: DONE IMPOSING CONSTRAINTS
( 195.248) LOOP: START GENERATING (program 835)
( 195.248) GENERATE: START SOLVING
( 195.304) GENERATE: DONE SOLVING
( 195.305) LOOP: DONE GENERATING (program 835)
PROGRAM:
  next_value(A,B) :- c_1(B),c_3(D),my_succ(A,C,B),my_succ(A,D,C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 195.305) LOOP: START TESTING
( 195.307) LOOP: DONE TESTING ('some', 'none')
( 195.307) LOOP: START IMPOSING CONSTRAINTS
( 195.307) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 195.307) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 195.307) GENERATE: START GROUNDING (impose_constraints)
( 195.645) GENERATE: DONE GROUNDING (impose_constraints)
( 195.645) LOOP: DONE IMPOSING CONSTRAINTS
( 195.645) LOOP: START GENERATING (program 836)
( 195.645) GENERATE: START SOLVING
( 195.696) GENERATE: DONE SOLVING
( 195.696) LOOP: DONE GENERATING (program 836)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,C,B),my_succ(A,D,C),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 195.696) LOOP: START TESTING
( 195.699) LOOP: DONE TESTING ('some', 'some')
( 195.699) LOOP: START IMPOSING CONSTRAINTS
( 195.699) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 195.699) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 195.699) GENERATE: START GROUNDING (impose_constraints)
( 196.043) GENERATE: DONE GROUNDING (impose_constraints)
( 196.043) LOOP: DONE IMPOSING CONSTRAINTS
( 196.043) LOOP: START GENERATING (program 837)
( 196.043) GENERATE: START SOLVING
( 196.091) GENERATE: DONE SOLVING
( 196.091) LOOP: DONE GENERATING (program 837)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,C,B),my_succ(A,D,C),c_1(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 196.091) LOOP: START TESTING
( 196.094) LOOP: DONE TESTING ('some', 'none')
( 196.094) LOOP: START IMPOSING CONSTRAINTS
( 196.094) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 196.094) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 196.094) GENERATE: START GROUNDING (impose_constraints)
( 196.444) GENERATE: DONE GROUNDING (impose_constraints)
( 196.444) LOOP: DONE IMPOSING CONSTRAINTS
( 196.444) LOOP: START GENERATING (program 838)
( 196.444) GENERATE: START SOLVING
( 196.494) GENERATE: DONE SOLVING
( 196.494) LOOP: DONE GENERATING (program 838)
PROGRAM:
  next_value(A,B) :- c_3(D),c_5(B),my_succ(A,C,B),my_succ(A,D,C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 196.494) LOOP: START TESTING
( 196.497) LOOP: DONE TESTING ('some', 'some')
( 196.497) LOOP: START IMPOSING CONSTRAINTS
( 196.497) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 196.497) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 196.498) GENERATE: START GROUNDING (impose_constraints)
( 196.857) GENERATE: DONE GROUNDING (impose_constraints)
( 196.857) LOOP: DONE IMPOSING CONSTRAINTS
( 196.857) LOOP: START GENERATING (program 839)
( 196.857) GENERATE: START SOLVING
( 196.919) GENERATE: DONE SOLVING
( 196.920) LOOP: DONE GENERATING (program 839)
PROGRAM:
  next_value(A,B) :- c_0(D),c_2(B),my_succ(A,C,B),my_succ(A,D,C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 196.920) LOOP: START TESTING
( 196.923) LOOP: DONE TESTING ('some', 'some')
( 196.923) LOOP: START IMPOSING CONSTRAINTS
( 196.923) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 196.923) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 196.923) GENERATE: START GROUNDING (impose_constraints)
( 197.275) GENERATE: DONE GROUNDING (impose_constraints)
( 197.275) LOOP: DONE IMPOSING CONSTRAINTS
( 197.275) LOOP: START GENERATING (program 840)
( 197.275) GENERATE: START SOLVING
( 197.324) GENERATE: DONE SOLVING
( 197.325) LOOP: DONE GENERATING (program 840)
PROGRAM:
  next_value(A,B) :- c_0(D),c_1(B),my_succ(A,C,B),my_succ(A,D,C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 197.325) LOOP: START TESTING
( 197.327) LOOP: DONE TESTING ('some', 'none')
( 197.327) LOOP: START IMPOSING CONSTRAINTS
( 197.327) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 197.327) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 197.328) GENERATE: START GROUNDING (impose_constraints)
( 197.669) GENERATE: DONE GROUNDING (impose_constraints)
( 197.669) LOOP: DONE IMPOSING CONSTRAINTS
( 197.669) LOOP: START GENERATING (program 841)
( 197.669) GENERATE: START SOLVING
( 197.715) GENERATE: DONE SOLVING
( 197.715) LOOP: DONE GENERATING (program 841)
PROGRAM:
  next_value(A,B) :- c_0(D),my_succ(A,C,B),my_succ(A,D,C),c_1(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 197.715) LOOP: START TESTING
( 197.718) LOOP: DONE TESTING ('some', 'some')
( 197.718) LOOP: START IMPOSING CONSTRAINTS
( 197.718) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 197.718) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 197.718) GENERATE: START GROUNDING (impose_constraints)
( 198.079) GENERATE: DONE GROUNDING (impose_constraints)
( 198.079) LOOP: DONE IMPOSING CONSTRAINTS
( 198.079) LOOP: START GENERATING (program 842)
( 198.079) GENERATE: START SOLVING
( 199.374) GENERATE: DONE SOLVING
( 199.374) LOOP: DONE GENERATING (program 842)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
( 199.375) LOOP: START TESTING
( 199.377) LOOP: DONE TESTING ('some', 'none')
( 199.377) LOOP: START IMPOSING CONSTRAINTS
( 199.377) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 199.377) GENERATE: START GROUNDING (impose_constraints)
( 199.719) GENERATE: DONE GROUNDING (impose_constraints)
( 199.719) LOOP: DONE IMPOSING CONSTRAINTS
( 199.719) LOOP: START GENERATING (program 843)
( 199.719) GENERATE: START SOLVING
( 199.861) GENERATE: DONE SOLVING
( 199.862) LOOP: DONE GENERATING (program 843)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 199.862) LOOP: START TESTING
( 199.864) LOOP: DONE TESTING ('some', 'some')
( 199.864) LOOP: START IMPOSING CONSTRAINTS
( 199.864) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 199.864) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 199.864) GENERATE: START GROUNDING (impose_constraints)
( 200.216) GENERATE: DONE GROUNDING (impose_constraints)
( 200.216) LOOP: DONE IMPOSING CONSTRAINTS
( 200.216) LOOP: START GENERATING (program 844)
( 200.216) GENERATE: START SOLVING
( 200.286) GENERATE: DONE SOLVING
( 200.286) LOOP: DONE GENERATING (program 844)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 200.286) LOOP: START TESTING
( 200.289) LOOP: DONE TESTING ('some', 'some')
( 200.289) LOOP: START IMPOSING CONSTRAINTS
( 200.289) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 200.289) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 200.289) GENERATE: START GROUNDING (impose_constraints)
( 200.637) GENERATE: DONE GROUNDING (impose_constraints)
( 200.637) LOOP: DONE IMPOSING CONSTRAINTS
( 200.637) LOOP: START GENERATING (program 845)
( 200.637) GENERATE: START SOLVING
( 200.706) GENERATE: DONE SOLVING
( 200.706) LOOP: DONE GENERATING (program 845)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 200.706) LOOP: START TESTING
( 200.709) LOOP: DONE TESTING ('some', 'some')
( 200.709) LOOP: START IMPOSING CONSTRAINTS
( 200.709) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 200.709) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 200.709) GENERATE: START GROUNDING (impose_constraints)
( 201.064) GENERATE: DONE GROUNDING (impose_constraints)
( 201.064) LOOP: DONE IMPOSING CONSTRAINTS
( 201.064) LOOP: START GENERATING (program 846)
( 201.064) GENERATE: START SOLVING
( 201.461) GENERATE: DONE SOLVING
( 201.462) LOOP: DONE GENERATING (program 846)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_2(D),my_true_value(A,D),c_1(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 201.462) LOOP: START TESTING
( 201.464) LOOP: DONE TESTING ('some', 'some')
( 201.464) LOOP: START IMPOSING CONSTRAINTS
( 201.464) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 201.464) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 201.464) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 201.465) GENERATE: START GROUNDING (impose_constraints)
( 201.810) GENERATE: DONE GROUNDING (impose_constraints)
( 201.810) LOOP: DONE IMPOSING CONSTRAINTS
( 201.810) LOOP: START GENERATING (program 847)
( 201.810) GENERATE: START SOLVING
( 201.927) GENERATE: DONE SOLVING
( 201.927) LOOP: DONE GENERATING (program 847)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_5(D),my_true_value(A,D).
( 201.927) LOOP: START TESTING
( 201.930) LOOP: DONE TESTING ('some', 'none')
( 201.930) LOOP: START IMPOSING CONSTRAINTS
( 201.930) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 201.930) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 201.930) GENERATE: START GROUNDING (impose_constraints)
( 202.276) GENERATE: DONE GROUNDING (impose_constraints)
( 202.276) LOOP: DONE IMPOSING CONSTRAINTS
( 202.276) LOOP: START GENERATING (program 848)
( 202.276) GENERATE: START SOLVING
( 202.491) GENERATE: DONE SOLVING
( 202.491) LOOP: DONE GENERATING (program 848)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
( 202.491) LOOP: START TESTING
( 202.494) LOOP: DONE TESTING ('some', 'none')
( 202.494) LOOP: START IMPOSING CONSTRAINTS
( 202.494) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 202.494) GENERATE: START GROUNDING (impose_constraints)
( 202.838) GENERATE: DONE GROUNDING (impose_constraints)
( 202.838) LOOP: DONE IMPOSING CONSTRAINTS
( 202.838) LOOP: START GENERATING (program 849)
( 202.838) GENERATE: START SOLVING
( 203.115) GENERATE: DONE SOLVING
( 203.116) LOOP: DONE GENERATING (program 849)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 203.116) LOOP: START TESTING
( 203.119) LOOP: DONE TESTING ('some', 'some')
( 203.119) LOOP: START IMPOSING CONSTRAINTS
( 203.119) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 203.119) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 203.119) GENERATE: START GROUNDING (impose_constraints)
( 203.469) GENERATE: DONE GROUNDING (impose_constraints)
( 203.469) LOOP: DONE IMPOSING CONSTRAINTS
( 203.469) LOOP: START GENERATING (program 850)
( 203.469) GENERATE: START SOLVING
( 203.934) GENERATE: DONE SOLVING
( 203.935) LOOP: DONE GENERATING (program 850)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,B),c_4(D),c_0(C).
( 203.935) LOOP: START TESTING
( 203.937) LOOP: DONE TESTING ('some', 'none')
( 203.937) LOOP: START IMPOSING CONSTRAINTS
( 203.937) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 203.937) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 203.938) GENERATE: START GROUNDING (impose_constraints)
( 204.283) GENERATE: DONE GROUNDING (impose_constraints)
( 204.283) LOOP: DONE IMPOSING CONSTRAINTS
( 204.283) LOOP: START GENERATING (program 851)
( 204.283) GENERATE: START SOLVING
( 204.401) GENERATE: DONE SOLVING
( 204.401) LOOP: DONE GENERATING (program 851)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_3(B),my_succ(A,B,D),c_2(C).
( 204.401) LOOP: START TESTING
( 204.404) LOOP: DONE TESTING ('some', 'none')
( 204.404) LOOP: START IMPOSING CONSTRAINTS
( 204.404) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 204.404) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 204.404) GENERATE: START GROUNDING (impose_constraints)
( 204.748) GENERATE: DONE GROUNDING (impose_constraints)
( 204.748) LOOP: DONE IMPOSING CONSTRAINTS
( 204.748) LOOP: START GENERATING (program 852)
( 204.748) GENERATE: START SOLVING
( 204.807) GENERATE: DONE SOLVING
( 204.807) LOOP: DONE GENERATING (program 852)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,B,D),c_2(C),c_4(B).
( 204.807) LOOP: START TESTING
( 204.810) LOOP: DONE TESTING ('some', 'none')
( 204.810) LOOP: START IMPOSING CONSTRAINTS
( 204.810) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 204.810) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 204.810) GENERATE: START GROUNDING (impose_constraints)
( 205.159) GENERATE: DONE GROUNDING (impose_constraints)
( 205.159) LOOP: DONE IMPOSING CONSTRAINTS
( 205.159) LOOP: START GENERATING (program 853)
( 205.159) GENERATE: START SOLVING
( 205.206) GENERATE: DONE SOLVING
( 205.206) LOOP: DONE GENERATING (program 853)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_0(B),c_2(C),my_succ(A,B,D).
( 205.206) LOOP: START TESTING
( 205.209) LOOP: DONE TESTING ('some', 'none')
( 205.209) LOOP: START IMPOSING CONSTRAINTS
( 205.209) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 205.209) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 205.209) GENERATE: START GROUNDING (impose_constraints)
( 205.553) GENERATE: DONE GROUNDING (impose_constraints)
( 205.553) LOOP: DONE IMPOSING CONSTRAINTS
( 205.553) LOOP: START GENERATING (program 854)
( 205.553) GENERATE: START SOLVING
( 205.601) GENERATE: DONE SOLVING
( 205.601) LOOP: DONE GENERATING (program 854)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_2(C),my_succ(A,B,D).
( 205.601) LOOP: START TESTING
( 205.604) LOOP: DONE TESTING ('some', 'some')
( 205.604) LOOP: START IMPOSING CONSTRAINTS
( 205.604) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 205.604) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 205.604) GENERATE: START GROUNDING (impose_constraints)
( 205.957) GENERATE: DONE GROUNDING (impose_constraints)
( 205.957) LOOP: DONE IMPOSING CONSTRAINTS
( 205.957) LOOP: START GENERATING (program 855)
( 205.957) GENERATE: START SOLVING
( 206.012) GENERATE: DONE SOLVING
( 206.012) LOOP: DONE GENERATING (program 855)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_2(C),my_succ(A,B,D).
( 206.012) LOOP: START TESTING
( 206.015) LOOP: DONE TESTING ('some', 'none')
( 206.015) LOOP: START IMPOSING CONSTRAINTS
( 206.015) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 206.015) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 206.015) GENERATE: START GROUNDING (impose_constraints)
( 206.364) GENERATE: DONE GROUNDING (impose_constraints)
( 206.364) LOOP: DONE IMPOSING CONSTRAINTS
( 206.364) LOOP: START GENERATING (program 856)
( 206.364) GENERATE: START SOLVING
( 206.414) GENERATE: DONE SOLVING
( 206.414) LOOP: DONE GENERATING (program 856)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_5(B),c_2(C),my_succ(A,B,D).
( 206.414) LOOP: START TESTING
( 206.417) LOOP: DONE TESTING ('some', 'none')
( 206.417) LOOP: START IMPOSING CONSTRAINTS
( 206.417) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 206.417) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 206.417) GENERATE: START GROUNDING (impose_constraints)
( 206.759) GENERATE: DONE GROUNDING (impose_constraints)
( 206.759) LOOP: DONE IMPOSING CONSTRAINTS
( 206.759) LOOP: START GENERATING (program 857)
( 206.759) GENERATE: START SOLVING
( 206.814) GENERATE: DONE SOLVING
( 206.814) LOOP: DONE GENERATING (program 857)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_3(B),c_4(D).
( 206.814) LOOP: START TESTING
( 206.817) LOOP: DONE TESTING ('some', 'none')
( 206.817) LOOP: START IMPOSING CONSTRAINTS
( 206.817) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 206.817) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 206.817) GENERATE: START GROUNDING (impose_constraints)
( 207.176) GENERATE: DONE GROUNDING (impose_constraints)
( 207.176) LOOP: DONE IMPOSING CONSTRAINTS
( 207.176) LOOP: START GENERATING (program 858)
( 207.176) GENERATE: START SOLVING
( 207.246) GENERATE: DONE SOLVING
( 207.247) LOOP: DONE GENERATING (program 858)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_2(C),my_true_value(A,B).
( 207.247) LOOP: START TESTING
( 207.249) LOOP: DONE TESTING ('some', 'none')
( 207.249) LOOP: START IMPOSING CONSTRAINTS
( 207.249) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 207.249) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 207.249) GENERATE: START GROUNDING (impose_constraints)
( 207.598) GENERATE: DONE GROUNDING (impose_constraints)
( 207.599) LOOP: DONE IMPOSING CONSTRAINTS
( 207.599) LOOP: START GENERATING (program 859)
( 207.599) GENERATE: START SOLVING
( 207.672) GENERATE: DONE SOLVING
( 207.672) LOOP: DONE GENERATING (program 859)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_4(D),c_4(B).
( 207.672) LOOP: START TESTING
( 207.675) LOOP: DONE TESTING ('some', 'none')
( 207.675) LOOP: START IMPOSING CONSTRAINTS
( 207.675) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 207.675) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 207.675) GENERATE: START GROUNDING (impose_constraints)
( 208.026) GENERATE: DONE GROUNDING (impose_constraints)
( 208.026) LOOP: DONE IMPOSING CONSTRAINTS
( 208.026) LOOP: START GENERATING (program 860)
( 208.026) GENERATE: START SOLVING
( 208.550) GENERATE: DONE SOLVING
( 208.550) LOOP: DONE GENERATING (program 860)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_1(B),c_4(D).
( 208.550) LOOP: START TESTING
( 208.553) LOOP: DONE TESTING ('some', 'none')
( 208.553) LOOP: START IMPOSING CONSTRAINTS
( 208.553) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 208.553) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 208.553) GENERATE: START GROUNDING (impose_constraints)
( 208.909) GENERATE: DONE GROUNDING (impose_constraints)
( 208.909) LOOP: DONE IMPOSING CONSTRAINTS
( 208.909) LOOP: START GENERATING (program 861)
( 208.909) GENERATE: START SOLVING
( 208.960) GENERATE: DONE SOLVING
( 208.960) LOOP: DONE GENERATING (program 861)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_2(B),c_4(D).
( 208.960) LOOP: START TESTING
( 208.963) LOOP: DONE TESTING ('some', 'some')
( 208.963) LOOP: START IMPOSING CONSTRAINTS
( 208.963) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 208.963) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,c_4,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 208.963) GENERATE: START GROUNDING (impose_constraints)
( 209.322) GENERATE: DONE GROUNDING (impose_constraints)
( 209.322) LOOP: DONE IMPOSING CONSTRAINTS
( 209.322) LOOP: START GENERATING (program 862)
( 209.322) GENERATE: START SOLVING
( 209.373) GENERATE: DONE SOLVING
( 209.374) LOOP: DONE GENERATING (program 862)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_5(B),c_4(D).
( 209.374) LOOP: START TESTING
( 209.376) LOOP: DONE TESTING ('some', 'none')
( 209.376) LOOP: START IMPOSING CONSTRAINTS
( 209.376) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 209.376) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 209.376) GENERATE: START GROUNDING (impose_constraints)
( 209.734) GENERATE: DONE GROUNDING (impose_constraints)
( 209.734) LOOP: DONE IMPOSING CONSTRAINTS
( 209.734) LOOP: START GENERATING (program 863)
( 209.734) GENERATE: START SOLVING
( 209.787) GENERATE: DONE SOLVING
( 209.788) LOOP: DONE GENERATING (program 863)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_1(C),my_succ(A,B,D).
( 209.788) LOOP: START TESTING
( 209.791) LOOP: DONE TESTING ('some', 'some')
( 209.791) LOOP: START IMPOSING CONSTRAINTS
( 209.791) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 209.791) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 209.791) GENERATE: START GROUNDING (impose_constraints)
( 210.155) GENERATE: DONE GROUNDING (impose_constraints)
( 210.155) LOOP: DONE IMPOSING CONSTRAINTS
( 210.155) LOOP: START GENERATING (program 864)
( 210.155) GENERATE: START SOLVING
( 210.210) GENERATE: DONE SOLVING
( 210.211) LOOP: DONE GENERATING (program 864)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_1(C),my_succ(A,B,D).
( 210.211) LOOP: START TESTING
( 210.213) LOOP: DONE TESTING ('some', 'none')
( 210.213) LOOP: START IMPOSING CONSTRAINTS
( 210.213) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 210.213) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 210.214) GENERATE: START GROUNDING (impose_constraints)
( 210.576) GENERATE: DONE GROUNDING (impose_constraints)
( 210.576) LOOP: DONE IMPOSING CONSTRAINTS
( 210.576) LOOP: START GENERATING (program 865)
( 210.576) GENERATE: START SOLVING
( 210.782) GENERATE: DONE SOLVING
( 210.782) LOOP: DONE GENERATING (program 865)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_2(D),my_true_value(A,B),c_4(C).
( 210.782) LOOP: START TESTING
( 210.785) LOOP: DONE TESTING ('some', 'none')
( 210.785) LOOP: START IMPOSING CONSTRAINTS
( 210.785) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 210.785) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 210.785) GENERATE: START GROUNDING (impose_constraints)
( 211.146) GENERATE: DONE GROUNDING (impose_constraints)
( 211.146) LOOP: DONE IMPOSING CONSTRAINTS
( 211.146) LOOP: START GENERATING (program 866)
( 211.146) GENERATE: START SOLVING
( 211.546) GENERATE: DONE SOLVING
( 211.546) LOOP: DONE GENERATING (program 866)
PROGRAM:
  next_value(A,B) :- c_1(C),my_true_value(A,C),c_1(D),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 211.546) LOOP: START TESTING
( 211.549) LOOP: DONE TESTING ('some', 'none')
( 211.549) LOOP: START IMPOSING CONSTRAINTS
( 211.549) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 211.549) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 211.549) GENERATE: START GROUNDING (impose_constraints)
( 211.905) GENERATE: DONE GROUNDING (impose_constraints)
( 211.905) LOOP: DONE IMPOSING CONSTRAINTS
( 211.905) LOOP: START GENERATING (program 867)
( 211.905) GENERATE: START SOLVING
( 212.007) GENERATE: DONE SOLVING
( 212.008) LOOP: DONE GENERATING (program 867)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,B),c_4(D),c_2(C).
( 212.008) LOOP: START TESTING
( 212.010) LOOP: DONE TESTING ('some', 'none')
( 212.010) LOOP: START IMPOSING CONSTRAINTS
( 212.010) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 212.010) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 212.011) GENERATE: START GROUNDING (impose_constraints)
( 212.363) GENERATE: DONE GROUNDING (impose_constraints)
( 212.363) LOOP: DONE IMPOSING CONSTRAINTS
( 212.363) LOOP: START GENERATING (program 868)
( 212.363) GENERATE: START SOLVING
( 212.413) GENERATE: DONE SOLVING
( 212.413) LOOP: DONE GENERATING (program 868)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_5(D),c_2(C),my_true_value(A,B).
( 212.413) LOOP: START TESTING
( 212.416) LOOP: DONE TESTING ('some', 'none')
( 212.416) LOOP: START IMPOSING CONSTRAINTS
( 212.416) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 212.416) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 212.416) GENERATE: START GROUNDING (impose_constraints)
( 212.771) GENERATE: DONE GROUNDING (impose_constraints)
( 212.771) LOOP: DONE IMPOSING CONSTRAINTS
( 212.771) LOOP: START GENERATING (program 869)
( 212.771) GENERATE: START SOLVING
( 212.821) GENERATE: DONE SOLVING
( 212.821) LOOP: DONE GENERATING (program 869)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_1(D),c_2(C),my_true_value(A,B).
( 212.822) LOOP: START TESTING
( 212.824) LOOP: DONE TESTING ('some', 'none')
( 212.824) LOOP: START IMPOSING CONSTRAINTS
( 212.824) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 212.824) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 212.824) GENERATE: START GROUNDING (impose_constraints)
( 213.178) GENERATE: DONE GROUNDING (impose_constraints)
( 213.178) LOOP: DONE IMPOSING CONSTRAINTS
( 213.178) LOOP: START GENERATING (program 870)
( 213.178) GENERATE: START SOLVING
( 213.229) GENERATE: DONE SOLVING
( 213.229) LOOP: DONE GENERATING (program 870)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_3(C),c_4(D),my_true_value(A,B).
( 213.229) LOOP: START TESTING
( 213.232) LOOP: DONE TESTING ('some', 'some')
( 213.232) LOOP: START IMPOSING CONSTRAINTS
( 213.232) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 213.232) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 213.232) GENERATE: START GROUNDING (impose_constraints)
( 213.585) GENERATE: DONE GROUNDING (impose_constraints)
( 213.585) LOOP: DONE IMPOSING CONSTRAINTS
( 213.585) LOOP: START GENERATING (program 871)
( 213.585) GENERATE: START SOLVING
( 213.633) GENERATE: DONE SOLVING
( 213.633) LOOP: DONE GENERATING (program 871)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_5(D),c_3(C),my_true_value(A,B).
( 213.633) LOOP: START TESTING
( 213.636) LOOP: DONE TESTING ('some', 'none')
( 213.636) LOOP: START IMPOSING CONSTRAINTS
( 213.636) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 213.636) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 213.636) GENERATE: START GROUNDING (impose_constraints)
( 214.001) GENERATE: DONE GROUNDING (impose_constraints)
( 214.001) LOOP: DONE IMPOSING CONSTRAINTS
( 214.001) LOOP: START GENERATING (program 872)
( 214.001) GENERATE: START SOLVING
( 214.052) GENERATE: DONE SOLVING
( 214.053) LOOP: DONE GENERATING (program 872)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_3(C),my_true_value(A,B).
( 214.053) LOOP: START TESTING
( 214.055) LOOP: DONE TESTING ('some', 'none')
( 214.055) LOOP: START IMPOSING CONSTRAINTS
( 214.055) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 214.055) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 214.055) GENERATE: START GROUNDING (impose_constraints)
( 214.438) GENERATE: DONE GROUNDING (impose_constraints)
( 214.438) LOOP: DONE IMPOSING CONSTRAINTS
( 214.438) LOOP: START GENERATING (program 873)
( 214.438) GENERATE: START SOLVING
( 214.492) GENERATE: DONE SOLVING
( 214.493) LOOP: DONE GENERATING (program 873)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_1(D),c_3(C),my_true_value(A,B).
( 214.493) LOOP: START TESTING
( 214.496) LOOP: DONE TESTING ('some', 'none')
( 214.496) LOOP: START IMPOSING CONSTRAINTS
( 214.496) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 214.496) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 214.496) GENERATE: START GROUNDING (impose_constraints)
( 214.851) GENERATE: DONE GROUNDING (impose_constraints)
( 214.851) LOOP: DONE IMPOSING CONSTRAINTS
( 214.851) LOOP: START GENERATING (program 874)
( 214.851) GENERATE: START SOLVING
( 214.913) GENERATE: DONE SOLVING
( 214.913) LOOP: DONE GENERATING (program 874)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_4(D),my_true_value(A,B),c_4(C).
( 214.914) LOOP: START TESTING
( 214.916) LOOP: DONE TESTING ('some', 'none')
( 214.916) LOOP: START IMPOSING CONSTRAINTS
( 214.916) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 214.916) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 214.916) GENERATE: START GROUNDING (impose_constraints)
( 215.307) GENERATE: DONE GROUNDING (impose_constraints)
( 215.307) LOOP: DONE IMPOSING CONSTRAINTS
( 215.307) LOOP: START GENERATING (program 875)
( 215.307) GENERATE: START SOLVING
( 215.367) GENERATE: DONE SOLVING
( 215.368) LOOP: DONE GENERATING (program 875)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_5(D),my_true_value(A,B),c_4(C).
( 215.368) LOOP: START TESTING
( 215.371) LOOP: DONE TESTING ('some', 'some')
( 215.371) LOOP: START IMPOSING CONSTRAINTS
( 215.371) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 215.371) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 215.371) GENERATE: START GROUNDING (impose_constraints)
( 215.728) GENERATE: DONE GROUNDING (impose_constraints)
( 215.728) LOOP: DONE IMPOSING CONSTRAINTS
( 215.728) LOOP: START GENERATING (program 876)
( 215.728) GENERATE: START SOLVING
( 215.782) GENERATE: DONE SOLVING
( 215.782) LOOP: DONE GENERATING (program 876)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_3(D),my_true_value(A,B),c_4(C).
( 215.782) LOOP: START TESTING
( 215.785) LOOP: DONE TESTING ('some', 'none')
( 215.785) LOOP: START IMPOSING CONSTRAINTS
( 215.785) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 215.785) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 215.785) GENERATE: START GROUNDING (impose_constraints)
( 216.144) GENERATE: DONE GROUNDING (impose_constraints)
( 216.144) LOOP: DONE IMPOSING CONSTRAINTS
( 216.144) LOOP: START GENERATING (program 877)
( 216.144) GENERATE: START SOLVING
( 216.195) GENERATE: DONE SOLVING
( 216.195) LOOP: DONE GENERATING (program 877)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_1(D),my_true_value(A,B),c_4(C).
( 216.196) LOOP: START TESTING
( 216.198) LOOP: DONE TESTING ('some', 'none')
( 216.198) LOOP: START IMPOSING CONSTRAINTS
( 216.198) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 216.198) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 216.198) GENERATE: START GROUNDING (impose_constraints)
( 216.593) GENERATE: DONE GROUNDING (impose_constraints)
( 216.593) LOOP: DONE IMPOSING CONSTRAINTS
( 216.593) LOOP: START GENERATING (program 878)
( 216.593) GENERATE: START SOLVING
( 216.650) GENERATE: DONE SOLVING
( 216.651) LOOP: DONE GENERATING (program 878)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_1(C),my_true_value(A,B).
( 216.651) LOOP: START TESTING
( 216.654) LOOP: DONE TESTING ('some', 'none')
( 216.654) LOOP: START IMPOSING CONSTRAINTS
( 216.654) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 216.654) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 216.654) GENERATE: START GROUNDING (impose_constraints)
( 217.025) GENERATE: DONE GROUNDING (impose_constraints)
( 217.025) LOOP: DONE IMPOSING CONSTRAINTS
( 217.025) LOOP: START GENERATING (program 879)
( 217.025) GENERATE: START SOLVING
( 217.073) GENERATE: DONE SOLVING
( 217.073) LOOP: DONE GENERATING (program 879)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,B),c_4(D),c_1(C).
( 217.073) LOOP: START TESTING
( 217.076) LOOP: DONE TESTING ('some', 'none')
( 217.076) LOOP: START IMPOSING CONSTRAINTS
( 217.076) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 217.076) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 217.076) GENERATE: START GROUNDING (impose_constraints)
( 217.445) GENERATE: DONE GROUNDING (impose_constraints)
( 217.445) LOOP: DONE IMPOSING CONSTRAINTS
( 217.445) LOOP: START GENERATING (program 880)
( 217.445) GENERATE: START SOLVING
( 217.492) GENERATE: DONE SOLVING
( 217.493) LOOP: DONE GENERATING (program 880)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_5(D),c_1(C),my_true_value(A,B).
( 217.493) LOOP: START TESTING
( 217.496) LOOP: DONE TESTING ('some', 'none')
( 217.496) LOOP: START IMPOSING CONSTRAINTS
( 217.496) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 217.496) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 217.496) GENERATE: START GROUNDING (impose_constraints)
( 217.866) GENERATE: DONE GROUNDING (impose_constraints)
( 217.866) LOOP: DONE IMPOSING CONSTRAINTS
( 217.866) LOOP: START GENERATING (program 881)
( 217.866) GENERATE: START SOLVING
( 217.914) GENERATE: DONE SOLVING
( 217.914) LOOP: DONE GENERATING (program 881)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_1(C),my_true_value(A,B).
( 217.914) LOOP: START TESTING
( 217.917) LOOP: DONE TESTING ('some', 'none')
( 217.917) LOOP: START IMPOSING CONSTRAINTS
( 217.917) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 217.917) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 217.917) GENERATE: START GROUNDING (impose_constraints)
( 218.331) GENERATE: DONE GROUNDING (impose_constraints)
( 218.331) LOOP: DONE IMPOSING CONSTRAINTS
( 218.331) LOOP: START GENERATING (program 882)
( 218.331) GENERATE: START SOLVING
( 218.394) GENERATE: DONE SOLVING
( 218.394) LOOP: DONE GENERATING (program 882)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_1(D),c_1(C),my_true_value(A,B).
( 218.394) LOOP: START TESTING
( 218.398) LOOP: DONE TESTING ('some', 'none')
( 218.398) LOOP: START IMPOSING CONSTRAINTS
( 218.398) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 218.398) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 218.399) GENERATE: START GROUNDING (impose_constraints)
( 218.861) GENERATE: DONE GROUNDING (impose_constraints)
( 218.861) LOOP: DONE IMPOSING CONSTRAINTS
( 218.861) LOOP: START GENERATING (program 883)
( 218.861) GENERATE: START SOLVING
( 218.927) GENERATE: DONE SOLVING
( 218.928) LOOP: DONE GENERATING (program 883)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_0(D),c_5(C),my_true_value(A,B).
( 218.928) LOOP: START TESTING
( 218.932) LOOP: DONE TESTING ('some', 'none')
( 218.932) LOOP: START IMPOSING CONSTRAINTS
( 218.932) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 218.932) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 218.933) GENERATE: START GROUNDING (impose_constraints)
( 219.398) GENERATE: DONE GROUNDING (impose_constraints)
( 219.398) LOOP: DONE IMPOSING CONSTRAINTS
( 219.398) LOOP: START GENERATING (program 884)
( 219.398) GENERATE: START SOLVING
( 219.474) GENERATE: DONE SOLVING
( 219.475) LOOP: DONE GENERATING (program 884)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,B),c_4(D),c_5(C).
( 219.475) LOOP: START TESTING
( 219.478) LOOP: DONE TESTING ('some', 'none')
( 219.478) LOOP: START IMPOSING CONSTRAINTS
( 219.478) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 219.478) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 219.478) GENERATE: START GROUNDING (impose_constraints)
( 219.928) GENERATE: DONE GROUNDING (impose_constraints)
( 219.928) LOOP: DONE IMPOSING CONSTRAINTS
( 219.928) LOOP: START GENERATING (program 885)
( 219.928) GENERATE: START SOLVING
( 219.998) GENERATE: DONE SOLVING
( 219.999) LOOP: DONE GENERATING (program 885)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_5(D),c_5(C),my_true_value(A,B).
( 219.999) LOOP: START TESTING
( 220.003) LOOP: DONE TESTING ('some', 'none')
( 220.003) LOOP: START IMPOSING CONSTRAINTS
( 220.003) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 220.003) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 220.003) GENERATE: START GROUNDING (impose_constraints)
( 220.470) GENERATE: DONE GROUNDING (impose_constraints)
( 220.470) LOOP: DONE IMPOSING CONSTRAINTS
( 220.470) LOOP: START GENERATING (program 886)
( 220.470) GENERATE: START SOLVING
( 220.557) GENERATE: DONE SOLVING
( 220.557) LOOP: DONE GENERATING (program 886)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_5(C),my_true_value(A,B).
( 220.557) LOOP: START TESTING
( 220.561) LOOP: DONE TESTING ('some', 'none')
( 220.561) LOOP: START IMPOSING CONSTRAINTS
( 220.561) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 220.561) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 220.561) GENERATE: START GROUNDING (impose_constraints)
( 221.023) GENERATE: DONE GROUNDING (impose_constraints)
( 221.023) LOOP: DONE IMPOSING CONSTRAINTS
( 221.023) LOOP: START GENERATING (program 887)
( 221.023) GENERATE: START SOLVING
( 221.103) GENERATE: DONE SOLVING
( 221.104) LOOP: DONE GENERATING (program 887)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_1(D),c_5(C),my_true_value(A,B).
( 221.104) LOOP: START TESTING
( 221.108) LOOP: DONE TESTING ('some', 'none')
( 221.108) LOOP: START IMPOSING CONSTRAINTS
( 221.108) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 221.108) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 221.108) GENERATE: START GROUNDING (impose_constraints)
( 221.579) GENERATE: DONE GROUNDING (impose_constraints)
( 221.579) LOOP: DONE IMPOSING CONSTRAINTS
( 221.579) LOOP: START GENERATING (program 888)
( 221.579) GENERATE: START SOLVING
( 221.648) GENERATE: DONE SOLVING
( 221.649) LOOP: DONE GENERATING (program 888)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_5(D),c_0(C),my_true_value(A,B).
( 221.649) LOOP: START TESTING
( 221.652) LOOP: DONE TESTING ('some', 'none')
( 221.652) LOOP: START IMPOSING CONSTRAINTS
( 221.653) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 221.653) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 221.653) GENERATE: START GROUNDING (impose_constraints)
( 222.119) GENERATE: DONE GROUNDING (impose_constraints)
( 222.119) LOOP: DONE IMPOSING CONSTRAINTS
( 222.119) LOOP: START GENERATING (program 889)
( 222.119) GENERATE: START SOLVING
( 222.190) GENERATE: DONE SOLVING
( 222.191) LOOP: DONE GENERATING (program 889)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,C,D),c_1(D),c_0(C),my_true_value(A,B).
( 222.191) LOOP: START TESTING
( 222.195) LOOP: DONE TESTING ('some', 'some')
( 222.196) LOOP: START IMPOSING CONSTRAINTS
( 222.196) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 222.196) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 222.196) GENERATE: START GROUNDING (impose_constraints)
( 222.645) GENERATE: DONE GROUNDING (impose_constraints)
( 222.645) LOOP: DONE IMPOSING CONSTRAINTS
( 222.645) LOOP: START GENERATING (program 890)
( 222.645) GENERATE: START SOLVING
( 224.136) GENERATE: DONE SOLVING
( 224.137) LOOP: DONE GENERATING (program 890)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),c_2(D),my_succ(C,D,B),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 224.137) LOOP: START TESTING
( 224.141) LOOP: DONE TESTING ('some', 'some')
( 224.141) LOOP: START IMPOSING CONSTRAINTS
( 224.141) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 224.141) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 224.141) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 224.142) GENERATE: START GROUNDING (impose_constraints)
( 224.616) GENERATE: DONE GROUNDING (impose_constraints)
( 224.617) LOOP: DONE IMPOSING CONSTRAINTS
( 224.617) LOOP: START GENERATING (program 891)
( 224.617) GENERATE: START SOLVING
( 224.710) GENERATE: DONE SOLVING
( 224.711) LOOP: DONE GENERATING (program 891)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),c_1(D),my_succ(C,D,B),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 224.711) LOOP: START TESTING
( 224.714) LOOP: DONE TESTING ('some', 'none')
( 224.714) LOOP: START IMPOSING CONSTRAINTS
( 224.714) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 224.714) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 224.714) GENERATE: START GROUNDING (impose_constraints)
( 225.202) GENERATE: DONE GROUNDING (impose_constraints)
( 225.202) LOOP: DONE IMPOSING CONSTRAINTS
( 225.202) LOOP: START GENERATING (program 892)
( 225.202) GENERATE: START SOLVING
( 225.276) GENERATE: DONE SOLVING
( 225.276) LOOP: DONE GENERATING (program 892)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),my_succ(C,D,B),my_true_value(A,D),c_4(D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 225.276) LOOP: START TESTING
( 225.281) LOOP: DONE TESTING ('some', 'none')
( 225.281) LOOP: START IMPOSING CONSTRAINTS
( 225.281) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 225.281) GENERATE: START GROUNDING (impose_constraints)
( 225.762) GENERATE: DONE GROUNDING (impose_constraints)
( 225.762) LOOP: DONE IMPOSING CONSTRAINTS
( 225.762) LOOP: START GENERATING (program 893)
( 225.762) GENERATE: START SOLVING
( 225.824) GENERATE: DONE SOLVING
( 225.825) LOOP: DONE GENERATING (program 893)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),c_3(B),my_succ(C,D,B),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 225.825) LOOP: START TESTING
( 225.830) LOOP: DONE TESTING ('some', 'some')
( 225.830) LOOP: START IMPOSING CONSTRAINTS
( 225.830) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 225.830) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 225.830) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 225.831) GENERATE: START GROUNDING (impose_constraints)
( 226.303) GENERATE: DONE GROUNDING (impose_constraints)
( 226.303) LOOP: DONE IMPOSING CONSTRAINTS
( 226.303) LOOP: START GENERATING (program 894)
( 226.303) GENERATE: START SOLVING
( 226.377) GENERATE: DONE SOLVING
( 226.377) LOOP: DONE GENERATING (program 894)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),my_succ(C,D,B),my_true_value(A,D),c_4(B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 226.377) LOOP: START TESTING
( 226.381) LOOP: DONE TESTING ('some', 'some')
( 226.381) LOOP: START IMPOSING CONSTRAINTS
( 226.382) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V1,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 226.382) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 226.382) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 226.382) GENERATE: START GROUNDING (impose_constraints)
( 226.854) GENERATE: DONE GROUNDING (impose_constraints)
( 226.854) LOOP: DONE IMPOSING CONSTRAINTS
( 226.854) LOOP: START GENERATING (program 895)
( 226.854) GENERATE: START SOLVING
( 226.919) GENERATE: DONE SOLVING
( 226.920) LOOP: DONE GENERATING (program 895)
PROGRAM:
  next_value(A,B) :- c_0(B),my_true_value(C,D),my_succ(C,D,B),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 226.920) LOOP: START TESTING
( 226.923) LOOP: DONE TESTING ('some', 'none')
( 226.923) LOOP: START IMPOSING CONSTRAINTS
( 226.924) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 226.924) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 226.924) GENERATE: START GROUNDING (impose_constraints)
( 227.413) GENERATE: DONE GROUNDING (impose_constraints)
( 227.413) LOOP: DONE IMPOSING CONSTRAINTS
( 227.413) LOOP: START GENERATING (program 896)
( 227.413) GENERATE: START SOLVING
( 227.481) GENERATE: DONE SOLVING
( 227.481) LOOP: DONE GENERATING (program 896)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),c_0(D),my_succ(C,D,B),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 227.482) LOOP: START TESTING
( 227.485) LOOP: DONE TESTING ('some', 'some')
( 227.485) LOOP: START IMPOSING CONSTRAINTS
( 227.485) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 227.485) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 227.485) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 227.485) GENERATE: START GROUNDING (impose_constraints)
( 227.964) GENERATE: DONE GROUNDING (impose_constraints)
( 227.964) LOOP: DONE IMPOSING CONSTRAINTS
( 227.964) LOOP: START GENERATING (program 897)
( 227.964) GENERATE: START SOLVING
( 228.040) GENERATE: DONE SOLVING
( 228.040) LOOP: DONE GENERATING (program 897)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(C,D),my_succ(C,D,B),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 228.040) LOOP: START TESTING
( 228.044) LOOP: DONE TESTING ('some', 'none')
( 228.044) LOOP: START IMPOSING CONSTRAINTS
( 228.044) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 228.044) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 228.044) GENERATE: START GROUNDING (impose_constraints)
( 228.538) GENERATE: DONE GROUNDING (impose_constraints)
( 228.538) LOOP: DONE IMPOSING CONSTRAINTS
( 228.538) LOOP: START GENERATING (program 898)
( 228.538) GENERATE: START SOLVING
( 228.624) GENERATE: DONE SOLVING
( 228.624) LOOP: DONE GENERATING (program 898)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(C,D),my_succ(C,D,B),my_true_value(A,D).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 228.625) LOOP: START TESTING
( 228.628) LOOP: DONE TESTING ('some', 'some')
( 228.628) LOOP: START IMPOSING CONSTRAINTS
( 228.628) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 228.628) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 228.628) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 228.629) GENERATE: START GROUNDING (impose_constraints)
( 229.116) GENERATE: DONE GROUNDING (impose_constraints)
( 229.116) LOOP: DONE IMPOSING CONSTRAINTS
( 229.116) LOOP: START GENERATING (program 899)
( 229.116) GENERATE: START SOLVING
( 229.469) GENERATE: DONE SOLVING
( 229.470) LOOP: DONE GENERATING (program 899)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(C,D),my_true_value(A,D),my_true_value(C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 229.470) LOOP: START TESTING
( 229.473) LOOP: DONE TESTING ('some', 'none')
( 229.473) LOOP: START IMPOSING CONSTRAINTS
( 229.473) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 229.473) GENERATE: START GROUNDING (impose_constraints)
( 229.956) GENERATE: DONE GROUNDING (impose_constraints)
( 229.956) LOOP: DONE IMPOSING CONSTRAINTS
( 229.956) LOOP: START GENERATING (program 900)
( 229.956) GENERATE: START SOLVING
( 230.843) GENERATE: DONE SOLVING
( 230.843) LOOP: DONE GENERATING (program 900)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(D),c_3(C),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 230.843) LOOP: START TESTING
( 230.847) LOOP: DONE TESTING ('some', 'some')
( 230.847) LOOP: START IMPOSING CONSTRAINTS
( 230.847) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 230.847) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 230.848) GENERATE: START GROUNDING (impose_constraints)
( 231.320) GENERATE: DONE GROUNDING (impose_constraints)
( 231.320) LOOP: DONE IMPOSING CONSTRAINTS
( 231.320) LOOP: START GENERATING (program 901)
( 231.320) GENERATE: START SOLVING
( 231.954) GENERATE: DONE SOLVING
( 231.955) LOOP: DONE GENERATING (program 901)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),c_0(D),my_true_value(A,B),my_true_value(C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 231.955) LOOP: START TESTING
( 231.958) LOOP: DONE TESTING ('some', 'some')
( 231.958) LOOP: START IMPOSING CONSTRAINTS
( 231.958) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 231.958) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 231.958) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 231.958) GENERATE: START GROUNDING (impose_constraints)
( 232.433) GENERATE: DONE GROUNDING (impose_constraints)
( 232.433) LOOP: DONE IMPOSING CONSTRAINTS
( 232.433) LOOP: START GENERATING (program 902)
( 232.433) GENERATE: START SOLVING
( 232.945) GENERATE: DONE SOLVING
( 232.946) LOOP: DONE GENERATING (program 902)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 232.946) LOOP: START TESTING
( 232.948) LOOP: DONE TESTING ('some', 'some')
( 232.948) LOOP: START IMPOSING CONSTRAINTS
( 232.948) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 232.948) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 232.949) GENERATE: START GROUNDING (impose_constraints)
( 233.425) GENERATE: DONE GROUNDING (impose_constraints)
( 233.425) LOOP: DONE IMPOSING CONSTRAINTS
( 233.425) LOOP: START GENERATING (program 903)
( 233.425) GENERATE: START SOLVING
( 233.501) GENERATE: DONE SOLVING
( 233.501) LOOP: DONE GENERATING (program 903)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 233.502) LOOP: START TESTING
( 233.505) LOOP: DONE TESTING ('some', 'some')
( 233.505) LOOP: START IMPOSING CONSTRAINTS
( 233.505) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 233.505) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 233.505) GENERATE: START GROUNDING (impose_constraints)
( 233.991) GENERATE: DONE GROUNDING (impose_constraints)
( 233.991) LOOP: DONE IMPOSING CONSTRAINTS
( 233.991) LOOP: START GENERATING (program 904)
( 233.991) GENERATE: START SOLVING
( 234.078) GENERATE: DONE SOLVING
( 234.078) LOOP: DONE GENERATING (program 904)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
( 234.079) LOOP: START TESTING
( 234.081) LOOP: DONE TESTING ('some', 'none')
( 234.081) LOOP: START IMPOSING CONSTRAINTS
( 234.081) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 234.081) GENERATE: START GROUNDING (impose_constraints)
( 234.562) GENERATE: DONE GROUNDING (impose_constraints)
( 234.562) LOOP: DONE IMPOSING CONSTRAINTS
( 234.562) LOOP: START GENERATING (program 905)
( 234.562) GENERATE: START SOLVING
( 234.666) GENERATE: DONE SOLVING
( 234.667) LOOP: DONE GENERATING (program 905)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
( 234.667) LOOP: START TESTING
( 234.671) LOOP: DONE TESTING ('some', 'some')
( 234.671) LOOP: START IMPOSING CONSTRAINTS
( 234.671) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 234.671) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 234.671) GENERATE: START GROUNDING (impose_constraints)
( 235.149) GENERATE: DONE GROUNDING (impose_constraints)
( 235.149) LOOP: DONE IMPOSING CONSTRAINTS
( 235.149) LOOP: START GENERATING (program 906)
( 235.149) GENERATE: START SOLVING
( 235.235) GENERATE: DONE SOLVING
( 235.236) LOOP: DONE GENERATING (program 906)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
( 235.236) LOOP: START TESTING
( 235.240) LOOP: DONE TESTING ('some', 'some')
( 235.240) LOOP: START IMPOSING CONSTRAINTS
( 235.241) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 235.241) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 235.241) GENERATE: START GROUNDING (impose_constraints)
( 235.738) GENERATE: DONE GROUNDING (impose_constraints)
( 235.738) LOOP: DONE IMPOSING CONSTRAINTS
( 235.738) LOOP: START GENERATING (program 907)
( 235.738) GENERATE: START SOLVING
( 235.855) GENERATE: DONE SOLVING
( 235.856) LOOP: DONE GENERATING (program 907)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 235.856) LOOP: START TESTING
( 235.860) LOOP: DONE TESTING ('some', 'some')
( 235.860) LOOP: START IMPOSING CONSTRAINTS
( 235.860) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 235.860) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 235.860) GENERATE: START GROUNDING (impose_constraints)
( 236.359) GENERATE: DONE GROUNDING (impose_constraints)
( 236.359) LOOP: DONE IMPOSING CONSTRAINTS
( 236.359) LOOP: START GENERATING (program 908)
( 236.359) GENERATE: START SOLVING
( 237.202) GENERATE: DONE SOLVING
( 237.203) LOOP: DONE GENERATING (program 908)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_true_value(A,D),c_2(C).
( 237.203) LOOP: START TESTING
( 237.208) LOOP: DONE TESTING ('some', 'some')
( 237.208) LOOP: START IMPOSING CONSTRAINTS
( 237.208) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 237.208) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 237.208) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 237.208) GENERATE: START GROUNDING (impose_constraints)
( 237.694) GENERATE: DONE GROUNDING (impose_constraints)
( 237.694) LOOP: DONE IMPOSING CONSTRAINTS
( 237.694) LOOP: START GENERATING (program 909)
( 237.694) GENERATE: START SOLVING
( 239.182) GENERATE: DONE SOLVING
( 239.182) LOOP: DONE GENERATING (program 909)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),c_4(D),my_succ(A,D,B),c_5(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 239.183) LOOP: START TESTING
( 239.185) LOOP: DONE TESTING ('some', 'none')
( 239.185) LOOP: START IMPOSING CONSTRAINTS
( 239.185) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 239.186) GENERATE: START GROUNDING (impose_constraints)
( 239.686) GENERATE: DONE GROUNDING (impose_constraints)
( 239.686) LOOP: DONE IMPOSING CONSTRAINTS
( 239.686) LOOP: START GENERATING (program 910)
( 239.686) GENERATE: START SOLVING
( 240.194) GENERATE: DONE SOLVING
( 240.194) LOOP: DONE GENERATING (program 910)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),c_4(D),my_succ(A,D,B),c_4(C).
( 240.195) LOOP: START TESTING
( 240.198) LOOP: DONE TESTING ('some', 'none')
( 240.198) LOOP: START IMPOSING CONSTRAINTS
( 240.198) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 240.199) GENERATE: START GROUNDING (impose_constraints)
( 240.707) GENERATE: DONE GROUNDING (impose_constraints)
( 240.707) LOOP: DONE IMPOSING CONSTRAINTS
( 240.707) LOOP: START GENERATING (program 911)
( 240.707) GENERATE: START SOLVING
( 241.110) GENERATE: DONE SOLVING
( 241.111) LOOP: DONE GENERATING (program 911)
PROGRAM:
  next_value(A,B) :- my_succ(C,D,B),my_true_value(A,D),c_4(D),my_true_value(C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 241.111) LOOP: START TESTING
( 241.115) LOOP: DONE TESTING ('some', 'none')
( 241.115) LOOP: START IMPOSING CONSTRAINTS
( 241.115) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 241.115) GENERATE: START GROUNDING (impose_constraints)
( 241.631) GENERATE: DONE GROUNDING (impose_constraints)
( 241.631) LOOP: DONE IMPOSING CONSTRAINTS
( 241.631) LOOP: START GENERATING (program 912)
( 241.631) GENERATE: START SOLVING
( 241.849) GENERATE: DONE SOLVING
( 241.850) LOOP: DONE GENERATING (program 912)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(D),my_true_value(A,C),c_3(C),my_succ(A,B,D).
( 241.850) LOOP: START TESTING
( 241.854) LOOP: DONE TESTING ('some', 'some')
( 241.854) LOOP: START IMPOSING CONSTRAINTS
( 241.855) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 241.855) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 241.855) GENERATE: START GROUNDING (impose_constraints)
( 242.361) GENERATE: DONE GROUNDING (impose_constraints)
( 242.361) LOOP: DONE IMPOSING CONSTRAINTS
( 242.361) LOOP: START GENERATING (program 913)
( 242.361) GENERATE: START SOLVING
( 242.431) GENERATE: DONE SOLVING
( 242.432) LOOP: DONE GENERATING (program 913)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),c_2(D),my_succ(A,B,D),c_5(C).
( 242.432) LOOP: START TESTING
( 242.436) LOOP: DONE TESTING ('some', 'some')
( 242.436) LOOP: START IMPOSING CONSTRAINTS
( 242.436) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_5,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 242.436) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 242.436) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 242.436) GENERATE: START GROUNDING (impose_constraints)
( 242.921) GENERATE: DONE GROUNDING (impose_constraints)
( 242.921) LOOP: DONE IMPOSING CONSTRAINTS
( 242.921) LOOP: START GENERATING (program 914)
( 242.922) GENERATE: START SOLVING
( 243.001) GENERATE: DONE SOLVING
( 243.001) LOOP: DONE GENERATING (program 914)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(C),my_true_value(A,C),c_2(D),my_succ(A,B,D).
( 243.001) LOOP: START TESTING
( 243.006) LOOP: DONE TESTING ('some', 'none')
( 243.006) LOOP: START IMPOSING CONSTRAINTS
( 243.006) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 243.006) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 243.006) GENERATE: START GROUNDING (impose_constraints)
( 243.483) GENERATE: DONE GROUNDING (impose_constraints)
( 243.483) LOOP: DONE IMPOSING CONSTRAINTS
( 243.483) LOOP: START GENERATING (program 915)
( 243.483) GENERATE: START SOLVING
( 243.592) GENERATE: DONE SOLVING
( 243.593) LOOP: DONE GENERATING (program 915)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),c_3(C),my_true_value(D,B),my_succ(D,C,B).
( 243.593) LOOP: START TESTING
( 243.596) LOOP: DONE TESTING ('some', 'some')
( 243.596) LOOP: START IMPOSING CONSTRAINTS
( 243.597) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 243.597) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 243.597) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 243.597) GENERATE: START GROUNDING (impose_constraints)
( 244.099) GENERATE: DONE GROUNDING (impose_constraints)
( 244.099) LOOP: DONE IMPOSING CONSTRAINTS
( 244.099) LOOP: START GENERATING (program 916)
( 244.099) GENERATE: START SOLVING
( 244.198) GENERATE: DONE SOLVING
( 244.198) LOOP: DONE GENERATING (program 916)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_3(C),c_2(C).
( 244.198) LOOP: START TESTING
( 244.202) LOOP: DONE TESTING ('some', 'none')
( 244.203) LOOP: START IMPOSING CONSTRAINTS
( 244.203) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
( 244.203) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 244.203) GENERATE: START GROUNDING (impose_constraints)
( 244.710) GENERATE: DONE GROUNDING (impose_constraints)
( 244.710) LOOP: DONE IMPOSING CONSTRAINTS
( 244.710) LOOP: START GENERATING (program 917)
( 244.710) GENERATE: START SOLVING
( 244.791) GENERATE: DONE SOLVING
( 244.792) LOOP: DONE GENERATING (program 917)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),c_5(B),my_true_value(A,C),c_3(C).
( 244.792) LOOP: START TESTING
( 244.795) LOOP: DONE TESTING ('some', 'none')
( 244.795) LOOP: START IMPOSING CONSTRAINTS
( 244.795) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not recursive.
( 244.795) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 244.795) GENERATE: START GROUNDING (impose_constraints)
( 245.293) GENERATE: DONE GROUNDING (impose_constraints)
( 245.293) LOOP: DONE IMPOSING CONSTRAINTS
( 245.293) LOOP: START GENERATING (program 918)
( 245.293) GENERATE: START SOLVING
( 245.393) GENERATE: DONE SOLVING
( 245.393) LOOP: DONE GENERATING (program 918)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(C),my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
( 245.393) LOOP: START TESTING
( 245.396) LOOP: DONE TESTING ('some', 'some')
( 245.396) LOOP: START IMPOSING CONSTRAINTS
( 245.396) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 245.396) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 245.396) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 245.397) GENERATE: START GROUNDING (impose_constraints)
( 245.884) GENERATE: DONE GROUNDING (impose_constraints)
( 245.884) LOOP: DONE IMPOSING CONSTRAINTS
( 245.884) LOOP: START GENERATING (program 919)
( 245.884) GENERATE: START SOLVING
( 245.965) GENERATE: DONE SOLVING
( 245.965) LOOP: DONE GENERATING (program 919)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
( 245.965) LOOP: START TESTING
( 245.968) LOOP: DONE TESTING ('some', 'none')
( 245.968) LOOP: START IMPOSING CONSTRAINTS
( 245.968) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 245.968) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 245.968) GENERATE: START GROUNDING (impose_constraints)
( 246.451) GENERATE: DONE GROUNDING (impose_constraints)
( 246.451) LOOP: DONE IMPOSING CONSTRAINTS
( 246.451) LOOP: START GENERATING (program 920)
( 246.451) GENERATE: START SOLVING
( 246.521) GENERATE: DONE SOLVING
( 246.522) LOOP: DONE GENERATING (program 920)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(B),my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
( 246.522) LOOP: START TESTING
( 246.526) LOOP: DONE TESTING ('some', 'some')
( 246.526) LOOP: START IMPOSING CONSTRAINTS
( 246.526) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 246.526) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 246.526) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 246.526) GENERATE: START GROUNDING (impose_constraints)
( 247.049) GENERATE: DONE GROUNDING (impose_constraints)
( 247.049) LOOP: DONE IMPOSING CONSTRAINTS
( 247.049) LOOP: START GENERATING (program 921)
( 247.049) GENERATE: START SOLVING
( 247.123) GENERATE: DONE SOLVING
( 247.123) LOOP: DONE GENERATING (program 921)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B),c_4(B).
( 247.123) LOOP: START TESTING
( 247.126) LOOP: DONE TESTING ('some', 'some')
( 247.126) LOOP: START IMPOSING CONSTRAINTS
( 247.126) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 247.126) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 247.126) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 247.127) GENERATE: START GROUNDING (impose_constraints)
( 247.639) GENERATE: DONE GROUNDING (impose_constraints)
( 247.639) LOOP: DONE IMPOSING CONSTRAINTS
( 247.639) LOOP: START GENERATING (program 922)
( 247.639) GENERATE: START SOLVING
( 247.706) GENERATE: DONE SOLVING
( 247.707) LOOP: DONE GENERATING (program 922)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
( 247.707) LOOP: START TESTING
( 247.710) LOOP: DONE TESTING ('some', 'none')
( 247.710) LOOP: START IMPOSING CONSTRAINTS
( 247.710) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 247.710) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 247.711) GENERATE: START GROUNDING (impose_constraints)
( 248.222) GENERATE: DONE GROUNDING (impose_constraints)
( 248.222) LOOP: DONE IMPOSING CONSTRAINTS
( 248.222) LOOP: START GENERATING (program 923)
( 248.222) GENERATE: START SOLVING
( 248.291) GENERATE: DONE SOLVING
( 248.291) LOOP: DONE GENERATING (program 923)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
( 248.291) LOOP: START TESTING
( 248.294) LOOP: DONE TESTING ('some', 'none')
( 248.294) LOOP: START IMPOSING CONSTRAINTS
( 248.294) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 248.294) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 248.294) GENERATE: START GROUNDING (impose_constraints)
( 248.800) GENERATE: DONE GROUNDING (impose_constraints)
( 248.800) LOOP: DONE IMPOSING CONSTRAINTS
( 248.800) LOOP: START GENERATING (program 924)
( 248.800) GENERATE: START SOLVING
( 248.869) GENERATE: DONE SOLVING
( 248.870) LOOP: DONE GENERATING (program 924)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),c_5(C),my_succ(D,C,B).
( 248.870) LOOP: START TESTING
( 248.874) LOOP: DONE TESTING ('some', 'none')
( 248.874) LOOP: START IMPOSING CONSTRAINTS
( 248.874) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 248.874) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 248.874) GENERATE: START GROUNDING (impose_constraints)
( 249.381) GENERATE: DONE GROUNDING (impose_constraints)
( 249.381) LOOP: DONE IMPOSING CONSTRAINTS
( 249.381) LOOP: START GENERATING (program 925)
( 249.381) GENERATE: START SOLVING
( 249.452) GENERATE: DONE SOLVING
( 249.452) LOOP: DONE GENERATING (program 925)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),c_0(C),my_true_value(D,B),my_succ(D,C,B).
( 249.452) LOOP: START TESTING
( 249.455) LOOP: DONE TESTING ('some', 'none')
( 249.455) LOOP: START IMPOSING CONSTRAINTS
( 249.455) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 249.455) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 249.456) GENERATE: START GROUNDING (impose_constraints)
( 249.954) GENERATE: DONE GROUNDING (impose_constraints)
( 249.954) LOOP: DONE IMPOSING CONSTRAINTS
( 249.954) LOOP: START GENERATING (program 926)
( 249.954) GENERATE: START SOLVING
( 250.031) GENERATE: DONE SOLVING
( 250.032) LOOP: DONE GENERATING (program 926)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
( 250.032) LOOP: START TESTING
( 250.036) LOOP: DONE TESTING ('some', 'none')
( 250.036) LOOP: START IMPOSING CONSTRAINTS
( 250.036) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 250.036) GENERATE: START GROUNDING (impose_constraints)
( 250.540) GENERATE: DONE GROUNDING (impose_constraints)
( 250.540) LOOP: DONE IMPOSING CONSTRAINTS
( 250.540) LOOP: START GENERATING (program 927)
( 250.540) GENERATE: START SOLVING
( 250.619) GENERATE: DONE SOLVING
( 250.620) LOOP: DONE GENERATING (program 927)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(C),my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
( 250.621) LOOP: START TESTING
( 250.625) LOOP: DONE TESTING ('some', 'none')
( 250.625) LOOP: START IMPOSING CONSTRAINTS
( 250.625) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 250.625) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 250.625) GENERATE: START GROUNDING (impose_constraints)
( 251.151) GENERATE: DONE GROUNDING (impose_constraints)
( 251.151) LOOP: DONE IMPOSING CONSTRAINTS
( 251.151) LOOP: START GENERATING (program 928)
( 251.151) GENERATE: START SOLVING
( 251.281) GENERATE: DONE SOLVING
( 251.282) LOOP: DONE GENERATING (program 928)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_true_value(D,B),c_4(C).
( 251.282) LOOP: START TESTING
( 251.285) LOOP: DONE TESTING ('some', 'some')
( 251.285) LOOP: START IMPOSING CONSTRAINTS
( 251.285) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 251.285) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 251.285) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 251.286) GENERATE: START GROUNDING (impose_constraints)
( 251.788) GENERATE: DONE GROUNDING (impose_constraints)
( 251.788) LOOP: DONE IMPOSING CONSTRAINTS
( 251.788) LOOP: START GENERATING (program 929)
( 251.788) GENERATE: START SOLVING
( 251.869) GENERATE: DONE SOLVING
( 251.870) LOOP: DONE GENERATING (program 929)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_true_value(D,B),c_2(C).
( 251.870) LOOP: START TESTING
( 251.873) LOOP: DONE TESTING ('some', 'some')
( 251.873) LOOP: START IMPOSING CONSTRAINTS
( 251.873) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 251.873) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 251.873) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 251.874) GENERATE: START GROUNDING (impose_constraints)
( 252.397) GENERATE: DONE GROUNDING (impose_constraints)
( 252.397) LOOP: DONE IMPOSING CONSTRAINTS
( 252.397) LOOP: START GENERATING (program 930)
( 252.397) GENERATE: START SOLVING
( 252.483) GENERATE: DONE SOLVING
( 252.484) LOOP: DONE GENERATING (program 930)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_true_value(D,B),c_1(C).
( 252.484) LOOP: START TESTING
( 252.489) LOOP: DONE TESTING ('some', 'none')
( 252.489) LOOP: START IMPOSING CONSTRAINTS
( 252.489) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 252.489) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 252.490) GENERATE: START GROUNDING (impose_constraints)
( 253.006) GENERATE: DONE GROUNDING (impose_constraints)
( 253.006) LOOP: DONE IMPOSING CONSTRAINTS
( 253.006) LOOP: START GENERATING (program 931)
( 253.006) GENERATE: START SOLVING
( 253.074) GENERATE: DONE SOLVING
( 253.074) LOOP: DONE GENERATING (program 931)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(B),my_true_value(A,C),my_true_value(D,C),my_true_value(D,B).
( 253.074) LOOP: START TESTING
( 253.077) LOOP: DONE TESTING ('some', 'some')
( 253.077) LOOP: START IMPOSING CONSTRAINTS
( 253.077) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 253.077) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 253.077) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 253.078) GENERATE: START GROUNDING (impose_constraints)
( 253.612) GENERATE: DONE GROUNDING (impose_constraints)
( 253.612) LOOP: DONE IMPOSING CONSTRAINTS
( 253.612) LOOP: START GENERATING (program 932)
( 253.612) GENERATE: START SOLVING
( 253.685) GENERATE: DONE SOLVING
( 253.686) LOOP: DONE GENERATING (program 932)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_3(B),my_true_value(A,C),my_true_value(D,C),my_true_value(D,B).
( 253.686) LOOP: START TESTING
( 253.690) LOOP: DONE TESTING ('some', 'some')
( 253.690) LOOP: START IMPOSING CONSTRAINTS
( 253.690) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 253.690) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 253.690) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 253.690) GENERATE: START GROUNDING (impose_constraints)
( 254.210) GENERATE: DONE GROUNDING (impose_constraints)
( 254.210) LOOP: DONE IMPOSING CONSTRAINTS
( 254.210) LOOP: START GENERATING (program 933)
( 254.210) GENERATE: START SOLVING
( 254.285) GENERATE: DONE SOLVING
( 254.285) LOOP: DONE GENERATING (program 933)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_true_value(D,B),c_4(B).
( 254.285) LOOP: START TESTING
( 254.288) LOOP: DONE TESTING ('some', 'some')
( 254.288) LOOP: START IMPOSING CONSTRAINTS
( 254.288) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 254.288) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 254.288) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 254.289) GENERATE: START GROUNDING (impose_constraints)
( 254.785) GENERATE: DONE GROUNDING (impose_constraints)
( 254.785) LOOP: DONE IMPOSING CONSTRAINTS
( 254.785) LOOP: START GENERATING (program 934)
( 254.785) GENERATE: START SOLVING
( 254.868) GENERATE: DONE SOLVING
( 254.869) LOOP: DONE GENERATING (program 934)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_true_value(D,C),my_true_value(D,B).
( 254.869) LOOP: START TESTING
( 254.874) LOOP: DONE TESTING ('some', 'some')
( 254.874) LOOP: START IMPOSING CONSTRAINTS
( 254.874) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 254.874) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 254.874) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 254.874) GENERATE: START GROUNDING (impose_constraints)
( 255.378) GENERATE: DONE GROUNDING (impose_constraints)
( 255.378) LOOP: DONE IMPOSING CONSTRAINTS
( 255.378) LOOP: START GENERATING (program 935)
( 255.378) GENERATE: START SOLVING
( 255.460) GENERATE: DONE SOLVING
( 255.461) LOOP: DONE GENERATING (program 935)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_true_value(D,C),my_true_value(D,B).
( 255.461) LOOP: START TESTING
( 255.464) LOOP: DONE TESTING ('some', 'none')
( 255.464) LOOP: START IMPOSING CONSTRAINTS
( 255.464) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 255.464) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 255.464) GENERATE: START GROUNDING (impose_constraints)
( 255.970) GENERATE: DONE GROUNDING (impose_constraints)
( 255.970) LOOP: DONE IMPOSING CONSTRAINTS
( 255.970) LOOP: START GENERATING (program 936)
( 255.970) GENERATE: START SOLVING
( 256.054) GENERATE: DONE SOLVING
( 256.055) LOOP: DONE GENERATING (program 936)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_true_value(D,B),c_5(C).
( 256.055) LOOP: START TESTING
( 256.058) LOOP: DONE TESTING ('some', 'none')
( 256.058) LOOP: START IMPOSING CONSTRAINTS
( 256.058) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 256.058) GENERATE: START GROUNDING (impose_constraints)
( 256.576) GENERATE: DONE GROUNDING (impose_constraints)
( 256.576) LOOP: DONE IMPOSING CONSTRAINTS
( 256.576) LOOP: START GENERATING (program 937)
( 256.576) GENERATE: START SOLVING
( 256.664) GENERATE: DONE SOLVING
( 256.665) LOOP: DONE GENERATING (program 937)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_true_value(D,B),c_0(C).
( 256.665) LOOP: START TESTING
( 256.669) LOOP: DONE TESTING ('some', 'some')
( 256.669) LOOP: START IMPOSING CONSTRAINTS
( 256.669) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 256.669) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 256.669) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 256.669) GENERATE: START GROUNDING (impose_constraints)
( 257.188) GENERATE: DONE GROUNDING (impose_constraints)
( 257.188) LOOP: DONE IMPOSING CONSTRAINTS
( 257.188) LOOP: START GENERATING (program 938)
( 257.188) GENERATE: START SOLVING
( 257.317) GENERATE: DONE SOLVING
( 257.318) LOOP: DONE GENERATING (program 938)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),c_3(C),c_4(D),my_succ(A,D,B).
( 257.318) LOOP: START TESTING
( 257.323) LOOP: DONE TESTING ('some', 'some')
( 257.323) LOOP: START IMPOSING CONSTRAINTS
( 257.323) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 257.323) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 257.323) GENERATE: START GROUNDING (impose_constraints)
( 257.851) GENERATE: DONE GROUNDING (impose_constraints)
( 257.851) LOOP: DONE IMPOSING CONSTRAINTS
( 257.851) LOOP: START GENERATING (program 939)
( 257.851) GENERATE: START SOLVING
( 258.412) GENERATE: DONE SOLVING
( 258.413) LOOP: DONE GENERATING (program 939)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
( 258.413) LOOP: START TESTING
( 258.416) LOOP: DONE TESTING ('some', 'some')
( 258.416) LOOP: START IMPOSING CONSTRAINTS
( 258.416) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 258.416) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 258.417) GENERATE: START GROUNDING (impose_constraints)
( 258.938) GENERATE: DONE GROUNDING (impose_constraints)
( 258.938) LOOP: DONE IMPOSING CONSTRAINTS
( 258.938) LOOP: START GENERATING (program 940)
( 258.938) GENERATE: START SOLVING
( 259.100) GENERATE: DONE SOLVING
( 259.101) LOOP: DONE GENERATING (program 940)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
( 259.101) LOOP: START TESTING
( 259.104) LOOP: DONE TESTING ('some', 'some')
( 259.104) LOOP: START IMPOSING CONSTRAINTS
( 259.104) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 259.104) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 259.104) GENERATE: START GROUNDING (impose_constraints)
( 259.634) GENERATE: DONE GROUNDING (impose_constraints)
( 259.634) LOOP: DONE IMPOSING CONSTRAINTS
( 259.634) LOOP: START GENERATING (program 941)
( 259.634) GENERATE: START SOLVING
( 259.733) GENERATE: DONE SOLVING
( 259.733) LOOP: DONE GENERATING (program 941)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
( 259.733) LOOP: START TESTING
( 259.736) LOOP: DONE TESTING ('some', 'some')
( 259.736) LOOP: START IMPOSING CONSTRAINTS
( 259.736) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 259.736) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 259.737) GENERATE: START GROUNDING (impose_constraints)
( 260.258) GENERATE: DONE GROUNDING (impose_constraints)
( 260.258) LOOP: DONE IMPOSING CONSTRAINTS
( 260.258) LOOP: START GENERATING (program 942)
( 260.258) GENERATE: START SOLVING
( 260.360) GENERATE: DONE SOLVING
( 260.360) LOOP: DONE GENERATING (program 942)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
( 260.360) LOOP: START TESTING
( 260.364) LOOP: DONE TESTING ('some', 'some')
( 260.364) LOOP: START IMPOSING CONSTRAINTS
( 260.364) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 260.364) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 260.364) GENERATE: START GROUNDING (impose_constraints)
( 260.881) GENERATE: DONE GROUNDING (impose_constraints)
( 260.881) LOOP: DONE IMPOSING CONSTRAINTS
( 260.881) LOOP: START GENERATING (program 943)
( 260.881) GENERATE: START SOLVING
( 260.968) GENERATE: DONE SOLVING
( 260.969) LOOP: DONE GENERATING (program 943)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
( 260.969) LOOP: START TESTING
( 260.972) LOOP: DONE TESTING ('some', 'some')
( 260.972) LOOP: START IMPOSING CONSTRAINTS
( 260.972) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 260.972) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 260.972) GENERATE: START GROUNDING (impose_constraints)
( 261.513) GENERATE: DONE GROUNDING (impose_constraints)
( 261.513) LOOP: DONE IMPOSING CONSTRAINTS
( 261.513) LOOP: START GENERATING (program 944)
( 261.513) GENERATE: START SOLVING
( 261.614) GENERATE: DONE SOLVING
( 261.614) LOOP: DONE GENERATING (program 944)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
( 261.614) LOOP: START TESTING
( 261.617) LOOP: DONE TESTING ('some', 'some')
( 261.617) LOOP: START IMPOSING CONSTRAINTS
( 261.618) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 261.618) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 261.618) GENERATE: START GROUNDING (impose_constraints)
( 262.151) GENERATE: DONE GROUNDING (impose_constraints)
( 262.151) LOOP: DONE IMPOSING CONSTRAINTS
( 262.151) LOOP: START GENERATING (program 945)
( 262.151) GENERATE: START SOLVING
( 262.397) GENERATE: DONE SOLVING
( 262.398) LOOP: DONE GENERATING (program 945)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 262.398) LOOP: START TESTING
( 262.401) LOOP: DONE TESTING ('some', 'some')
( 262.401) LOOP: START IMPOSING CONSTRAINTS
( 262.401) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 262.401) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 262.401) GENERATE: START GROUNDING (impose_constraints)
( 262.944) GENERATE: DONE GROUNDING (impose_constraints)
( 262.944) LOOP: DONE IMPOSING CONSTRAINTS
( 262.944) LOOP: START GENERATING (program 946)
( 262.944) GENERATE: START SOLVING
( 263.555) GENERATE: DONE SOLVING
( 263.555) LOOP: DONE GENERATING (program 946)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 263.555) LOOP: START TESTING
( 263.559) LOOP: DONE TESTING ('some', 'some')
( 263.559) LOOP: START IMPOSING CONSTRAINTS
( 263.559) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 263.559) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 263.559) GENERATE: START GROUNDING (impose_constraints)
( 264.073) GENERATE: DONE GROUNDING (impose_constraints)
( 264.074) LOOP: DONE IMPOSING CONSTRAINTS
( 264.074) LOOP: START GENERATING (program 947)
( 264.074) GENERATE: START SOLVING
( 264.199) GENERATE: DONE SOLVING
( 264.200) LOOP: DONE GENERATING (program 947)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
( 264.200) LOOP: START TESTING
( 264.203) LOOP: DONE TESTING ('some', 'some')
( 264.203) LOOP: START IMPOSING CONSTRAINTS
( 264.203) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 264.203) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 264.203) GENERATE: START GROUNDING (impose_constraints)
( 264.739) GENERATE: DONE GROUNDING (impose_constraints)
( 264.739) LOOP: DONE IMPOSING CONSTRAINTS
( 264.739) LOOP: START GENERATING (program 948)
( 264.739) GENERATE: START SOLVING
( 264.877) GENERATE: DONE SOLVING
( 264.878) LOOP: DONE GENERATING (program 948)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
( 264.878) LOOP: START TESTING
( 264.881) LOOP: DONE TESTING ('some', 'none')
( 264.881) LOOP: START IMPOSING CONSTRAINTS
( 264.881) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 264.882) GENERATE: START GROUNDING (impose_constraints)
( 265.417) GENERATE: DONE GROUNDING (impose_constraints)
( 265.417) LOOP: DONE IMPOSING CONSTRAINTS
( 265.417) LOOP: START GENERATING (program 949)
( 265.417) GENERATE: START SOLVING
( 265.556) GENERATE: DONE SOLVING
( 265.557) LOOP: DONE GENERATING (program 949)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 265.557) LOOP: START TESTING
( 265.561) LOOP: DONE TESTING ('some', 'some')
( 265.561) LOOP: START IMPOSING CONSTRAINTS
( 265.561) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 265.561) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 265.561) GENERATE: START GROUNDING (impose_constraints)
( 266.106) GENERATE: DONE GROUNDING (impose_constraints)
( 266.106) LOOP: DONE IMPOSING CONSTRAINTS
( 266.106) LOOP: START GENERATING (program 950)
( 266.106) GENERATE: START SOLVING
( 266.253) GENERATE: DONE SOLVING
( 266.253) LOOP: DONE GENERATING (program 950)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 266.253) LOOP: START TESTING
( 266.256) LOOP: DONE TESTING ('some', 'some')
( 266.256) LOOP: START IMPOSING CONSTRAINTS
( 266.256) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 266.256) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 266.257) GENERATE: START GROUNDING (impose_constraints)
( 266.789) GENERATE: DONE GROUNDING (impose_constraints)
( 266.789) LOOP: DONE IMPOSING CONSTRAINTS
( 266.789) LOOP: START GENERATING (program 951)
( 266.789) GENERATE: START SOLVING
( 267.021) GENERATE: DONE SOLVING
( 267.022) LOOP: DONE GENERATING (program 951)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 267.022) LOOP: START TESTING
( 267.025) LOOP: DONE TESTING ('some', 'some')
( 267.025) LOOP: START IMPOSING CONSTRAINTS
( 267.025) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 267.025) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 267.026) GENERATE: START GROUNDING (impose_constraints)
( 267.573) GENERATE: DONE GROUNDING (impose_constraints)
( 267.573) LOOP: DONE IMPOSING CONSTRAINTS
( 267.573) LOOP: START GENERATING (program 952)
( 267.573) GENERATE: START SOLVING
( 268.123) GENERATE: DONE SOLVING
( 268.124) LOOP: DONE GENERATING (program 952)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
( 268.124) LOOP: START TESTING
( 268.127) LOOP: DONE TESTING ('some', 'some')
( 268.127) LOOP: START IMPOSING CONSTRAINTS
( 268.127) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 268.127) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 268.127) GENERATE: START GROUNDING (impose_constraints)
( 268.654) GENERATE: DONE GROUNDING (impose_constraints)
( 268.654) LOOP: DONE IMPOSING CONSTRAINTS
( 268.654) LOOP: START GENERATING (program 953)
( 268.654) GENERATE: START SOLVING
( 268.808) GENERATE: DONE SOLVING
( 268.808) LOOP: DONE GENERATING (program 953)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 268.808) LOOP: START TESTING
( 268.812) LOOP: DONE TESTING ('some', 'some')
( 268.812) LOOP: START IMPOSING CONSTRAINTS
( 268.812) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 268.812) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 268.812) GENERATE: START GROUNDING (impose_constraints)
( 269.345) GENERATE: DONE GROUNDING (impose_constraints)
( 269.345) LOOP: DONE IMPOSING CONSTRAINTS
( 269.345) LOOP: START GENERATING (program 954)
( 269.345) GENERATE: START SOLVING
( 269.450) GENERATE: DONE SOLVING
( 269.452) LOOP: DONE GENERATING (program 954)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 269.452) LOOP: START TESTING
( 269.456) LOOP: DONE TESTING ('some', 'some')
( 269.456) LOOP: START IMPOSING CONSTRAINTS
( 269.457) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 269.457) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 269.457) GENERATE: START GROUNDING (impose_constraints)
( 269.994) GENERATE: DONE GROUNDING (impose_constraints)
( 269.994) LOOP: DONE IMPOSING CONSTRAINTS
( 269.994) LOOP: START GENERATING (program 955)
( 269.994) GENERATE: START SOLVING
( 270.081) GENERATE: DONE SOLVING
( 270.082) LOOP: DONE GENERATING (program 955)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 270.082) LOOP: START TESTING
( 270.085) LOOP: DONE TESTING ('some', 'some')
( 270.085) LOOP: START IMPOSING CONSTRAINTS
( 270.085) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 270.085) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 270.085) GENERATE: START GROUNDING (impose_constraints)
( 270.650) GENERATE: DONE GROUNDING (impose_constraints)
( 270.650) LOOP: DONE IMPOSING CONSTRAINTS
( 270.650) LOOP: START GENERATING (program 956)
( 270.650) GENERATE: START SOLVING
( 270.755) GENERATE: DONE SOLVING
( 270.756) LOOP: DONE GENERATING (program 956)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 270.756) LOOP: START TESTING
( 270.760) LOOP: DONE TESTING ('some', 'some')
( 270.760) LOOP: START IMPOSING CONSTRAINTS
( 270.760) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 270.760) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 270.760) GENERATE: START GROUNDING (impose_constraints)
( 271.286) GENERATE: DONE GROUNDING (impose_constraints)
( 271.286) LOOP: DONE IMPOSING CONSTRAINTS
( 271.286) LOOP: START GENERATING (program 957)
( 271.286) GENERATE: START SOLVING
( 271.535) GENERATE: DONE SOLVING
( 271.535) LOOP: DONE GENERATING (program 957)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 271.535) LOOP: START TESTING
( 271.539) LOOP: DONE TESTING ('some', 'some')
( 271.539) LOOP: START IMPOSING CONSTRAINTS
( 271.539) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 271.539) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 271.539) GENERATE: START GROUNDING (impose_constraints)
( 272.110) GENERATE: DONE GROUNDING (impose_constraints)
( 272.110) LOOP: DONE IMPOSING CONSTRAINTS
( 272.110) LOOP: START GENERATING (program 958)
( 272.110) GENERATE: START SOLVING
( 272.369) GENERATE: DONE SOLVING
( 272.370) LOOP: DONE GENERATING (program 958)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 272.370) LOOP: START TESTING
( 272.374) LOOP: DONE TESTING ('some', 'some')
( 272.374) LOOP: START IMPOSING CONSTRAINTS
( 272.374) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 272.374) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 272.375) GENERATE: START GROUNDING (impose_constraints)
( 272.952) GENERATE: DONE GROUNDING (impose_constraints)
( 272.952) LOOP: DONE IMPOSING CONSTRAINTS
( 272.952) LOOP: START GENERATING (program 959)
( 272.952) GENERATE: START SOLVING
( 273.209) GENERATE: DONE SOLVING
( 273.210) LOOP: DONE GENERATING (program 959)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
( 273.210) LOOP: START TESTING
( 273.215) LOOP: DONE TESTING ('some', 'some')
( 273.215) LOOP: START IMPOSING CONSTRAINTS
( 273.215) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 273.215) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 273.216) GENERATE: START GROUNDING (impose_constraints)
( 273.757) GENERATE: DONE GROUNDING (impose_constraints)
( 273.757) LOOP: DONE IMPOSING CONSTRAINTS
( 273.757) LOOP: START GENERATING (program 960)
( 273.757) GENERATE: START SOLVING
( 274.169) GENERATE: DONE SOLVING
( 274.169) LOOP: DONE GENERATING (program 960)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 274.170) LOOP: START TESTING
( 274.174) LOOP: DONE TESTING ('some', 'some')
( 274.174) LOOP: START IMPOSING CONSTRAINTS
( 274.174) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 274.174) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 274.174) GENERATE: START GROUNDING (impose_constraints)
( 274.726) GENERATE: DONE GROUNDING (impose_constraints)
( 274.726) LOOP: DONE IMPOSING CONSTRAINTS
( 274.726) LOOP: START GENERATING (program 961)
( 274.726) GENERATE: START SOLVING
( 274.830) GENERATE: DONE SOLVING
( 274.830) LOOP: DONE GENERATING (program 961)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
( 274.830) LOOP: START TESTING
( 274.834) LOOP: DONE TESTING ('some', 'some')
( 274.834) LOOP: START IMPOSING CONSTRAINTS
( 274.835) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 274.835) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 274.835) GENERATE: START GROUNDING (impose_constraints)
( 275.335) GENERATE: DONE GROUNDING (impose_constraints)
( 275.335) LOOP: DONE IMPOSING CONSTRAINTS
( 275.335) LOOP: START GENERATING (program 962)
( 275.335) GENERATE: START SOLVING
( 275.412) GENERATE: DONE SOLVING
( 275.412) LOOP: DONE GENERATING (program 962)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,C,B),my_succ(A,B,D),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 275.412) LOOP: START TESTING
( 275.415) LOOP: DONE TESTING ('some', 'none')
( 275.415) LOOP: START IMPOSING CONSTRAINTS
( 275.415) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 275.415) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 275.415) GENERATE: START GROUNDING (impose_constraints)
( 275.845) GENERATE: DONE GROUNDING (impose_constraints)
( 275.845) LOOP: DONE IMPOSING CONSTRAINTS
( 275.845) LOOP: START GENERATING (program 963)
( 275.845) GENERATE: START SOLVING
( 275.907) GENERATE: DONE SOLVING
( 275.907) LOOP: DONE GENERATING (program 963)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_2(D),my_succ(A,B,D),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 275.907) LOOP: START TESTING
( 275.910) LOOP: DONE TESTING ('some', 'none')
( 275.910) LOOP: START IMPOSING CONSTRAINTS
( 275.910) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 275.910) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 275.910) GENERATE: START GROUNDING (impose_constraints)
( 276.343) GENERATE: DONE GROUNDING (impose_constraints)
( 276.344) LOOP: DONE IMPOSING CONSTRAINTS
( 276.344) LOOP: START GENERATING (program 964)
( 276.344) GENERATE: START SOLVING
( 276.428) GENERATE: DONE SOLVING
( 276.429) LOOP: DONE GENERATING (program 964)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_2(D),my_true_value(A,D),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 276.429) LOOP: START TESTING
( 276.432) LOOP: DONE TESTING ('some', 'some')
( 276.432) LOOP: START IMPOSING CONSTRAINTS
( 276.432) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 276.432) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 276.432) GENERATE: START GROUNDING (impose_constraints)
( 276.861) GENERATE: DONE GROUNDING (impose_constraints)
( 276.861) LOOP: DONE IMPOSING CONSTRAINTS
( 276.861) LOOP: START GENERATING (program 965)
( 276.861) GENERATE: START SOLVING
( 277.450) GENERATE: DONE SOLVING
( 277.451) LOOP: DONE GENERATING (program 965)
PROGRAM:
  next_value(A,B) :- c_1(B),c_5(B),my_true_value(A,C),c_2(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 277.451) LOOP: START TESTING
( 277.453) LOOP: DONE TESTING ('some', 'none')
( 277.453) LOOP: START IMPOSING CONSTRAINTS
( 277.453) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,not recursive.
( 277.453) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,not clause(2).
( 277.454) GENERATE: START GROUNDING (impose_constraints)
( 277.887) GENERATE: DONE GROUNDING (impose_constraints)
( 277.887) LOOP: DONE IMPOSING CONSTRAINTS
( 277.887) LOOP: START GENERATING (program 966)
( 277.887) GENERATE: START SOLVING
( 278.355) GENERATE: DONE SOLVING
( 278.356) LOOP: DONE GENERATING (program 966)
PROGRAM:
  next_value(A,B) :- c_1(C),my_true_value(D,C),my_true_value(D,B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 278.356) LOOP: START TESTING
( 278.358) LOOP: DONE TESTING ('some', 'none')
( 278.358) LOOP: START IMPOSING CONSTRAINTS
( 278.358) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 278.358) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 278.359) GENERATE: START GROUNDING (impose_constraints)
( 278.788) GENERATE: DONE GROUNDING (impose_constraints)
( 278.788) LOOP: DONE IMPOSING CONSTRAINTS
( 278.788) LOOP: START GENERATING (program 967)
( 278.788) GENERATE: START SOLVING
( 278.848) GENERATE: DONE SOLVING
( 278.849) LOOP: DONE GENERATING (program 967)
PROGRAM:
  next_value(A,B) :- c_2(C),my_true_value(D,C),my_true_value(D,B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 278.849) LOOP: START TESTING
( 278.852) LOOP: DONE TESTING ('some', 'some')
( 278.852) LOOP: START IMPOSING CONSTRAINTS
( 278.852) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 278.852) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 278.852) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 278.852) GENERATE: START GROUNDING (impose_constraints)
( 279.285) GENERATE: DONE GROUNDING (impose_constraints)
( 279.285) LOOP: DONE IMPOSING CONSTRAINTS
( 279.285) LOOP: START GENERATING (program 968)
( 279.285) GENERATE: START SOLVING
( 279.348) GENERATE: DONE SOLVING
( 279.348) LOOP: DONE GENERATING (program 968)
PROGRAM:
  next_value(A,B) :- c_5(C),my_true_value(D,C),my_true_value(D,B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 279.348) LOOP: START TESTING
( 279.351) LOOP: DONE TESTING ('some', 'none')
( 279.351) LOOP: START IMPOSING CONSTRAINTS
( 279.351) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 279.351) GENERATE: START GROUNDING (impose_constraints)
( 279.774) GENERATE: DONE GROUNDING (impose_constraints)
( 279.774) LOOP: DONE IMPOSING CONSTRAINTS
( 279.774) LOOP: START GENERATING (program 969)
( 279.774) GENERATE: START SOLVING
( 279.833) GENERATE: DONE SOLVING
( 279.834) LOOP: DONE GENERATING (program 969)
PROGRAM:
  next_value(A,B) :- c_3(C),my_true_value(D,C),my_true_value(D,B),my_true_value(A,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 279.834) LOOP: START TESTING
( 279.836) LOOP: DONE TESTING ('some', 'some')
( 279.836) LOOP: START IMPOSING CONSTRAINTS
( 279.836) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 279.836) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 279.836) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 279.837) GENERATE: START GROUNDING (impose_constraints)
( 280.268) GENERATE: DONE GROUNDING (impose_constraints)
( 280.268) LOOP: DONE IMPOSING CONSTRAINTS
( 280.268) LOOP: START GENERATING (program 970)
( 280.268) GENERATE: START SOLVING
( 280.950) GENERATE: DONE SOLVING
( 280.950) LOOP: DONE GENERATING (program 970)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(C),my_true_value(A,C),c_4(D),my_succ(A,D,B).
( 280.950) LOOP: START TESTING
( 280.953) LOOP: DONE TESTING ('some', 'none')
( 280.953) LOOP: START IMPOSING CONSTRAINTS
( 280.953) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 280.953) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 280.953) GENERATE: START GROUNDING (impose_constraints)
( 281.386) GENERATE: DONE GROUNDING (impose_constraints)
( 281.386) LOOP: DONE IMPOSING CONSTRAINTS
( 281.386) LOOP: START GENERATING (program 971)
( 281.386) GENERATE: START SOLVING
( 281.572) GENERATE: DONE SOLVING
( 281.572) LOOP: DONE GENERATING (program 971)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 281.572) LOOP: START TESTING
( 281.575) LOOP: DONE TESTING ('some', 'some')
( 281.575) LOOP: START IMPOSING CONSTRAINTS
( 281.575) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 281.575) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 281.575) GENERATE: START GROUNDING (impose_constraints)
( 282.002) GENERATE: DONE GROUNDING (impose_constraints)
( 282.002) LOOP: DONE IMPOSING CONSTRAINTS
( 282.002) LOOP: START GENERATING (program 972)
( 282.002) GENERATE: START SOLVING
( 282.146) GENERATE: DONE SOLVING
( 282.146) LOOP: DONE GENERATING (program 972)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 282.146) LOOP: START TESTING
( 282.149) LOOP: DONE TESTING ('some', 'some')
( 282.149) LOOP: START IMPOSING CONSTRAINTS
( 282.149) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 282.149) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 282.149) GENERATE: START GROUNDING (impose_constraints)
( 282.585) GENERATE: DONE GROUNDING (impose_constraints)
( 282.585) LOOP: DONE IMPOSING CONSTRAINTS
( 282.585) LOOP: START GENERATING (program 973)
( 282.585) GENERATE: START SOLVING
( 282.666) GENERATE: DONE SOLVING
( 282.666) LOOP: DONE GENERATING (program 973)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 282.666) LOOP: START TESTING
( 282.669) LOOP: DONE TESTING ('some', 'some')
( 282.669) LOOP: START IMPOSING CONSTRAINTS
( 282.669) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 282.669) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 282.669) GENERATE: START GROUNDING (impose_constraints)
( 283.100) GENERATE: DONE GROUNDING (impose_constraints)
( 283.100) LOOP: DONE IMPOSING CONSTRAINTS
( 283.100) LOOP: START GENERATING (program 974)
( 283.100) GENERATE: START SOLVING
( 283.172) GENERATE: DONE SOLVING
( 283.173) LOOP: DONE GENERATING (program 974)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 283.173) LOOP: START TESTING
( 283.176) LOOP: DONE TESTING ('some', 'some')
( 283.176) LOOP: START IMPOSING CONSTRAINTS
( 283.176) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 283.176) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 283.176) GENERATE: START GROUNDING (impose_constraints)
( 283.610) GENERATE: DONE GROUNDING (impose_constraints)
( 283.610) LOOP: DONE IMPOSING CONSTRAINTS
( 283.610) LOOP: START GENERATING (program 975)
( 283.610) GENERATE: START SOLVING
( 283.690) GENERATE: DONE SOLVING
( 283.691) LOOP: DONE GENERATING (program 975)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 283.691) LOOP: START TESTING
( 283.693) LOOP: DONE TESTING ('some', 'some')
( 283.693) LOOP: START IMPOSING CONSTRAINTS
( 283.693) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 283.693) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 283.694) GENERATE: START GROUNDING (impose_constraints)
( 284.124) GENERATE: DONE GROUNDING (impose_constraints)
( 284.124) LOOP: DONE IMPOSING CONSTRAINTS
( 284.124) LOOP: START GENERATING (program 976)
( 284.124) GENERATE: START SOLVING
( 284.190) GENERATE: DONE SOLVING
( 284.191) LOOP: DONE GENERATING (program 976)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 284.191) LOOP: START TESTING
( 284.193) LOOP: DONE TESTING ('some', 'some')
( 284.193) LOOP: START IMPOSING CONSTRAINTS
( 284.193) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 284.193) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 284.194) GENERATE: START GROUNDING (impose_constraints)
( 284.630) GENERATE: DONE GROUNDING (impose_constraints)
( 284.630) LOOP: DONE IMPOSING CONSTRAINTS
( 284.630) LOOP: START GENERATING (program 977)
( 284.630) GENERATE: START SOLVING
( 284.696) GENERATE: DONE SOLVING
( 284.696) LOOP: DONE GENERATING (program 977)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 284.696) LOOP: START TESTING
( 284.699) LOOP: DONE TESTING ('some', 'some')
( 284.699) LOOP: START IMPOSING CONSTRAINTS
( 284.699) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 284.699) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 284.699) GENERATE: START GROUNDING (impose_constraints)
( 285.132) GENERATE: DONE GROUNDING (impose_constraints)
( 285.132) LOOP: DONE IMPOSING CONSTRAINTS
( 285.132) LOOP: START GENERATING (program 978)
( 285.132) GENERATE: START SOLVING
( 285.202) GENERATE: DONE SOLVING
( 285.203) LOOP: DONE GENERATING (program 978)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 285.203) LOOP: START TESTING
( 285.206) LOOP: DONE TESTING ('some', 'some')
( 285.206) LOOP: START IMPOSING CONSTRAINTS
( 285.206) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 285.206) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 285.206) GENERATE: START GROUNDING (impose_constraints)
( 285.633) GENERATE: DONE GROUNDING (impose_constraints)
( 285.633) LOOP: DONE IMPOSING CONSTRAINTS
( 285.633) LOOP: START GENERATING (program 979)
( 285.633) GENERATE: START SOLVING
( 285.755) GENERATE: DONE SOLVING
( 285.755) LOOP: DONE GENERATING (program 979)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 285.755) LOOP: START TESTING
( 285.758) LOOP: DONE TESTING ('some', 'some')
( 285.758) LOOP: START IMPOSING CONSTRAINTS
( 285.758) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 285.758) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 285.758) GENERATE: START GROUNDING (impose_constraints)
( 286.188) GENERATE: DONE GROUNDING (impose_constraints)
( 286.188) LOOP: DONE IMPOSING CONSTRAINTS
( 286.188) LOOP: START GENERATING (program 980)
( 286.188) GENERATE: START SOLVING
( 286.265) GENERATE: DONE SOLVING
( 286.266) LOOP: DONE GENERATING (program 980)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 286.266) LOOP: START TESTING
( 286.268) LOOP: DONE TESTING ('some', 'some')
( 286.268) LOOP: START IMPOSING CONSTRAINTS
( 286.269) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 286.269) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 286.269) GENERATE: START GROUNDING (impose_constraints)
( 286.701) GENERATE: DONE GROUNDING (impose_constraints)
( 286.701) LOOP: DONE IMPOSING CONSTRAINTS
( 286.701) LOOP: START GENERATING (program 981)
( 286.701) GENERATE: START SOLVING
( 286.768) GENERATE: DONE SOLVING
( 286.769) LOOP: DONE GENERATING (program 981)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 286.769) LOOP: START TESTING
( 286.771) LOOP: DONE TESTING ('some', 'some')
( 286.771) LOOP: START IMPOSING CONSTRAINTS
( 286.771) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 286.771) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 286.772) GENERATE: START GROUNDING (impose_constraints)
( 287.200) GENERATE: DONE GROUNDING (impose_constraints)
( 287.200) LOOP: DONE IMPOSING CONSTRAINTS
( 287.200) LOOP: START GENERATING (program 982)
( 287.200) GENERATE: START SOLVING
( 287.274) GENERATE: DONE SOLVING
( 287.275) LOOP: DONE GENERATING (program 982)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 287.275) LOOP: START TESTING
( 287.278) LOOP: DONE TESTING ('some', 'some')
( 287.278) LOOP: START IMPOSING CONSTRAINTS
( 287.278) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 287.278) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 287.278) GENERATE: START GROUNDING (impose_constraints)
( 287.712) GENERATE: DONE GROUNDING (impose_constraints)
( 287.712) LOOP: DONE IMPOSING CONSTRAINTS
( 287.712) LOOP: START GENERATING (program 983)
( 287.712) GENERATE: START SOLVING
( 287.841) GENERATE: DONE SOLVING
( 287.842) LOOP: DONE GENERATING (program 983)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 287.842) LOOP: START TESTING
( 287.845) LOOP: DONE TESTING ('some', 'some')
( 287.845) LOOP: START IMPOSING CONSTRAINTS
( 287.845) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 287.845) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 287.845) GENERATE: START GROUNDING (impose_constraints)
( 288.276) GENERATE: DONE GROUNDING (impose_constraints)
( 288.276) LOOP: DONE IMPOSING CONSTRAINTS
( 288.276) LOOP: START GENERATING (program 984)
( 288.276) GENERATE: START SOLVING
( 288.356) GENERATE: DONE SOLVING
( 288.357) LOOP: DONE GENERATING (program 984)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 288.357) LOOP: START TESTING
( 288.360) LOOP: DONE TESTING ('some', 'some')
( 288.360) LOOP: START IMPOSING CONSTRAINTS
( 288.360) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 288.360) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 288.360) GENERATE: START GROUNDING (impose_constraints)
( 288.794) GENERATE: DONE GROUNDING (impose_constraints)
( 288.794) LOOP: DONE IMPOSING CONSTRAINTS
( 288.794) LOOP: START GENERATING (program 985)
( 288.794) GENERATE: START SOLVING
( 288.862) GENERATE: DONE SOLVING
( 288.862) LOOP: DONE GENERATING (program 985)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 288.862) LOOP: START TESTING
( 288.865) LOOP: DONE TESTING ('some', 'some')
( 288.865) LOOP: START IMPOSING CONSTRAINTS
( 288.865) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 288.865) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 288.865) GENERATE: START GROUNDING (impose_constraints)
( 289.299) GENERATE: DONE GROUNDING (impose_constraints)
( 289.299) LOOP: DONE IMPOSING CONSTRAINTS
( 289.299) LOOP: START GENERATING (program 986)
( 289.299) GENERATE: START SOLVING
( 289.367) GENERATE: DONE SOLVING
( 289.368) LOOP: DONE GENERATING (program 986)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 289.368) LOOP: START TESTING
( 289.370) LOOP: DONE TESTING ('some', 'some')
( 289.370) LOOP: START IMPOSING CONSTRAINTS
( 289.370) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 289.370) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 289.371) GENERATE: START GROUNDING (impose_constraints)
( 289.804) GENERATE: DONE GROUNDING (impose_constraints)
( 289.804) LOOP: DONE IMPOSING CONSTRAINTS
( 289.804) LOOP: START GENERATING (program 987)
( 289.804) GENERATE: START SOLVING
( 289.876) GENERATE: DONE SOLVING
( 289.877) LOOP: DONE GENERATING (program 987)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 289.877) LOOP: START TESTING
( 289.879) LOOP: DONE TESTING ('some', 'some')
( 289.879) LOOP: START IMPOSING CONSTRAINTS
( 289.879) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 289.879) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 289.879) GENERATE: START GROUNDING (impose_constraints)
( 290.313) GENERATE: DONE GROUNDING (impose_constraints)
( 290.313) LOOP: DONE IMPOSING CONSTRAINTS
( 290.313) LOOP: START GENERATING (program 988)
( 290.313) GENERATE: START SOLVING
( 290.671) GENERATE: DONE SOLVING
( 290.671) LOOP: DONE GENERATING (program 988)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),c_3(C),my_succ(A,B,D).
( 290.671) LOOP: START TESTING
( 290.674) LOOP: DONE TESTING ('some', 'some')
( 290.674) LOOP: START IMPOSING CONSTRAINTS
( 290.674) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 290.674) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 290.675) GENERATE: START GROUNDING (impose_constraints)
( 291.120) GENERATE: DONE GROUNDING (impose_constraints)
( 291.120) LOOP: DONE IMPOSING CONSTRAINTS
( 291.120) LOOP: START GENERATING (program 989)
( 291.121) GENERATE: START SOLVING
( 291.325) GENERATE: DONE SOLVING
( 291.325) LOOP: DONE GENERATING (program 989)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 291.325) LOOP: START TESTING
( 291.328) LOOP: DONE TESTING ('some', 'some')
( 291.328) LOOP: START IMPOSING CONSTRAINTS
( 291.328) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 291.328) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 291.329) GENERATE: START GROUNDING (impose_constraints)
( 291.760) GENERATE: DONE GROUNDING (impose_constraints)
( 291.760) LOOP: DONE IMPOSING CONSTRAINTS
( 291.760) LOOP: START GENERATING (program 990)
( 291.760) GENERATE: START SOLVING
( 291.885) GENERATE: DONE SOLVING
( 291.885) LOOP: DONE GENERATING (program 990)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
( 291.885) LOOP: START TESTING
( 291.888) LOOP: DONE TESTING ('some', 'some')
( 291.888) LOOP: START IMPOSING CONSTRAINTS
( 291.888) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 291.888) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 291.888) GENERATE: START GROUNDING (impose_constraints)
( 292.332) GENERATE: DONE GROUNDING (impose_constraints)
( 292.332) LOOP: DONE IMPOSING CONSTRAINTS
( 292.332) LOOP: START GENERATING (program 991)
( 292.332) GENERATE: START SOLVING
( 292.553) GENERATE: DONE SOLVING
( 292.553) LOOP: DONE GENERATING (program 991)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
( 292.553) LOOP: START TESTING
( 292.556) LOOP: DONE TESTING ('some', 'some')
( 292.556) LOOP: START IMPOSING CONSTRAINTS
( 292.556) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 292.556) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 292.556) GENERATE: START GROUNDING (impose_constraints)
( 293.004) GENERATE: DONE GROUNDING (impose_constraints)
( 293.004) LOOP: DONE IMPOSING CONSTRAINTS
( 293.004) LOOP: START GENERATING (program 992)
( 293.004) GENERATE: START SOLVING
( 293.098) GENERATE: DONE SOLVING
( 293.098) LOOP: DONE GENERATING (program 992)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 293.098) LOOP: START TESTING
( 293.101) LOOP: DONE TESTING ('some', 'some')
( 293.101) LOOP: START IMPOSING CONSTRAINTS
( 293.101) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 293.101) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 293.101) GENERATE: START GROUNDING (impose_constraints)
( 293.541) GENERATE: DONE GROUNDING (impose_constraints)
( 293.541) LOOP: DONE IMPOSING CONSTRAINTS
( 293.541) LOOP: START GENERATING (program 993)
( 293.541) GENERATE: START SOLVING
( 293.639) GENERATE: DONE SOLVING
( 293.639) LOOP: DONE GENERATING (program 993)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
( 293.639) LOOP: START TESTING
( 293.642) LOOP: DONE TESTING ('some', 'none')
( 293.642) LOOP: START IMPOSING CONSTRAINTS
( 293.642) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 293.642) GENERATE: START GROUNDING (impose_constraints)
( 294.083) GENERATE: DONE GROUNDING (impose_constraints)
( 294.083) LOOP: DONE IMPOSING CONSTRAINTS
( 294.083) LOOP: START GENERATING (program 994)
( 294.083) GENERATE: START SOLVING
( 294.221) GENERATE: DONE SOLVING
( 294.221) LOOP: DONE GENERATING (program 994)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_4(C),my_true_value(A,C),c_1(D),my_succ(A,D,B).
( 294.221) LOOP: START TESTING
( 294.224) LOOP: DONE TESTING ('some', 'some')
( 294.224) LOOP: START IMPOSING CONSTRAINTS
( 294.224) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 294.224) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 294.224) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 294.224) GENERATE: START GROUNDING (impose_constraints)
( 294.672) GENERATE: DONE GROUNDING (impose_constraints)
( 294.672) LOOP: DONE IMPOSING CONSTRAINTS
( 294.672) LOOP: START GENERATING (program 995)
( 294.672) GENERATE: START SOLVING
( 295.034) GENERATE: DONE SOLVING
( 295.035) LOOP: DONE GENERATING (program 995)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),c_1(D),c_5(C),my_succ(A,D,B).
( 295.035) LOOP: START TESTING
( 295.037) LOOP: DONE TESTING ('some', 'some')
( 295.037) LOOP: START IMPOSING CONSTRAINTS
( 295.037) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 295.037) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 295.037) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 295.038) GENERATE: START GROUNDING (impose_constraints)
( 295.484) GENERATE: DONE GROUNDING (impose_constraints)
( 295.484) LOOP: DONE IMPOSING CONSTRAINTS
( 295.484) LOOP: START GENERATING (program 996)
( 295.484) GENERATE: START SOLVING
( 296.000) GENERATE: DONE SOLVING
( 296.000) LOOP: DONE GENERATING (program 996)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(A,C),c_1(D),c_0(C),my_succ(A,D,B).
( 296.000) LOOP: START TESTING
( 296.003) LOOP: DONE TESTING ('some', 'some')
( 296.003) LOOP: START IMPOSING CONSTRAINTS
( 296.003) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 296.003) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 296.003) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 296.003) GENERATE: START GROUNDING (impose_constraints)
( 296.454) GENERATE: DONE GROUNDING (impose_constraints)
( 296.454) LOOP: DONE IMPOSING CONSTRAINTS
( 296.454) LOOP: START GENERATING (program 997)
( 296.454) GENERATE: START SOLVING
( 297.633) GENERATE: DONE SOLVING
( 297.634) LOOP: DONE GENERATING (program 997)
PROGRAM:
  next_value(A,B) :- c_0(D),my_succ(A,C,B),c_1(C),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 297.634) LOOP: START TESTING
( 297.636) LOOP: DONE TESTING ('some', 'none')
( 297.636) LOOP: START IMPOSING CONSTRAINTS
( 297.636) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 297.636) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 297.637) GENERATE: START GROUNDING (impose_constraints)
( 298.094) GENERATE: DONE GROUNDING (impose_constraints)
( 298.094) LOOP: DONE IMPOSING CONSTRAINTS
( 298.094) LOOP: START GENERATING (program 998)
( 298.094) GENERATE: START SOLVING
( 298.466) GENERATE: DONE SOLVING
( 298.466) LOOP: DONE GENERATING (program 998)
PROGRAM:
  next_value(A,B) :- c_3(C),my_true_value(D,B),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 298.466) LOOP: START TESTING
( 298.469) LOOP: DONE TESTING ('some', 'some')
( 298.469) LOOP: START IMPOSING CONSTRAINTS
( 298.469) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 298.469) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 298.469) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 298.469) GENERATE: START GROUNDING (impose_constraints)
( 298.908) GENERATE: DONE GROUNDING (impose_constraints)
( 298.908) LOOP: DONE IMPOSING CONSTRAINTS
( 298.908) LOOP: START GENERATING (program 999)
( 298.908) GENERATE: START SOLVING
( 299.108) GENERATE: DONE SOLVING
( 299.109) LOOP: DONE GENERATING (program 999)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(D),my_succ(A,C,B),c_0(C),my_succ(A,D,B).
( 299.109) LOOP: START TESTING
( 299.112) LOOP: DONE TESTING ('some', 'some')
( 299.112) LOOP: START IMPOSING CONSTRAINTS
( 299.112) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 299.112) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 299.112) GENERATE: START GROUNDING (impose_constraints)
( 299.565) GENERATE: DONE GROUNDING (impose_constraints)
( 299.565) LOOP: DONE IMPOSING CONSTRAINTS
( 299.565) LOOP: START GENERATING (program 1000)
( 299.565) GENERATE: START SOLVING
( 300.078) GENERATE: DONE SOLVING
( 300.078) LOOP: DONE GENERATING (program 1000)
PROGRAM:
  next_value(A,B) :- c_1(C),my_succ(A,C,B),c_4(D),my_succ(A,D,B).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 300.078) LOOP: START TESTING
( 300.081) LOOP: DONE TESTING ('some', 'none')
( 300.081) LOOP: START IMPOSING CONSTRAINTS
( 300.081) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,not recursive.
( 300.081) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 300.081) GENERATE: START GROUNDING (impose_constraints)
( 300.544) GENERATE: DONE GROUNDING (impose_constraints)
( 300.544) LOOP: DONE IMPOSING CONSTRAINTS
( 300.544) LOOP: START GENERATING (program 1001)
( 300.544) GENERATE: START SOLVING
( 300.970) GENERATE: DONE SOLVING
( 300.971) LOOP: DONE GENERATING (program 1001)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),c_1(D),my_succ(A,D,B).
( 300.971) LOOP: START TESTING
( 300.974) LOOP: DONE TESTING ('some', 'some')
( 300.974) LOOP: START IMPOSING CONSTRAINTS
( 300.974) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 300.974) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 300.974) GENERATE: START GROUNDING (impose_constraints)
( 301.425) GENERATE: DONE GROUNDING (impose_constraints)
( 301.425) LOOP: DONE IMPOSING CONSTRAINTS
( 301.425) LOOP: START GENERATING (program 1002)
( 301.425) GENERATE: START SOLVING
( 301.543) GENERATE: DONE SOLVING
( 301.544) LOOP: DONE GENERATING (program 1002)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_4(D),my_succ(A,D,B),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 301.544) LOOP: START TESTING
( 301.547) LOOP: DONE TESTING ('some', 'some')
( 301.547) LOOP: START IMPOSING CONSTRAINTS
( 301.547) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 301.547) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,2),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0.
( 301.547) GENERATE: START GROUNDING (impose_constraints)
( 302.007) GENERATE: DONE GROUNDING (impose_constraints)
( 302.007) LOOP: DONE IMPOSING CONSTRAINTS
( 302.007) LOOP: START GENERATING (program 1003)
( 302.007) GENERATE: START SOLVING
( 302.205) GENERATE: DONE SOLVING
( 302.206) LOOP: DONE GENERATING (program 1003)
PROGRAM:
  next_value(A,B) :- my_true_value(A,B),my_true_value(D,B),my_succ(D,C,B),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,B).
( 302.206) LOOP: START TESTING
( 302.209) LOOP: DONE TESTING ('some', 'none')
( 302.209) LOOP: START IMPOSING CONSTRAINTS
( 302.209) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,not clause(2).
( 302.209) GENERATE: START GROUNDING (impose_constraints)
( 302.660) GENERATE: DONE GROUNDING (impose_constraints)
( 302.660) LOOP: DONE IMPOSING CONSTRAINTS
( 302.660) LOOP: START GENERATING (program 1004)
( 302.660) GENERATE: START SOLVING
( 302.729) GENERATE: DONE SOLVING
( 302.729) LOOP: DONE GENERATING (program 1004)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_5(D),my_succ(C,D,B),my_true_value(A,B),my_true_value(C,B).
( 302.729) LOOP: START TESTING
( 302.732) LOOP: DONE TESTING ('some', 'none')
( 302.732) LOOP: START IMPOSING CONSTRAINTS
( 302.732) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 302.732) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 302.732) GENERATE: START GROUNDING (impose_constraints)
( 303.188) GENERATE: DONE GROUNDING (impose_constraints)
( 303.188) LOOP: DONE IMPOSING CONSTRAINTS
( 303.188) LOOP: START GENERATING (program 1005)
( 303.188) GENERATE: START SOLVING
( 303.251) GENERATE: DONE SOLVING
( 303.251) LOOP: DONE GENERATING (program 1005)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_2(D),my_succ(C,D,B),my_true_value(A,B),my_true_value(C,B).
( 303.251) LOOP: START TESTING
( 303.254) LOOP: DONE TESTING ('some', 'some')
( 303.254) LOOP: START IMPOSING CONSTRAINTS
( 303.254) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 303.254) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 303.254) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 303.254) GENERATE: START GROUNDING (impose_constraints)
( 303.700) GENERATE: DONE GROUNDING (impose_constraints)
( 303.700) LOOP: DONE IMPOSING CONSTRAINTS
( 303.700) LOOP: START GENERATING (program 1006)
( 303.700) GENERATE: START SOLVING
( 303.765) GENERATE: DONE SOLVING
( 303.765) LOOP: DONE GENERATING (program 1006)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_0(D),my_succ(C,D,B),my_true_value(A,B),my_true_value(C,B).
( 303.765) LOOP: START TESTING
( 303.768) LOOP: DONE TESTING ('some', 'none')
( 303.768) LOOP: START IMPOSING CONSTRAINTS
( 303.768) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 303.768) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 303.768) GENERATE: START GROUNDING (impose_constraints)
( 304.213) GENERATE: DONE GROUNDING (impose_constraints)
( 304.213) LOOP: DONE IMPOSING CONSTRAINTS
( 304.213) LOOP: START GENERATING (program 1007)
( 304.213) GENERATE: START SOLVING
( 304.277) GENERATE: DONE SOLVING
( 304.278) LOOP: DONE GENERATING (program 1007)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,B).
  next_value(A,B) :- c_1(D),my_succ(C,D,B),my_true_value(A,B),my_true_value(C,B).
( 304.278) LOOP: START TESTING
( 304.281) LOOP: DONE TESTING ('some', 'some')
( 304.281) LOOP: START IMPOSING CONSTRAINTS
( 304.281) LOOP: CONSTRAINT:
  :-head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not recursive.
( 304.281) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 304.281) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,2),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 304.281) GENERATE: START GROUNDING (impose_constraints)
( 304.737) GENERATE: DONE GROUNDING (impose_constraints)
( 304.737) LOOP: DONE IMPOSING CONSTRAINTS
( 304.737) LOOP: START GENERATING (program 1008)
( 304.737) GENERATE: START SOLVING
( 305.446) GENERATE: DONE SOLVING
( 305.446) LOOP: NO MORE PROGRAMS (with 8 literals)
( 305.446) GENERATE: START SETTING PROGRAM SIZE (9)
( 305.521) GENERATE: START GROUNDING (set_program_size)
( 305.522) GENERATE: DONE GROUNDING (set_program_size)
( 305.522) GENERATE: DONE SETTING PROGRAM SIZE
( 305.522) LOOP: START GENERATING (program 1008)
( 305.522) GENERATE: START SOLVING
( 306.449) GENERATE: DONE SOLVING
( 306.450) LOOP: DONE GENERATING (program 1008)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 306.450) LOOP: START TESTING
( 306.453) LOOP: DONE TESTING ('some', 'some')
( 306.453) LOOP: START IMPOSING CONSTRAINTS
( 306.453) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 306.453) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 306.453) GENERATE: START GROUNDING (impose_constraints)
( 306.906) GENERATE: DONE GROUNDING (impose_constraints)
( 306.906) LOOP: DONE IMPOSING CONSTRAINTS
( 306.906) LOOP: START GENERATING (program 1009)
( 306.906) GENERATE: START SOLVING
( 307.225) GENERATE: DONE SOLVING
( 307.226) LOOP: DONE GENERATING (program 1009)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_4(D),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
( 307.226) LOOP: START TESTING
( 307.228) LOOP: DONE TESTING ('some', 'some')
( 307.228) LOOP: START IMPOSING CONSTRAINTS
( 307.228) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 307.228) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 307.229) GENERATE: START GROUNDING (impose_constraints)
( 307.678) GENERATE: DONE GROUNDING (impose_constraints)
( 307.678) LOOP: DONE IMPOSING CONSTRAINTS
( 307.678) LOOP: START GENERATING (program 1010)
( 307.678) GENERATE: START SOLVING
( 308.061) GENERATE: DONE SOLVING
( 308.062) LOOP: DONE GENERATING (program 1010)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),my_true_value(A,D),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 308.062) LOOP: START TESTING
( 308.065) LOOP: DONE TESTING ('some', 'some')
( 308.065) LOOP: START IMPOSING CONSTRAINTS
( 308.065) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 308.065) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 308.065) GENERATE: START GROUNDING (impose_constraints)
( 308.521) GENERATE: DONE GROUNDING (impose_constraints)
( 308.521) LOOP: DONE IMPOSING CONSTRAINTS
( 308.521) LOOP: START GENERATING (program 1011)
( 308.521) GENERATE: START SOLVING
( 310.740) GENERATE: DONE SOLVING
( 310.740) LOOP: DONE GENERATING (program 1011)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(D),my_succ(A,B,D).
( 310.740) LOOP: START TESTING
( 310.743) LOOP: DONE TESTING ('some', 'some')
( 310.743) LOOP: START IMPOSING CONSTRAINTS
( 310.743) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 310.743) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 310.744) GENERATE: START GROUNDING (impose_constraints)
( 311.225) GENERATE: DONE GROUNDING (impose_constraints)
( 311.225) LOOP: DONE IMPOSING CONSTRAINTS
( 311.225) LOOP: START GENERATING (program 1012)
( 311.225) GENERATE: START SOLVING
( 311.346) GENERATE: DONE SOLVING
( 311.347) LOOP: DONE GENERATING (program 1012)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- c_2(D),my_true_value(A,C),my_succ(A,B,D),c_2(C).
( 311.347) LOOP: START TESTING
( 311.349) LOOP: DONE TESTING ('some', 'some')
( 311.349) LOOP: START IMPOSING CONSTRAINTS
( 311.350) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 311.350) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 311.350) GENERATE: START GROUNDING (impose_constraints)
( 311.825) GENERATE: DONE GROUNDING (impose_constraints)
( 311.825) LOOP: DONE IMPOSING CONSTRAINTS
( 311.825) LOOP: START GENERATING (program 1013)
( 311.825) GENERATE: START SOLVING
( 312.034) GENERATE: DONE SOLVING
( 312.035) LOOP: DONE GENERATING (program 1013)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_2(D),my_true_value(A,C),my_succ(A,B,D),c_2(C).
( 312.035) LOOP: START TESTING
( 312.038) LOOP: DONE TESTING ('some', 'some')
( 312.038) LOOP: START IMPOSING CONSTRAINTS
( 312.038) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 312.038) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 312.038) GENERATE: START GROUNDING (impose_constraints)
( 312.509) GENERATE: DONE GROUNDING (impose_constraints)
( 312.509) LOOP: DONE IMPOSING CONSTRAINTS
( 312.509) LOOP: START GENERATING (program 1014)
( 312.509) GENERATE: START SOLVING
( 312.686) GENERATE: DONE SOLVING
( 312.687) LOOP: DONE GENERATING (program 1014)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_true_value(A,D),my_succ(A,B,D).
( 312.687) LOOP: START TESTING
( 312.689) LOOP: DONE TESTING ('some', 'some')
( 312.689) LOOP: START IMPOSING CONSTRAINTS
( 312.690) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 312.690) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 312.690) GENERATE: START GROUNDING (impose_constraints)
( 313.152) GENERATE: DONE GROUNDING (impose_constraints)
( 313.152) LOOP: DONE IMPOSING CONSTRAINTS
( 313.152) LOOP: START GENERATING (program 1015)
( 313.152) GENERATE: START SOLVING
( 313.282) GENERATE: DONE SOLVING
( 313.283) LOOP: DONE GENERATING (program 1015)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),c_3(C),my_true_value(A,D).
( 313.283) LOOP: START TESTING
( 313.286) LOOP: DONE TESTING ('some', 'some')
( 313.286) LOOP: START IMPOSING CONSTRAINTS
( 313.286) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 313.286) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 313.286) GENERATE: START GROUNDING (impose_constraints)
( 313.740) GENERATE: DONE GROUNDING (impose_constraints)
( 313.740) LOOP: DONE IMPOSING CONSTRAINTS
( 313.740) LOOP: START GENERATING (program 1016)
( 313.740) GENERATE: START SOLVING
( 314.433) GENERATE: DONE SOLVING
( 314.434) LOOP: DONE GENERATING (program 1016)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,D,C),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
( 314.434) LOOP: START TESTING
( 314.436) LOOP: DONE TESTING ('some', 'some')
( 314.436) LOOP: START IMPOSING CONSTRAINTS
( 314.436) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 314.436) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 314.437) GENERATE: START GROUNDING (impose_constraints)
( 314.904) GENERATE: DONE GROUNDING (impose_constraints)
( 314.904) LOOP: DONE IMPOSING CONSTRAINTS
( 314.904) LOOP: START GENERATING (program 1017)
( 314.904) GENERATE: START SOLVING
( 315.674) GENERATE: DONE SOLVING
( 315.675) LOOP: DONE GENERATING (program 1017)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(A,D),c_4(D).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
( 315.675) LOOP: START TESTING
( 315.677) LOOP: DONE TESTING ('some', 'none')
( 315.677) LOOP: START IMPOSING CONSTRAINTS
( 315.677) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 315.677) GENERATE: START GROUNDING (impose_constraints)
( 316.131) GENERATE: DONE GROUNDING (impose_constraints)
( 316.131) LOOP: DONE IMPOSING CONSTRAINTS
( 316.131) LOOP: START GENERATING (program 1018)
( 316.131) GENERATE: START SOLVING
( 316.423) GENERATE: DONE SOLVING
( 316.423) LOOP: DONE GENERATING (program 1018)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_true_value(A,D),my_succ(A,B,D).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 316.424) LOOP: START TESTING
( 316.426) LOOP: DONE TESTING ('some', 'some')
( 316.426) LOOP: START IMPOSING CONSTRAINTS
( 316.426) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 316.426) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 316.427) GENERATE: START GROUNDING (impose_constraints)
( 316.884) GENERATE: DONE GROUNDING (impose_constraints)
( 316.884) LOOP: DONE IMPOSING CONSTRAINTS
( 316.884) LOOP: START GENERATING (program 1019)
( 316.884) GENERATE: START SOLVING
( 317.333) GENERATE: DONE SOLVING
( 317.333) LOOP: DONE GENERATING (program 1019)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,D,C),my_succ(A,C,B).
( 317.333) LOOP: START TESTING
( 317.336) LOOP: DONE TESTING ('some', 'some')
( 317.336) LOOP: START IMPOSING CONSTRAINTS
( 317.336) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 317.336) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 317.336) GENERATE: START GROUNDING (impose_constraints)
( 317.797) GENERATE: DONE GROUNDING (impose_constraints)
( 317.797) LOOP: DONE IMPOSING CONSTRAINTS
( 317.797) LOOP: START GENERATING (program 1020)
( 317.797) GENERATE: START SOLVING
( 318.760) GENERATE: DONE SOLVING
( 318.760) LOOP: DONE GENERATING (program 1020)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,D),my_succ(A,D,B),c_4(C).
( 318.760) LOOP: START TESTING
( 318.763) LOOP: DONE TESTING ('some', 'some')
( 318.763) LOOP: START IMPOSING CONSTRAINTS
( 318.763) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 318.763) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 318.763) GENERATE: START GROUNDING (impose_constraints)
( 319.225) GENERATE: DONE GROUNDING (impose_constraints)
( 319.225) LOOP: DONE IMPOSING CONSTRAINTS
( 319.225) LOOP: START GENERATING (program 1021)
( 319.225) GENERATE: START SOLVING
( 319.340) GENERATE: DONE SOLVING
( 319.341) LOOP: DONE GENERATING (program 1021)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_2(C),my_succ(A,B,D).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 319.341) LOOP: START TESTING
( 319.343) LOOP: DONE TESTING ('some', 'some')
( 319.343) LOOP: START IMPOSING CONSTRAINTS
( 319.344) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 319.344) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 319.344) GENERATE: START GROUNDING (impose_constraints)
( 319.808) GENERATE: DONE GROUNDING (impose_constraints)
( 319.808) LOOP: DONE IMPOSING CONSTRAINTS
( 319.808) LOOP: START GENERATING (program 1022)
( 319.808) GENERATE: START SOLVING
( 319.891) GENERATE: DONE SOLVING
( 319.892) LOOP: DONE GENERATING (program 1022)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(B),c_2(C),my_succ(A,B,D).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 319.892) LOOP: START TESTING
( 319.895) LOOP: DONE TESTING ('some', 'some')
( 319.895) LOOP: START IMPOSING CONSTRAINTS
( 319.895) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 319.895) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 319.895) GENERATE: START GROUNDING (impose_constraints)
( 320.361) GENERATE: DONE GROUNDING (impose_constraints)
( 320.361) LOOP: DONE IMPOSING CONSTRAINTS
( 320.361) LOOP: START GENERATING (program 1023)
( 320.361) GENERATE: START SOLVING
( 320.589) GENERATE: DONE SOLVING
( 320.590) LOOP: DONE GENERATING (program 1023)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_2(B),c_4(D).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 320.590) LOOP: START TESTING
( 320.592) LOOP: DONE TESTING ('some', 'some')
( 320.592) LOOP: START IMPOSING CONSTRAINTS
( 320.593) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 320.593) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,c_4,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 320.593) GENERATE: START GROUNDING (impose_constraints)
( 321.057) GENERATE: DONE GROUNDING (impose_constraints)
( 321.057) LOOP: DONE IMPOSING CONSTRAINTS
( 321.057) LOOP: START GENERATING (program 1024)
( 321.057) GENERATE: START SOLVING
( 321.156) GENERATE: DONE SOLVING
( 321.157) LOOP: DONE GENERATING (program 1024)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_3(D),my_true_value(C,D),my_succ(C,B,D),my_succ(A,B,D).
( 321.157) LOOP: START TESTING
( 321.159) LOOP: DONE TESTING ('some', 'some')
( 321.159) LOOP: START IMPOSING CONSTRAINTS
( 321.160) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V1,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 321.160) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V1,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 321.160) GENERATE: START GROUNDING (impose_constraints)
( 321.628) GENERATE: DONE GROUNDING (impose_constraints)
( 321.628) LOOP: DONE IMPOSING CONSTRAINTS
( 321.628) LOOP: START GENERATING (program 1025)
( 321.628) GENERATE: START SOLVING
( 321.700) GENERATE: DONE SOLVING
( 321.700) LOOP: DONE GENERATING (program 1025)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_3(D),my_succ(C,B,D),my_succ(A,B,D),my_true_value(C,B).
( 321.700) LOOP: START TESTING
( 321.703) LOOP: DONE TESTING ('some', 'some')
( 321.703) LOOP: START IMPOSING CONSTRAINTS
( 321.703) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V1,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 321.703) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V1,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 321.704) GENERATE: START GROUNDING (impose_constraints)
( 322.177) GENERATE: DONE GROUNDING (impose_constraints)
( 322.177) LOOP: DONE IMPOSING CONSTRAINTS
( 322.177) LOOP: START GENERATING (program 1026)
( 322.178) GENERATE: START SOLVING
( 322.249) GENERATE: DONE SOLVING
( 322.249) LOOP: DONE GENERATING (program 1026)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_3(D),my_succ(A,C,B),my_succ(A,B,D),c_1(C).
( 322.250) LOOP: START TESTING
( 322.252) LOOP: DONE TESTING ('some', 'some')
( 322.252) LOOP: START IMPOSING CONSTRAINTS
( 322.252) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 322.252) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 322.252) GENERATE: START GROUNDING (impose_constraints)
( 322.721) GENERATE: DONE GROUNDING (impose_constraints)
( 322.721) LOOP: DONE IMPOSING CONSTRAINTS
( 322.721) LOOP: START GENERATING (program 1027)
( 322.721) GENERATE: START SOLVING
( 322.818) GENERATE: DONE SOLVING
( 322.818) LOOP: DONE GENERATING (program 1027)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_3(D),my_succ(A,D,C),my_succ(A,B,D),c_4(C).
( 322.819) LOOP: START TESTING
( 322.821) LOOP: DONE TESTING ('some', 'some')
( 322.821) LOOP: START IMPOSING CONSTRAINTS
( 322.821) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 322.821) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 322.822) GENERATE: START GROUNDING (impose_constraints)
( 323.292) GENERATE: DONE GROUNDING (impose_constraints)
( 323.292) LOOP: DONE IMPOSING CONSTRAINTS
( 323.292) LOOP: START GENERATING (program 1028)
( 323.292) GENERATE: START SOLVING
( 323.425) GENERATE: DONE SOLVING
( 323.426) LOOP: DONE GENERATING (program 1028)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_2(C),my_succ(A,B,D).
( 323.426) LOOP: START TESTING
( 323.428) LOOP: DONE TESTING ('some', 'some')
( 323.428) LOOP: START IMPOSING CONSTRAINTS
( 323.428) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 323.428) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,c_2,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 323.429) GENERATE: START GROUNDING (impose_constraints)
( 323.896) GENERATE: DONE GROUNDING (impose_constraints)
( 323.896) LOOP: DONE IMPOSING CONSTRAINTS
( 323.896) LOOP: START GENERATING (program 1029)
( 323.896) GENERATE: START SOLVING
( 324.202) GENERATE: DONE SOLVING
( 324.202) LOOP: DONE GENERATING (program 1029)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- c_3(D),my_true_value(A,C),c_3(C),my_succ(A,B,D).
( 324.202) LOOP: START TESTING
( 324.205) LOOP: DONE TESTING ('some', 'some')
( 324.205) LOOP: START IMPOSING CONSTRAINTS
( 324.205) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 324.205) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 324.206) GENERATE: START GROUNDING (impose_constraints)
( 324.683) GENERATE: DONE GROUNDING (impose_constraints)
( 324.683) LOOP: DONE IMPOSING CONSTRAINTS
( 324.683) LOOP: START GENERATING (program 1030)
( 324.683) GENERATE: START SOLVING
( 324.802) GENERATE: DONE SOLVING
( 324.802) LOOP: DONE GENERATING (program 1030)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_true_value(C,D),my_succ(C,D,B),my_true_value(A,B).
( 324.803) LOOP: START TESTING
( 324.805) LOOP: DONE TESTING ('some', 'some')
( 324.805) LOOP: START IMPOSING CONSTRAINTS
( 324.805) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 324.805) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 324.806) GENERATE: START GROUNDING (impose_constraints)
( 325.282) GENERATE: DONE GROUNDING (impose_constraints)
( 325.282) LOOP: DONE IMPOSING CONSTRAINTS
( 325.282) LOOP: START GENERATING (program 1031)
( 325.282) GENERATE: START SOLVING
( 325.489) GENERATE: DONE SOLVING
( 325.489) LOOP: DONE GENERATING (program 1031)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
( 325.490) LOOP: START TESTING
( 325.492) LOOP: DONE TESTING ('some', 'none')
( 325.492) LOOP: START IMPOSING CONSTRAINTS
( 325.492) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 325.492) GENERATE: START GROUNDING (impose_constraints)
( 325.963) GENERATE: DONE GROUNDING (impose_constraints)
( 325.963) LOOP: DONE IMPOSING CONSTRAINTS
( 325.963) LOOP: START GENERATING (program 1032)
( 325.963) GENERATE: START SOLVING
( 326.302) GENERATE: DONE SOLVING
( 326.303) LOOP: DONE GENERATING (program 1032)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 326.303) LOOP: START TESTING
( 326.306) LOOP: DONE TESTING ('some', 'some')
( 326.306) LOOP: START IMPOSING CONSTRAINTS
( 326.306) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 326.306) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 326.306) GENERATE: START GROUNDING (impose_constraints)
( 326.780) GENERATE: DONE GROUNDING (impose_constraints)
( 326.780) LOOP: DONE IMPOSING CONSTRAINTS
( 326.780) LOOP: START GENERATING (program 1033)
( 326.780) GENERATE: START SOLVING
( 326.888) GENERATE: DONE SOLVING
( 326.889) LOOP: DONE GENERATING (program 1033)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),my_true_value(A,C),c_4(D).
( 326.889) LOOP: START TESTING
( 326.892) LOOP: DONE TESTING ('some', 'some')
( 326.892) LOOP: START IMPOSING CONSTRAINTS
( 326.892) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 326.892) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 326.892) GENERATE: START GROUNDING (impose_constraints)
( 327.365) GENERATE: DONE GROUNDING (impose_constraints)
( 327.365) LOOP: DONE IMPOSING CONSTRAINTS
( 327.365) LOOP: START GENERATING (program 1034)
( 327.365) GENERATE: START SOLVING
( 327.452) GENERATE: DONE SOLVING
( 327.453) LOOP: DONE GENERATING (program 1034)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),my_true_value(A,C),c_4(D).
( 327.453) LOOP: START TESTING
( 327.456) LOOP: DONE TESTING ('some', 'some')
( 327.456) LOOP: START IMPOSING CONSTRAINTS
( 327.456) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 327.456) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 327.456) GENERATE: START GROUNDING (impose_constraints)
( 327.933) GENERATE: DONE GROUNDING (impose_constraints)
( 327.933) LOOP: DONE IMPOSING CONSTRAINTS
( 327.933) LOOP: START GENERATING (program 1035)
( 327.933) GENERATE: START SOLVING
( 328.109) GENERATE: DONE SOLVING
( 328.110) LOOP: DONE GENERATING (program 1035)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_true_value(A,C),c_5(D).
( 328.110) LOOP: START TESTING
( 328.113) LOOP: DONE TESTING ('some', 'some')
( 328.113) LOOP: START IMPOSING CONSTRAINTS
( 328.113) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 328.113) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 328.113) GENERATE: START GROUNDING (impose_constraints)
( 328.592) GENERATE: DONE GROUNDING (impose_constraints)
( 328.592) LOOP: DONE IMPOSING CONSTRAINTS
( 328.592) LOOP: START GENERATING (program 1036)
( 328.592) GENERATE: START SOLVING
( 328.682) GENERATE: DONE SOLVING
( 328.683) LOOP: DONE GENERATING (program 1036)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 328.683) LOOP: START TESTING
( 328.685) LOOP: DONE TESTING ('some', 'some')
( 328.685) LOOP: START IMPOSING CONSTRAINTS
( 328.686) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 328.686) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 328.686) GENERATE: START GROUNDING (impose_constraints)
( 329.164) GENERATE: DONE GROUNDING (impose_constraints)
( 329.164) LOOP: DONE IMPOSING CONSTRAINTS
( 329.164) LOOP: START GENERATING (program 1037)
( 329.164) GENERATE: START SOLVING
( 329.451) GENERATE: DONE SOLVING
( 329.452) LOOP: DONE GENERATING (program 1037)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 329.452) LOOP: START TESTING
( 329.455) LOOP: DONE TESTING ('some', 'some')
( 329.455) LOOP: START IMPOSING CONSTRAINTS
( 329.455) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 329.455) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 329.455) GENERATE: START GROUNDING (impose_constraints)
( 329.936) GENERATE: DONE GROUNDING (impose_constraints)
( 329.936) LOOP: DONE IMPOSING CONSTRAINTS
( 329.936) LOOP: START GENERATING (program 1038)
( 329.936) GENERATE: START SOLVING
( 330.066) GENERATE: DONE SOLVING
( 330.067) LOOP: DONE GENERATING (program 1038)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,D,C),my_succ(A,C,B).
( 330.067) LOOP: START TESTING
( 330.070) LOOP: DONE TESTING ('some', 'some')
( 330.070) LOOP: START IMPOSING CONSTRAINTS
( 330.070) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 330.070) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 330.070) GENERATE: START GROUNDING (impose_constraints)
( 330.574) GENERATE: DONE GROUNDING (impose_constraints)
( 330.574) LOOP: DONE IMPOSING CONSTRAINTS
( 330.574) LOOP: START GENERATING (program 1039)
( 330.574) GENERATE: START SOLVING
( 330.691) GENERATE: DONE SOLVING
( 330.691) LOOP: DONE GENERATING (program 1039)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,D,C),my_succ(A,C,B).
( 330.691) LOOP: START TESTING
( 330.694) LOOP: DONE TESTING ('some', 'none')
( 330.694) LOOP: START IMPOSING CONSTRAINTS
( 330.694) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 330.694) GENERATE: START GROUNDING (impose_constraints)
( 331.187) GENERATE: DONE GROUNDING (impose_constraints)
( 331.187) LOOP: DONE IMPOSING CONSTRAINTS
( 331.187) LOOP: START GENERATING (program 1040)
( 331.187) GENERATE: START SOLVING
( 331.282) GENERATE: DONE SOLVING
( 331.282) LOOP: DONE GENERATING (program 1040)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,D,C),my_succ(A,C,B).
( 331.283) LOOP: START TESTING
( 331.285) LOOP: DONE TESTING ('some', 'some')
( 331.285) LOOP: START IMPOSING CONSTRAINTS
( 331.285) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 331.285) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 331.286) GENERATE: START GROUNDING (impose_constraints)
( 331.774) GENERATE: DONE GROUNDING (impose_constraints)
( 331.774) LOOP: DONE IMPOSING CONSTRAINTS
( 331.774) LOOP: START GENERATING (program 1041)
( 331.774) GENERATE: START SOLVING
( 331.936) GENERATE: DONE SOLVING
( 331.937) LOOP: DONE GENERATING (program 1041)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- c_3(D),my_true_value(A,C),my_succ(A,D,C),my_succ(A,C,B).
( 331.937) LOOP: START TESTING
( 331.940) LOOP: DONE TESTING ('some', 'some')
( 331.940) LOOP: START IMPOSING CONSTRAINTS
( 331.940) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 331.940) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 331.940) GENERATE: START GROUNDING (impose_constraints)
( 332.433) GENERATE: DONE GROUNDING (impose_constraints)
( 332.433) LOOP: DONE IMPOSING CONSTRAINTS
( 332.433) LOOP: START GENERATING (program 1042)
( 332.433) GENERATE: START SOLVING
( 332.723) GENERATE: DONE SOLVING
( 332.723) LOOP: DONE GENERATING (program 1042)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 332.723) LOOP: START TESTING
( 332.726) LOOP: DONE TESTING ('some', 'some')
( 332.726) LOOP: START IMPOSING CONSTRAINTS
( 332.727) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 332.727) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 332.727) GENERATE: START GROUNDING (impose_constraints)
( 333.199) GENERATE: DONE GROUNDING (impose_constraints)
( 333.199) LOOP: DONE IMPOSING CONSTRAINTS
( 333.199) LOOP: START GENERATING (program 1043)
( 333.199) GENERATE: START SOLVING
( 333.305) GENERATE: DONE SOLVING
( 333.305) LOOP: DONE GENERATING (program 1043)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(D),my_succ(A,D,C).
( 333.305) LOOP: START TESTING
( 333.308) LOOP: DONE TESTING ('some', 'some')
( 333.308) LOOP: START IMPOSING CONSTRAINTS
( 333.308) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 333.308) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 333.308) GENERATE: START GROUNDING (impose_constraints)
( 333.788) GENERATE: DONE GROUNDING (impose_constraints)
( 333.788) LOOP: DONE IMPOSING CONSTRAINTS
( 333.788) LOOP: START GENERATING (program 1044)
( 333.788) GENERATE: START SOLVING
( 334.032) GENERATE: DONE SOLVING
( 334.032) LOOP: DONE GENERATING (program 1044)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_succ(A,D,C),c_1(D).
( 334.032) LOOP: START TESTING
( 334.035) LOOP: DONE TESTING ('some', 'some')
( 334.035) LOOP: START IMPOSING CONSTRAINTS
( 334.035) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 334.035) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 334.035) GENERATE: START GROUNDING (impose_constraints)
( 334.529) GENERATE: DONE GROUNDING (impose_constraints)
( 334.529) LOOP: DONE IMPOSING CONSTRAINTS
( 334.529) LOOP: START GENERATING (program 1045)
( 334.529) GENERATE: START SOLVING
( 334.690) GENERATE: DONE SOLVING
( 334.690) LOOP: DONE GENERATING (program 1045)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_true_value(A,C),c_1(D).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 334.690) LOOP: START TESTING
( 334.693) LOOP: DONE TESTING ('some', 'some')
( 334.693) LOOP: START IMPOSING CONSTRAINTS
( 334.693) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 334.693) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 334.693) GENERATE: START GROUNDING (impose_constraints)
( 335.185) GENERATE: DONE GROUNDING (impose_constraints)
( 335.185) LOOP: DONE IMPOSING CONSTRAINTS
( 335.185) LOOP: START GENERATING (program 1046)
( 335.185) GENERATE: START SOLVING
( 335.387) GENERATE: DONE SOLVING
( 335.388) LOOP: DONE GENERATING (program 1046)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
( 335.388) LOOP: START TESTING
( 335.391) LOOP: DONE TESTING ('some', 'some')
( 335.391) LOOP: START IMPOSING CONSTRAINTS
( 335.391) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 335.391) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 335.391) GENERATE: START GROUNDING (impose_constraints)
( 335.879) GENERATE: DONE GROUNDING (impose_constraints)
( 335.879) LOOP: DONE IMPOSING CONSTRAINTS
( 335.879) LOOP: START GENERATING (program 1047)
( 335.879) GENERATE: START SOLVING
( 336.795) GENERATE: DONE SOLVING
( 336.796) LOOP: DONE GENERATING (program 1047)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(C,D,B),c_4(D),my_true_value(A,B),my_true_value(C,B).
( 336.796) LOOP: START TESTING
( 336.799) LOOP: DONE TESTING ('some', 'none')
( 336.799) LOOP: START IMPOSING CONSTRAINTS
( 336.799) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 336.799) GENERATE: START GROUNDING (impose_constraints)
( 337.280) GENERATE: DONE GROUNDING (impose_constraints)
( 337.280) LOOP: DONE IMPOSING CONSTRAINTS
( 337.280) LOOP: START GENERATING (program 1048)
( 337.280) GENERATE: START SOLVING
( 337.771) GENERATE: DONE SOLVING
( 337.772) LOOP: DONE GENERATING (program 1048)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_3(C),c_4(D).
( 337.772) LOOP: START TESTING
( 337.775) LOOP: DONE TESTING ('some', 'some')
( 337.775) LOOP: START IMPOSING CONSTRAINTS
( 337.775) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 337.775) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 337.775) GENERATE: START GROUNDING (impose_constraints)
( 338.264) GENERATE: DONE GROUNDING (impose_constraints)
( 338.264) LOOP: DONE IMPOSING CONSTRAINTS
( 338.264) LOOP: START GENERATING (program 1049)
( 338.264) GENERATE: START SOLVING
( 338.647) GENERATE: DONE SOLVING
( 338.647) LOOP: DONE GENERATING (program 1049)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_succ(A,C,D),c_1(B),my_succ(A,C,B),c_1(D).
( 338.647) LOOP: START TESTING
( 338.650) LOOP: DONE TESTING ('some', 'some')
( 338.650) LOOP: START IMPOSING CONSTRAINTS
( 338.650) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 338.650) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_1,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 338.650) GENERATE: START GROUNDING (impose_constraints)
( 339.138) GENERATE: DONE GROUNDING (impose_constraints)
( 339.138) LOOP: DONE IMPOSING CONSTRAINTS
( 339.138) LOOP: START GENERATING (program 1050)
( 339.138) GENERATE: START SOLVING
( 339.278) GENERATE: DONE SOLVING
( 339.278) LOOP: DONE GENERATING (program 1050)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),c_0(C),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
( 339.279) LOOP: START TESTING
( 339.281) LOOP: DONE TESTING ('some', 'some')
( 339.281) LOOP: START IMPOSING CONSTRAINTS
( 339.281) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 339.281) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 339.281) GENERATE: START GROUNDING (impose_constraints)
( 339.783) GENERATE: DONE GROUNDING (impose_constraints)
( 339.783) LOOP: DONE IMPOSING CONSTRAINTS
( 339.783) LOOP: START GENERATING (program 1051)
( 339.783) GENERATE: START SOLVING
( 339.880) GENERATE: DONE SOLVING
( 339.881) LOOP: DONE GENERATING (program 1051)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
( 339.881) LOOP: START TESTING
( 339.884) LOOP: DONE TESTING ('some', 'some')
( 339.884) LOOP: START IMPOSING CONSTRAINTS
( 339.884) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 339.884) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 339.884) GENERATE: START GROUNDING (impose_constraints)
( 340.383) GENERATE: DONE GROUNDING (impose_constraints)
( 340.383) LOOP: DONE IMPOSING CONSTRAINTS
( 340.383) LOOP: START GENERATING (program 1052)
( 340.383) GENERATE: START SOLVING
( 340.457) GENERATE: DONE SOLVING
( 340.458) LOOP: DONE GENERATING (program 1052)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),c_0(C),my_succ(D,C,B).
( 340.458) LOOP: START TESTING
( 340.461) LOOP: DONE TESTING ('some', 'some')
( 340.461) LOOP: START IMPOSING CONSTRAINTS
( 340.461) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 340.461) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 340.461) GENERATE: START GROUNDING (impose_constraints)
( 340.960) GENERATE: DONE GROUNDING (impose_constraints)
( 340.960) LOOP: DONE IMPOSING CONSTRAINTS
( 340.960) LOOP: START GENERATING (program 1053)
( 340.960) GENERATE: START SOLVING
( 341.036) GENERATE: DONE SOLVING
( 341.037) LOOP: DONE GENERATING (program 1053)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
( 341.037) LOOP: START TESTING
( 341.040) LOOP: DONE TESTING ('some', 'some')
( 341.040) LOOP: START IMPOSING CONSTRAINTS
( 341.040) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 341.040) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 341.040) GENERATE: START GROUNDING (impose_constraints)
( 341.539) GENERATE: DONE GROUNDING (impose_constraints)
( 341.539) LOOP: DONE IMPOSING CONSTRAINTS
( 341.539) LOOP: START GENERATING (program 1054)
( 341.539) GENERATE: START SOLVING
( 341.613) GENERATE: DONE SOLVING
( 341.614) LOOP: DONE GENERATING (program 1054)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
( 341.614) LOOP: START TESTING
( 341.616) LOOP: DONE TESTING ('some', 'some')
( 341.616) LOOP: START IMPOSING CONSTRAINTS
( 341.616) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 341.616) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 341.617) GENERATE: START GROUNDING (impose_constraints)
( 342.118) GENERATE: DONE GROUNDING (impose_constraints)
( 342.118) LOOP: DONE IMPOSING CONSTRAINTS
( 342.118) LOOP: START GENERATING (program 1055)
( 342.118) GENERATE: START SOLVING
( 342.191) GENERATE: DONE SOLVING
( 342.192) LOOP: DONE GENERATING (program 1055)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B),c_4(C).
( 342.192) LOOP: START TESTING
( 342.194) LOOP: DONE TESTING ('some', 'some')
( 342.194) LOOP: START IMPOSING CONSTRAINTS
( 342.195) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 342.195) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 342.195) GENERATE: START GROUNDING (impose_constraints)
( 342.680) GENERATE: DONE GROUNDING (impose_constraints)
( 342.681) LOOP: DONE IMPOSING CONSTRAINTS
( 342.681) LOOP: START GENERATING (program 1056)
( 342.681) GENERATE: START SOLVING
( 342.759) GENERATE: DONE SOLVING
( 342.760) LOOP: DONE GENERATING (program 1056)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 342.760) LOOP: START TESTING
( 342.763) LOOP: DONE TESTING ('some', 'some')
( 342.763) LOOP: START IMPOSING CONSTRAINTS
( 342.763) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 342.763) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 342.763) GENERATE: START GROUNDING (impose_constraints)
( 343.255) GENERATE: DONE GROUNDING (impose_constraints)
( 343.255) LOOP: DONE IMPOSING CONSTRAINTS
( 343.255) LOOP: START GENERATING (program 1057)
( 343.255) GENERATE: START SOLVING
( 343.333) GENERATE: DONE SOLVING
( 343.334) LOOP: DONE GENERATING (program 1057)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 343.334) LOOP: START TESTING
( 343.336) LOOP: DONE TESTING ('some', 'some')
( 343.336) LOOP: START IMPOSING CONSTRAINTS
( 343.336) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 343.336) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 343.337) GENERATE: START GROUNDING (impose_constraints)
( 343.827) GENERATE: DONE GROUNDING (impose_constraints)
( 343.827) LOOP: DONE IMPOSING CONSTRAINTS
( 343.827) LOOP: START GENERATING (program 1058)
( 343.827) GENERATE: START SOLVING
( 343.904) GENERATE: DONE SOLVING
( 343.905) LOOP: DONE GENERATING (program 1058)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 343.905) LOOP: START TESTING
( 343.907) LOOP: DONE TESTING ('some', 'some')
( 343.907) LOOP: START IMPOSING CONSTRAINTS
( 343.908) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 343.908) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 343.908) GENERATE: START GROUNDING (impose_constraints)
( 344.400) GENERATE: DONE GROUNDING (impose_constraints)
( 344.400) LOOP: DONE IMPOSING CONSTRAINTS
( 344.400) LOOP: START GENERATING (program 1059)
( 344.400) GENERATE: START SOLVING
( 344.478) GENERATE: DONE SOLVING
( 344.478) LOOP: DONE GENERATING (program 1059)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 344.478) LOOP: START TESTING
( 344.481) LOOP: DONE TESTING ('some', 'some')
( 344.481) LOOP: START IMPOSING CONSTRAINTS
( 344.481) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 344.481) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 344.482) GENERATE: START GROUNDING (impose_constraints)
( 344.980) GENERATE: DONE GROUNDING (impose_constraints)
( 344.980) LOOP: DONE IMPOSING CONSTRAINTS
( 344.980) LOOP: START GENERATING (program 1060)
( 344.980) GENERATE: START SOLVING
( 345.060) GENERATE: DONE SOLVING
( 345.061) LOOP: DONE GENERATING (program 1060)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 345.061) LOOP: START TESTING
( 345.064) LOOP: DONE TESTING ('some', 'some')
( 345.064) LOOP: START IMPOSING CONSTRAINTS
( 345.064) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 345.064) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 345.064) GENERATE: START GROUNDING (impose_constraints)
( 345.570) GENERATE: DONE GROUNDING (impose_constraints)
( 345.570) LOOP: DONE IMPOSING CONSTRAINTS
( 345.570) LOOP: START GENERATING (program 1061)
( 345.570) GENERATE: START SOLVING
( 346.041) GENERATE: DONE SOLVING
( 346.042) LOOP: DONE GENERATING (program 1061)
PROGRAM:
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
( 346.042) LOOP: START TESTING
( 346.045) LOOP: DONE TESTING ('some', 'some')
( 346.045) LOOP: START IMPOSING CONSTRAINTS
( 346.045) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 346.045) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 346.045) GENERATE: START GROUNDING (impose_constraints)
( 346.575) GENERATE: DONE GROUNDING (impose_constraints)
( 346.575) LOOP: DONE IMPOSING CONSTRAINTS
( 346.575) LOOP: START GENERATING (program 1062)
( 346.575) GENERATE: START SOLVING
( 346.671) GENERATE: DONE SOLVING
( 346.671) LOOP: DONE GENERATING (program 1062)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 346.671) LOOP: START TESTING
( 346.674) LOOP: DONE TESTING ('some', 'some')
( 346.674) LOOP: START IMPOSING CONSTRAINTS
( 346.674) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 346.674) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 346.674) GENERATE: START GROUNDING (impose_constraints)
( 347.184) GENERATE: DONE GROUNDING (impose_constraints)
( 347.184) LOOP: DONE IMPOSING CONSTRAINTS
( 347.184) LOOP: START GENERATING (program 1063)
( 347.184) GENERATE: START SOLVING
( 347.277) GENERATE: DONE SOLVING
( 347.278) LOOP: DONE GENERATING (program 1063)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_true_value(A,B),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 347.278) LOOP: START TESTING
( 347.281) LOOP: DONE TESTING ('some', 'some')
( 347.281) LOOP: START IMPOSING CONSTRAINTS
( 347.281) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 347.281) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 347.281) GENERATE: START GROUNDING (impose_constraints)
( 347.796) GENERATE: DONE GROUNDING (impose_constraints)
( 347.796) LOOP: DONE IMPOSING CONSTRAINTS
( 347.796) LOOP: START GENERATING (program 1064)
( 347.796) GENERATE: START SOLVING
( 347.892) GENERATE: DONE SOLVING
( 347.892) LOOP: DONE GENERATING (program 1064)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 347.892) LOOP: START TESTING
( 347.895) LOOP: DONE TESTING ('some', 'some')
( 347.895) LOOP: START IMPOSING CONSTRAINTS
( 347.895) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 347.895) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 347.896) GENERATE: START GROUNDING (impose_constraints)
( 348.401) GENERATE: DONE GROUNDING (impose_constraints)
( 348.401) LOOP: DONE IMPOSING CONSTRAINTS
( 348.401) LOOP: START GENERATING (program 1065)
( 348.401) GENERATE: START SOLVING
( 348.487) GENERATE: DONE SOLVING
( 348.487) LOOP: DONE GENERATING (program 1065)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,C,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 348.487) LOOP: START TESTING
( 348.490) LOOP: DONE TESTING ('some', 'some')
( 348.490) LOOP: START IMPOSING CONSTRAINTS
( 348.490) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 348.490) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 348.490) GENERATE: START GROUNDING (impose_constraints)
( 349.000) GENERATE: DONE GROUNDING (impose_constraints)
( 349.000) LOOP: DONE IMPOSING CONSTRAINTS
( 349.000) LOOP: START GENERATING (program 1066)
( 349.000) GENERATE: START SOLVING
( 349.124) GENERATE: DONE SOLVING
( 349.124) LOOP: DONE GENERATING (program 1066)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B),c_4(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 349.124) LOOP: START TESTING
( 349.127) LOOP: DONE TESTING ('some', 'some')
( 349.127) LOOP: START IMPOSING CONSTRAINTS
( 349.127) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 349.127) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 349.127) GENERATE: START GROUNDING (impose_constraints)
( 349.662) GENERATE: DONE GROUNDING (impose_constraints)
( 349.662) LOOP: DONE IMPOSING CONSTRAINTS
( 349.662) LOOP: START GENERATING (program 1067)
( 349.662) GENERATE: START SOLVING
( 349.745) GENERATE: DONE SOLVING
( 349.746) LOOP: DONE GENERATING (program 1067)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,C,B),c_4(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 349.746) LOOP: START TESTING
( 349.749) LOOP: DONE TESTING ('some', 'some')
( 349.749) LOOP: START IMPOSING CONSTRAINTS
( 349.749) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 349.749) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 349.749) GENERATE: START GROUNDING (impose_constraints)
( 350.253) GENERATE: DONE GROUNDING (impose_constraints)
( 350.253) LOOP: DONE IMPOSING CONSTRAINTS
( 350.254) LOOP: START GENERATING (program 1068)
( 350.254) GENERATE: START SOLVING
( 350.533) GENERATE: DONE SOLVING
( 350.533) LOOP: DONE GENERATING (program 1068)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 350.533) LOOP: START TESTING
( 350.536) LOOP: DONE TESTING ('some', 'some')
( 350.536) LOOP: START IMPOSING CONSTRAINTS
( 350.536) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 350.536) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 350.536) GENERATE: START GROUNDING (impose_constraints)
( 351.050) GENERATE: DONE GROUNDING (impose_constraints)
( 351.050) LOOP: DONE IMPOSING CONSTRAINTS
( 351.050) LOOP: START GENERATING (program 1069)
( 351.050) GENERATE: START SOLVING
( 351.318) GENERATE: DONE SOLVING
( 351.318) LOOP: DONE GENERATING (program 1069)
PROGRAM:
  next_value(A,B) :- my_true_value(A,B),my_true_value(D,B),my_succ(D,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 351.318) LOOP: START TESTING
( 351.321) LOOP: DONE TESTING ('some', 'some')
( 351.321) LOOP: START IMPOSING CONSTRAINTS
( 351.321) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 351.321) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 351.321) GENERATE: START GROUNDING (impose_constraints)
( 351.841) GENERATE: DONE GROUNDING (impose_constraints)
( 351.841) LOOP: DONE IMPOSING CONSTRAINTS
( 351.841) LOOP: START GENERATING (program 1070)
( 351.841) GENERATE: START SOLVING
( 352.037) GENERATE: DONE SOLVING
( 352.037) LOOP: DONE GENERATING (program 1070)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),c_0(C),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 352.037) LOOP: START TESTING
( 352.040) LOOP: DONE TESTING ('some', 'some')
( 352.040) LOOP: START IMPOSING CONSTRAINTS
( 352.040) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 352.040) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 352.041) GENERATE: START GROUNDING (impose_constraints)
( 352.560) GENERATE: DONE GROUNDING (impose_constraints)
( 352.560) LOOP: DONE IMPOSING CONSTRAINTS
( 352.560) LOOP: START GENERATING (program 1071)
( 352.560) GENERATE: START SOLVING
( 352.651) GENERATE: DONE SOLVING
( 352.652) LOOP: DONE GENERATING (program 1071)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_2(C).
( 352.652) LOOP: START TESTING
( 352.655) LOOP: DONE TESTING ('some', 'some')
( 352.655) LOOP: START IMPOSING CONSTRAINTS
( 352.655) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 352.655) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 352.655) GENERATE: START GROUNDING (impose_constraints)
( 353.163) GENERATE: DONE GROUNDING (impose_constraints)
( 353.163) LOOP: DONE IMPOSING CONSTRAINTS
( 353.163) LOOP: START GENERATING (program 1072)
( 353.163) GENERATE: START SOLVING
( 353.239) GENERATE: DONE SOLVING
( 353.240) LOOP: DONE GENERATING (program 1072)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 353.240) LOOP: START TESTING
( 353.242) LOOP: DONE TESTING ('some', 'some')
( 353.242) LOOP: START IMPOSING CONSTRAINTS
( 353.242) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 353.242) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 353.243) GENERATE: START GROUNDING (impose_constraints)
( 353.748) GENERATE: DONE GROUNDING (impose_constraints)
( 353.748) LOOP: DONE IMPOSING CONSTRAINTS
( 353.748) LOOP: START GENERATING (program 1073)
( 353.748) GENERATE: START SOLVING
( 353.824) GENERATE: DONE SOLVING
( 353.824) LOOP: DONE GENERATING (program 1073)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 353.824) LOOP: START TESTING
( 353.827) LOOP: DONE TESTING ('some', 'some')
( 353.827) LOOP: START IMPOSING CONSTRAINTS
( 353.827) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 353.827) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 353.827) GENERATE: START GROUNDING (impose_constraints)
( 354.337) GENERATE: DONE GROUNDING (impose_constraints)
( 354.337) LOOP: DONE IMPOSING CONSTRAINTS
( 354.337) LOOP: START GENERATING (program 1074)
( 354.337) GENERATE: START SOLVING
( 354.513) GENERATE: DONE SOLVING
( 354.514) LOOP: DONE GENERATING (program 1074)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
( 354.514) LOOP: START TESTING
( 354.518) LOOP: DONE TESTING ('some', 'some')
( 354.518) LOOP: START IMPOSING CONSTRAINTS
( 354.518) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 354.518) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 354.518) GENERATE: START GROUNDING (impose_constraints)
( 355.024) GENERATE: DONE GROUNDING (impose_constraints)
( 355.024) LOOP: DONE IMPOSING CONSTRAINTS
( 355.024) LOOP: START GENERATING (program 1075)
( 355.024) GENERATE: START SOLVING
( 355.098) GENERATE: DONE SOLVING
( 355.098) LOOP: DONE GENERATING (program 1075)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_3(C),my_true_value(D,C).
( 355.098) LOOP: START TESTING
( 355.101) LOOP: DONE TESTING ('some', 'some')
( 355.101) LOOP: START IMPOSING CONSTRAINTS
( 355.101) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 355.101) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 355.101) GENERATE: START GROUNDING (impose_constraints)
( 355.615) GENERATE: DONE GROUNDING (impose_constraints)
( 355.615) LOOP: DONE IMPOSING CONSTRAINTS
( 355.615) LOOP: START GENERATING (program 1076)
( 355.615) GENERATE: START SOLVING
( 355.757) GENERATE: DONE SOLVING
( 355.757) LOOP: DONE GENERATING (program 1076)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_1(B),my_true_value(D,C).
( 355.757) LOOP: START TESTING
( 355.760) LOOP: DONE TESTING ('some', 'some')
( 355.760) LOOP: START IMPOSING CONSTRAINTS
( 355.760) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 355.760) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 355.760) GENERATE: START GROUNDING (impose_constraints)
( 356.271) GENERATE: DONE GROUNDING (impose_constraints)
( 356.271) LOOP: DONE IMPOSING CONSTRAINTS
( 356.271) LOOP: START GENERATING (program 1077)
( 356.271) GENERATE: START SOLVING
( 356.381) GENERATE: DONE SOLVING
( 356.381) LOOP: DONE GENERATING (program 1077)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_2(B),my_true_value(D,C).
( 356.381) LOOP: START TESTING
( 356.384) LOOP: DONE TESTING ('some', 'some')
( 356.384) LOOP: START IMPOSING CONSTRAINTS
( 356.384) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 356.384) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 356.384) GENERATE: START GROUNDING (impose_constraints)
( 356.906) GENERATE: DONE GROUNDING (impose_constraints)
( 356.906) LOOP: DONE IMPOSING CONSTRAINTS
( 356.906) LOOP: START GENERATING (program 1078)
( 356.906) GENERATE: START SOLVING
( 356.999) GENERATE: DONE SOLVING
( 356.999) LOOP: DONE GENERATING (program 1078)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 356.999) LOOP: START TESTING
( 357.002) LOOP: DONE TESTING ('some', 'some')
( 357.002) LOOP: START IMPOSING CONSTRAINTS
( 357.002) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 357.002) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 357.002) GENERATE: START GROUNDING (impose_constraints)
( 357.539) GENERATE: DONE GROUNDING (impose_constraints)
( 357.539) LOOP: DONE IMPOSING CONSTRAINTS
( 357.539) LOOP: START GENERATING (program 1079)
( 357.539) GENERATE: START SOLVING
( 357.624) GENERATE: DONE SOLVING
( 357.625) LOOP: DONE GENERATING (program 1079)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_succ(D,B,C),my_true_value(D,B).
( 357.625) LOOP: START TESTING
( 357.628) LOOP: DONE TESTING ('some', 'some')
( 357.628) LOOP: START IMPOSING CONSTRAINTS
( 357.628) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 357.628) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 357.628) GENERATE: START GROUNDING (impose_constraints)
( 358.153) GENERATE: DONE GROUNDING (impose_constraints)
( 358.153) LOOP: DONE IMPOSING CONSTRAINTS
( 358.153) LOOP: START GENERATING (program 1080)
( 358.153) GENERATE: START SOLVING
( 358.236) GENERATE: DONE SOLVING
( 358.236) LOOP: DONE GENERATING (program 1080)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
( 358.236) LOOP: START TESTING
( 358.239) LOOP: DONE TESTING ('some', 'some')
( 358.239) LOOP: START IMPOSING CONSTRAINTS
( 358.239) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 358.239) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 358.239) GENERATE: START GROUNDING (impose_constraints)
( 358.766) GENERATE: DONE GROUNDING (impose_constraints)
( 358.766) LOOP: DONE IMPOSING CONSTRAINTS
( 358.766) LOOP: START GENERATING (program 1081)
( 358.766) GENERATE: START SOLVING
( 358.854) GENERATE: DONE SOLVING
( 358.854) LOOP: DONE GENERATING (program 1081)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
( 358.854) LOOP: START TESTING
( 358.857) LOOP: DONE TESTING ('some', 'some')
( 358.857) LOOP: START IMPOSING CONSTRAINTS
( 358.857) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 358.857) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 358.858) GENERATE: START GROUNDING (impose_constraints)
( 359.375) GENERATE: DONE GROUNDING (impose_constraints)
( 359.375) LOOP: DONE IMPOSING CONSTRAINTS
( 359.375) LOOP: START GENERATING (program 1082)
( 359.375) GENERATE: START SOLVING
( 359.452) GENERATE: DONE SOLVING
( 359.453) LOOP: DONE GENERATING (program 1082)
PROGRAM:
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
( 359.453) LOOP: START TESTING
( 359.456) LOOP: DONE TESTING ('some', 'some')
( 359.456) LOOP: START IMPOSING CONSTRAINTS
( 359.456) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 359.456) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 359.456) GENERATE: START GROUNDING (impose_constraints)
( 359.978) GENERATE: DONE GROUNDING (impose_constraints)
( 359.978) LOOP: DONE IMPOSING CONSTRAINTS
( 359.978) LOOP: START GENERATING (program 1083)
( 359.978) GENERATE: START SOLVING
( 360.218) GENERATE: DONE SOLVING
( 360.218) LOOP: DONE GENERATING (program 1083)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_3(C),my_true_value(D,C).
( 360.218) LOOP: START TESTING
( 360.221) LOOP: DONE TESTING ('some', 'some')
( 360.221) LOOP: START IMPOSING CONSTRAINTS
( 360.221) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 360.221) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 360.222) GENERATE: START GROUNDING (impose_constraints)
( 360.746) GENERATE: DONE GROUNDING (impose_constraints)
( 360.746) LOOP: DONE IMPOSING CONSTRAINTS
( 360.746) LOOP: START GENERATING (program 1084)
( 360.746) GENERATE: START SOLVING
( 360.834) GENERATE: DONE SOLVING
( 360.835) LOOP: DONE GENERATING (program 1084)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 360.835) LOOP: START TESTING
( 360.837) LOOP: DONE TESTING ('some', 'some')
( 360.837) LOOP: START IMPOSING CONSTRAINTS
( 360.837) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 360.837) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 360.838) GENERATE: START GROUNDING (impose_constraints)
( 361.389) GENERATE: DONE GROUNDING (impose_constraints)
( 361.389) LOOP: DONE IMPOSING CONSTRAINTS
( 361.389) LOOP: START GENERATING (program 1085)
( 361.389) GENERATE: START SOLVING
( 361.514) GENERATE: DONE SOLVING
( 361.515) LOOP: DONE GENERATING (program 1085)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 361.515) LOOP: START TESTING
( 361.518) LOOP: DONE TESTING ('some', 'some')
( 361.518) LOOP: START IMPOSING CONSTRAINTS
( 361.518) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 361.518) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 361.518) GENERATE: START GROUNDING (impose_constraints)
( 362.069) GENERATE: DONE GROUNDING (impose_constraints)
( 362.069) LOOP: DONE IMPOSING CONSTRAINTS
( 362.069) LOOP: START GENERATING (program 1086)
( 362.069) GENERATE: START SOLVING
( 362.259) GENERATE: DONE SOLVING
( 362.260) LOOP: DONE GENERATING (program 1086)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_3(C),my_true_value(D,C).
( 362.260) LOOP: START TESTING
( 362.262) LOOP: DONE TESTING ('some', 'some')
( 362.262) LOOP: START IMPOSING CONSTRAINTS
( 362.262) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 362.263) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 362.263) GENERATE: START GROUNDING (impose_constraints)
( 362.824) GENERATE: DONE GROUNDING (impose_constraints)
( 362.824) LOOP: DONE IMPOSING CONSTRAINTS
( 362.824) LOOP: START GENERATING (program 1087)
( 362.824) GENERATE: START SOLVING
( 362.929) GENERATE: DONE SOLVING
( 362.930) LOOP: DONE GENERATING (program 1087)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 362.930) LOOP: START TESTING
( 362.933) LOOP: DONE TESTING ('some', 'some')
( 362.933) LOOP: START IMPOSING CONSTRAINTS
( 362.933) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 362.933) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 362.933) GENERATE: START GROUNDING (impose_constraints)
( 363.482) GENERATE: DONE GROUNDING (impose_constraints)
( 363.482) LOOP: DONE IMPOSING CONSTRAINTS
( 363.482) LOOP: START GENERATING (program 1088)
( 363.482) GENERATE: START SOLVING
( 363.571) GENERATE: DONE SOLVING
( 363.571) LOOP: DONE GENERATING (program 1088)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 363.572) LOOP: START TESTING
( 363.574) LOOP: DONE TESTING ('some', 'some')
( 363.574) LOOP: START IMPOSING CONSTRAINTS
( 363.574) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 363.574) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 363.575) GENERATE: START GROUNDING (impose_constraints)
( 364.128) GENERATE: DONE GROUNDING (impose_constraints)
( 364.128) LOOP: DONE IMPOSING CONSTRAINTS
( 364.128) LOOP: START GENERATING (program 1089)
( 364.128) GENERATE: START SOLVING
( 364.211) GENERATE: DONE SOLVING
( 364.211) LOOP: DONE GENERATING (program 1089)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_2(C).
( 364.212) LOOP: START TESTING
( 364.214) LOOP: DONE TESTING ('some', 'some')
( 364.214) LOOP: START IMPOSING CONSTRAINTS
( 364.214) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 364.214) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 364.215) GENERATE: START GROUNDING (impose_constraints)
( 364.774) GENERATE: DONE GROUNDING (impose_constraints)
( 364.774) LOOP: DONE IMPOSING CONSTRAINTS
( 364.774) LOOP: START GENERATING (program 1090)
( 364.774) GENERATE: START SOLVING
( 364.871) GENERATE: DONE SOLVING
( 364.872) LOOP: DONE GENERATING (program 1090)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 364.872) LOOP: START TESTING
( 364.875) LOOP: DONE TESTING ('some', 'some')
( 364.875) LOOP: START IMPOSING CONSTRAINTS
( 364.875) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 364.875) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 364.875) GENERATE: START GROUNDING (impose_constraints)
( 365.392) GENERATE: DONE GROUNDING (impose_constraints)
( 365.392) LOOP: DONE IMPOSING CONSTRAINTS
( 365.392) LOOP: START GENERATING (program 1091)
( 365.392) GENERATE: START SOLVING
( 365.473) GENERATE: DONE SOLVING
( 365.473) LOOP: DONE GENERATING (program 1091)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 365.473) LOOP: START TESTING
( 365.477) LOOP: DONE TESTING ('some', 'some')
( 365.477) LOOP: START IMPOSING CONSTRAINTS
( 365.477) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 365.477) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 365.477) GENERATE: START GROUNDING (impose_constraints)
( 365.978) GENERATE: DONE GROUNDING (impose_constraints)
( 365.978) LOOP: DONE IMPOSING CONSTRAINTS
( 365.978) LOOP: START GENERATING (program 1092)
( 365.978) GENERATE: START SOLVING
( 366.056) GENERATE: DONE SOLVING
( 366.056) LOOP: DONE GENERATING (program 1092)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_2(C).
( 366.056) LOOP: START TESTING
( 366.060) LOOP: DONE TESTING ('some', 'some')
( 366.060) LOOP: START IMPOSING CONSTRAINTS
( 366.060) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 366.060) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 366.060) GENERATE: START GROUNDING (impose_constraints)
( 366.576) GENERATE: DONE GROUNDING (impose_constraints)
( 366.576) LOOP: DONE IMPOSING CONSTRAINTS
( 366.576) LOOP: START GENERATING (program 1093)
( 366.576) GENERATE: START SOLVING
( 366.684) GENERATE: DONE SOLVING
( 366.684) LOOP: DONE GENERATING (program 1093)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 366.684) LOOP: START TESTING
( 366.687) LOOP: DONE TESTING ('some', 'some')
( 366.687) LOOP: START IMPOSING CONSTRAINTS
( 366.687) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 366.687) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 366.687) GENERATE: START GROUNDING (impose_constraints)
( 367.209) GENERATE: DONE GROUNDING (impose_constraints)
( 367.209) LOOP: DONE IMPOSING CONSTRAINTS
( 367.209) LOOP: START GENERATING (program 1094)
( 367.209) GENERATE: START SOLVING
( 367.299) GENERATE: DONE SOLVING
( 367.300) LOOP: DONE GENERATING (program 1094)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 367.300) LOOP: START TESTING
( 367.302) LOOP: DONE TESTING ('some', 'some')
( 367.303) LOOP: START IMPOSING CONSTRAINTS
( 367.303) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 367.303) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 367.303) GENERATE: START GROUNDING (impose_constraints)
( 367.818) GENERATE: DONE GROUNDING (impose_constraints)
( 367.819) LOOP: DONE IMPOSING CONSTRAINTS
( 367.819) LOOP: START GENERATING (program 1095)
( 367.819) GENERATE: START SOLVING
( 367.902) GENERATE: DONE SOLVING
( 367.903) LOOP: DONE GENERATING (program 1095)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_1(B),my_true_value(D,C).
( 367.903) LOOP: START TESTING
( 367.906) LOOP: DONE TESTING ('some', 'some')
( 367.906) LOOP: START IMPOSING CONSTRAINTS
( 367.906) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 367.906) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 367.906) GENERATE: START GROUNDING (impose_constraints)
( 368.431) GENERATE: DONE GROUNDING (impose_constraints)
( 368.431) LOOP: DONE IMPOSING CONSTRAINTS
( 368.431) LOOP: START GENERATING (program 1096)
( 368.431) GENERATE: START SOLVING
( 368.509) GENERATE: DONE SOLVING
( 368.509) LOOP: DONE GENERATING (program 1096)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_2(B),my_true_value(D,C).
( 368.509) LOOP: START TESTING
( 368.512) LOOP: DONE TESTING ('some', 'some')
( 368.512) LOOP: START IMPOSING CONSTRAINTS
( 368.512) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 368.512) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 368.513) GENERATE: START GROUNDING (impose_constraints)
( 369.042) GENERATE: DONE GROUNDING (impose_constraints)
( 369.042) LOOP: DONE IMPOSING CONSTRAINTS
( 369.042) LOOP: START GENERATING (program 1097)
( 369.042) GENERATE: START SOLVING
( 369.131) GENERATE: DONE SOLVING
( 369.131) LOOP: DONE GENERATING (program 1097)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_1(B),my_true_value(D,C).
( 369.131) LOOP: START TESTING
( 369.134) LOOP: DONE TESTING ('some', 'some')
( 369.134) LOOP: START IMPOSING CONSTRAINTS
( 369.134) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 369.134) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 369.135) GENERATE: START GROUNDING (impose_constraints)
( 369.680) GENERATE: DONE GROUNDING (impose_constraints)
( 369.680) LOOP: DONE IMPOSING CONSTRAINTS
( 369.680) LOOP: START GENERATING (program 1098)
( 369.680) GENERATE: START SOLVING
( 369.940) GENERATE: DONE SOLVING
( 369.941) LOOP: DONE GENERATING (program 1098)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_5(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_2(C).
( 369.941) LOOP: START TESTING
( 369.943) LOOP: DONE TESTING ('some', 'some')
( 369.943) LOOP: START IMPOSING CONSTRAINTS
( 369.943) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 369.943) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 369.944) GENERATE: START GROUNDING (impose_constraints)
( 370.477) GENERATE: DONE GROUNDING (impose_constraints)
( 370.477) LOOP: DONE IMPOSING CONSTRAINTS
( 370.477) LOOP: START GENERATING (program 1099)
( 370.477) GENERATE: START SOLVING
( 371.414) GENERATE: DONE SOLVING
( 371.415) LOOP: DONE GENERATING (program 1099)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_2(C).
( 371.415) LOOP: START TESTING
( 371.418) LOOP: DONE TESTING ('some', 'some')
( 371.418) LOOP: START IMPOSING CONSTRAINTS
( 371.418) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 371.418) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 371.418) GENERATE: START GROUNDING (impose_constraints)
( 371.941) GENERATE: DONE GROUNDING (impose_constraints)
( 371.941) LOOP: DONE IMPOSING CONSTRAINTS
( 371.941) LOOP: START GENERATING (program 1100)
( 371.941) GENERATE: START SOLVING
( 372.100) GENERATE: DONE SOLVING
( 372.100) LOOP: DONE GENERATING (program 1100)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_2(C).
( 372.100) LOOP: START TESTING
( 372.103) LOOP: DONE TESTING ('some', 'some')
( 372.103) LOOP: START IMPOSING CONSTRAINTS
( 372.103) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 372.103) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 372.104) GENERATE: START GROUNDING (impose_constraints)
( 372.645) GENERATE: DONE GROUNDING (impose_constraints)
( 372.645) LOOP: DONE IMPOSING CONSTRAINTS
( 372.645) LOOP: START GENERATING (program 1101)
( 372.645) GENERATE: START SOLVING
( 373.196) GENERATE: DONE SOLVING
( 373.197) LOOP: DONE GENERATING (program 1101)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(A,D),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(C,D),my_succ(C,D,B),my_true_value(A,B).
( 373.197) LOOP: START TESTING
( 373.200) LOOP: DONE TESTING ('some', 'some')
( 373.200) LOOP: START IMPOSING CONSTRAINTS
( 373.200) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 373.200) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 373.200) GENERATE: START GROUNDING (impose_constraints)
( 373.722) GENERATE: DONE GROUNDING (impose_constraints)
( 373.722) LOOP: DONE IMPOSING CONSTRAINTS
( 373.722) LOOP: START GENERATING (program 1102)
( 373.722) GENERATE: START SOLVING
( 373.950) GENERATE: DONE SOLVING
( 373.951) LOOP: DONE GENERATING (program 1102)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
( 373.951) LOOP: START TESTING
( 373.954) LOOP: DONE TESTING ('some', 'some')
( 373.954) LOOP: START IMPOSING CONSTRAINTS
( 373.954) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 373.954) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 373.954) GENERATE: START GROUNDING (impose_constraints)
( 374.479) GENERATE: DONE GROUNDING (impose_constraints)
( 374.479) LOOP: DONE IMPOSING CONSTRAINTS
( 374.479) LOOP: START GENERATING (program 1103)
( 374.479) GENERATE: START SOLVING
( 374.949) GENERATE: DONE SOLVING
( 374.950) LOOP: DONE GENERATING (program 1103)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_2(C).
( 374.950) LOOP: START TESTING
( 374.953) LOOP: DONE TESTING ('some', 'some')
( 374.953) LOOP: START IMPOSING CONSTRAINTS
( 374.953) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 374.953) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 374.953) GENERATE: START GROUNDING (impose_constraints)
( 375.469) GENERATE: DONE GROUNDING (impose_constraints)
( 375.469) LOOP: DONE IMPOSING CONSTRAINTS
( 375.469) LOOP: START GENERATING (program 1104)
( 375.469) GENERATE: START SOLVING
( 375.624) GENERATE: DONE SOLVING
( 375.625) LOOP: DONE GENERATING (program 1104)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(D),my_succ(A,D,C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
( 375.625) LOOP: START TESTING
( 375.628) LOOP: DONE TESTING ('some', 'some')
( 375.628) LOOP: START IMPOSING CONSTRAINTS
( 375.628) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 375.628) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 375.629) GENERATE: START GROUNDING (impose_constraints)
( 376.157) GENERATE: DONE GROUNDING (impose_constraints)
( 376.157) LOOP: DONE IMPOSING CONSTRAINTS
( 376.157) LOOP: START GENERATING (program 1105)
( 376.157) GENERATE: START SOLVING
( 376.271) GENERATE: DONE SOLVING
( 376.271) LOOP: DONE GENERATING (program 1105)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(D),my_succ(A,D,C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 376.272) LOOP: START TESTING
( 376.274) LOOP: DONE TESTING ('some', 'some')
( 376.274) LOOP: START IMPOSING CONSTRAINTS
( 376.274) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 376.274) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 376.275) GENERATE: START GROUNDING (impose_constraints)
( 376.794) GENERATE: DONE GROUNDING (impose_constraints)
( 376.794) LOOP: DONE IMPOSING CONSTRAINTS
( 376.794) LOOP: START GENERATING (program 1106)
( 376.794) GENERATE: START SOLVING
( 376.993) GENERATE: DONE SOLVING
( 376.993) LOOP: DONE GENERATING (program 1106)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(D),my_succ(A,D,C).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
( 376.993) LOOP: START TESTING
( 376.996) LOOP: DONE TESTING ('some', 'some')
( 376.996) LOOP: START IMPOSING CONSTRAINTS
( 376.996) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 376.996) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 376.996) GENERATE: START GROUNDING (impose_constraints)
( 377.527) GENERATE: DONE GROUNDING (impose_constraints)
( 377.527) LOOP: DONE IMPOSING CONSTRAINTS
( 377.527) LOOP: START GENERATING (program 1107)
( 377.527) GENERATE: START SOLVING
( 377.716) GENERATE: DONE SOLVING
( 377.717) LOOP: DONE GENERATING (program 1107)
PROGRAM:
  next_value(A,B) :- c_2(D),my_true_value(A,C),my_succ(A,B,D),c_2(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
( 377.717) LOOP: START TESTING
( 377.720) LOOP: DONE TESTING ('some', 'some')
( 377.720) LOOP: START IMPOSING CONSTRAINTS
( 377.720) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 377.720) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 377.720) GENERATE: START GROUNDING (impose_constraints)
( 378.244) GENERATE: DONE GROUNDING (impose_constraints)
( 378.244) LOOP: DONE IMPOSING CONSTRAINTS
( 378.244) LOOP: START GENERATING (program 1108)
( 378.244) GENERATE: START SOLVING
( 378.409) GENERATE: DONE SOLVING
( 378.410) LOOP: DONE GENERATING (program 1108)
PROGRAM:
  next_value(A,B) :- c_2(D),my_true_value(A,C),my_succ(A,B,D),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 378.410) LOOP: START TESTING
( 378.413) LOOP: DONE TESTING ('some', 'some')
( 378.413) LOOP: START IMPOSING CONSTRAINTS
( 378.413) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 378.413) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 378.413) GENERATE: START GROUNDING (impose_constraints)
( 378.939) GENERATE: DONE GROUNDING (impose_constraints)
( 378.939) LOOP: DONE IMPOSING CONSTRAINTS
( 378.939) LOOP: START GENERATING (program 1109)
( 378.939) GENERATE: START SOLVING
( 379.883) GENERATE: DONE SOLVING
( 379.883) LOOP: DONE GENERATING (program 1109)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(D),my_succ(A,B,D).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 379.883) LOOP: START TESTING
( 379.886) LOOP: DONE TESTING ('some', 'some')
( 379.886) LOOP: START IMPOSING CONSTRAINTS
( 379.886) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 379.886) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 379.886) GENERATE: START GROUNDING (impose_constraints)
( 380.415) GENERATE: DONE GROUNDING (impose_constraints)
( 380.415) LOOP: DONE IMPOSING CONSTRAINTS
( 380.415) LOOP: START GENERATING (program 1110)
( 380.415) GENERATE: START SOLVING
( 380.619) GENERATE: DONE SOLVING
( 380.619) LOOP: DONE GENERATING (program 1110)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(D),c_3(C),my_succ(A,D,B).
( 380.619) LOOP: START TESTING
( 380.623) LOOP: DONE TESTING ('some', 'some')
( 380.623) LOOP: START IMPOSING CONSTRAINTS
( 380.623) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 380.623) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 380.623) GENERATE: START GROUNDING (impose_constraints)
( 381.142) GENERATE: DONE GROUNDING (impose_constraints)
( 381.142) LOOP: DONE IMPOSING CONSTRAINTS
( 381.142) LOOP: START GENERATING (program 1111)
( 381.142) GENERATE: START SOLVING
( 382.364) GENERATE: DONE SOLVING
( 382.365) LOOP: DONE GENERATING (program 1111)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_1(D),my_succ(A,D,B).
( 382.365) LOOP: START TESTING
( 382.367) LOOP: DONE TESTING ('some', 'some')
( 382.367) LOOP: START IMPOSING CONSTRAINTS
( 382.367) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 382.367) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 382.368) GENERATE: START GROUNDING (impose_constraints)
( 382.890) GENERATE: DONE GROUNDING (impose_constraints)
( 382.890) LOOP: DONE IMPOSING CONSTRAINTS
( 382.890) LOOP: START GENERATING (program 1112)
( 382.890) GENERATE: START SOLVING
( 383.037) GENERATE: DONE SOLVING
( 383.038) LOOP: DONE GENERATING (program 1112)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
( 383.038) LOOP: START TESTING
( 383.041) LOOP: DONE TESTING ('some', 'some')
( 383.041) LOOP: START IMPOSING CONSTRAINTS
( 383.041) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 383.041) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 383.041) GENERATE: START GROUNDING (impose_constraints)
( 383.578) GENERATE: DONE GROUNDING (impose_constraints)
( 383.578) LOOP: DONE IMPOSING CONSTRAINTS
( 383.578) LOOP: START GENERATING (program 1113)
( 383.578) GENERATE: START SOLVING
( 383.672) GENERATE: DONE SOLVING
( 383.672) LOOP: DONE GENERATING (program 1113)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
( 383.672) LOOP: START TESTING
( 383.676) LOOP: DONE TESTING ('some', 'some')
( 383.676) LOOP: START IMPOSING CONSTRAINTS
( 383.676) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 383.676) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 383.676) GENERATE: START GROUNDING (impose_constraints)
( 384.211) GENERATE: DONE GROUNDING (impose_constraints)
( 384.211) LOOP: DONE IMPOSING CONSTRAINTS
( 384.211) LOOP: START GENERATING (program 1114)
( 384.211) GENERATE: START SOLVING
( 384.761) GENERATE: DONE SOLVING
( 384.762) LOOP: DONE GENERATING (program 1114)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),my_true_value(A,C),c_4(D).
( 384.762) LOOP: START TESTING
( 384.765) LOOP: DONE TESTING ('some', 'some')
( 384.765) LOOP: START IMPOSING CONSTRAINTS
( 384.765) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 384.765) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 384.765) GENERATE: START GROUNDING (impose_constraints)
( 385.292) GENERATE: DONE GROUNDING (impose_constraints)
( 385.292) LOOP: DONE IMPOSING CONSTRAINTS
( 385.292) LOOP: START GENERATING (program 1115)
( 385.292) GENERATE: START SOLVING
( 385.403) GENERATE: DONE SOLVING
( 385.404) LOOP: DONE GENERATING (program 1115)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),my_true_value(A,C),c_4(D).
( 385.404) LOOP: START TESTING
( 385.407) LOOP: DONE TESTING ('some', 'some')
( 385.407) LOOP: START IMPOSING CONSTRAINTS
( 385.407) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 385.407) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 385.408) GENERATE: START GROUNDING (impose_constraints)
( 385.945) GENERATE: DONE GROUNDING (impose_constraints)
( 385.945) LOOP: DONE IMPOSING CONSTRAINTS
( 385.945) LOOP: START GENERATING (program 1116)
( 385.945) GENERATE: START SOLVING
( 386.040) GENERATE: DONE SOLVING
( 386.041) LOOP: DONE GENERATING (program 1116)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),my_true_value(A,C).
( 386.041) LOOP: START TESTING
( 386.044) LOOP: DONE TESTING ('some', 'some')
( 386.044) LOOP: START IMPOSING CONSTRAINTS
( 386.044) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 386.044) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 386.044) GENERATE: START GROUNDING (impose_constraints)
( 386.582) GENERATE: DONE GROUNDING (impose_constraints)
( 386.582) LOOP: DONE IMPOSING CONSTRAINTS
( 386.582) LOOP: START GENERATING (program 1117)
( 386.582) GENERATE: START SOLVING
( 386.690) GENERATE: DONE SOLVING
( 386.691) LOOP: DONE GENERATING (program 1117)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),my_true_value(A,C).
( 386.691) LOOP: START TESTING
( 386.694) LOOP: DONE TESTING ('some', 'some')
( 386.694) LOOP: START IMPOSING CONSTRAINTS
( 386.694) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 386.694) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 386.694) GENERATE: START GROUNDING (impose_constraints)
( 387.236) GENERATE: DONE GROUNDING (impose_constraints)
( 387.236) LOOP: DONE IMPOSING CONSTRAINTS
( 387.236) LOOP: START GENERATING (program 1118)
( 387.236) GENERATE: START SOLVING
( 387.365) GENERATE: DONE SOLVING
( 387.365) LOOP: DONE GENERATING (program 1118)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),my_true_value(A,C).
( 387.366) LOOP: START TESTING
( 387.369) LOOP: DONE TESTING ('some', 'some')
( 387.369) LOOP: START IMPOSING CONSTRAINTS
( 387.369) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 387.369) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 387.369) GENERATE: START GROUNDING (impose_constraints)
( 387.917) GENERATE: DONE GROUNDING (impose_constraints)
( 387.917) LOOP: DONE IMPOSING CONSTRAINTS
( 387.917) LOOP: START GENERATING (program 1119)
( 387.917) GENERATE: START SOLVING
( 388.053) GENERATE: DONE SOLVING
( 388.054) LOOP: DONE GENERATING (program 1119)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),my_true_value(A,C),c_4(D).
( 388.054) LOOP: START TESTING
( 388.057) LOOP: DONE TESTING ('some', 'some')
( 388.057) LOOP: START IMPOSING CONSTRAINTS
( 388.057) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 388.057) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 388.057) GENERATE: START GROUNDING (impose_constraints)
( 388.614) GENERATE: DONE GROUNDING (impose_constraints)
( 388.614) LOOP: DONE IMPOSING CONSTRAINTS
( 388.614) LOOP: START GENERATING (program 1120)
( 388.614) GENERATE: START SOLVING
( 388.850) GENERATE: DONE SOLVING
( 388.851) LOOP: DONE GENERATING (program 1120)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),my_succ(C,D,B),my_true_value(A,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),my_true_value(A,C).
( 388.851) LOOP: START TESTING
( 388.854) LOOP: DONE TESTING ('some', 'some')
( 388.854) LOOP: START IMPOSING CONSTRAINTS
( 388.854) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 388.854) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V2,ClId0V3,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 388.854) GENERATE: START GROUNDING (impose_constraints)
( 389.399) GENERATE: DONE GROUNDING (impose_constraints)
( 389.399) LOOP: DONE IMPOSING CONSTRAINTS
( 389.399) LOOP: START GENERATING (program 1121)
( 389.399) GENERATE: START SOLVING
( 389.624) GENERATE: DONE SOLVING
( 389.625) LOOP: DONE GENERATING (program 1121)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(A,D),c_4(D).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
( 389.625) LOOP: START TESTING
( 389.628) LOOP: DONE TESTING ('some', 'some')
( 389.628) LOOP: START IMPOSING CONSTRAINTS
( 389.628) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 389.628) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 389.628) GENERATE: START GROUNDING (impose_constraints)
( 390.200) GENERATE: DONE GROUNDING (impose_constraints)
( 390.200) LOOP: DONE IMPOSING CONSTRAINTS
( 390.200) LOOP: START GENERATING (program 1122)
( 390.200) GENERATE: START SOLVING
( 390.364) GENERATE: DONE SOLVING
( 390.365) LOOP: DONE GENERATING (program 1122)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_2(B),c_4(D).
( 390.365) LOOP: START TESTING
( 390.368) LOOP: DONE TESTING ('some', 'some')
( 390.368) LOOP: START IMPOSING CONSTRAINTS
( 390.368) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,c_4,1,(ClId1V3,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 390.368) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,c_4,1,(ClId1V3,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 390.368) GENERATE: START GROUNDING (impose_constraints)
( 390.906) GENERATE: DONE GROUNDING (impose_constraints)
( 390.906) LOOP: DONE IMPOSING CONSTRAINTS
( 390.906) LOOP: START GENERATING (program 1123)
( 390.906) GENERATE: START SOLVING
( 391.175) GENERATE: DONE SOLVING
( 391.175) LOOP: DONE GENERATING (program 1123)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 391.175) LOOP: START TESTING
( 391.179) LOOP: DONE TESTING ('some', 'some')
( 391.179) LOOP: START IMPOSING CONSTRAINTS
( 391.179) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 391.179) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 391.179) GENERATE: START GROUNDING (impose_constraints)
( 391.726) GENERATE: DONE GROUNDING (impose_constraints)
( 391.726) LOOP: DONE IMPOSING CONSTRAINTS
( 391.726) LOOP: START GENERATING (program 1124)
( 391.726) GENERATE: START SOLVING
( 392.057) GENERATE: DONE SOLVING
( 392.057) LOOP: DONE GENERATING (program 1124)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_4(D),my_true_value(A,B).
( 392.057) LOOP: START TESTING
( 392.060) LOOP: DONE TESTING ('some', 'some')
( 392.060) LOOP: START IMPOSING CONSTRAINTS
( 392.060) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 392.060) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 392.061) GENERATE: START GROUNDING (impose_constraints)
( 392.615) GENERATE: DONE GROUNDING (impose_constraints)
( 392.615) LOOP: DONE IMPOSING CONSTRAINTS
( 392.615) LOOP: START GENERATING (program 1125)
( 392.615) GENERATE: START SOLVING
( 393.141) GENERATE: DONE SOLVING
( 393.142) LOOP: DONE GENERATING (program 1125)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_4(D),my_succ(A,D,B).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
( 393.142) LOOP: START TESTING
( 393.145) LOOP: DONE TESTING ('some', 'some')
( 393.145) LOOP: START IMPOSING CONSTRAINTS
( 393.145) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 393.145) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 393.145) GENERATE: START GROUNDING (impose_constraints)
( 393.726) GENERATE: DONE GROUNDING (impose_constraints)
( 393.726) LOOP: DONE IMPOSING CONSTRAINTS
( 393.726) LOOP: START GENERATING (program 1126)
( 393.726) GENERATE: START SOLVING
( 394.241) GENERATE: DONE SOLVING
( 394.241) LOOP: DONE GENERATING (program 1126)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_3(C),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 394.241) LOOP: START TESTING
( 394.244) LOOP: DONE TESTING ('some', 'some')
( 394.244) LOOP: START IMPOSING CONSTRAINTS
( 394.244) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 394.244) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 394.244) GENERATE: START GROUNDING (impose_constraints)
( 394.815) GENERATE: DONE GROUNDING (impose_constraints)
( 394.815) LOOP: DONE IMPOSING CONSTRAINTS
( 394.815) LOOP: START GENERATING (program 1127)
( 394.815) GENERATE: START SOLVING
( 394.954) GENERATE: DONE SOLVING
( 394.955) LOOP: DONE GENERATING (program 1127)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_true_value(A,C),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 394.955) LOOP: START TESTING
( 394.958) LOOP: DONE TESTING ('some', 'some')
( 394.958) LOOP: START IMPOSING CONSTRAINTS
( 394.958) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 394.958) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 394.958) GENERATE: START GROUNDING (impose_constraints)
( 395.514) GENERATE: DONE GROUNDING (impose_constraints)
( 395.514) LOOP: DONE IMPOSING CONSTRAINTS
( 395.514) LOOP: START GENERATING (program 1128)
( 395.514) GENERATE: START SOLVING
( 395.639) GENERATE: DONE SOLVING
( 395.639) LOOP: DONE GENERATING (program 1128)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_3(C),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 395.639) LOOP: START TESTING
( 395.642) LOOP: DONE TESTING ('some', 'some')
( 395.642) LOOP: START IMPOSING CONSTRAINTS
( 395.642) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 395.642) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 395.642) GENERATE: START GROUNDING (impose_constraints)
( 396.202) GENERATE: DONE GROUNDING (impose_constraints)
( 396.202) LOOP: DONE IMPOSING CONSTRAINTS
( 396.202) LOOP: START GENERATING (program 1129)
( 396.202) GENERATE: START SOLVING
( 396.294) GENERATE: DONE SOLVING
( 396.294) LOOP: DONE GENERATING (program 1129)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_true_value(A,C),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 396.294) LOOP: START TESTING
( 396.297) LOOP: DONE TESTING ('some', 'some')
( 396.297) LOOP: START IMPOSING CONSTRAINTS
( 396.297) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 396.297) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 396.298) GENERATE: START GROUNDING (impose_constraints)
( 396.845) GENERATE: DONE GROUNDING (impose_constraints)
( 396.845) LOOP: DONE IMPOSING CONSTRAINTS
( 396.845) LOOP: START GENERATING (program 1130)
( 396.845) GENERATE: START SOLVING
( 396.934) GENERATE: DONE SOLVING
( 396.935) LOOP: DONE GENERATING (program 1130)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_4(D),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 396.935) LOOP: START TESTING
( 396.937) LOOP: DONE TESTING ('some', 'some')
( 396.937) LOOP: START IMPOSING CONSTRAINTS
( 396.937) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 396.937) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 396.938) GENERATE: START GROUNDING (impose_constraints)
( 397.488) GENERATE: DONE GROUNDING (impose_constraints)
( 397.488) LOOP: DONE IMPOSING CONSTRAINTS
( 397.488) LOOP: START GENERATING (program 1131)
( 397.488) GENERATE: START SOLVING
( 397.606) GENERATE: DONE SOLVING
( 397.606) LOOP: DONE GENERATING (program 1131)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_4(D),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 397.606) LOOP: START TESTING
( 397.609) LOOP: DONE TESTING ('some', 'some')
( 397.609) LOOP: START IMPOSING CONSTRAINTS
( 397.609) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 397.609) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 397.609) GENERATE: START GROUNDING (impose_constraints)
( 398.157) GENERATE: DONE GROUNDING (impose_constraints)
( 398.157) LOOP: DONE IMPOSING CONSTRAINTS
( 398.157) LOOP: START GENERATING (program 1132)
( 398.157) GENERATE: START SOLVING
( 398.288) GENERATE: DONE SOLVING
( 398.289) LOOP: DONE GENERATING (program 1132)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(D),c_3(C),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 398.289) LOOP: START TESTING
( 398.292) LOOP: DONE TESTING ('some', 'some')
( 398.292) LOOP: START IMPOSING CONSTRAINTS
( 398.292) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 398.292) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 398.292) GENERATE: START GROUNDING (impose_constraints)
( 398.870) GENERATE: DONE GROUNDING (impose_constraints)
( 398.870) LOOP: DONE IMPOSING CONSTRAINTS
( 398.870) LOOP: START GENERATING (program 1133)
( 398.870) GENERATE: START SOLVING
( 399.320) GENERATE: DONE SOLVING
( 399.320) LOOP: DONE GENERATING (program 1133)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D),c_4(C).
( 399.321) LOOP: START TESTING
( 399.323) LOOP: DONE TESTING ('some', 'some')
( 399.323) LOOP: START IMPOSING CONSTRAINTS
( 399.323) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 399.323) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 399.324) GENERATE: START GROUNDING (impose_constraints)
( 399.903) GENERATE: DONE GROUNDING (impose_constraints)
( 399.903) LOOP: DONE IMPOSING CONSTRAINTS
( 399.903) LOOP: START GENERATING (program 1134)
( 399.903) GENERATE: START SOLVING
( 400.075) GENERATE: DONE SOLVING
( 400.076) LOOP: DONE GENERATING (program 1134)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_3(C),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 400.076) LOOP: START TESTING
( 400.079) LOOP: DONE TESTING ('some', 'some')
( 400.079) LOOP: START IMPOSING CONSTRAINTS
( 400.079) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 400.079) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 400.079) GENERATE: START GROUNDING (impose_constraints)
( 400.679) GENERATE: DONE GROUNDING (impose_constraints)
( 400.679) LOOP: DONE IMPOSING CONSTRAINTS
( 400.679) LOOP: START GENERATING (program 1135)
( 400.679) GENERATE: START SOLVING
( 400.774) GENERATE: DONE SOLVING
( 400.774) LOOP: DONE GENERATING (program 1135)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_3(C),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 400.774) LOOP: START TESTING
( 400.777) LOOP: DONE TESTING ('some', 'some')
( 400.777) LOOP: START IMPOSING CONSTRAINTS
( 400.777) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 400.777) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 400.777) GENERATE: START GROUNDING (impose_constraints)
( 401.342) GENERATE: DONE GROUNDING (impose_constraints)
( 401.342) LOOP: DONE IMPOSING CONSTRAINTS
( 401.342) LOOP: START GENERATING (program 1136)
( 401.342) GENERATE: START SOLVING
( 401.434) GENERATE: DONE SOLVING
( 401.435) LOOP: DONE GENERATING (program 1136)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_3(C),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 401.435) LOOP: START TESTING
( 401.437) LOOP: DONE TESTING ('some', 'some')
( 401.437) LOOP: START IMPOSING CONSTRAINTS
( 401.437) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 401.437) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 401.438) GENERATE: START GROUNDING (impose_constraints)
( 402.010) GENERATE: DONE GROUNDING (impose_constraints)
( 402.010) LOOP: DONE IMPOSING CONSTRAINTS
( 402.010) LOOP: START GENERATING (program 1137)
( 402.010) GENERATE: START SOLVING
( 402.099) GENERATE: DONE SOLVING
( 402.099) LOOP: DONE GENERATING (program 1137)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_3(C),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 402.099) LOOP: START TESTING
( 402.103) LOOP: DONE TESTING ('some', 'some')
( 402.103) LOOP: START IMPOSING CONSTRAINTS
( 402.103) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 402.103) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 402.103) GENERATE: START GROUNDING (impose_constraints)
( 402.718) GENERATE: DONE GROUNDING (impose_constraints)
( 402.718) LOOP: DONE IMPOSING CONSTRAINTS
( 402.718) LOOP: START GENERATING (program 1138)
( 402.718) GENERATE: START SOLVING
( 402.822) GENERATE: DONE SOLVING
( 402.823) LOOP: DONE GENERATING (program 1138)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_true_value(A,C),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 402.823) LOOP: START TESTING
( 402.826) LOOP: DONE TESTING ('some', 'some')
( 402.826) LOOP: START IMPOSING CONSTRAINTS
( 402.826) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 402.826) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 402.826) GENERATE: START GROUNDING (impose_constraints)
( 403.398) GENERATE: DONE GROUNDING (impose_constraints)
( 403.398) LOOP: DONE IMPOSING CONSTRAINTS
( 403.398) LOOP: START GENERATING (program 1139)
( 403.398) GENERATE: START SOLVING
( 403.532) GENERATE: DONE SOLVING
( 403.533) LOOP: DONE GENERATING (program 1139)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),c_1(D),c_3(C),my_succ(A,D,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 403.533) LOOP: START TESTING
( 403.535) LOOP: DONE TESTING ('some', 'some')
( 403.535) LOOP: START IMPOSING CONSTRAINTS
( 403.536) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 403.536) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 403.536) GENERATE: START GROUNDING (impose_constraints)
( 404.107) GENERATE: DONE GROUNDING (impose_constraints)
( 404.107) LOOP: DONE IMPOSING CONSTRAINTS
( 404.107) LOOP: START GENERATING (program 1140)
( 404.107) GENERATE: START SOLVING
( 404.245) GENERATE: DONE SOLVING
( 404.245) LOOP: DONE GENERATING (program 1140)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_true_value(A,C),c_3(C),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
( 404.245) LOOP: START TESTING
( 404.248) LOOP: DONE TESTING ('some', 'some')
( 404.248) LOOP: START IMPOSING CONSTRAINTS
( 404.248) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 404.248) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 404.248) GENERATE: START GROUNDING (impose_constraints)
( 404.812) GENERATE: DONE GROUNDING (impose_constraints)
( 404.812) LOOP: DONE IMPOSING CONSTRAINTS
( 404.812) LOOP: START GENERATING (program 1141)
( 404.812) GENERATE: START SOLVING
( 405.125) GENERATE: DONE SOLVING
( 405.126) LOOP: DONE GENERATING (program 1141)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_true_value(A,D),my_succ(A,B,D).
( 405.126) LOOP: START TESTING
( 405.128) LOOP: DONE TESTING ('some', 'some')
( 405.128) LOOP: START IMPOSING CONSTRAINTS
( 405.128) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 405.128) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V3)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 405.129) GENERATE: START GROUNDING (impose_constraints)
( 405.704) GENERATE: DONE GROUNDING (impose_constraints)
( 405.704) LOOP: DONE IMPOSING CONSTRAINTS
( 405.704) LOOP: START GENERATING (program 1142)
( 405.704) GENERATE: START SOLVING
( 406.289) GENERATE: DONE SOLVING
( 406.289) LOOP: DONE GENERATING (program 1142)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_4(D),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
( 406.289) LOOP: START TESTING
( 406.292) LOOP: DONE TESTING ('some', 'none')
( 406.292) LOOP: START IMPOSING CONSTRAINTS
( 406.292) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 406.292) GENERATE: START GROUNDING (impose_constraints)
( 406.863) GENERATE: DONE GROUNDING (impose_constraints)
( 406.863) LOOP: DONE IMPOSING CONSTRAINTS
( 406.863) LOOP: START GENERATING (program 1143)
( 406.863) GENERATE: START SOLVING
( 407.219) GENERATE: DONE SOLVING
( 407.219) LOOP: DONE GENERATING (program 1143)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_4(D),my_true_value(A,B).
( 407.220) LOOP: START TESTING
( 407.222) LOOP: DONE TESTING ('some', 'some')
( 407.222) LOOP: START IMPOSING CONSTRAINTS
( 407.222) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 407.222) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 407.223) GENERATE: START GROUNDING (impose_constraints)
( 407.794) GENERATE: DONE GROUNDING (impose_constraints)
( 407.794) LOOP: DONE IMPOSING CONSTRAINTS
( 407.794) LOOP: START GENERATING (program 1144)
( 407.794) GENERATE: START SOLVING
( 407.948) GENERATE: DONE SOLVING
( 407.949) LOOP: DONE GENERATING (program 1144)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_succ(A,C,B),c_5(D).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 407.949) LOOP: START TESTING
( 407.952) LOOP: DONE TESTING ('some', 'some')
( 407.952) LOOP: START IMPOSING CONSTRAINTS
( 407.952) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 407.952) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 407.952) GENERATE: START GROUNDING (impose_constraints)
( 408.523) GENERATE: DONE GROUNDING (impose_constraints)
( 408.523) LOOP: DONE IMPOSING CONSTRAINTS
( 408.523) LOOP: START GENERATING (program 1145)
( 408.523) GENERATE: START SOLVING
( 408.629) GENERATE: DONE SOLVING
( 408.629) LOOP: DONE GENERATING (program 1145)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_succ(A,C,B),c_5(D).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 408.629) LOOP: START TESTING
( 408.633) LOOP: DONE TESTING ('some', 'some')
( 408.633) LOOP: START IMPOSING CONSTRAINTS
( 408.633) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 408.633) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 408.633) GENERATE: START GROUNDING (impose_constraints)
( 409.215) GENERATE: DONE GROUNDING (impose_constraints)
( 409.215) LOOP: DONE IMPOSING CONSTRAINTS
( 409.215) LOOP: START GENERATING (program 1146)
( 409.215) GENERATE: START SOLVING
( 409.318) GENERATE: DONE SOLVING
( 409.318) LOOP: DONE GENERATING (program 1146)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
( 409.318) LOOP: START TESTING
( 409.321) LOOP: DONE TESTING ('some', 'some')
( 409.321) LOOP: START IMPOSING CONSTRAINTS
( 409.321) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 409.321) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 409.322) GENERATE: START GROUNDING (impose_constraints)
( 409.907) GENERATE: DONE GROUNDING (impose_constraints)
( 409.908) LOOP: DONE IMPOSING CONSTRAINTS
( 409.908) LOOP: START GENERATING (program 1147)
( 409.908) GENERATE: START SOLVING
( 410.057) GENERATE: DONE SOLVING
( 410.058) LOOP: DONE GENERATING (program 1147)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
( 410.058) LOOP: START TESTING
( 410.061) LOOP: DONE TESTING ('some', 'some')
( 410.061) LOOP: START IMPOSING CONSTRAINTS
( 410.061) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 410.061) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 410.061) GENERATE: START GROUNDING (impose_constraints)
( 410.629) GENERATE: DONE GROUNDING (impose_constraints)
( 410.629) LOOP: DONE IMPOSING CONSTRAINTS
( 410.629) LOOP: START GENERATING (program 1148)
( 410.629) GENERATE: START SOLVING
( 411.224) GENERATE: DONE SOLVING
( 411.224) LOOP: DONE GENERATING (program 1148)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
( 411.224) LOOP: START TESTING
( 411.228) LOOP: DONE TESTING ('some', 'some')
( 411.228) LOOP: START IMPOSING CONSTRAINTS
( 411.228) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 411.228) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 411.228) GENERATE: START GROUNDING (impose_constraints)
( 411.812) GENERATE: DONE GROUNDING (impose_constraints)
( 411.812) LOOP: DONE IMPOSING CONSTRAINTS
( 411.812) LOOP: START GENERATING (program 1149)
( 411.812) GENERATE: START SOLVING
( 412.043) GENERATE: DONE SOLVING
( 412.043) LOOP: DONE GENERATING (program 1149)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
( 412.044) LOOP: START TESTING
( 412.047) LOOP: DONE TESTING ('some', 'some')
( 412.047) LOOP: START IMPOSING CONSTRAINTS
( 412.047) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 412.047) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 412.047) GENERATE: START GROUNDING (impose_constraints)
( 412.631) GENERATE: DONE GROUNDING (impose_constraints)
( 412.631) LOOP: DONE IMPOSING CONSTRAINTS
( 412.631) LOOP: START GENERATING (program 1150)
( 412.631) GENERATE: START SOLVING
( 412.763) GENERATE: DONE SOLVING
( 412.764) LOOP: DONE GENERATING (program 1150)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_succ(D,B,C),my_true_value(D,B).
( 412.764) LOOP: START TESTING
( 412.767) LOOP: DONE TESTING ('some', 'some')
( 412.767) LOOP: START IMPOSING CONSTRAINTS
( 412.767) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 412.767) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 412.767) GENERATE: START GROUNDING (impose_constraints)
( 413.327) GENERATE: DONE GROUNDING (impose_constraints)
( 413.327) LOOP: DONE IMPOSING CONSTRAINTS
( 413.327) LOOP: START GENERATING (program 1151)
( 413.327) GENERATE: START SOLVING
( 413.419) GENERATE: DONE SOLVING
( 413.419) LOOP: DONE GENERATING (program 1151)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
( 413.419) LOOP: START TESTING
( 413.423) LOOP: DONE TESTING ('some', 'some')
( 413.423) LOOP: START IMPOSING CONSTRAINTS
( 413.423) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 413.423) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 413.423) GENERATE: START GROUNDING (impose_constraints)
( 413.998) GENERATE: DONE GROUNDING (impose_constraints)
( 413.998) LOOP: DONE IMPOSING CONSTRAINTS
( 413.998) LOOP: START GENERATING (program 1152)
( 413.998) GENERATE: START SOLVING
( 414.101) GENERATE: DONE SOLVING
( 414.101) LOOP: DONE GENERATING (program 1152)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
( 414.101) LOOP: START TESTING
( 414.104) LOOP: DONE TESTING ('some', 'some')
( 414.104) LOOP: START IMPOSING CONSTRAINTS
( 414.104) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 414.104) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 414.105) GENERATE: START GROUNDING (impose_constraints)
( 414.683) GENERATE: DONE GROUNDING (impose_constraints)
( 414.683) LOOP: DONE IMPOSING CONSTRAINTS
( 414.683) LOOP: START GENERATING (program 1153)
( 414.683) GENERATE: START SOLVING
( 414.770) GENERATE: DONE SOLVING
( 414.771) LOOP: DONE GENERATING (program 1153)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_succ(D,B,C),my_true_value(D,B).
( 414.771) LOOP: START TESTING
( 414.774) LOOP: DONE TESTING ('some', 'some')
( 414.774) LOOP: START IMPOSING CONSTRAINTS
( 414.774) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 414.774) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 414.775) GENERATE: START GROUNDING (impose_constraints)
( 415.362) GENERATE: DONE GROUNDING (impose_constraints)
( 415.362) LOOP: DONE IMPOSING CONSTRAINTS
( 415.362) LOOP: START GENERATING (program 1154)
( 415.362) GENERATE: START SOLVING
( 415.449) GENERATE: DONE SOLVING
( 415.450) LOOP: DONE GENERATING (program 1154)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_succ(D,B,C),my_true_value(D,B).
( 415.450) LOOP: START TESTING
( 415.453) LOOP: DONE TESTING ('some', 'some')
( 415.453) LOOP: START IMPOSING CONSTRAINTS
( 415.453) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 415.453) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 415.453) GENERATE: START GROUNDING (impose_constraints)
( 416.048) GENERATE: DONE GROUNDING (impose_constraints)
( 416.048) LOOP: DONE IMPOSING CONSTRAINTS
( 416.048) LOOP: START GENERATING (program 1155)
( 416.048) GENERATE: START SOLVING
( 416.134) GENERATE: DONE SOLVING
( 416.134) LOOP: DONE GENERATING (program 1155)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
( 416.134) LOOP: START TESTING
( 416.137) LOOP: DONE TESTING ('some', 'some')
( 416.137) LOOP: START IMPOSING CONSTRAINTS
( 416.137) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 416.137) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 416.137) GENERATE: START GROUNDING (impose_constraints)
( 416.711) GENERATE: DONE GROUNDING (impose_constraints)
( 416.711) LOOP: DONE IMPOSING CONSTRAINTS
( 416.711) LOOP: START GENERATING (program 1156)
( 416.711) GENERATE: START SOLVING
( 416.807) GENERATE: DONE SOLVING
( 416.808) LOOP: DONE GENERATING (program 1156)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
( 416.808) LOOP: START TESTING
( 416.811) LOOP: DONE TESTING ('some', 'some')
( 416.811) LOOP: START IMPOSING CONSTRAINTS
( 416.811) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 416.811) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 416.811) GENERATE: START GROUNDING (impose_constraints)
( 417.395) GENERATE: DONE GROUNDING (impose_constraints)
( 417.395) LOOP: DONE IMPOSING CONSTRAINTS
( 417.395) LOOP: START GENERATING (program 1157)
( 417.395) GENERATE: START SOLVING
( 417.489) GENERATE: DONE SOLVING
( 417.490) LOOP: DONE GENERATING (program 1157)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
( 417.490) LOOP: START TESTING
( 417.493) LOOP: DONE TESTING ('some', 'some')
( 417.493) LOOP: START IMPOSING CONSTRAINTS
( 417.493) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 417.493) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 417.493) GENERATE: START GROUNDING (impose_constraints)
( 418.075) GENERATE: DONE GROUNDING (impose_constraints)
( 418.075) LOOP: DONE IMPOSING CONSTRAINTS
( 418.075) LOOP: START GENERATING (program 1158)
( 418.075) GENERATE: START SOLVING
( 418.165) GENERATE: DONE SOLVING
( 418.166) LOOP: DONE GENERATING (program 1158)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
( 418.166) LOOP: START TESTING
( 418.168) LOOP: DONE TESTING ('some', 'some')
( 418.168) LOOP: START IMPOSING CONSTRAINTS
( 418.169) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 418.169) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 418.169) GENERATE: START GROUNDING (impose_constraints)
( 418.760) GENERATE: DONE GROUNDING (impose_constraints)
( 418.760) LOOP: DONE IMPOSING CONSTRAINTS
( 418.760) LOOP: START GENERATING (program 1159)
( 418.760) GENERATE: START SOLVING
( 418.855) GENERATE: DONE SOLVING
( 418.856) LOOP: DONE GENERATING (program 1159)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_succ(D,B,C),my_true_value(D,B).
( 418.856) LOOP: START TESTING
( 418.859) LOOP: DONE TESTING ('some', 'some')
( 418.859) LOOP: START IMPOSING CONSTRAINTS
( 418.859) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 418.859) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 418.859) GENERATE: START GROUNDING (impose_constraints)
( 419.462) GENERATE: DONE GROUNDING (impose_constraints)
( 419.462) LOOP: DONE IMPOSING CONSTRAINTS
( 419.462) LOOP: START GENERATING (program 1160)
( 419.462) GENERATE: START SOLVING
( 419.573) GENERATE: DONE SOLVING
( 419.574) LOOP: DONE GENERATING (program 1160)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_succ(D,B,C),my_true_value(D,B).
( 419.574) LOOP: START TESTING
( 419.577) LOOP: DONE TESTING ('some', 'some')
( 419.577) LOOP: START IMPOSING CONSTRAINTS
( 419.577) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 419.577) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 419.577) GENERATE: START GROUNDING (impose_constraints)
( 420.173) GENERATE: DONE GROUNDING (impose_constraints)
( 420.173) LOOP: DONE IMPOSING CONSTRAINTS
( 420.173) LOOP: START GENERATING (program 1161)
( 420.173) GENERATE: START SOLVING
( 420.282) GENERATE: DONE SOLVING
( 420.282) LOOP: DONE GENERATING (program 1161)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_2(C).
( 420.282) LOOP: START TESTING
( 420.285) LOOP: DONE TESTING ('some', 'some')
( 420.285) LOOP: START IMPOSING CONSTRAINTS
( 420.285) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 420.285) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 420.285) GENERATE: START GROUNDING (impose_constraints)
( 420.879) GENERATE: DONE GROUNDING (impose_constraints)
( 420.879) LOOP: DONE IMPOSING CONSTRAINTS
( 420.879) LOOP: START GENERATING (program 1162)
( 420.879) GENERATE: START SOLVING
( 421.013) GENERATE: DONE SOLVING
( 421.013) LOOP: DONE GENERATING (program 1162)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_succ(D,B,C),my_true_value(D,B).
( 421.014) LOOP: START TESTING
( 421.016) LOOP: DONE TESTING ('some', 'some')
( 421.016) LOOP: START IMPOSING CONSTRAINTS
( 421.016) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 421.016) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 421.017) GENERATE: START GROUNDING (impose_constraints)
( 421.603) GENERATE: DONE GROUNDING (impose_constraints)
( 421.603) LOOP: DONE IMPOSING CONSTRAINTS
( 421.603) LOOP: START GENERATING (program 1163)
( 421.603) GENERATE: START SOLVING
( 421.717) GENERATE: DONE SOLVING
( 421.718) LOOP: DONE GENERATING (program 1163)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_2(C).
( 421.718) LOOP: START TESTING
( 421.721) LOOP: DONE TESTING ('some', 'some')
( 421.721) LOOP: START IMPOSING CONSTRAINTS
( 421.721) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 421.721) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 421.722) GENERATE: START GROUNDING (impose_constraints)
( 422.312) GENERATE: DONE GROUNDING (impose_constraints)
( 422.312) LOOP: DONE IMPOSING CONSTRAINTS
( 422.312) LOOP: START GENERATING (program 1164)
( 422.312) GENERATE: START SOLVING
( 422.424) GENERATE: DONE SOLVING
( 422.424) LOOP: DONE GENERATING (program 1164)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
( 422.424) LOOP: START TESTING
( 422.427) LOOP: DONE TESTING ('some', 'some')
( 422.427) LOOP: START IMPOSING CONSTRAINTS
( 422.427) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 422.427) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 422.427) GENERATE: START GROUNDING (impose_constraints)
( 423.026) GENERATE: DONE GROUNDING (impose_constraints)
( 423.026) LOOP: DONE IMPOSING CONSTRAINTS
( 423.026) LOOP: START GENERATING (program 1165)
( 423.026) GENERATE: START SOLVING
( 423.383) GENERATE: DONE SOLVING
( 423.383) LOOP: DONE GENERATING (program 1165)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
( 423.383) LOOP: START TESTING
( 423.386) LOOP: DONE TESTING ('some', 'some')
( 423.386) LOOP: START IMPOSING CONSTRAINTS
( 423.386) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 423.386) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 423.387) GENERATE: START GROUNDING (impose_constraints)
( 423.986) GENERATE: DONE GROUNDING (impose_constraints)
( 423.986) LOOP: DONE IMPOSING CONSTRAINTS
( 423.986) LOOP: START GENERATING (program 1166)
( 423.986) GENERATE: START SOLVING
( 426.056) GENERATE: DONE SOLVING
( 426.056) LOOP: DONE GENERATING (program 1166)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_true_value(A,C),my_true_value(A,D).
  next_value(A,B) :- my_true_value(C,D),my_succ(C,D,B),my_true_value(A,B).
( 426.056) LOOP: START TESTING
( 426.059) LOOP: DONE TESTING ('some', 'some')
( 426.059) LOOP: START IMPOSING CONSTRAINTS
( 426.059) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 426.059) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V2,ClId1V3,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 426.059) GENERATE: START GROUNDING (impose_constraints)
( 426.665) GENERATE: DONE GROUNDING (impose_constraints)
( 426.665) LOOP: DONE IMPOSING CONSTRAINTS
( 426.665) LOOP: START GENERATING (program 1167)
( 426.665) GENERATE: START SOLVING
( 426.814) GENERATE: DONE SOLVING
( 426.814) LOOP: DONE GENERATING (program 1167)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_succ(A,C,B),c_5(D).
( 426.814) LOOP: START TESTING
( 426.817) LOOP: DONE TESTING ('some', 'some')
( 426.817) LOOP: START IMPOSING CONSTRAINTS
( 426.817) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 426.817) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 426.817) GENERATE: START GROUNDING (impose_constraints)
( 427.416) GENERATE: DONE GROUNDING (impose_constraints)
( 427.416) LOOP: DONE IMPOSING CONSTRAINTS
( 427.416) LOOP: START GENERATING (program 1168)
( 427.416) GENERATE: START SOLVING
( 427.525) GENERATE: DONE SOLVING
( 427.526) LOOP: DONE GENERATING (program 1168)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_succ(A,C,B),c_5(D).
( 427.526) LOOP: START TESTING
( 427.529) LOOP: DONE TESTING ('some', 'some')
( 427.529) LOOP: START IMPOSING CONSTRAINTS
( 427.529) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 427.529) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 427.529) GENERATE: START GROUNDING (impose_constraints)
( 428.117) GENERATE: DONE GROUNDING (impose_constraints)
( 428.117) LOOP: DONE IMPOSING CONSTRAINTS
( 428.117) LOOP: START GENERATING (program 1169)
( 428.117) GENERATE: START SOLVING
( 428.231) GENERATE: DONE SOLVING
( 428.232) LOOP: DONE GENERATING (program 1169)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_succ(A,C,B),c_5(D).
( 428.232) LOOP: START TESTING
( 428.235) LOOP: DONE TESTING ('some', 'some')
( 428.235) LOOP: START IMPOSING CONSTRAINTS
( 428.235) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 428.235) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V3,)),body_literal(ClId1,c_5,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 428.235) GENERATE: START GROUNDING (impose_constraints)
( 428.836) GENERATE: DONE GROUNDING (impose_constraints)
( 428.836) LOOP: DONE IMPOSING CONSTRAINTS
( 428.836) LOOP: START GENERATING (program 1170)
( 428.836) GENERATE: START SOLVING
( 429.746) GENERATE: DONE SOLVING
( 429.747) LOOP: DONE GENERATING (program 1170)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_4(D),my_succ(A,D,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
( 429.747) LOOP: START TESTING
( 429.750) LOOP: DONE TESTING ('some', 'some')
( 429.750) LOOP: START IMPOSING CONSTRAINTS
( 429.750) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 429.750) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 429.750) GENERATE: START GROUNDING (impose_constraints)
( 430.336) GENERATE: DONE GROUNDING (impose_constraints)
( 430.336) LOOP: DONE IMPOSING CONSTRAINTS
( 430.336) LOOP: START GENERATING (program 1171)
( 430.336) GENERATE: START SOLVING
( 430.693) GENERATE: DONE SOLVING
( 430.694) LOOP: DONE GENERATING (program 1171)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(A,D),my_succ(A,D,B).
( 430.694) LOOP: START TESTING
( 430.697) LOOP: DONE TESTING ('some', 'some')
( 430.697) LOOP: START IMPOSING CONSTRAINTS
( 430.697) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 430.697) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V3,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 430.697) GENERATE: START GROUNDING (impose_constraints)
( 431.286) GENERATE: DONE GROUNDING (impose_constraints)
( 431.286) LOOP: DONE IMPOSING CONSTRAINTS
( 431.286) LOOP: START GENERATING (program 1172)
( 431.286) GENERATE: START SOLVING
( 431.469) GENERATE: DONE SOLVING
( 431.469) LOOP: DONE GENERATING (program 1172)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,B).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
( 431.469) LOOP: START TESTING
( 431.473) LOOP: DONE TESTING ('some', 'some')
( 431.473) LOOP: START IMPOSING CONSTRAINTS
( 431.473) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 431.473) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_0,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 431.473) GENERATE: START GROUNDING (impose_constraints)
( 432.060) GENERATE: DONE GROUNDING (impose_constraints)
( 432.060) LOOP: DONE IMPOSING CONSTRAINTS
( 432.060) LOOP: START GENERATING (program 1173)
( 432.060) GENERATE: START SOLVING
( 432.239) GENERATE: DONE SOLVING
( 432.239) LOOP: DONE GENERATING (program 1173)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B),c_4(C).
( 432.239) LOOP: START TESTING
( 432.243) LOOP: DONE TESTING ('some', 'some')
( 432.243) LOOP: START IMPOSING CONSTRAINTS
( 432.243) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 432.243) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 432.243) GENERATE: START GROUNDING (impose_constraints)
( 432.849) GENERATE: DONE GROUNDING (impose_constraints)
( 432.849) LOOP: DONE IMPOSING CONSTRAINTS
( 432.849) LOOP: START GENERATING (program 1174)
( 432.849) GENERATE: START SOLVING
( 433.061) GENERATE: DONE SOLVING
( 433.061) LOOP: DONE GENERATING (program 1174)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
( 433.061) LOOP: START TESTING
( 433.064) LOOP: DONE TESTING ('some', 'some')
( 433.064) LOOP: START IMPOSING CONSTRAINTS
( 433.065) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 433.065) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 433.065) GENERATE: START GROUNDING (impose_constraints)
( 433.658) GENERATE: DONE GROUNDING (impose_constraints)
( 433.658) LOOP: DONE IMPOSING CONSTRAINTS
( 433.658) LOOP: START GENERATING (program 1175)
( 433.658) GENERATE: START SOLVING
( 433.869) GENERATE: DONE SOLVING
( 433.870) LOOP: DONE GENERATING (program 1175)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 433.870) LOOP: START TESTING
( 433.873) LOOP: DONE TESTING ('some', 'some')
( 433.873) LOOP: START IMPOSING CONSTRAINTS
( 433.873) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 433.873) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 433.874) GENERATE: START GROUNDING (impose_constraints)
( 434.476) GENERATE: DONE GROUNDING (impose_constraints)
( 434.476) LOOP: DONE IMPOSING CONSTRAINTS
( 434.476) LOOP: START GENERATING (program 1176)
( 434.476) GENERATE: START SOLVING
( 434.606) GENERATE: DONE SOLVING
( 434.606) LOOP: DONE GENERATING (program 1176)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),c_5(C),my_succ(A,D,B),my_true_value(A,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 434.606) LOOP: START TESTING
( 434.609) LOOP: DONE TESTING ('some', 'some')
( 434.609) LOOP: START IMPOSING CONSTRAINTS
( 434.609) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 434.609) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 434.610) GENERATE: START GROUNDING (impose_constraints)
( 435.206) GENERATE: DONE GROUNDING (impose_constraints)
( 435.206) LOOP: DONE IMPOSING CONSTRAINTS
( 435.206) LOOP: START GENERATING (program 1177)
( 435.206) GENERATE: START SOLVING
( 435.350) GENERATE: DONE SOLVING
( 435.350) LOOP: DONE GENERATING (program 1177)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(C),my_true_value(A,B),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 435.350) LOOP: START TESTING
( 435.353) LOOP: DONE TESTING ('some', 'some')
( 435.353) LOOP: START IMPOSING CONSTRAINTS
( 435.353) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 435.353) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 435.353) GENERATE: START GROUNDING (impose_constraints)
( 435.953) GENERATE: DONE GROUNDING (impose_constraints)
( 435.953) LOOP: DONE IMPOSING CONSTRAINTS
( 435.953) LOOP: START GENERATING (program 1178)
( 435.953) GENERATE: START SOLVING
( 436.120) GENERATE: DONE SOLVING
( 436.120) LOOP: DONE GENERATING (program 1178)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,D,C),my_succ(A,B,D),c_4(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 436.120) LOOP: START TESTING
( 436.124) LOOP: DONE TESTING ('some', 'some')
( 436.124) LOOP: START IMPOSING CONSTRAINTS
( 436.124) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 436.124) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 436.124) GENERATE: START GROUNDING (impose_constraints)
( 436.724) GENERATE: DONE GROUNDING (impose_constraints)
( 436.724) LOOP: DONE IMPOSING CONSTRAINTS
( 436.724) LOOP: START GENERATING (program 1179)
( 436.724) GENERATE: START SOLVING
( 437.075) GENERATE: DONE SOLVING
( 437.076) LOOP: DONE GENERATING (program 1179)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),my_true_value(A,B),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 437.076) LOOP: START TESTING
( 437.079) LOOP: DONE TESTING ('some', 'some')
( 437.079) LOOP: START IMPOSING CONSTRAINTS
( 437.079) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 437.079) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 437.079) GENERATE: START GROUNDING (impose_constraints)
( 437.671) GENERATE: DONE GROUNDING (impose_constraints)
( 437.671) LOOP: DONE IMPOSING CONSTRAINTS
( 437.671) LOOP: START GENERATING (program 1180)
( 437.671) GENERATE: START SOLVING
( 437.810) GENERATE: DONE SOLVING
( 437.810) LOOP: DONE GENERATING (program 1180)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),my_true_value(A,D),c_5(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 437.810) LOOP: START TESTING
( 437.813) LOOP: DONE TESTING ('some', 'some')
( 437.813) LOOP: START IMPOSING CONSTRAINTS
( 437.813) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 437.813) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 437.813) GENERATE: START GROUNDING (impose_constraints)
( 438.419) GENERATE: DONE GROUNDING (impose_constraints)
( 438.419) LOOP: DONE IMPOSING CONSTRAINTS
( 438.419) LOOP: START GENERATING (program 1181)
( 438.419) GENERATE: START SOLVING
( 438.584) GENERATE: DONE SOLVING
( 438.584) LOOP: DONE GENERATING (program 1181)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,C,B),my_succ(A,B,D),c_1(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 438.584) LOOP: START TESTING
( 438.588) LOOP: DONE TESTING ('some', 'some')
( 438.588) LOOP: START IMPOSING CONSTRAINTS
( 438.588) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 438.588) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 438.588) GENERATE: START GROUNDING (impose_constraints)
( 439.201) GENERATE: DONE GROUNDING (impose_constraints)
( 439.201) LOOP: DONE IMPOSING CONSTRAINTS
( 439.201) LOOP: START GENERATING (program 1182)
( 439.201) GENERATE: START SOLVING
( 439.302) GENERATE: DONE SOLVING
( 439.302) LOOP: DONE GENERATING (program 1182)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 439.302) LOOP: START TESTING
( 439.305) LOOP: DONE TESTING ('some', 'some')
( 439.305) LOOP: START IMPOSING CONSTRAINTS
( 439.306) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 439.306) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 439.306) GENERATE: START GROUNDING (impose_constraints)
( 439.906) GENERATE: DONE GROUNDING (impose_constraints)
( 439.906) LOOP: DONE IMPOSING CONSTRAINTS
( 439.906) LOOP: START GENERATING (program 1183)
( 439.906) GENERATE: START SOLVING
( 440.002) GENERATE: DONE SOLVING
( 440.003) LOOP: DONE GENERATING (program 1183)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 440.003) LOOP: START TESTING
( 440.006) LOOP: DONE TESTING ('some', 'some')
( 440.006) LOOP: START IMPOSING CONSTRAINTS
( 440.007) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 440.007) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 440.007) GENERATE: START GROUNDING (impose_constraints)
( 440.615) GENERATE: DONE GROUNDING (impose_constraints)
( 440.615) LOOP: DONE IMPOSING CONSTRAINTS
( 440.615) LOOP: START GENERATING (program 1184)
( 440.615) GENERATE: START SOLVING
( 440.711) GENERATE: DONE SOLVING
( 440.712) LOOP: DONE GENERATING (program 1184)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 440.712) LOOP: START TESTING
( 440.715) LOOP: DONE TESTING ('some', 'some')
( 440.715) LOOP: START IMPOSING CONSTRAINTS
( 440.715) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 440.715) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 440.716) GENERATE: START GROUNDING (impose_constraints)
( 441.313) GENERATE: DONE GROUNDING (impose_constraints)
( 441.313) LOOP: DONE IMPOSING CONSTRAINTS
( 441.313) LOOP: START GENERATING (program 1185)
( 441.313) GENERATE: START SOLVING
( 441.428) GENERATE: DONE SOLVING
( 441.429) LOOP: DONE GENERATING (program 1185)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 441.429) LOOP: START TESTING
( 441.432) LOOP: DONE TESTING ('some', 'some')
( 441.432) LOOP: START IMPOSING CONSTRAINTS
( 441.432) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 441.432) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 441.432) GENERATE: START GROUNDING (impose_constraints)
( 442.045) GENERATE: DONE GROUNDING (impose_constraints)
( 442.045) LOOP: DONE IMPOSING CONSTRAINTS
( 442.045) LOOP: START GENERATING (program 1186)
( 442.045) GENERATE: START SOLVING
( 442.144) GENERATE: DONE SOLVING
( 442.144) LOOP: DONE GENERATING (program 1186)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 442.145) LOOP: START TESTING
( 442.148) LOOP: DONE TESTING ('some', 'some')
( 442.148) LOOP: START IMPOSING CONSTRAINTS
( 442.148) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 442.148) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 442.148) GENERATE: START GROUNDING (impose_constraints)
( 442.758) GENERATE: DONE GROUNDING (impose_constraints)
( 442.758) LOOP: DONE IMPOSING CONSTRAINTS
( 442.758) LOOP: START GENERATING (program 1187)
( 442.758) GENERATE: START SOLVING
( 442.880) GENERATE: DONE SOLVING
( 442.881) LOOP: DONE GENERATING (program 1187)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 442.881) LOOP: START TESTING
( 442.884) LOOP: DONE TESTING ('some', 'some')
( 442.884) LOOP: START IMPOSING CONSTRAINTS
( 442.884) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 442.885) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 442.885) GENERATE: START GROUNDING (impose_constraints)
( 443.515) GENERATE: DONE GROUNDING (impose_constraints)
( 443.515) LOOP: DONE IMPOSING CONSTRAINTS
( 443.515) LOOP: START GENERATING (program 1188)
( 443.515) GENERATE: START SOLVING
( 443.686) GENERATE: DONE SOLVING
( 443.686) LOOP: DONE GENERATING (program 1188)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
( 443.686) LOOP: START TESTING
( 443.689) LOOP: DONE TESTING ('some', 'some')
( 443.689) LOOP: START IMPOSING CONSTRAINTS
( 443.689) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 443.689) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 443.690) GENERATE: START GROUNDING (impose_constraints)
( 444.309) GENERATE: DONE GROUNDING (impose_constraints)
( 444.309) LOOP: DONE IMPOSING CONSTRAINTS
( 444.309) LOOP: START GENERATING (program 1189)
( 444.309) GENERATE: START SOLVING
( 445.073) GENERATE: DONE SOLVING
( 445.074) LOOP: DONE GENERATING (program 1189)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,B,D),my_true_value(A,D),c_2(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 445.074) LOOP: START TESTING
( 445.077) LOOP: DONE TESTING ('some', 'some')
( 445.077) LOOP: START IMPOSING CONSTRAINTS
( 445.077) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 445.077) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 445.078) GENERATE: START GROUNDING (impose_constraints)
( 445.691) GENERATE: DONE GROUNDING (impose_constraints)
( 445.691) LOOP: DONE IMPOSING CONSTRAINTS
( 445.691) LOOP: START GENERATING (program 1190)
( 445.691) GENERATE: START SOLVING
( 445.924) GENERATE: DONE SOLVING
( 445.924) LOOP: DONE GENERATING (program 1190)
PROGRAM:
  next_value(A,B) :- c_3(D),my_true_value(A,C),c_3(C),my_succ(A,B,D).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 445.925) LOOP: START TESTING
( 445.927) LOOP: DONE TESTING ('some', 'some')
( 445.927) LOOP: START IMPOSING CONSTRAINTS
( 445.928) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 445.928) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 445.928) GENERATE: START GROUNDING (impose_constraints)
( 446.557) GENERATE: DONE GROUNDING (impose_constraints)
( 446.557) LOOP: DONE IMPOSING CONSTRAINTS
( 446.557) LOOP: START GENERATING (program 1191)
( 446.557) GENERATE: START SOLVING
( 446.820) GENERATE: DONE SOLVING
( 446.821) LOOP: DONE GENERATING (program 1191)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),c_1(D),c_3(C),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 446.821) LOOP: START TESTING
( 446.824) LOOP: DONE TESTING ('some', 'some')
( 446.824) LOOP: START IMPOSING CONSTRAINTS
( 446.824) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 446.824) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 446.825) GENERATE: START GROUNDING (impose_constraints)
( 447.457) GENERATE: DONE GROUNDING (impose_constraints)
( 447.457) LOOP: DONE IMPOSING CONSTRAINTS
( 447.457) LOOP: START GENERATING (program 1192)
( 447.457) GENERATE: START SOLVING
( 447.841) GENERATE: DONE SOLVING
( 447.841) LOOP: DONE GENERATING (program 1192)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,B,D),my_true_value(A,D),c_2(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 447.841) LOOP: START TESTING
( 447.844) LOOP: DONE TESTING ('some', 'some')
( 447.844) LOOP: START IMPOSING CONSTRAINTS
( 447.844) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 447.844) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 447.845) GENERATE: START GROUNDING (impose_constraints)
( 448.475) GENERATE: DONE GROUNDING (impose_constraints)
( 448.475) LOOP: DONE IMPOSING CONSTRAINTS
( 448.475) LOOP: START GENERATING (program 1193)
( 448.475) GENERATE: START SOLVING
( 448.717) GENERATE: DONE SOLVING
( 448.718) LOOP: DONE GENERATING (program 1193)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_5(C),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 448.718) LOOP: START TESTING
( 448.720) LOOP: DONE TESTING ('some', 'some')
( 448.720) LOOP: START IMPOSING CONSTRAINTS
( 448.720) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 448.720) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 448.721) GENERATE: START GROUNDING (impose_constraints)
( 449.362) GENERATE: DONE GROUNDING (impose_constraints)
( 449.362) LOOP: DONE IMPOSING CONSTRAINTS
( 449.362) LOOP: START GENERATING (program 1194)
( 449.362) GENERATE: START SOLVING
( 449.498) GENERATE: DONE SOLVING
( 449.498) LOOP: DONE GENERATING (program 1194)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,D,C),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 449.498) LOOP: START TESTING
( 449.502) LOOP: DONE TESTING ('some', 'some')
( 449.502) LOOP: START IMPOSING CONSTRAINTS
( 449.502) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 449.502) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 449.502) GENERATE: START GROUNDING (impose_constraints)
( 450.132) GENERATE: DONE GROUNDING (impose_constraints)
( 450.132) LOOP: DONE IMPOSING CONSTRAINTS
( 450.132) LOOP: START GENERATING (program 1195)
( 450.132) GENERATE: START SOLVING
( 450.243) GENERATE: DONE SOLVING
( 450.244) LOOP: DONE GENERATING (program 1195)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(D),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 450.244) LOOP: START TESTING
( 450.247) LOOP: DONE TESTING ('some', 'some')
( 450.247) LOOP: START IMPOSING CONSTRAINTS
( 450.247) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 450.247) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 450.247) GENERATE: START GROUNDING (impose_constraints)
( 450.882) GENERATE: DONE GROUNDING (impose_constraints)
( 450.882) LOOP: DONE IMPOSING CONSTRAINTS
( 450.882) LOOP: START GENERATING (program 1196)
( 450.882) GENERATE: START SOLVING
( 450.985) GENERATE: DONE SOLVING
( 450.986) LOOP: DONE GENERATING (program 1196)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
( 450.986) LOOP: START TESTING
( 450.989) LOOP: DONE TESTING ('some', 'some')
( 450.989) LOOP: START IMPOSING CONSTRAINTS
( 450.989) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 450.989) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 450.989) GENERATE: START GROUNDING (impose_constraints)
( 451.615) GENERATE: DONE GROUNDING (impose_constraints)
( 451.615) LOOP: DONE IMPOSING CONSTRAINTS
( 451.615) LOOP: START GENERATING (program 1197)
( 451.615) GENERATE: START SOLVING
( 451.715) GENERATE: DONE SOLVING
( 451.716) LOOP: DONE GENERATING (program 1197)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_1(B),my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
( 451.716) LOOP: START TESTING
( 451.719) LOOP: DONE TESTING ('some', 'some')
( 451.719) LOOP: START IMPOSING CONSTRAINTS
( 451.719) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 451.719) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 451.720) GENERATE: START GROUNDING (impose_constraints)
( 452.341) GENERATE: DONE GROUNDING (impose_constraints)
( 452.341) LOOP: DONE IMPOSING CONSTRAINTS
( 452.341) LOOP: START GENERATING (program 1198)
( 452.341) GENERATE: START SOLVING
( 452.441) GENERATE: DONE SOLVING
( 452.442) LOOP: DONE GENERATING (program 1198)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),c_0(C),my_succ(D,C,B).
( 452.442) LOOP: START TESTING
( 452.445) LOOP: DONE TESTING ('some', 'some')
( 452.445) LOOP: START IMPOSING CONSTRAINTS
( 452.445) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 452.445) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 452.445) GENERATE: START GROUNDING (impose_constraints)
( 453.059) GENERATE: DONE GROUNDING (impose_constraints)
( 453.059) LOOP: DONE IMPOSING CONSTRAINTS
( 453.059) LOOP: START GENERATING (program 1199)
( 453.059) GENERATE: START SOLVING
( 453.162) GENERATE: DONE SOLVING
( 453.163) LOOP: DONE GENERATING (program 1199)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_4(D),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 453.163) LOOP: START TESTING
( 453.166) LOOP: DONE TESTING ('some', 'some')
( 453.166) LOOP: START IMPOSING CONSTRAINTS
( 453.166) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 453.166) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 453.166) GENERATE: START GROUNDING (impose_constraints)
( 453.779) GENERATE: DONE GROUNDING (impose_constraints)
( 453.779) LOOP: DONE IMPOSING CONSTRAINTS
( 453.779) LOOP: START GENERATING (program 1200)
( 453.779) GENERATE: START SOLVING
( 453.888) GENERATE: DONE SOLVING
( 453.888) LOOP: DONE GENERATING (program 1200)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,D,C),c_4(D).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 453.888) LOOP: START TESTING
( 453.891) LOOP: DONE TESTING ('some', 'some')
( 453.891) LOOP: START IMPOSING CONSTRAINTS
( 453.891) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 453.891) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 453.892) GENERATE: START GROUNDING (impose_constraints)
( 454.504) GENERATE: DONE GROUNDING (impose_constraints)
( 454.504) LOOP: DONE IMPOSING CONSTRAINTS
( 454.504) LOOP: START GENERATING (program 1201)
( 454.504) GENERATE: START SOLVING
( 454.612) GENERATE: DONE SOLVING
( 454.613) LOOP: DONE GENERATING (program 1201)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_true_value(A,B),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 454.613) LOOP: START TESTING
( 454.616) LOOP: DONE TESTING ('some', 'none')
( 454.616) LOOP: START IMPOSING CONSTRAINTS
( 454.617) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 454.617) GENERATE: START GROUNDING (impose_constraints)
( 455.222) GENERATE: DONE GROUNDING (impose_constraints)
( 455.222) LOOP: DONE IMPOSING CONSTRAINTS
( 455.222) LOOP: START GENERATING (program 1202)
( 455.222) GENERATE: START SOLVING
( 455.317) GENERATE: DONE SOLVING
( 455.317) LOOP: DONE GENERATING (program 1202)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 455.317) LOOP: START TESTING
( 455.320) LOOP: DONE TESTING ('some', 'some')
( 455.320) LOOP: START IMPOSING CONSTRAINTS
( 455.321) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 455.321) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 455.321) GENERATE: START GROUNDING (impose_constraints)
( 455.930) GENERATE: DONE GROUNDING (impose_constraints)
( 455.930) LOOP: DONE IMPOSING CONSTRAINTS
( 455.930) LOOP: START GENERATING (program 1203)
( 455.930) GENERATE: START SOLVING
( 456.024) GENERATE: DONE SOLVING
( 456.025) LOOP: DONE GENERATING (program 1203)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 456.025) LOOP: START TESTING
( 456.028) LOOP: DONE TESTING ('some', 'some')
( 456.028) LOOP: START IMPOSING CONSTRAINTS
( 456.028) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 456.028) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 456.029) GENERATE: START GROUNDING (impose_constraints)
( 456.655) GENERATE: DONE GROUNDING (impose_constraints)
( 456.655) LOOP: DONE IMPOSING CONSTRAINTS
( 456.655) LOOP: START GENERATING (program 1204)
( 456.655) GENERATE: START SOLVING
( 456.760) GENERATE: DONE SOLVING
( 456.760) LOOP: DONE GENERATING (program 1204)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 456.761) LOOP: START TESTING
( 456.763) LOOP: DONE TESTING ('some', 'some')
( 456.763) LOOP: START IMPOSING CONSTRAINTS
( 456.763) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 456.763) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 456.764) GENERATE: START GROUNDING (impose_constraints)
( 457.373) GENERATE: DONE GROUNDING (impose_constraints)
( 457.373) LOOP: DONE IMPOSING CONSTRAINTS
( 457.373) LOOP: START GENERATING (program 1205)
( 457.373) GENERATE: START SOLVING
( 457.482) GENERATE: DONE SOLVING
( 457.483) LOOP: DONE GENERATING (program 1205)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 457.483) LOOP: START TESTING
( 457.486) LOOP: DONE TESTING ('some', 'some')
( 457.486) LOOP: START IMPOSING CONSTRAINTS
( 457.486) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 457.486) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 457.486) GENERATE: START GROUNDING (impose_constraints)
( 458.138) GENERATE: DONE GROUNDING (impose_constraints)
( 458.138) LOOP: DONE IMPOSING CONSTRAINTS
( 458.138) LOOP: START GENERATING (program 1206)
( 458.138) GENERATE: START SOLVING
( 458.260) GENERATE: DONE SOLVING
( 458.261) LOOP: DONE GENERATING (program 1206)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 458.261) LOOP: START TESTING
( 458.264) LOOP: DONE TESTING ('some', 'some')
( 458.264) LOOP: START IMPOSING CONSTRAINTS
( 458.264) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 458.264) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 458.265) GENERATE: START GROUNDING (impose_constraints)
( 458.927) GENERATE: DONE GROUNDING (impose_constraints)
( 458.927) LOOP: DONE IMPOSING CONSTRAINTS
( 458.927) LOOP: START GENERATING (program 1207)
( 458.927) GENERATE: START SOLVING
( 459.038) GENERATE: DONE SOLVING
( 459.039) LOOP: DONE GENERATING (program 1207)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 459.039) LOOP: START TESTING
( 459.042) LOOP: DONE TESTING ('some', 'some')
( 459.042) LOOP: START IMPOSING CONSTRAINTS
( 459.042) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 459.042) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 459.043) GENERATE: START GROUNDING (impose_constraints)
( 459.673) GENERATE: DONE GROUNDING (impose_constraints)
( 459.673) LOOP: DONE IMPOSING CONSTRAINTS
( 459.673) LOOP: START GENERATING (program 1208)
( 459.673) GENERATE: START SOLVING
( 459.782) GENERATE: DONE SOLVING
( 459.783) LOOP: DONE GENERATING (program 1208)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 459.783) LOOP: START TESTING
( 459.786) LOOP: DONE TESTING ('some', 'some')
( 459.786) LOOP: START IMPOSING CONSTRAINTS
( 459.786) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 459.786) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 459.786) GENERATE: START GROUNDING (impose_constraints)
( 460.416) GENERATE: DONE GROUNDING (impose_constraints)
( 460.416) LOOP: DONE IMPOSING CONSTRAINTS
( 460.416) LOOP: START GENERATING (program 1209)
( 460.416) GENERATE: START SOLVING
( 460.517) GENERATE: DONE SOLVING
( 460.518) LOOP: DONE GENERATING (program 1209)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 460.518) LOOP: START TESTING
( 460.521) LOOP: DONE TESTING ('some', 'some')
( 460.521) LOOP: START IMPOSING CONSTRAINTS
( 460.521) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 460.521) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 460.521) GENERATE: START GROUNDING (impose_constraints)
( 461.177) GENERATE: DONE GROUNDING (impose_constraints)
( 461.177) LOOP: DONE IMPOSING CONSTRAINTS
( 461.177) LOOP: START GENERATING (program 1210)
( 461.177) GENERATE: START SOLVING
( 461.620) GENERATE: DONE SOLVING
( 461.621) LOOP: DONE GENERATING (program 1210)
PROGRAM:
  next_value(A,B) :- c_3(D),c_5(B),my_true_value(A,C),my_succ(A,D,C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 461.621) LOOP: START TESTING
( 461.624) LOOP: DONE TESTING ('some', 'some')
( 461.624) LOOP: START IMPOSING CONSTRAINTS
( 461.624) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 461.624) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 461.625) GENERATE: START GROUNDING (impose_constraints)
( 462.279) GENERATE: DONE GROUNDING (impose_constraints)
( 462.279) LOOP: DONE IMPOSING CONSTRAINTS
( 462.279) LOOP: START GENERATING (program 1211)
( 462.279) GENERATE: START SOLVING
( 462.489) GENERATE: DONE SOLVING
( 462.490) LOOP: DONE GENERATING (program 1211)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_4(D),my_succ(A,D,B),c_4(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 462.490) LOOP: START TESTING
( 462.493) LOOP: DONE TESTING ('some', 'some')
( 462.493) LOOP: START IMPOSING CONSTRAINTS
( 462.493) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 462.493) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 462.493) GENERATE: START GROUNDING (impose_constraints)
( 463.134) GENERATE: DONE GROUNDING (impose_constraints)
( 463.134) LOOP: DONE IMPOSING CONSTRAINTS
( 463.134) LOOP: START GENERATING (program 1212)
( 463.134) GENERATE: START SOLVING
( 463.240) GENERATE: DONE SOLVING
( 463.240) LOOP: DONE GENERATING (program 1212)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,D),c_4(D),c_4(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 463.240) LOOP: START TESTING
( 463.243) LOOP: DONE TESTING ('some', 'some')
( 463.243) LOOP: START IMPOSING CONSTRAINTS
( 463.243) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 463.243) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 463.244) GENERATE: START GROUNDING (impose_constraints)
( 463.893) GENERATE: DONE GROUNDING (impose_constraints)
( 463.893) LOOP: DONE IMPOSING CONSTRAINTS
( 463.893) LOOP: START GENERATING (program 1213)
( 463.893) GENERATE: START SOLVING
( 464.053) GENERATE: DONE SOLVING
( 464.054) LOOP: DONE GENERATING (program 1213)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_2(D),c_1(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 464.054) LOOP: START TESTING
( 464.057) LOOP: DONE TESTING ('some', 'some')
( 464.057) LOOP: START IMPOSING CONSTRAINTS
( 464.057) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 464.057) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 464.057) GENERATE: START GROUNDING (impose_constraints)
( 464.692) GENERATE: DONE GROUNDING (impose_constraints)
( 464.692) LOOP: DONE IMPOSING CONSTRAINTS
( 464.692) LOOP: START GENERATING (program 1214)
( 464.692) GENERATE: START SOLVING
( 464.814) GENERATE: DONE SOLVING
( 464.815) LOOP: DONE GENERATING (program 1214)
PROGRAM:
  next_value(A,B) :- c_0(D),my_succ(A,C,B),c_0(C),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 464.815) LOOP: START TESTING
( 464.818) LOOP: DONE TESTING ('some', 'some')
( 464.818) LOOP: START IMPOSING CONSTRAINTS
( 464.818) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 464.818) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 464.818) GENERATE: START GROUNDING (impose_constraints)
( 465.493) GENERATE: DONE GROUNDING (impose_constraints)
( 465.493) LOOP: DONE IMPOSING CONSTRAINTS
( 465.493) LOOP: START GENERATING (program 1215)
( 465.493) GENERATE: START SOLVING
( 465.612) GENERATE: DONE SOLVING
( 465.612) LOOP: DONE GENERATING (program 1215)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_5(D),c_4(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 465.612) LOOP: START TESTING
( 465.615) LOOP: DONE TESTING ('some', 'some')
( 465.615) LOOP: START IMPOSING CONSTRAINTS
( 465.615) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 465.615) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 465.616) GENERATE: START GROUNDING (impose_constraints)
( 466.259) GENERATE: DONE GROUNDING (impose_constraints)
( 466.259) LOOP: DONE IMPOSING CONSTRAINTS
( 466.259) LOOP: START GENERATING (program 1216)
( 466.259) GENERATE: START SOLVING
( 466.370) GENERATE: DONE SOLVING
( 466.371) LOOP: DONE GENERATING (program 1216)
PROGRAM:
  next_value(A,B) :- c_1(C),my_succ(A,C,B),c_1(D),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 466.371) LOOP: START TESTING
( 466.374) LOOP: DONE TESTING ('some', 'some')
( 466.374) LOOP: START IMPOSING CONSTRAINTS
( 466.374) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 466.374) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 466.374) GENERATE: START GROUNDING (impose_constraints)
( 467.010) GENERATE: DONE GROUNDING (impose_constraints)
( 467.010) LOOP: DONE IMPOSING CONSTRAINTS
( 467.010) LOOP: START GENERATING (program 1217)
( 467.010) GENERATE: START SOLVING
( 467.168) GENERATE: DONE SOLVING
( 467.169) LOOP: DONE GENERATING (program 1217)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),my_succ(A,C,B),c_1(D),c_0(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 467.169) LOOP: START TESTING
( 467.172) LOOP: DONE TESTING ('some', 'some')
( 467.172) LOOP: START IMPOSING CONSTRAINTS
( 467.172) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 467.172) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 467.172) GENERATE: START GROUNDING (impose_constraints)
( 467.810) GENERATE: DONE GROUNDING (impose_constraints)
( 467.810) LOOP: DONE IMPOSING CONSTRAINTS
( 467.810) LOOP: START GENERATING (program 1218)
( 467.810) GENERATE: START SOLVING
( 467.981) GENERATE: DONE SOLVING
( 467.982) LOOP: DONE GENERATING (program 1218)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_true_value(A,B),my_succ(D,C,B).
( 467.982) LOOP: START TESTING
( 467.985) LOOP: DONE TESTING ('some', 'some')
( 467.985) LOOP: START IMPOSING CONSTRAINTS
( 467.985) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 467.985) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 467.985) GENERATE: START GROUNDING (impose_constraints)
( 468.632) GENERATE: DONE GROUNDING (impose_constraints)
( 468.632) LOOP: DONE IMPOSING CONSTRAINTS
( 468.632) LOOP: START GENERATING (program 1219)
( 468.632) GENERATE: START SOLVING
( 468.779) GENERATE: DONE SOLVING
( 468.780) LOOP: DONE GENERATING (program 1219)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_true_value(A,B),my_succ(D,C,B).
( 468.780) LOOP: START TESTING
( 468.783) LOOP: DONE TESTING ('some', 'some')
( 468.783) LOOP: START IMPOSING CONSTRAINTS
( 468.784) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 468.784) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 468.784) GENERATE: START GROUNDING (impose_constraints)
( 469.414) GENERATE: DONE GROUNDING (impose_constraints)
( 469.414) LOOP: DONE IMPOSING CONSTRAINTS
( 469.414) LOOP: START GENERATING (program 1220)
( 469.414) GENERATE: START SOLVING
( 469.538) GENERATE: DONE SOLVING
( 469.538) LOOP: DONE GENERATING (program 1220)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_0(D),c_2(C),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 469.538) LOOP: START TESTING
( 469.541) LOOP: DONE TESTING ('some', 'some')
( 469.541) LOOP: START IMPOSING CONSTRAINTS
( 469.541) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 469.541) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 469.542) GENERATE: START GROUNDING (impose_constraints)
( 470.184) GENERATE: DONE GROUNDING (impose_constraints)
( 470.184) LOOP: DONE IMPOSING CONSTRAINTS
( 470.184) LOOP: START GENERATING (program 1221)
( 470.184) GENERATE: START SOLVING
( 470.299) GENERATE: DONE SOLVING
( 470.300) LOOP: DONE GENERATING (program 1221)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(D),my_succ(A,B,D),c_2(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 470.300) LOOP: START TESTING
( 470.302) LOOP: DONE TESTING ('some', 'some')
( 470.302) LOOP: START IMPOSING CONSTRAINTS
( 470.302) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 470.302) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 470.303) GENERATE: START GROUNDING (impose_constraints)
( 470.951) GENERATE: DONE GROUNDING (impose_constraints)
( 470.951) LOOP: DONE IMPOSING CONSTRAINTS
( 470.951) LOOP: START GENERATING (program 1222)
( 470.951) GENERATE: START SOLVING
( 471.228) GENERATE: DONE SOLVING
( 471.229) LOOP: DONE GENERATING (program 1222)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(D),c_0(C),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 471.229) LOOP: START TESTING
( 471.232) LOOP: DONE TESTING ('some', 'some')
( 471.232) LOOP: START IMPOSING CONSTRAINTS
( 471.232) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 471.232) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 471.232) GENERATE: START GROUNDING (impose_constraints)
( 471.896) GENERATE: DONE GROUNDING (impose_constraints)
( 471.896) LOOP: DONE IMPOSING CONSTRAINTS
( 471.896) LOOP: START GENERATING (program 1223)
( 471.896) GENERATE: START SOLVING
( 472.246) GENERATE: DONE SOLVING
( 472.246) LOOP: DONE GENERATING (program 1223)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,C,B).
( 472.246) LOOP: START TESTING
( 472.249) LOOP: DONE TESTING ('some', 'some')
( 472.249) LOOP: START IMPOSING CONSTRAINTS
( 472.249) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 472.249) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 472.250) GENERATE: START GROUNDING (impose_constraints)
( 472.913) GENERATE: DONE GROUNDING (impose_constraints)
( 472.913) LOOP: DONE IMPOSING CONSTRAINTS
( 472.913) LOOP: START GENERATING (program 1224)
( 472.913) GENERATE: START SOLVING
( 473.040) GENERATE: DONE SOLVING
( 473.041) LOOP: DONE GENERATING (program 1224)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,D,C),my_true_value(A,D),c_1(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 473.041) LOOP: START TESTING
( 473.044) LOOP: DONE TESTING ('some', 'some')
( 473.044) LOOP: START IMPOSING CONSTRAINTS
( 473.044) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 473.044) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 473.044) GENERATE: START GROUNDING (impose_constraints)
( 473.706) GENERATE: DONE GROUNDING (impose_constraints)
( 473.706) LOOP: DONE IMPOSING CONSTRAINTS
( 473.706) LOOP: START GENERATING (program 1225)
( 473.706) GENERATE: START SOLVING
( 473.827) GENERATE: DONE SOLVING
( 473.827) LOOP: DONE GENERATING (program 1225)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D),c_4(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 473.827) LOOP: START TESTING
( 473.830) LOOP: DONE TESTING ('some', 'some')
( 473.830) LOOP: START IMPOSING CONSTRAINTS
( 473.830) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 473.830) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 473.830) GENERATE: START GROUNDING (impose_constraints)
( 474.492) GENERATE: DONE GROUNDING (impose_constraints)
( 474.492) LOOP: DONE IMPOSING CONSTRAINTS
( 474.492) LOOP: START GENERATING (program 1226)
( 474.492) GENERATE: START SOLVING
( 474.613) GENERATE: DONE SOLVING
( 474.613) LOOP: DONE GENERATING (program 1226)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 474.613) LOOP: START TESTING
( 474.616) LOOP: DONE TESTING ('some', 'some')
( 474.616) LOOP: START IMPOSING CONSTRAINTS
( 474.616) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 474.616) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 474.616) GENERATE: START GROUNDING (impose_constraints)
( 475.312) GENERATE: DONE GROUNDING (impose_constraints)
( 475.312) LOOP: DONE IMPOSING CONSTRAINTS
( 475.312) LOOP: START GENERATING (program 1227)
( 475.312) GENERATE: START SOLVING
( 475.417) GENERATE: DONE SOLVING
( 475.418) LOOP: DONE GENERATING (program 1227)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,C,B),my_succ(A,D,C),my_true_value(A,D).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 475.418) LOOP: START TESTING
( 475.421) LOOP: DONE TESTING ('some', 'some')
( 475.421) LOOP: START IMPOSING CONSTRAINTS
( 475.421) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 475.421) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 475.421) GENERATE: START GROUNDING (impose_constraints)
( 476.080) GENERATE: DONE GROUNDING (impose_constraints)
( 476.080) LOOP: DONE IMPOSING CONSTRAINTS
( 476.080) LOOP: START GENERATING (program 1228)
( 476.080) GENERATE: START SOLVING
( 476.486) GENERATE: DONE SOLVING
( 476.486) LOOP: DONE GENERATING (program 1228)
PROGRAM:
  next_value(A,B) :- my_succ(A,D,C),my_true_value(A,D),my_succ(A,B,D),c_4(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 476.486) LOOP: START TESTING
( 476.489) LOOP: DONE TESTING ('some', 'some')
( 476.489) LOOP: START IMPOSING CONSTRAINTS
( 476.489) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 476.489) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 476.489) GENERATE: START GROUNDING (impose_constraints)
( 477.159) GENERATE: DONE GROUNDING (impose_constraints)
( 477.159) LOOP: DONE IMPOSING CONSTRAINTS
( 477.159) LOOP: START GENERATING (program 1229)
( 477.159) GENERATE: START SOLVING
( 477.282) GENERATE: DONE SOLVING
( 477.283) LOOP: DONE GENERATING (program 1229)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 477.283) LOOP: START TESTING
( 477.286) LOOP: DONE TESTING ('some', 'none')
( 477.286) LOOP: START IMPOSING CONSTRAINTS
( 477.286) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 477.286) GENERATE: START GROUNDING (impose_constraints)
( 477.977) GENERATE: DONE GROUNDING (impose_constraints)
( 477.977) LOOP: DONE IMPOSING CONSTRAINTS
( 477.977) LOOP: START GENERATING (program 1230)
( 477.977) GENERATE: START SOLVING
( 478.128) GENERATE: DONE SOLVING
( 478.129) LOOP: DONE GENERATING (program 1230)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 478.129) LOOP: START TESTING
( 478.132) LOOP: DONE TESTING ('some', 'some')
( 478.132) LOOP: START IMPOSING CONSTRAINTS
( 478.132) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 478.132) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 478.132) GENERATE: START GROUNDING (impose_constraints)
( 478.923) GENERATE: DONE GROUNDING (impose_constraints)
( 478.923) LOOP: DONE IMPOSING CONSTRAINTS
( 478.923) LOOP: START GENERATING (program 1231)
( 478.923) GENERATE: START SOLVING
( 479.052) GENERATE: DONE SOLVING
( 479.053) LOOP: DONE GENERATING (program 1231)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 479.053) LOOP: START TESTING
( 479.056) LOOP: DONE TESTING ('some', 'some')
( 479.056) LOOP: START IMPOSING CONSTRAINTS
( 479.056) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 479.056) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 479.056) GENERATE: START GROUNDING (impose_constraints)
( 479.817) GENERATE: DONE GROUNDING (impose_constraints)
( 479.817) LOOP: DONE IMPOSING CONSTRAINTS
( 479.817) LOOP: START GENERATING (program 1232)
( 479.817) GENERATE: START SOLVING
( 480.107) GENERATE: DONE SOLVING
( 480.108) LOOP: DONE GENERATING (program 1232)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 480.108) LOOP: START TESTING
( 480.111) LOOP: DONE TESTING ('some', 'some')
( 480.111) LOOP: START IMPOSING CONSTRAINTS
( 480.111) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 480.111) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 480.112) GENERATE: START GROUNDING (impose_constraints)
( 480.786) GENERATE: DONE GROUNDING (impose_constraints)
( 480.786) LOOP: DONE IMPOSING CONSTRAINTS
( 480.786) LOOP: START GENERATING (program 1233)
( 480.786) GENERATE: START SOLVING
( 481.218) GENERATE: DONE SOLVING
( 481.218) LOOP: DONE GENERATING (program 1233)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_true_value(D,B),c_5(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 481.218) LOOP: START TESTING
( 481.221) LOOP: DONE TESTING ('some', 'some')
( 481.221) LOOP: START IMPOSING CONSTRAINTS
( 481.221) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 481.221) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 481.222) GENERATE: START GROUNDING (impose_constraints)
( 481.868) GENERATE: DONE GROUNDING (impose_constraints)
( 481.868) LOOP: DONE IMPOSING CONSTRAINTS
( 481.868) LOOP: START GENERATING (program 1234)
( 481.868) GENERATE: START SOLVING
( 482.147) GENERATE: DONE SOLVING
( 482.147) LOOP: DONE GENERATING (program 1234)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_true_value(A,B),my_succ(D,C,B).
( 482.147) LOOP: START TESTING
( 482.151) LOOP: DONE TESTING ('some', 'some')
( 482.151) LOOP: START IMPOSING CONSTRAINTS
( 482.151) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 482.151) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 482.151) GENERATE: START GROUNDING (impose_constraints)
( 482.797) GENERATE: DONE GROUNDING (impose_constraints)
( 482.797) LOOP: DONE IMPOSING CONSTRAINTS
( 482.797) LOOP: START GENERATING (program 1235)
( 482.797) GENERATE: START SOLVING
( 483.485) GENERATE: DONE SOLVING
( 483.485) LOOP: DONE GENERATING (program 1235)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),c_1(C),my_succ(A,B,D).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 483.485) LOOP: START TESTING
( 483.488) LOOP: DONE TESTING ('some', 'some')
( 483.488) LOOP: START IMPOSING CONSTRAINTS
( 483.488) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 483.488) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 483.488) GENERATE: START GROUNDING (impose_constraints)
( 484.164) GENERATE: DONE GROUNDING (impose_constraints)
( 484.164) LOOP: DONE IMPOSING CONSTRAINTS
( 484.164) LOOP: START GENERATING (program 1236)
( 484.164) GENERATE: START SOLVING
( 484.280) GENERATE: DONE SOLVING
( 484.280) LOOP: DONE GENERATING (program 1236)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_2(D),my_succ(A,B,D),c_1(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 484.280) LOOP: START TESTING
( 484.284) LOOP: DONE TESTING ('some', 'some')
( 484.284) LOOP: START IMPOSING CONSTRAINTS
( 484.284) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 484.284) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 484.284) GENERATE: START GROUNDING (impose_constraints)
( 484.944) GENERATE: DONE GROUNDING (impose_constraints)
( 484.944) LOOP: DONE IMPOSING CONSTRAINTS
( 484.944) LOOP: START GENERATING (program 1237)
( 484.944) GENERATE: START SOLVING
( 485.424) GENERATE: DONE SOLVING
( 485.424) LOOP: DONE GENERATING (program 1237)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(C),c_4(D),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 485.424) LOOP: START TESTING
( 485.427) LOOP: DONE TESTING ('some', 'some')
( 485.427) LOOP: START IMPOSING CONSTRAINTS
( 485.427) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 485.427) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 485.428) GENERATE: START GROUNDING (impose_constraints)
( 486.078) GENERATE: DONE GROUNDING (impose_constraints)
( 486.078) LOOP: DONE IMPOSING CONSTRAINTS
( 486.078) LOOP: START GENERATING (program 1238)
( 486.078) GENERATE: START SOLVING
( 486.225) GENERATE: DONE SOLVING
( 486.226) LOOP: DONE GENERATING (program 1238)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_2(D),my_true_value(A,D),c_0(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 486.226) LOOP: START TESTING
( 486.229) LOOP: DONE TESTING ('some', 'some')
( 486.229) LOOP: START IMPOSING CONSTRAINTS
( 486.229) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 486.229) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 486.229) GENERATE: START GROUNDING (impose_constraints)
( 486.949) GENERATE: DONE GROUNDING (impose_constraints)
( 486.949) LOOP: DONE IMPOSING CONSTRAINTS
( 486.949) LOOP: START GENERATING (program 1239)
( 486.949) GENERATE: START SOLVING
( 487.057) GENERATE: DONE SOLVING
( 487.058) LOOP: DONE GENERATING (program 1239)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),c_2(D),my_true_value(A,D),c_4(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 487.058) LOOP: START TESTING
( 487.061) LOOP: DONE TESTING ('some', 'some')
( 487.061) LOOP: START IMPOSING CONSTRAINTS
( 487.061) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 487.061) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 487.061) GENERATE: START GROUNDING (impose_constraints)
( 487.726) GENERATE: DONE GROUNDING (impose_constraints)
( 487.726) LOOP: DONE IMPOSING CONSTRAINTS
( 487.726) LOOP: START GENERATING (program 1240)
( 487.726) GENERATE: START SOLVING
( 488.168) GENERATE: DONE SOLVING
( 488.169) LOOP: DONE GENERATING (program 1240)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_true_value(A,D),my_succ(A,B,D).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 488.169) LOOP: START TESTING
( 488.171) LOOP: DONE TESTING ('some', 'some')
( 488.171) LOOP: START IMPOSING CONSTRAINTS
( 488.172) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 488.172) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 488.172) GENERATE: START GROUNDING (impose_constraints)
( 488.847) GENERATE: DONE GROUNDING (impose_constraints)
( 488.847) LOOP: DONE IMPOSING CONSTRAINTS
( 488.847) LOOP: START GENERATING (program 1241)
( 488.847) GENERATE: START SOLVING
( 489.035) GENERATE: DONE SOLVING
( 489.036) LOOP: DONE GENERATING (program 1241)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_1(B),my_succ(A,C,B),c_1(D).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 489.036) LOOP: START TESTING
( 489.039) LOOP: DONE TESTING ('some', 'some')
( 489.039) LOOP: START IMPOSING CONSTRAINTS
( 489.039) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 489.039) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,c_1,1,(ClId0V3,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 489.039) GENERATE: START GROUNDING (impose_constraints)
( 489.704) GENERATE: DONE GROUNDING (impose_constraints)
( 489.704) LOOP: DONE IMPOSING CONSTRAINTS
( 489.704) LOOP: START GENERATING (program 1242)
( 489.704) GENERATE: START SOLVING
( 491.015) GENERATE: DONE SOLVING
( 491.016) LOOP: DONE GENERATING (program 1242)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_3(C),c_4(D).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 491.016) LOOP: START TESTING
( 491.019) LOOP: DONE TESTING ('some', 'some')
( 491.019) LOOP: START IMPOSING CONSTRAINTS
( 491.019) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 491.019) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 491.020) GENERATE: START GROUNDING (impose_constraints)
( 491.863) GENERATE: DONE GROUNDING (impose_constraints)
( 491.863) LOOP: DONE IMPOSING CONSTRAINTS
( 491.863) LOOP: START GENERATING (program 1243)
( 491.863) GENERATE: START SOLVING
( 492.001) GENERATE: DONE SOLVING
( 492.001) LOOP: DONE GENERATING (program 1243)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,D,C),c_4(D),my_true_value(A,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 492.001) LOOP: START TESTING
( 492.004) LOOP: DONE TESTING ('some', 'some')
( 492.004) LOOP: START IMPOSING CONSTRAINTS
( 492.004) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 492.004) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 492.005) GENERATE: START GROUNDING (impose_constraints)
( 492.685) GENERATE: DONE GROUNDING (impose_constraints)
( 492.685) LOOP: DONE IMPOSING CONSTRAINTS
( 492.685) LOOP: START GENERATING (program 1244)
( 492.685) GENERATE: START SOLVING
( 492.805) GENERATE: DONE SOLVING
( 492.805) LOOP: DONE GENERATING (program 1244)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),c_1(B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 492.805) LOOP: START TESTING
( 492.808) LOOP: DONE TESTING ('some', 'some')
( 492.808) LOOP: START IMPOSING CONSTRAINTS
( 492.809) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 492.809) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_1,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 492.809) GENERATE: START GROUNDING (impose_constraints)
( 493.566) GENERATE: DONE GROUNDING (impose_constraints)
( 493.566) LOOP: DONE IMPOSING CONSTRAINTS
( 493.566) LOOP: START GENERATING (program 1245)
( 493.566) GENERATE: START SOLVING
( 493.679) GENERATE: DONE SOLVING
( 493.680) LOOP: DONE GENERATING (program 1245)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(D),my_succ(A,C,D),c_2(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 493.680) LOOP: START TESTING
( 493.683) LOOP: DONE TESTING ('some', 'some')
( 493.683) LOOP: START IMPOSING CONSTRAINTS
( 493.683) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 493.683) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 493.684) GENERATE: START GROUNDING (impose_constraints)
( 494.431) GENERATE: DONE GROUNDING (impose_constraints)
( 494.431) LOOP: DONE IMPOSING CONSTRAINTS
( 494.431) LOOP: START GENERATING (program 1246)
( 494.431) GENERATE: START SOLVING
( 494.738) GENERATE: DONE SOLVING
( 494.739) LOOP: DONE GENERATING (program 1246)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(B),my_succ(A,C,B),c_5(D).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 494.739) LOOP: START TESTING
( 494.741) LOOP: DONE TESTING ('some', 'some')
( 494.741) LOOP: START IMPOSING CONSTRAINTS
( 494.741) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 494.741) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 494.742) GENERATE: START GROUNDING (impose_constraints)
( 495.438) GENERATE: DONE GROUNDING (impose_constraints)
( 495.438) LOOP: DONE IMPOSING CONSTRAINTS
( 495.438) LOOP: START GENERATING (program 1247)
( 495.438) GENERATE: START SOLVING
( 496.097) GENERATE: DONE SOLVING
( 496.097) LOOP: DONE GENERATING (program 1247)
PROGRAM:
  next_value(A,B) :- c_0(D),my_succ(A,D,C),c_1(C),my_true_value(A,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 496.097) LOOP: START TESTING
( 496.100) LOOP: DONE TESTING ('some', 'some')
( 496.100) LOOP: START IMPOSING CONSTRAINTS
( 496.100) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 496.100) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 496.101) GENERATE: START GROUNDING (impose_constraints)
( 496.780) GENERATE: DONE GROUNDING (impose_constraints)
( 496.780) LOOP: DONE IMPOSING CONSTRAINTS
( 496.780) LOOP: START GENERATING (program 1248)
( 496.780) GENERATE: START SOLVING
( 497.024) GENERATE: DONE SOLVING
( 497.025) LOOP: DONE GENERATING (program 1248)
PROGRAM:
  next_value(A,B) :- c_0(D),c_2(B),my_succ(A,C,B),my_succ(A,D,C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 497.025) LOOP: START TESTING
( 497.028) LOOP: DONE TESTING ('some', 'some')
( 497.028) LOOP: START IMPOSING CONSTRAINTS
( 497.028) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 497.028) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 497.028) GENERATE: START GROUNDING (impose_constraints)
( 497.748) GENERATE: DONE GROUNDING (impose_constraints)
( 497.748) LOOP: DONE IMPOSING CONSTRAINTS
( 497.748) LOOP: START GENERATING (program 1249)
( 497.748) GENERATE: START SOLVING
( 498.528) GENERATE: DONE SOLVING
( 498.529) LOOP: DONE GENERATING (program 1249)
PROGRAM:
  next_value(A,B) :- c_0(D),c_2(B),my_succ(A,C,B),my_succ(A,D,C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 498.529) LOOP: START TESTING
( 498.532) LOOP: DONE TESTING ('some', 'some')
( 498.532) LOOP: START IMPOSING CONSTRAINTS
( 498.532) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 498.532) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 498.532) GENERATE: START GROUNDING (impose_constraints)
( 499.280) GENERATE: DONE GROUNDING (impose_constraints)
( 499.280) LOOP: DONE IMPOSING CONSTRAINTS
( 499.280) LOOP: START GENERATING (program 1250)
( 499.280) GENERATE: START SOLVING
( 499.490) GENERATE: DONE SOLVING
( 499.491) LOOP: DONE GENERATING (program 1250)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
  next_value(A,B) :- my_succ(A,C,D),c_3(C),c_5(B),my_true_value(A,D).
( 499.491) LOOP: START TESTING
( 499.496) LOOP: DONE TESTING ('some', 'some')
( 499.496) LOOP: START IMPOSING CONSTRAINTS
( 499.496) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 499.496) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_5,1,(ClId1V1,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 499.496) GENERATE: START GROUNDING (impose_constraints)
( 500.229) GENERATE: DONE GROUNDING (impose_constraints)
( 500.229) LOOP: DONE IMPOSING CONSTRAINTS
( 500.229) LOOP: START GENERATING (program 1251)
( 500.229) GENERATE: START SOLVING
( 500.407) GENERATE: DONE SOLVING
( 500.408) LOOP: DONE GENERATING (program 1251)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_0(C).
  next_value(A,B) :- my_succ(A,C,D),c_3(C),c_5(B),my_true_value(A,D).
( 500.408) LOOP: START TESTING
( 500.410) LOOP: DONE TESTING ('some', 'none')
( 500.410) LOOP: START IMPOSING CONSTRAINTS
( 500.410) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V3)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_5,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 500.410) GENERATE: START GROUNDING (impose_constraints)
( 501.093) GENERATE: DONE GROUNDING (impose_constraints)
( 501.093) LOOP: DONE IMPOSING CONSTRAINTS
( 501.093) LOOP: START GENERATING (program 1252)
( 501.093) GENERATE: START SOLVING
( 501.506) GENERATE: DONE SOLVING
( 501.507) LOOP: DONE GENERATING (program 1252)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
  next_value(A,B) :- my_succ(A,B,C),my_succ(A,C,D),c_3(C),c_4(D).
( 501.507) LOOP: START TESTING
( 501.510) LOOP: DONE TESTING ('some', 'some')
( 501.510) LOOP: START IMPOSING CONSTRAINTS
( 501.510) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 501.510) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V3)),body_literal(ClId1,c_4,1,(ClId1V3,)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 501.510) GENERATE: START GROUNDING (impose_constraints)
( 502.197) GENERATE: DONE GROUNDING (impose_constraints)
( 502.197) LOOP: DONE IMPOSING CONSTRAINTS
( 502.197) LOOP: START GENERATING (program 1253)
( 502.197) GENERATE: START SOLVING
( 502.971) GENERATE: DONE SOLVING
( 502.972) LOOP: DONE GENERATING (program 1253)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 502.972) LOOP: START TESTING
( 502.975) LOOP: DONE TESTING ('some', 'some')
( 502.975) LOOP: START IMPOSING CONSTRAINTS
( 502.975) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 502.975) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 502.975) GENERATE: START GROUNDING (impose_constraints)
( 503.661) GENERATE: DONE GROUNDING (impose_constraints)
( 503.661) LOOP: DONE IMPOSING CONSTRAINTS
( 503.661) LOOP: START GENERATING (program 1254)
( 503.661) GENERATE: START SOLVING
( 503.885) GENERATE: DONE SOLVING
( 503.886) LOOP: DONE GENERATING (program 1254)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 503.886) LOOP: START TESTING
( 503.889) LOOP: DONE TESTING ('some', 'some')
( 503.889) LOOP: START IMPOSING CONSTRAINTS
( 503.889) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 503.889) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 503.889) GENERATE: START GROUNDING (impose_constraints)
( 504.576) GENERATE: DONE GROUNDING (impose_constraints)
( 504.576) LOOP: DONE IMPOSING CONSTRAINTS
( 504.576) LOOP: START GENERATING (program 1255)
( 504.576) GENERATE: START SOLVING
( 504.764) GENERATE: DONE SOLVING
( 504.765) LOOP: DONE GENERATING (program 1255)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 504.765) LOOP: START TESTING
( 504.768) LOOP: DONE TESTING ('some', 'some')
( 504.768) LOOP: START IMPOSING CONSTRAINTS
( 504.768) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 504.768) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 504.768) GENERATE: START GROUNDING (impose_constraints)
( 505.504) GENERATE: DONE GROUNDING (impose_constraints)
( 505.504) LOOP: DONE IMPOSING CONSTRAINTS
( 505.504) LOOP: START GENERATING (program 1256)
( 505.504) GENERATE: START SOLVING
( 506.267) GENERATE: DONE SOLVING
( 506.268) LOOP: DONE GENERATING (program 1256)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 506.268) LOOP: START TESTING
( 506.271) LOOP: DONE TESTING ('some', 'some')
( 506.271) LOOP: START IMPOSING CONSTRAINTS
( 506.271) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 506.271) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 506.271) GENERATE: START GROUNDING (impose_constraints)
( 507.057) GENERATE: DONE GROUNDING (impose_constraints)
( 507.057) LOOP: DONE IMPOSING CONSTRAINTS
( 507.057) LOOP: START GENERATING (program 1257)
( 507.057) GENERATE: START SOLVING
( 507.187) GENERATE: DONE SOLVING
( 507.187) LOOP: DONE GENERATING (program 1257)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 507.187) LOOP: START TESTING
( 507.190) LOOP: DONE TESTING ('some', 'some')
( 507.190) LOOP: START IMPOSING CONSTRAINTS
( 507.190) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 507.190) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 507.190) GENERATE: START GROUNDING (impose_constraints)
( 507.949) GENERATE: DONE GROUNDING (impose_constraints)
( 507.949) LOOP: DONE IMPOSING CONSTRAINTS
( 507.949) LOOP: START GENERATING (program 1258)
( 507.949) GENERATE: START SOLVING
( 508.078) GENERATE: DONE SOLVING
( 508.078) LOOP: DONE GENERATING (program 1258)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 508.078) LOOP: START TESTING
( 508.081) LOOP: DONE TESTING ('some', 'some')
( 508.081) LOOP: START IMPOSING CONSTRAINTS
( 508.081) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 508.081) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 508.081) GENERATE: START GROUNDING (impose_constraints)
( 508.842) GENERATE: DONE GROUNDING (impose_constraints)
( 508.842) LOOP: DONE IMPOSING CONSTRAINTS
( 508.842) LOOP: START GENERATING (program 1259)
( 508.842) GENERATE: START SOLVING
( 508.963) GENERATE: DONE SOLVING
( 508.963) LOOP: DONE GENERATING (program 1259)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 508.964) LOOP: START TESTING
( 508.966) LOOP: DONE TESTING ('some', 'some')
( 508.966) LOOP: START IMPOSING CONSTRAINTS
( 508.967) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 508.967) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 508.967) GENERATE: START GROUNDING (impose_constraints)
( 509.676) GENERATE: DONE GROUNDING (impose_constraints)
( 509.676) LOOP: DONE IMPOSING CONSTRAINTS
( 509.676) LOOP: START GENERATING (program 1260)
( 509.676) GENERATE: START SOLVING
( 509.796) GENERATE: DONE SOLVING
( 509.797) LOOP: DONE GENERATING (program 1260)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 509.797) LOOP: START TESTING
( 509.800) LOOP: DONE TESTING ('some', 'some')
( 509.800) LOOP: START IMPOSING CONSTRAINTS
( 509.800) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 509.800) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 509.800) GENERATE: START GROUNDING (impose_constraints)
( 510.500) GENERATE: DONE GROUNDING (impose_constraints)
( 510.500) LOOP: DONE IMPOSING CONSTRAINTS
( 510.500) LOOP: START GENERATING (program 1261)
( 510.500) GENERATE: START SOLVING
( 510.627) GENERATE: DONE SOLVING
( 510.628) LOOP: DONE GENERATING (program 1261)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 510.628) LOOP: START TESTING
( 510.630) LOOP: DONE TESTING ('some', 'some')
( 510.630) LOOP: START IMPOSING CONSTRAINTS
( 510.630) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 510.630) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 510.631) GENERATE: START GROUNDING (impose_constraints)
( 511.319) GENERATE: DONE GROUNDING (impose_constraints)
( 511.319) LOOP: DONE IMPOSING CONSTRAINTS
( 511.319) LOOP: START GENERATING (program 1262)
( 511.319) GENERATE: START SOLVING
( 511.483) GENERATE: DONE SOLVING
( 511.484) LOOP: DONE GENERATING (program 1262)
PROGRAM:
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 511.484) LOOP: START TESTING
( 511.487) LOOP: DONE TESTING ('some', 'some')
( 511.487) LOOP: START IMPOSING CONSTRAINTS
( 511.487) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 511.487) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 511.487) GENERATE: START GROUNDING (impose_constraints)
( 512.209) GENERATE: DONE GROUNDING (impose_constraints)
( 512.209) LOOP: DONE IMPOSING CONSTRAINTS
( 512.209) LOOP: START GENERATING (program 1263)
( 512.209) GENERATE: START SOLVING
( 512.337) GENERATE: DONE SOLVING
( 512.338) LOOP: DONE GENERATING (program 1263)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 512.338) LOOP: START TESTING
( 512.342) LOOP: DONE TESTING ('some', 'some')
( 512.342) LOOP: START IMPOSING CONSTRAINTS
( 512.342) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 512.342) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 512.342) GENERATE: START GROUNDING (impose_constraints)
( 513.050) GENERATE: DONE GROUNDING (impose_constraints)
( 513.050) LOOP: DONE IMPOSING CONSTRAINTS
( 513.050) LOOP: START GENERATING (program 1264)
( 513.050) GENERATE: START SOLVING
( 513.168) GENERATE: DONE SOLVING
( 513.168) LOOP: DONE GENERATING (program 1264)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 513.168) LOOP: START TESTING
( 513.171) LOOP: DONE TESTING ('some', 'some')
( 513.171) LOOP: START IMPOSING CONSTRAINTS
( 513.171) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 513.171) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 513.172) GENERATE: START GROUNDING (impose_constraints)
( 513.886) GENERATE: DONE GROUNDING (impose_constraints)
( 513.887) LOOP: DONE IMPOSING CONSTRAINTS
( 513.887) LOOP: START GENERATING (program 1265)
( 513.887) GENERATE: START SOLVING
( 514.024) GENERATE: DONE SOLVING
( 514.024) LOOP: DONE GENERATING (program 1265)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 514.024) LOOP: START TESTING
( 514.028) LOOP: DONE TESTING ('some', 'some')
( 514.028) LOOP: START IMPOSING CONSTRAINTS
( 514.028) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 514.028) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 514.028) GENERATE: START GROUNDING (impose_constraints)
( 514.732) GENERATE: DONE GROUNDING (impose_constraints)
( 514.732) LOOP: DONE IMPOSING CONSTRAINTS
( 514.732) LOOP: START GENERATING (program 1266)
( 514.732) GENERATE: START SOLVING
( 514.851) GENERATE: DONE SOLVING
( 514.852) LOOP: DONE GENERATING (program 1266)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 514.852) LOOP: START TESTING
( 514.854) LOOP: DONE TESTING ('some', 'some')
( 514.854) LOOP: START IMPOSING CONSTRAINTS
( 514.855) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 514.855) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 514.855) GENERATE: START GROUNDING (impose_constraints)
( 515.572) GENERATE: DONE GROUNDING (impose_constraints)
( 515.572) LOOP: DONE IMPOSING CONSTRAINTS
( 515.572) LOOP: START GENERATING (program 1267)
( 515.572) GENERATE: START SOLVING
( 515.688) GENERATE: DONE SOLVING
( 515.689) LOOP: DONE GENERATING (program 1267)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 515.689) LOOP: START TESTING
( 515.692) LOOP: DONE TESTING ('some', 'some')
( 515.692) LOOP: START IMPOSING CONSTRAINTS
( 515.692) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 515.692) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 515.692) GENERATE: START GROUNDING (impose_constraints)
( 516.427) GENERATE: DONE GROUNDING (impose_constraints)
( 516.427) LOOP: DONE IMPOSING CONSTRAINTS
( 516.427) LOOP: START GENERATING (program 1268)
( 516.427) GENERATE: START SOLVING
( 516.556) GENERATE: DONE SOLVING
( 516.556) LOOP: DONE GENERATING (program 1268)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_true_value(A,C).
( 516.557) LOOP: START TESTING
( 516.559) LOOP: DONE TESTING ('some', 'some')
( 516.559) LOOP: START IMPOSING CONSTRAINTS
( 516.559) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 516.559) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 516.560) GENERATE: START GROUNDING (impose_constraints)
( 517.262) GENERATE: DONE GROUNDING (impose_constraints)
( 517.262) LOOP: DONE IMPOSING CONSTRAINTS
( 517.262) LOOP: START GENERATING (program 1269)
( 517.262) GENERATE: START SOLVING
( 517.378) GENERATE: DONE SOLVING
( 517.379) LOOP: DONE GENERATING (program 1269)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 517.379) LOOP: START TESTING
( 517.382) LOOP: DONE TESTING ('some', 'some')
( 517.382) LOOP: START IMPOSING CONSTRAINTS
( 517.382) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 517.382) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 517.383) GENERATE: START GROUNDING (impose_constraints)
( 518.101) GENERATE: DONE GROUNDING (impose_constraints)
( 518.101) LOOP: DONE IMPOSING CONSTRAINTS
( 518.101) LOOP: START GENERATING (program 1270)
( 518.101) GENERATE: START SOLVING
( 518.214) GENERATE: DONE SOLVING
( 518.214) LOOP: DONE GENERATING (program 1270)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_1(B),my_true_value(D,C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_3(C).
( 518.214) LOOP: START TESTING
( 518.217) LOOP: DONE TESTING ('some', 'some')
( 518.217) LOOP: START IMPOSING CONSTRAINTS
( 518.217) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 518.217) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 518.217) GENERATE: START GROUNDING (impose_constraints)
( 518.909) GENERATE: DONE GROUNDING (impose_constraints)
( 518.909) LOOP: DONE IMPOSING CONSTRAINTS
( 518.909) LOOP: START GENERATING (program 1271)
( 518.909) GENERATE: START SOLVING
( 519.088) GENERATE: DONE SOLVING
( 519.088) LOOP: DONE GENERATING (program 1271)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_1(B),my_true_value(D,C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 519.088) LOOP: START TESTING
( 519.091) LOOP: DONE TESTING ('some', 'some')
( 519.091) LOOP: START IMPOSING CONSTRAINTS
( 519.091) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 519.091) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 519.091) GENERATE: START GROUNDING (impose_constraints)
( 519.783) GENERATE: DONE GROUNDING (impose_constraints)
( 519.783) LOOP: DONE IMPOSING CONSTRAINTS
( 519.783) LOOP: START GENERATING (program 1272)
( 519.783) GENERATE: START SOLVING
( 520.005) GENERATE: DONE SOLVING
( 520.005) LOOP: DONE GENERATING (program 1272)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
( 520.006) LOOP: START TESTING
( 520.009) LOOP: DONE TESTING ('some', 'some')
( 520.009) LOOP: START IMPOSING CONSTRAINTS
( 520.009) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 520.009) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 520.009) GENERATE: START GROUNDING (impose_constraints)
( 520.698) GENERATE: DONE GROUNDING (impose_constraints)
( 520.698) LOOP: DONE IMPOSING CONSTRAINTS
( 520.698) LOOP: START GENERATING (program 1273)
( 520.698) GENERATE: START SOLVING
( 520.890) GENERATE: DONE SOLVING
( 520.891) LOOP: DONE GENERATING (program 1273)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 520.891) LOOP: START TESTING
( 520.894) LOOP: DONE TESTING ('some', 'some')
( 520.894) LOOP: START IMPOSING CONSTRAINTS
( 520.894) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 520.894) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 520.894) GENERATE: START GROUNDING (impose_constraints)
( 521.575) GENERATE: DONE GROUNDING (impose_constraints)
( 521.575) LOOP: DONE IMPOSING CONSTRAINTS
( 521.575) LOOP: START GENERATING (program 1274)
( 521.575) GENERATE: START SOLVING
( 521.812) GENERATE: DONE SOLVING
( 521.813) LOOP: DONE GENERATING (program 1274)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_3(C).
( 521.813) LOOP: START TESTING
( 521.816) LOOP: DONE TESTING ('some', 'some')
( 521.816) LOOP: START IMPOSING CONSTRAINTS
( 521.817) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 521.817) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_3,1,(ClId1V2,)),body_literal(ClId1,c_2,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 521.817) GENERATE: START GROUNDING (impose_constraints)
( 522.507) GENERATE: DONE GROUNDING (impose_constraints)
( 522.507) LOOP: DONE IMPOSING CONSTRAINTS
( 522.507) LOOP: START GENERATING (program 1275)
( 522.507) GENERATE: START SOLVING
( 523.312) GENERATE: DONE SOLVING
( 523.313) LOOP: DONE GENERATING (program 1275)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 523.313) LOOP: START TESTING
( 523.316) LOOP: DONE TESTING ('some', 'some')
( 523.317) LOOP: START IMPOSING CONSTRAINTS
( 523.317) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 523.317) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 523.317) GENERATE: START GROUNDING (impose_constraints)
( 524.015) GENERATE: DONE GROUNDING (impose_constraints)
( 524.015) LOOP: DONE IMPOSING CONSTRAINTS
( 524.015) LOOP: START GENERATING (program 1276)
( 524.015) GENERATE: START SOLVING
( 524.150) GENERATE: DONE SOLVING
( 524.150) LOOP: DONE GENERATING (program 1276)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C),c_2(C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),my_true_value(A,C).
( 524.151) LOOP: START TESTING
( 524.154) LOOP: DONE TESTING ('some', 'some')
( 524.154) LOOP: START IMPOSING CONSTRAINTS
( 524.154) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 524.154) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 524.154) GENERATE: START GROUNDING (impose_constraints)
( 524.946) GENERATE: DONE GROUNDING (impose_constraints)
( 524.946) LOOP: DONE IMPOSING CONSTRAINTS
( 524.946) LOOP: START GENERATING (program 1277)
( 524.946) GENERATE: START SOLVING
( 525.105) GENERATE: DONE SOLVING
( 525.106) LOOP: DONE GENERATING (program 1277)
PROGRAM:
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 525.106) LOOP: START TESTING
( 525.109) LOOP: DONE TESTING ('some', 'some')
( 525.109) LOOP: START IMPOSING CONSTRAINTS
( 525.109) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 525.109) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 525.109) GENERATE: START GROUNDING (impose_constraints)
( 525.930) GENERATE: DONE GROUNDING (impose_constraints)
( 525.930) LOOP: DONE IMPOSING CONSTRAINTS
( 525.930) LOOP: START GENERATING (program 1278)
( 525.930) GENERATE: START SOLVING
( 526.155) GENERATE: DONE SOLVING
( 526.155) LOOP: DONE GENERATING (program 1278)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 526.155) LOOP: START TESTING
( 526.159) LOOP: DONE TESTING ('some', 'some')
( 526.159) LOOP: START IMPOSING CONSTRAINTS
( 526.159) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 526.159) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 526.159) GENERATE: START GROUNDING (impose_constraints)
( 526.901) GENERATE: DONE GROUNDING (impose_constraints)
( 526.901) LOOP: DONE IMPOSING CONSTRAINTS
( 526.901) LOOP: START GENERATING (program 1279)
( 526.901) GENERATE: START SOLVING
( 527.018) GENERATE: DONE SOLVING
( 527.019) LOOP: DONE GENERATING (program 1279)
PROGRAM:
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 527.019) LOOP: START TESTING
( 527.022) LOOP: DONE TESTING ('some', 'some')
( 527.022) LOOP: START IMPOSING CONSTRAINTS
( 527.022) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 527.022) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 527.023) GENERATE: START GROUNDING (impose_constraints)
( 527.719) GENERATE: DONE GROUNDING (impose_constraints)
( 527.719) LOOP: DONE IMPOSING CONSTRAINTS
( 527.719) LOOP: START GENERATING (program 1280)
( 527.719) GENERATE: START SOLVING
( 527.835) GENERATE: DONE SOLVING
( 527.835) LOOP: DONE GENERATING (program 1280)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 527.835) LOOP: START TESTING
( 527.839) LOOP: DONE TESTING ('some', 'some')
( 527.839) LOOP: START IMPOSING CONSTRAINTS
( 527.839) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 527.839) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 527.839) GENERATE: START GROUNDING (impose_constraints)
( 528.532) GENERATE: DONE GROUNDING (impose_constraints)
( 528.532) LOOP: DONE IMPOSING CONSTRAINTS
( 528.532) LOOP: START GENERATING (program 1281)
( 528.532) GENERATE: START SOLVING
( 528.643) GENERATE: DONE SOLVING
( 528.643) LOOP: DONE GENERATING (program 1281)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 528.644) LOOP: START TESTING
( 528.646) LOOP: DONE TESTING ('some', 'some')
( 528.646) LOOP: START IMPOSING CONSTRAINTS
( 528.646) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 528.646) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 528.646) GENERATE: START GROUNDING (impose_constraints)
( 529.347) GENERATE: DONE GROUNDING (impose_constraints)
( 529.347) LOOP: DONE IMPOSING CONSTRAINTS
( 529.347) LOOP: START GENERATING (program 1282)
( 529.347) GENERATE: START SOLVING
( 529.464) GENERATE: DONE SOLVING
( 529.464) LOOP: DONE GENERATING (program 1282)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_2(B),my_true_value(D,C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 529.465) LOOP: START TESTING
( 529.468) LOOP: DONE TESTING ('some', 'some')
( 529.468) LOOP: START IMPOSING CONSTRAINTS
( 529.468) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 529.468) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 529.468) GENERATE: START GROUNDING (impose_constraints)
( 530.194) GENERATE: DONE GROUNDING (impose_constraints)
( 530.194) LOOP: DONE IMPOSING CONSTRAINTS
( 530.194) LOOP: START GENERATING (program 1283)
( 530.194) GENERATE: START SOLVING
( 530.307) GENERATE: DONE SOLVING
( 530.307) LOOP: DONE GENERATING (program 1283)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_3(C),my_true_value(D,C).
  next_value(A,B) :- my_succ(A,B,C),my_true_value(A,C),c_2(C).
( 530.307) LOOP: START TESTING
( 530.310) LOOP: DONE TESTING ('some', 'some')
( 530.310) LOOP: START IMPOSING CONSTRAINTS
( 530.310) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 530.310) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 530.311) GENERATE: START GROUNDING (impose_constraints)
( 531.015) GENERATE: DONE GROUNDING (impose_constraints)
( 531.015) LOOP: DONE IMPOSING CONSTRAINTS
( 531.015) LOOP: START GENERATING (program 1284)
( 531.015) GENERATE: START SOLVING
( 531.143) GENERATE: DONE SOLVING
( 531.143) LOOP: DONE GENERATING (program 1284)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 531.143) LOOP: START TESTING
( 531.147) LOOP: DONE TESTING ('some', 'some')
( 531.147) LOOP: START IMPOSING CONSTRAINTS
( 531.147) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 531.147) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 531.147) GENERATE: START GROUNDING (impose_constraints)
( 531.891) GENERATE: DONE GROUNDING (impose_constraints)
( 531.891) LOOP: DONE IMPOSING CONSTRAINTS
( 531.891) LOOP: START GENERATING (program 1285)
( 531.891) GENERATE: START SOLVING
( 532.028) GENERATE: DONE SOLVING
( 532.029) LOOP: DONE GENERATING (program 1285)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_1(B),my_true_value(D,C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 532.034) LOOP: START TESTING
( 532.037) LOOP: DONE TESTING ('some', 'some')
( 532.037) LOOP: START IMPOSING CONSTRAINTS
( 532.037) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 532.037) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_1,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 532.038) GENERATE: START GROUNDING (impose_constraints)
( 532.750) GENERATE: DONE GROUNDING (impose_constraints)
( 532.750) LOOP: DONE IMPOSING CONSTRAINTS
( 532.750) LOOP: START GENERATING (program 1286)
( 532.750) GENERATE: START SOLVING
( 532.874) GENERATE: DONE SOLVING
( 532.875) LOOP: DONE GENERATING (program 1286)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 532.875) LOOP: START TESTING
( 532.878) LOOP: DONE TESTING ('some', 'some')
( 532.878) LOOP: START IMPOSING CONSTRAINTS
( 532.878) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 532.878) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 532.878) GENERATE: START GROUNDING (impose_constraints)
( 533.723) GENERATE: DONE GROUNDING (impose_constraints)
( 533.723) LOOP: DONE IMPOSING CONSTRAINTS
( 533.723) LOOP: START GENERATING (program 1287)
( 533.723) GENERATE: START SOLVING
( 533.893) GENERATE: DONE SOLVING
( 533.893) LOOP: DONE GENERATING (program 1287)
PROGRAM:
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 533.894) LOOP: START TESTING
( 533.896) LOOP: DONE TESTING ('some', 'some')
( 533.896) LOOP: START IMPOSING CONSTRAINTS
( 533.896) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 533.896) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 533.896) GENERATE: START GROUNDING (impose_constraints)
( 534.725) GENERATE: DONE GROUNDING (impose_constraints)
( 534.725) LOOP: DONE IMPOSING CONSTRAINTS
( 534.725) LOOP: START GENERATING (program 1288)
( 534.725) GENERATE: START SOLVING
( 534.935) GENERATE: DONE SOLVING
( 534.936) LOOP: DONE GENERATING (program 1288)
PROGRAM:
  next_value(A,B) :- c_2(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
  next_value(A,B) :- my_succ(A,B,C),c_1(B),c_2(C).
( 534.936) LOOP: START TESTING
( 534.939) LOOP: DONE TESTING ('some', 'some')
( 534.939) LOOP: START IMPOSING CONSTRAINTS
( 534.939) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 534.939) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V1,ClId1V2)),body_literal(ClId1,c_1,1,(ClId1V1,)),body_literal(ClId1,c_2,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 534.939) GENERATE: START GROUNDING (impose_constraints)
( 535.772) GENERATE: DONE GROUNDING (impose_constraints)
( 535.772) LOOP: DONE IMPOSING CONSTRAINTS
( 535.772) LOOP: START GENERATING (program 1289)
( 535.772) GENERATE: START SOLVING
( 537.869) GENERATE: DONE SOLVING
( 537.870) LOOP: DONE GENERATING (program 1289)
PROGRAM:
  next_value(A,B) :- c_3(C),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
( 537.870) LOOP: START TESTING
( 537.873) LOOP: DONE TESTING ('some', 'some')
( 537.873) LOOP: START IMPOSING CONSTRAINTS
( 537.873) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 537.873) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 537.874) GENERATE: START GROUNDING (impose_constraints)
( 538.713) GENERATE: DONE GROUNDING (impose_constraints)
( 538.713) LOOP: DONE IMPOSING CONSTRAINTS
( 538.713) LOOP: START GENERATING (program 1290)
( 538.713) GENERATE: START SOLVING
( 538.905) GENERATE: DONE SOLVING
( 538.906) LOOP: DONE GENERATING (program 1290)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_3(C),my_true_value(D,C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
( 538.906) LOOP: START TESTING
( 538.910) LOOP: DONE TESTING ('some', 'some')
( 538.910) LOOP: START IMPOSING CONSTRAINTS
( 538.910) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 538.910) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 538.910) GENERATE: START GROUNDING (impose_constraints)
( 539.754) GENERATE: DONE GROUNDING (impose_constraints)
( 539.754) LOOP: DONE IMPOSING CONSTRAINTS
( 539.754) LOOP: START GENERATING (program 1291)
( 539.754) GENERATE: START SOLVING
( 539.927) GENERATE: DONE SOLVING
( 539.927) LOOP: DONE GENERATING (program 1291)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
( 539.927) LOOP: START TESTING
( 539.930) LOOP: DONE TESTING ('some', 'some')
( 539.930) LOOP: START IMPOSING CONSTRAINTS
( 539.931) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 539.931) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 539.931) GENERATE: START GROUNDING (impose_constraints)
( 540.813) GENERATE: DONE GROUNDING (impose_constraints)
( 540.813) LOOP: DONE IMPOSING CONSTRAINTS
( 540.813) LOOP: START GENERATING (program 1292)
( 540.813) GENERATE: START SOLVING
( 540.964) GENERATE: DONE SOLVING
( 540.964) LOOP: DONE GENERATING (program 1292)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_3(C),my_true_value(D,C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
( 540.964) LOOP: START TESTING
( 540.968) LOOP: DONE TESTING ('some', 'some')
( 540.968) LOOP: START IMPOSING CONSTRAINTS
( 540.968) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 540.968) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 540.968) GENERATE: START GROUNDING (impose_constraints)
( 541.811) GENERATE: DONE GROUNDING (impose_constraints)
( 541.811) LOOP: DONE IMPOSING CONSTRAINTS
( 541.811) LOOP: START GENERATING (program 1293)
( 541.811) GENERATE: START SOLVING
( 541.959) GENERATE: DONE SOLVING
( 541.960) LOOP: DONE GENERATING (program 1293)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),my_true_value(D,C),c_2(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
( 541.960) LOOP: START TESTING
( 541.963) LOOP: DONE TESTING ('some', 'some')
( 541.963) LOOP: START IMPOSING CONSTRAINTS
( 541.963) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 541.963) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 541.963) GENERATE: START GROUNDING (impose_constraints)
( 542.823) GENERATE: DONE GROUNDING (impose_constraints)
( 542.823) LOOP: DONE IMPOSING CONSTRAINTS
( 542.823) LOOP: START GENERATING (program 1294)
( 542.823) GENERATE: START SOLVING
( 543.000) GENERATE: DONE SOLVING
( 543.000) LOOP: DONE GENERATING (program 1294)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),my_succ(D,B,C),c_2(B),my_true_value(D,C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
( 543.000) LOOP: START TESTING
( 543.003) LOOP: DONE TESTING ('some', 'some')
( 543.003) LOOP: START IMPOSING CONSTRAINTS
( 543.004) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 543.004) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 543.004) GENERATE: START GROUNDING (impose_constraints)
( 543.898) GENERATE: DONE GROUNDING (impose_constraints)
( 543.898) LOOP: DONE IMPOSING CONSTRAINTS
( 543.898) LOOP: START GENERATING (program 1295)
( 543.898) GENERATE: START SOLVING
( 544.215) GENERATE: DONE SOLVING
( 544.215) LOOP: DONE GENERATING (program 1295)
PROGRAM:
  next_value(A,B) :- c_1(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,B,C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
( 544.215) LOOP: START TESTING
( 544.219) LOOP: DONE TESTING ('some', 'some')
( 544.219) LOOP: START IMPOSING CONSTRAINTS
( 544.219) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 544.219) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 544.219) GENERATE: START GROUNDING (impose_constraints)
( 544.947) GENERATE: DONE GROUNDING (impose_constraints)
( 544.947) LOOP: DONE IMPOSING CONSTRAINTS
( 544.947) LOOP: START GENERATING (program 1296)
( 544.947) GENERATE: START SOLVING
( 545.196) GENERATE: DONE SOLVING
( 545.196) LOOP: DONE GENERATING (program 1296)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
( 545.196) LOOP: START TESTING
( 545.200) LOOP: DONE TESTING ('some', 'some')
( 545.200) LOOP: START IMPOSING CONSTRAINTS
( 545.200) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 545.200) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 545.200) GENERATE: START GROUNDING (impose_constraints)
( 545.902) GENERATE: DONE GROUNDING (impose_constraints)
( 545.902) LOOP: DONE IMPOSING CONSTRAINTS
( 545.902) LOOP: START GENERATING (program 1297)
( 545.902) GENERATE: START SOLVING
( 546.153) GENERATE: DONE SOLVING
( 546.154) LOOP: DONE GENERATING (program 1297)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(C),my_succ(D,B,C),my_true_value(D,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
( 546.154) LOOP: START TESTING
( 546.157) LOOP: DONE TESTING ('some', 'some')
( 546.157) LOOP: START IMPOSING CONSTRAINTS
( 546.157) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,not clause(2).
( 546.157) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V3,ClId0V1,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,c_5,1,(ClId1V2,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1.
( 546.157) GENERATE: START GROUNDING (impose_constraints)
( 546.872) GENERATE: DONE GROUNDING (impose_constraints)
( 546.872) LOOP: DONE IMPOSING CONSTRAINTS
( 546.872) LOOP: START GENERATING (program 1298)
( 546.872) GENERATE: START SOLVING
( 547.981) GENERATE: DONE SOLVING
( 547.981) LOOP: DONE GENERATING (program 1298)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
( 547.982) LOOP: START TESTING
( 547.985) LOOP: DONE TESTING ('some', 'some')
( 547.985) LOOP: START IMPOSING CONSTRAINTS
( 547.985) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 547.985) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 547.985) GENERATE: START GROUNDING (impose_constraints)
( 548.692) GENERATE: DONE GROUNDING (impose_constraints)
( 548.692) LOOP: DONE IMPOSING CONSTRAINTS
( 548.692) LOOP: START GENERATING (program 1299)
( 548.692) GENERATE: START SOLVING
( 548.896) GENERATE: DONE SOLVING
( 548.897) LOOP: DONE GENERATING (program 1299)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,C,B),c_1(C).
  next_value(A,B) :- my_true_value(A,B),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 548.897) LOOP: START TESTING
( 548.900) LOOP: DONE TESTING ('some', 'some')
( 548.900) LOOP: START IMPOSING CONSTRAINTS
( 548.900) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 548.900) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 548.900) GENERATE: START GROUNDING (impose_constraints)
( 549.612) GENERATE: DONE GROUNDING (impose_constraints)
( 549.612) LOOP: DONE IMPOSING CONSTRAINTS
( 549.612) LOOP: START GENERATING (program 1300)
( 549.612) GENERATE: START SOLVING
( 549.842) GENERATE: DONE SOLVING
( 549.842) LOOP: DONE GENERATING (program 1300)
PROGRAM:
  next_value(A,B) :- c_2(B),my_succ(A,D,C),c_2(C),my_succ(A,D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 549.842) LOOP: START TESTING
( 549.845) LOOP: DONE TESTING ('some', 'some')
( 549.845) LOOP: START IMPOSING CONSTRAINTS
( 549.845) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 549.845) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_2,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 549.846) GENERATE: START GROUNDING (impose_constraints)
( 550.571) GENERATE: DONE GROUNDING (impose_constraints)
( 550.571) LOOP: DONE IMPOSING CONSTRAINTS
( 550.571) LOOP: START GENERATING (program 1301)
( 550.571) GENERATE: START SOLVING
( 550.744) GENERATE: DONE SOLVING
( 550.745) LOOP: DONE GENERATING (program 1301)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_2(B),c_2(D),my_succ(A,D,C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 550.745) LOOP: START TESTING
( 550.748) LOOP: DONE TESTING ('some', 'some')
( 550.748) LOOP: START IMPOSING CONSTRAINTS
( 550.748) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 550.748) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_2,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 550.748) GENERATE: START GROUNDING (impose_constraints)
( 551.470) GENERATE: DONE GROUNDING (impose_constraints)
( 551.470) LOOP: DONE IMPOSING CONSTRAINTS
( 551.470) LOOP: START GENERATING (program 1302)
( 551.470) GENERATE: START SOLVING
( 551.619) GENERATE: DONE SOLVING
( 551.620) LOOP: DONE GENERATING (program 1302)
PROGRAM:
  next_value(A,B) :- c_3(D),my_succ(A,D,C),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 551.620) LOOP: START TESTING
( 551.623) LOOP: DONE TESTING ('some', 'some')
( 551.623) LOOP: START IMPOSING CONSTRAINTS
( 551.623) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 551.623) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 551.624) GENERATE: START GROUNDING (impose_constraints)
( 552.332) GENERATE: DONE GROUNDING (impose_constraints)
( 552.332) LOOP: DONE IMPOSING CONSTRAINTS
( 552.332) LOOP: START GENERATING (program 1303)
( 552.332) GENERATE: START SOLVING
( 553.009) GENERATE: DONE SOLVING
( 553.010) LOOP: DONE GENERATING (program 1303)
PROGRAM:
  next_value(A,B) :- c_3(D),c_5(B),my_succ(A,C,B),my_succ(A,D,C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 553.010) LOOP: START TESTING
( 553.013) LOOP: DONE TESTING ('some', 'some')
( 553.013) LOOP: START IMPOSING CONSTRAINTS
( 553.013) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 553.013) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V3,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V1,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 553.013) GENERATE: START GROUNDING (impose_constraints)
( 553.729) GENERATE: DONE GROUNDING (impose_constraints)
( 553.729) LOOP: DONE IMPOSING CONSTRAINTS
( 553.729) LOOP: START GENERATING (program 1304)
( 553.729) GENERATE: START SOLVING
( 553.989) GENERATE: DONE SOLVING
( 553.989) LOOP: DONE GENERATING (program 1304)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 553.989) LOOP: START TESTING
( 553.992) LOOP: DONE TESTING ('some', 'none')
( 553.992) LOOP: START IMPOSING CONSTRAINTS
( 553.992) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 553.993) GENERATE: START GROUNDING (impose_constraints)
( 554.716) GENERATE: DONE GROUNDING (impose_constraints)
( 554.716) LOOP: DONE IMPOSING CONSTRAINTS
( 554.716) LOOP: START GENERATING (program 1305)
( 554.716) GENERATE: START SOLVING
( 554.922) GENERATE: DONE SOLVING
( 554.923) LOOP: DONE GENERATING (program 1305)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 554.923) LOOP: START TESTING
( 554.926) LOOP: DONE TESTING ('some', 'none')
( 554.926) LOOP: START IMPOSING CONSTRAINTS
( 554.926) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 554.926) GENERATE: START GROUNDING (impose_constraints)
( 555.651) GENERATE: DONE GROUNDING (impose_constraints)
( 555.651) LOOP: DONE IMPOSING CONSTRAINTS
( 555.651) LOOP: START GENERATING (program 1306)
( 555.651) GENERATE: START SOLVING
( 555.797) GENERATE: DONE SOLVING
( 555.797) LOOP: DONE GENERATING (program 1306)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 555.797) LOOP: START TESTING
( 555.800) LOOP: DONE TESTING ('some', 'none')
( 555.800) LOOP: START IMPOSING CONSTRAINTS
( 555.800) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 555.800) GENERATE: START GROUNDING (impose_constraints)
( 556.527) GENERATE: DONE GROUNDING (impose_constraints)
( 556.527) LOOP: DONE IMPOSING CONSTRAINTS
( 556.527) LOOP: START GENERATING (program 1307)
( 556.527) GENERATE: START SOLVING
( 556.752) GENERATE: DONE SOLVING
( 556.753) LOOP: DONE GENERATING (program 1307)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,C),c_0(C),my_succ(D,C,B).
( 556.753) LOOP: START TESTING
( 556.756) LOOP: DONE TESTING ('some', 'some')
( 556.756) LOOP: START IMPOSING CONSTRAINTS
( 556.756) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 556.756) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,c_0,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 556.757) GENERATE: START GROUNDING (impose_constraints)
( 557.518) GENERATE: DONE GROUNDING (impose_constraints)
( 557.518) LOOP: DONE IMPOSING CONSTRAINTS
( 557.518) LOOP: START GENERATING (program 1308)
( 557.518) GENERATE: START SOLVING
( 557.797) GENERATE: DONE SOLVING
( 557.797) LOOP: DONE GENERATING (program 1308)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,C),my_true_value(D,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 557.797) LOOP: START TESTING
( 557.800) LOOP: DONE TESTING ('some', 'some')
( 557.800) LOOP: START IMPOSING CONSTRAINTS
( 557.800) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 557.800) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V2)),body_literal(ClId0,my_true_value,2,(ClId0V3,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 557.800) GENERATE: START GROUNDING (impose_constraints)
( 558.548) GENERATE: DONE GROUNDING (impose_constraints)
( 558.548) LOOP: DONE IMPOSING CONSTRAINTS
( 558.548) LOOP: START GENERATING (program 1309)
( 558.548) GENERATE: START SOLVING
( 559.517) GENERATE: DONE SOLVING
( 559.518) LOOP: DONE GENERATING (program 1309)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 559.518) LOOP: START TESTING
( 559.521) LOOP: DONE TESTING ('some', 'none')
( 559.521) LOOP: START IMPOSING CONSTRAINTS
( 559.521) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 559.521) GENERATE: START GROUNDING (impose_constraints)
( 560.239) GENERATE: DONE GROUNDING (impose_constraints)
( 560.239) LOOP: DONE IMPOSING CONSTRAINTS
( 560.239) LOOP: START GENERATING (program 1310)
( 560.239) GENERATE: START SOLVING
( 560.848) GENERATE: DONE SOLVING
( 560.849) LOOP: DONE GENERATING (program 1310)
PROGRAM:
  next_value(A,B) :- my_true_value(C,D),my_true_value(A,D),my_true_value(A,B),my_true_value(C,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 560.849) LOOP: START TESTING
( 560.852) LOOP: DONE TESTING ('some', 'some')
( 560.852) LOOP: START IMPOSING CONSTRAINTS
( 560.852) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 560.852) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V2,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 560.852) GENERATE: START GROUNDING (impose_constraints)
( 561.595) GENERATE: DONE GROUNDING (impose_constraints)
( 561.595) LOOP: DONE IMPOSING CONSTRAINTS
( 561.595) LOOP: START GENERATING (program 1311)
( 561.595) GENERATE: START SOLVING
( 561.943) GENERATE: DONE SOLVING
( 561.944) LOOP: DONE GENERATING (program 1311)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_succ(A,B,D),my_true_value(A,D),c_0(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 561.944) LOOP: START TESTING
( 561.948) LOOP: DONE TESTING ('some', 'some')
( 561.948) LOOP: START IMPOSING CONSTRAINTS
( 561.948) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 561.948) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,c_0,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 561.948) GENERATE: START GROUNDING (impose_constraints)
( 562.841) GENERATE: DONE GROUNDING (impose_constraints)
( 562.841) LOOP: DONE IMPOSING CONSTRAINTS
( 562.841) LOOP: START GENERATING (program 1312)
( 562.841) GENERATE: START SOLVING
( 563.050) GENERATE: DONE SOLVING
( 563.051) LOOP: DONE GENERATING (program 1312)
PROGRAM:
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(A,D),my_succ(A,B,D).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 563.051) LOOP: START TESTING
( 563.056) LOOP: DONE TESTING ('some', 'some')
( 563.056) LOOP: START IMPOSING CONSTRAINTS
( 563.056) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 563.056) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V3)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 563.056) GENERATE: START GROUNDING (impose_constraints)
( 563.915) GENERATE: DONE GROUNDING (impose_constraints)
( 563.915) LOOP: DONE IMPOSING CONSTRAINTS
( 563.915) LOOP: START GENERATING (program 1313)
( 563.915) GENERATE: START SOLVING
( 564.111) GENERATE: DONE SOLVING
( 564.111) LOOP: DONE GENERATING (program 1313)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
( 564.111) LOOP: START TESTING
( 564.114) LOOP: DONE TESTING ('some', 'none')
( 564.114) LOOP: START IMPOSING CONSTRAINTS
( 564.114) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 564.115) GENERATE: START GROUNDING (impose_constraints)
( 564.984) GENERATE: DONE GROUNDING (impose_constraints)
( 564.984) LOOP: DONE IMPOSING CONSTRAINTS
( 564.984) LOOP: START GENERATING (program 1314)
( 564.984) GENERATE: START SOLVING
( 565.146) GENERATE: DONE SOLVING
( 565.146) LOOP: DONE GENERATING (program 1314)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
( 565.146) LOOP: START TESTING
( 565.150) LOOP: DONE TESTING ('some', 'none')
( 565.150) LOOP: START IMPOSING CONSTRAINTS
( 565.150) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 565.150) GENERATE: START GROUNDING (impose_constraints)
( 565.998) GENERATE: DONE GROUNDING (impose_constraints)
( 565.998) LOOP: DONE IMPOSING CONSTRAINTS
( 565.998) LOOP: START GENERATING (program 1315)
( 565.998) GENERATE: START SOLVING
( 566.182) GENERATE: DONE SOLVING
( 566.183) LOOP: DONE GENERATING (program 1315)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 566.183) LOOP: START TESTING
( 566.186) LOOP: DONE TESTING ('some', 'some')
( 566.186) LOOP: START IMPOSING CONSTRAINTS
( 566.186) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 566.186) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 566.186) GENERATE: START GROUNDING (impose_constraints)
( 567.047) GENERATE: DONE GROUNDING (impose_constraints)
( 567.047) LOOP: DONE IMPOSING CONSTRAINTS
( 567.047) LOOP: START GENERATING (program 1316)
( 567.047) GENERATE: START SOLVING
( 567.205) GENERATE: DONE SOLVING
( 567.205) LOOP: DONE GENERATING (program 1316)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 567.205) LOOP: START TESTING
( 567.208) LOOP: DONE TESTING ('some', 'some')
( 567.208) LOOP: START IMPOSING CONSTRAINTS
( 567.208) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 567.208) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 567.209) GENERATE: START GROUNDING (impose_constraints)
( 568.106) GENERATE: DONE GROUNDING (impose_constraints)
( 568.106) LOOP: DONE IMPOSING CONSTRAINTS
( 568.106) LOOP: START GENERATING (program 1317)
( 568.106) GENERATE: START SOLVING
( 568.271) GENERATE: DONE SOLVING
( 568.271) LOOP: DONE GENERATING (program 1317)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 568.271) LOOP: START TESTING
( 568.276) LOOP: DONE TESTING ('some', 'some')
( 568.276) LOOP: START IMPOSING CONSTRAINTS
( 568.276) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 568.276) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 568.276) GENERATE: START GROUNDING (impose_constraints)
( 569.151) GENERATE: DONE GROUNDING (impose_constraints)
( 569.151) LOOP: DONE IMPOSING CONSTRAINTS
( 569.151) LOOP: START GENERATING (program 1318)
( 569.151) GENERATE: START SOLVING
( 569.524) GENERATE: DONE SOLVING
( 569.525) LOOP: DONE GENERATING (program 1318)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 569.525) LOOP: START TESTING
( 569.528) LOOP: DONE TESTING ('some', 'some')
( 569.528) LOOP: START IMPOSING CONSTRAINTS
( 569.528) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 569.528) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 569.529) GENERATE: START GROUNDING (impose_constraints)
( 570.422) GENERATE: DONE GROUNDING (impose_constraints)
( 570.422) LOOP: DONE IMPOSING CONSTRAINTS
( 570.422) LOOP: START GENERATING (program 1319)
( 570.422) GENERATE: START SOLVING
( 571.559) GENERATE: DONE SOLVING
( 571.560) LOOP: DONE GENERATING (program 1319)
PROGRAM:
  next_value(A,B) :- my_succ(A,B,C),c_3(D),c_3(C),my_succ(A,B,D).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 571.560) LOOP: START TESTING
( 571.563) LOOP: DONE TESTING ('some', 'some')
( 571.563) LOOP: START IMPOSING CONSTRAINTS
( 571.563) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 571.563) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V2)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_3,1,(ClId0V2,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V1,ClId0V3)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 571.563) GENERATE: START GROUNDING (impose_constraints)
( 572.447) GENERATE: DONE GROUNDING (impose_constraints)
( 572.447) LOOP: DONE IMPOSING CONSTRAINTS
( 572.447) LOOP: START GENERATING (program 1320)
( 572.447) GENERATE: START SOLVING
( 572.676) GENERATE: DONE SOLVING
( 572.677) LOOP: DONE GENERATING (program 1320)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_3(D),c_2(C),my_true_value(A,B).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 572.677) LOOP: START TESTING
( 572.680) LOOP: DONE TESTING ('some', 'some')
( 572.680) LOOP: START IMPOSING CONSTRAINTS
( 572.681) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 572.681) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_3,1,(ClId0V3,)),body_literal(ClId0,c_2,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 572.681) GENERATE: START GROUNDING (impose_constraints)
( 573.575) GENERATE: DONE GROUNDING (impose_constraints)
( 573.575) LOOP: DONE IMPOSING CONSTRAINTS
( 573.575) LOOP: START GENERATING (program 1321)
( 573.575) GENERATE: START SOLVING
( 574.564) GENERATE: DONE SOLVING
( 574.564) LOOP: DONE GENERATING (program 1321)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,D),c_5(D),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_true_value(D,C),my_true_value(A,B),my_succ(D,C,B).
( 574.565) LOOP: START TESTING
( 574.568) LOOP: DONE TESTING ('some', 'some')
( 574.569) LOOP: START IMPOSING CONSTRAINTS
( 574.569) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 574.569) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V3)),body_literal(ClId0,c_5,1,(ClId0V3,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,4),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,3),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId0V3!=ClId0V0,ClId0V3!=ClId0V1,ClId0V3!=ClId0V2,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 574.569) GENERATE: START GROUNDING (impose_constraints)
( 575.473) GENERATE: DONE GROUNDING (impose_constraints)
( 575.473) LOOP: DONE IMPOSING CONSTRAINTS
( 575.473) LOOP: START GENERATING (program 1322)
( 575.473) GENERATE: START SOLVING
( 575.672) GENERATE: DONE SOLVING
( 575.672) LOOP: DONE GENERATING (program 1322)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 575.672) LOOP: START TESTING
( 575.675) LOOP: DONE TESTING ('some', 'some')
( 575.675) LOOP: START IMPOSING CONSTRAINTS
( 575.675) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 575.675) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 575.675) GENERATE: START GROUNDING (impose_constraints)
( 576.561) GENERATE: DONE GROUNDING (impose_constraints)
( 576.562) LOOP: DONE IMPOSING CONSTRAINTS
( 576.562) LOOP: START GENERATING (program 1323)
( 576.562) GENERATE: START SOLVING
( 576.750) GENERATE: DONE SOLVING
( 576.750) LOOP: DONE GENERATING (program 1323)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_true_value(A,B),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 576.750) LOOP: START TESTING
( 576.754) LOOP: DONE TESTING ('some', 'none')
( 576.754) LOOP: START IMPOSING CONSTRAINTS
( 576.754) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 576.754) GENERATE: START GROUNDING (impose_constraints)
( 577.646) GENERATE: DONE GROUNDING (impose_constraints)
( 577.646) LOOP: DONE IMPOSING CONSTRAINTS
( 577.646) LOOP: START GENERATING (program 1324)
( 577.646) GENERATE: START SOLVING
( 577.798) GENERATE: DONE SOLVING
( 577.799) LOOP: DONE GENERATING (program 1324)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 577.799) LOOP: START TESTING
( 577.803) LOOP: DONE TESTING ('some', 'some')
( 577.803) LOOP: START IMPOSING CONSTRAINTS
( 577.803) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 577.803) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 577.803) GENERATE: START GROUNDING (impose_constraints)
( 578.693) GENERATE: DONE GROUNDING (impose_constraints)
( 578.693) LOOP: DONE IMPOSING CONSTRAINTS
( 578.693) LOOP: START GENERATING (program 1325)
( 578.693) GENERATE: START SOLVING
( 578.852) GENERATE: DONE SOLVING
( 578.853) LOOP: DONE GENERATING (program 1325)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 578.853) LOOP: START TESTING
( 578.856) LOOP: DONE TESTING ('some', 'some')
( 578.856) LOOP: START IMPOSING CONSTRAINTS
( 578.856) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 578.856) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 578.856) GENERATE: START GROUNDING (impose_constraints)
( 579.736) GENERATE: DONE GROUNDING (impose_constraints)
( 579.736) LOOP: DONE IMPOSING CONSTRAINTS
( 579.736) LOOP: START GENERATING (program 1326)
( 579.736) GENERATE: START SOLVING
( 579.917) GENERATE: DONE SOLVING
( 579.918) LOOP: DONE GENERATING (program 1326)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
( 579.918) LOOP: START TESTING
( 579.921) LOOP: DONE TESTING ('some', 'none')
( 579.921) LOOP: START IMPOSING CONSTRAINTS
( 579.921) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 579.921) GENERATE: START GROUNDING (impose_constraints)
( 580.802) GENERATE: DONE GROUNDING (impose_constraints)
( 580.802) LOOP: DONE IMPOSING CONSTRAINTS
( 580.802) LOOP: START GENERATING (program 1327)
( 580.802) GENERATE: START SOLVING
( 580.954) GENERATE: DONE SOLVING
( 580.955) LOOP: DONE GENERATING (program 1327)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_true_value(A,B),my_succ(D,C,B).
( 580.955) LOOP: START TESTING
( 580.959) LOOP: DONE TESTING ('some', 'some')
( 580.959) LOOP: START IMPOSING CONSTRAINTS
( 580.959) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 580.959) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 580.960) GENERATE: START GROUNDING (impose_constraints)
( 581.845) GENERATE: DONE GROUNDING (impose_constraints)
( 581.845) LOOP: DONE IMPOSING CONSTRAINTS
( 581.845) LOOP: START GENERATING (program 1328)
( 581.845) GENERATE: START SOLVING
( 582.110) GENERATE: DONE SOLVING
( 582.111) LOOP: DONE GENERATING (program 1328)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- my_true_value(A,B),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 582.111) LOOP: START TESTING
( 582.114) LOOP: DONE TESTING ('some', 'none')
( 582.114) LOOP: START IMPOSING CONSTRAINTS
( 582.114) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 582.114) GENERATE: START GROUNDING (impose_constraints)
( 583.086) GENERATE: DONE GROUNDING (impose_constraints)
( 583.086) LOOP: DONE IMPOSING CONSTRAINTS
( 583.086) LOOP: START GENERATING (program 1329)
( 583.086) GENERATE: START SOLVING
( 583.236) GENERATE: DONE SOLVING
( 583.237) LOOP: DONE GENERATING (program 1329)
PROGRAM:
  next_value(A,B) :- my_succ(A,C,B),my_true_value(A,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 583.237) LOOP: START TESTING
( 583.239) LOOP: DONE TESTING ('some', 'some')
( 583.239) LOOP: START IMPOSING CONSTRAINTS
( 583.239) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 583.239) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 583.239) GENERATE: START GROUNDING (impose_constraints)
( 584.196) GENERATE: DONE GROUNDING (impose_constraints)
( 584.196) LOOP: DONE IMPOSING CONSTRAINTS
( 584.196) LOOP: START GENERATING (program 1330)
( 584.196) GENERATE: START SOLVING
( 584.381) GENERATE: DONE SOLVING
( 584.382) LOOP: DONE GENERATING (program 1330)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_true_value(A,B),c_5(C).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 584.382) LOOP: START TESTING
( 584.386) LOOP: DONE TESTING ('some', 'some')
( 584.386) LOOP: START IMPOSING CONSTRAINTS
( 584.386) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 584.386) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,c_5,1,(ClId0V2,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 584.387) GENERATE: START GROUNDING (impose_constraints)
( 585.298) GENERATE: DONE GROUNDING (impose_constraints)
( 585.298) LOOP: DONE IMPOSING CONSTRAINTS
( 585.298) LOOP: START GENERATING (program 1331)
( 585.298) GENERATE: START SOLVING
( 585.480) GENERATE: DONE SOLVING
( 585.480) LOOP: DONE GENERATING (program 1331)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_1(C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 585.480) LOOP: START TESTING
( 585.483) LOOP: DONE TESTING ('some', 'some')
( 585.483) LOOP: START IMPOSING CONSTRAINTS
( 585.483) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 585.483) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_1,1,(ClId1V2,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 585.484) GENERATE: START GROUNDING (impose_constraints)
( 586.383) GENERATE: DONE GROUNDING (impose_constraints)
( 586.383) LOOP: DONE IMPOSING CONSTRAINTS
( 586.383) LOOP: START GENERATING (program 1332)
( 586.383) GENERATE: START SOLVING
( 586.548) GENERATE: DONE SOLVING
( 586.548) LOOP: DONE GENERATING (program 1332)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_true_value(A,B),my_succ(D,C,B).
( 586.548) LOOP: START TESTING
( 586.551) LOOP: DONE TESTING ('some', 'some')
( 586.551) LOOP: START IMPOSING CONSTRAINTS
( 586.552) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 586.552) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 586.552) GENERATE: START GROUNDING (impose_constraints)
( 587.454) GENERATE: DONE GROUNDING (impose_constraints)
( 587.454) LOOP: DONE IMPOSING CONSTRAINTS
( 587.454) LOOP: START GENERATING (program 1333)
( 587.454) GENERATE: START SOLVING
( 587.619) GENERATE: DONE SOLVING
( 587.620) LOOP: DONE GENERATING (program 1333)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_true_value(A,B),my_succ(D,C,B).
( 587.620) LOOP: START TESTING
( 587.623) LOOP: DONE TESTING ('some', 'some')
( 587.623) LOOP: START IMPOSING CONSTRAINTS
( 587.623) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 587.623) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 587.624) GENERATE: START GROUNDING (impose_constraints)
( 588.527) GENERATE: DONE GROUNDING (impose_constraints)
( 588.527) LOOP: DONE IMPOSING CONSTRAINTS
( 588.527) LOOP: START GENERATING (program 1334)
( 588.527) GENERATE: START SOLVING
( 588.681) GENERATE: DONE SOLVING
( 588.682) LOOP: DONE GENERATING (program 1334)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_2(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 588.682) LOOP: START TESTING
( 588.684) LOOP: DONE TESTING ('some', 'some')
( 588.684) LOOP: START IMPOSING CONSTRAINTS
( 588.684) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 588.684) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_2,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 588.685) GENERATE: START GROUNDING (impose_constraints)
( 589.587) GENERATE: DONE GROUNDING (impose_constraints)
( 589.587) LOOP: DONE IMPOSING CONSTRAINTS
( 589.587) LOOP: START GENERATING (program 1335)
( 589.587) GENERATE: START SOLVING
( 589.749) GENERATE: DONE SOLVING
( 589.749) LOOP: DONE GENERATING (program 1335)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 589.749) LOOP: START TESTING
( 589.752) LOOP: DONE TESTING ('some', 'some')
( 589.752) LOOP: START IMPOSING CONSTRAINTS
( 589.752) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 589.752) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 589.753) GENERATE: START GROUNDING (impose_constraints)
( 590.652) GENERATE: DONE GROUNDING (impose_constraints)
( 590.652) LOOP: DONE IMPOSING CONSTRAINTS
( 590.652) LOOP: START GENERATING (program 1336)
( 590.652) GENERATE: START SOLVING
( 590.825) GENERATE: DONE SOLVING
( 590.825) LOOP: DONE GENERATING (program 1336)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B).
( 590.825) LOOP: START TESTING
( 590.828) LOOP: DONE TESTING ('some', 'some')
( 590.828) LOOP: START IMPOSING CONSTRAINTS
( 590.829) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 590.829) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 590.829) GENERATE: START GROUNDING (impose_constraints)
( 591.751) GENERATE: DONE GROUNDING (impose_constraints)
( 591.751) LOOP: DONE IMPOSING CONSTRAINTS
( 591.751) LOOP: START GENERATING (program 1337)
( 591.751) GENERATE: START SOLVING
( 591.905) GENERATE: DONE SOLVING
( 591.906) LOOP: DONE GENERATING (program 1337)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_true_value(A,B),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 591.906) LOOP: START TESTING
( 591.908) LOOP: DONE TESTING ('some', 'some')
( 591.909) LOOP: START IMPOSING CONSTRAINTS
( 591.909) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 591.909) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 591.909) GENERATE: START GROUNDING (impose_constraints)
( 592.666) GENERATE: DONE GROUNDING (impose_constraints)
( 592.666) LOOP: DONE IMPOSING CONSTRAINTS
( 592.666) LOOP: START GENERATING (program 1338)
( 592.666) GENERATE: START SOLVING
( 592.796) GENERATE: DONE SOLVING
( 592.796) LOOP: DONE GENERATING (program 1338)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_true_value(A,B),my_succ(D,C,B).
( 592.797) LOOP: START TESTING
( 592.799) LOOP: DONE TESTING ('some', 'some')
( 592.799) LOOP: START IMPOSING CONSTRAINTS
( 592.799) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 592.799) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 592.800) GENERATE: START GROUNDING (impose_constraints)
( 593.569) GENERATE: DONE GROUNDING (impose_constraints)
( 593.569) LOOP: DONE IMPOSING CONSTRAINTS
( 593.569) LOOP: START GENERATING (program 1339)
( 593.569) GENERATE: START SOLVING
( 593.694) GENERATE: DONE SOLVING
( 593.694) LOOP: DONE GENERATING (program 1339)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),my_true_value(D,B),my_succ(D,C,B).
( 593.694) LOOP: START TESTING
( 593.697) LOOP: DONE TESTING ('some', 'some')
( 593.697) LOOP: START IMPOSING CONSTRAINTS
( 593.697) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 593.698) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 593.698) GENERATE: START GROUNDING (impose_constraints)
( 594.443) GENERATE: DONE GROUNDING (impose_constraints)
( 594.443) LOOP: DONE IMPOSING CONSTRAINTS
( 594.443) LOOP: START GENERATING (program 1340)
( 594.443) GENERATE: START SOLVING
( 594.571) GENERATE: DONE SOLVING
( 594.571) LOOP: DONE GENERATING (program 1340)
PROGRAM:
  next_value(A,B) :- c_5(B),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,B),my_succ(D,C,B),c_4(C).
( 594.571) LOOP: START TESTING
( 594.574) LOOP: DONE TESTING ('some', 'some')
( 594.574) LOOP: START IMPOSING CONSTRAINTS
( 594.575) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 594.575) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 594.575) GENERATE: START GROUNDING (impose_constraints)
( 595.328) GENERATE: DONE GROUNDING (impose_constraints)
( 595.328) LOOP: DONE IMPOSING CONSTRAINTS
( 595.328) LOOP: START GENERATING (program 1341)
( 595.328) GENERATE: START SOLVING
( 595.500) GENERATE: DONE SOLVING
( 595.500) LOOP: DONE GENERATING (program 1341)
PROGRAM:
  next_value(A,B) :- c_1(B),my_succ(A,C,B),c_0(C).
  next_value(A,B) :- my_succ(A,C,B),my_true_value(D,B),my_true_value(A,B),my_succ(D,C,B).
( 595.500) LOOP: START TESTING
( 595.504) LOOP: DONE TESTING ('some', 'some')
( 595.504) LOOP: START IMPOSING CONSTRAINTS
( 595.504) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 595.504) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_1,1,(ClId0V1,)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_0,1,(ClId0V2,)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V1)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 595.504) GENERATE: START GROUNDING (impose_constraints)
( 596.252) GENERATE: DONE GROUNDING (impose_constraints)
( 596.252) LOOP: DONE IMPOSING CONSTRAINTS
( 596.252) LOOP: START GENERATING (program 1342)
( 596.252) GENERATE: START SOLVING
( 596.395) GENERATE: DONE SOLVING
( 596.395) LOOP: DONE GENERATING (program 1342)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,C,B).
( 596.396) LOOP: START TESTING
( 596.399) LOOP: DONE TESTING ('some', 'none')
( 596.399) LOOP: START IMPOSING CONSTRAINTS
( 596.399) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 596.399) GENERATE: START GROUNDING (impose_constraints)
( 597.151) GENERATE: DONE GROUNDING (impose_constraints)
( 597.151) LOOP: DONE IMPOSING CONSTRAINTS
( 597.151) LOOP: START GENERATING (program 1343)
( 597.151) GENERATE: START SOLVING
( 597.275) GENERATE: DONE SOLVING
( 597.275) LOOP: DONE GENERATING (program 1343)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,C,B),c_4(C).
( 597.276) LOOP: START TESTING
( 597.279) LOOP: DONE TESTING ('some', 'none')
( 597.279) LOOP: START IMPOSING CONSTRAINTS
( 597.279) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 597.279) GENERATE: START GROUNDING (impose_constraints)
( 598.028) GENERATE: DONE GROUNDING (impose_constraints)
( 598.028) LOOP: DONE IMPOSING CONSTRAINTS
( 598.028) LOOP: START GENERATING (program 1344)
( 598.028) GENERATE: START SOLVING
( 598.164) GENERATE: DONE SOLVING
( 598.165) LOOP: DONE GENERATING (program 1344)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_true_value(D,C),my_succ(D,C,B).
( 598.165) LOOP: START TESTING
( 598.169) LOOP: DONE TESTING ('some', 'none')
( 598.169) LOOP: START IMPOSING CONSTRAINTS
( 598.169) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 598.169) GENERATE: START GROUNDING (impose_constraints)
( 598.918) GENERATE: DONE GROUNDING (impose_constraints)
( 598.918) LOOP: DONE IMPOSING CONSTRAINTS
( 598.918) LOOP: START GENERATING (program 1345)
( 598.918) GENERATE: START SOLVING
( 599.041) GENERATE: DONE SOLVING
( 599.042) LOOP: DONE GENERATING (program 1345)
PROGRAM:
  next_value(A,B) :- my_true_value(A,C),my_succ(A,C,B),c_4(C).
  next_value(A,B) :- my_true_value(A,C),my_true_value(D,C),my_succ(D,C,B),c_4(C).
( 599.042) LOOP: START TESTING
( 599.045) LOOP: DONE TESTING ('some', 'none')
( 599.045) LOOP: START IMPOSING CONSTRAINTS
( 599.045) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),body_literal(ClId0,c_4,1,(ClId0V2,)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V0,ClId1V2)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),body_literal(ClId1,c_4,1,(ClId1V2,)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 599.045) GENERATE: START GROUNDING (impose_constraints)
( 599.796) GENERATE: DONE GROUNDING (impose_constraints)
( 599.796) LOOP: DONE IMPOSING CONSTRAINTS
( 599.796) LOOP: START GENERATING (program 1346)
( 599.796) GENERATE: START SOLVING
( 599.955) GENERATE: DONE SOLVING
( 599.955) LOOP: DONE GENERATING (program 1346)
PROGRAM:
  next_value(A,B) :- c_5(B),my_true_value(A,C),my_succ(A,C,B).
  next_value(A,B) :- c_5(B),my_succ(A,C,B),my_true_value(D,C),my_succ(D,C,B).
( 599.955) LOOP: START TESTING
( 599.958) LOOP: DONE TESTING ('some', 'some')
( 599.958) LOOP: START IMPOSING CONSTRAINTS
( 599.958) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2,not clause(2).
( 599.958) LOOP: CONSTRAINT:
  :-head_literal(ClId0,next_value,2,(ClId0V0,ClId0V1)),body_literal(ClId0,c_5,1,(ClId0V1,)),body_literal(ClId0,my_true_value,2,(ClId0V0,ClId0V2)),body_literal(ClId0,my_succ,3,(ClId0V0,ClId0V2,ClId0V1)),clause_size(ClId0,3),head_literal(ClId1,next_value,2,(ClId1V0,ClId1V1)),body_literal(ClId1,c_5,1,(ClId1V1,)),body_literal(ClId1,my_succ,3,(ClId1V0,ClId1V2,ClId1V1)),body_literal(ClId1,my_true_value,2,(ClId1V3,ClId1V2)),body_literal(ClId1,my_succ,3,(ClId1V3,ClId1V2,ClId1V1)),clause_size(ClId1,4),ClId1!=ClId0,ClId0V1!=ClId0V0,ClId0V2!=ClId0V0,ClId0V2!=ClId0V1,ClId1V1!=ClId1V0,ClId1V2!=ClId1V0,ClId1V2!=ClId1V1,ClId1V3!=ClId1V0,ClId1V3!=ClId1V1,ClId1V3!=ClId1V2.
( 599.959) GENERATE: START GROUNDING (impose_constraints)
